
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ndairou2020 - early-stage transmission dynamics of COVID-19 in Wuhan
#
# isDescribedBy http://identifiers.org/pubmed/32341628
# is http://identifiers.org/biomodels.db/MODEL2008140001
# is http://identifiers.org/biomodels.db/BIOMD0000000958
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_R4, name = Rate Law for R4
Rate_Law_(kappa,rho1,E)=(kappa*rho1*E)


# FunctionDefinition id = Rate_Law_for_R3, name = Rate Law for R3
Rate_La_1(kappa,rho2,E)=(kappa*rho2*E)


# FunctionDefinition id = Rate_Law_for_R1, name = Rate Law for R1
Rate_La_2(beta,I,S,N,l,H,beta_prime,P)=(beta*I*S/N+l*beta*H*S/N+beta_prime*P*S/N)


# FunctionDefinition id = Rate_Law_for_R2, name = Rate Law for R2
Rate_La_3(kappa,rho1,rho2,E)=(kappa*(1-rho1-rho2)*E)


# Compartment: id = Wuhan, name = Wuhan, constant
par Wuhan=1.0

# Parameter:   id =  beta, name = beta, constant
par beta=2.8

# Parameter:   id =  beta_prime, name = beta_prime, constant
par beta_prim=7.65

# Parameter:   id =  rho1, name = rho1, constant
par rho1=0.58

# Parameter:   id =  rho2, name = rho2, constant
par rho2=0.001

# Parameter:   id =  l, name = l, constant
par l=1.56

# Parameter:   id =  kappa, name = kappa, constant
par kappa=0.25

# Parameter:   id =  gamma_a, name = gamma_a, constant
par gamma_a=0.94

# Parameter:   id =  gamma_i, name = gamma_i, constant
par gamma_i=0.27

# Parameter:   id =  gamma_r, name = gamma_r, constant
par gamma_r=0.5

# Parameter:   id =  delta_i, name = delta_i, constant
par delta_i=0.035

# Parameter:   id =  delta_p, name = delta_p, constant
par delta_p=1.0

# Parameter:   id =  delta_h, name = delta_h, constant
par delta_h=0.085

# Parameter:   id =  N, name = N, constant
par N=44000.0

# Parameter:   id =  Confimed_cases, name = Confimed_cases, defined by a Rule

# assignmentRule: variable = Confimed_cases
Confimed_=Infectiou+Super_spr+Hospitali
aux Confimed_=Confimed_

# Reaction: id = Susceptible_to_Exposed, name = Susceptible_to_Exposed

Suscept_1=Wuhan*Rate_La_2(beta, Infectiou, Susceptib, N, l, Hospitali, beta_prim, Super_spr)

# Reaction: id = Exposed_to_Asymptomatic, name = Exposed_to_Asymptomatic

Exposed_t=Wuhan*Rate_La_3(kappa, rho1, rho2, Exposed)

# Reaction: id = Exposed_to_Superspreaders, name = Exposed_to_Superspreaders

Exposed_1=Wuhan*Rate_La_1(kappa, rho2, Exposed)

# Reaction: id = Exposed_to_Infectious, name = Exposed_to_Infectious

Exposed_2=Wuhan*Rate_Law_(kappa, rho1, Exposed)

# Reaction: id = Superspreaders_to_Fatalities, name = Superspreaders_to_Fatalities

Superspre=Wuhan*delta_p*Super_spr

# Reaction: id = Superspreaders_to_Hospitalised, name = Superspreaders_to_Hospitalised

Supersp_1=Wuhan*gamma_a*Super_spr

# Reaction: id = Superspreaders_to_Recovered, name = Superspreaders_to_Recovered

Supersp_2=Wuhan*gamma_i*Super_spr

# Reaction: id = Infectious_to_Fatalities, name = Infectious_to_Fatalities

Infecti_1=Wuhan*delta_i*Infectiou

# Reaction: id = Infectious_to_Hospitalised, name = Infectious_to_Hospitalised

Infecti_2=Wuhan*gamma_a*Infectiou

# Reaction: id = Infectious_To_Recovered, name = Infectious_To_Recovered

Infecti_3=Wuhan*gamma_i*Infectiou

# Reaction: id = Hospitalised_to_Recovered, name = Hospitalised_to_Recovered

Hospita_1=Wuhan*gamma_r*Hospitali

# Reaction: id = Hospitalised_to_Fatalities, name = Hospitalised_to_Fatalities

Hospita_2=Wuhan*delta_h*Hospitali

# Species:   id = Susceptible, name = Susceptible, affected by kineticLaw

par Susceptib=43994.0
aux Susceptib=Susceptib
dSusceptib/dt=(1/(Wuhan))*((-1.0 * Suscept_1))

# Species:   id = Exposed, name = Exposed, affected by kineticLaw

init Exposed=0.0
dExposed/dt=(1/(Wuhan))*(( 1.0 * Suscept_1) + (-1.0 * Exposed_t) + (-1.0 * Exposed_1) + (-1.0 * Exposed_2))

# Species:   id = Infectious, name = Infectious, affected by kineticLaw

par Infectiou=1.0
aux Infectiou=Infectiou
dInfectiou/dt=(1/(Wuhan))*(( 1.0 * Exposed_2) + (-1.0 * Infecti_1) + (-1.0 * Infecti_2) + (-1.0 * Infecti_3))

# Species:   id = Super_spreaders, name = Super_spreaders, affected by kineticLaw

par Super_spr=5.0
aux Super_spr=Super_spr
dSuper_spr/dt=(1/(Wuhan))*(( 1.0 * Exposed_1) + (-1.0 * Superspre) + (-1.0 * Supersp_1) + (-1.0 * Supersp_2))

# Species:   id = Asymptomatic, name = Asymptomatic, affected by kineticLaw

par Asymptoma=0.0
aux Asymptoma=Asymptoma
dAsymptoma/dt=(1/(Wuhan))*(( 1.0 * Exposed_t))

# Species:   id = Hospitalised, name = Hospitalised, affected by kineticLaw

par Hospitali=0.0
aux Hospitali=Hospitali
dHospitali/dt=(1/(Wuhan))*(( 1.0 * Supersp_1) + ( 1.0 * Infecti_2) + (-1.0 * Hospita_1) + (-1.0 * Hospita_2))

# Species:   id = Recovered, name = Recovered, affected by kineticLaw

init Recovered=0.0
dRecovered/dt=(1/(Wuhan))*(( 1.0 * Supersp_2) + ( 1.0 * Infecti_3) + ( 1.0 * Hospita_1))

# Species:   id = Fatalities, name = Fatalities, affected by kineticLaw

par Fatalitie=0.0
aux Fatalitie=Fatalitie
dFatalitie/dt=(1/(Wuhan))*(( 1.0 * Superspre) + ( 1.0 * Infecti_1) + ( 1.0 * Hospita_2))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

