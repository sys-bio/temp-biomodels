
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Wang2019 - A mathematical model of oncolytic virotherapy with time delay
#
# isDescribedBy http://identifiers.org/pubmed/31137188
# isDerivedFrom http://identifiers.org/pubmed/11309314
# is http://identifiers.org/biomodels.db/MODEL1912180004
# is http://identifiers.org/biomodels.db/BIOMD0000000902
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_Length_of_Eclipse_Phase, name = Function_for_Length_of_Eclipse_Phase
Function_(b,n,tau,x,y)=(b*exp((-n)*tau)*x*y)


# FunctionDefinition id = Function_for_Stimulation, name = Function_for_Stimulation
Functio_1(c,y,z)=(c*y*z)


# FunctionDefinition id = Function_for_Immune_Kill, name = Function_for_Immune_Kill
Functio_2(p,y,z)=(p*y*z)


# FunctionDefinition id = Function_for_Uninfected_Cells_Proliferation, name = Function_for_Uninfected_Cells_Proliferation
Functio_3(r,x,y,k)=(r*x*(1-(x+y)/k))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  r, name = r, constant
par r=0.206

# Parameter:   id =  k, name = k, constant
par k=2139.0

# Parameter:   id =  b, name = b, constant
par b=4.48E-4

# Parameter:   id =  tau, name = tau, constant
par tau=0.0

# Parameter:   id =  a, name = a, constant
par a=1.0

# Parameter:   id =  p, name = p, constant
par p=0.01

# Parameter:   id =  c, name = c, constant
par c=0.02

# Parameter:   id =  d, name = d, constant
par d=0.5

# Parameter:   id =  n, name = n, constant
par n=0.01

# Reaction: id = Uninfected_Cells_Proliferation, name = Uninfected_Cells_Proliferation

Uninfecte=compartme*Functio_3(r, x, y, k)

# Reaction: id = Uninfected_Cells_Infection, name = Uninfected_Cells_Infection

Uninfec_1=compartme*b*x*y

# Reaction: id = Length_of_Eclipse_Phase, name = Length_of_Eclipse_Phase

Length_of=compartme*Function_(b, n, tau, x, y)

# Reaction: id = Cytotoxicity, name = Cytotoxicity

Cytotoxic=compartme*a*y

# Reaction: id = Immune_Kill, name = Immune_Kill

Immune_Ki=compartme*Functio_2(p, y, z)

# Reaction: id = Stimulation, name = Stimulation

Stimulati=compartme*Functio_1(c, y, z)

# Reaction: id = Clearance, name = Clearance

Clearance=compartme*d*z

# Species:   id = x, name = x, affected by kineticLaw

init x=200.0
dx/dt=(1/(compartme))*(( 1.0 * Uninfecte) + (-1.0 * Uninfec_1))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.0
dI/dt=(1/(compartme))*(( 1.0 * Uninfec_1) + (-1.0 * Length_of))

# Species:   id = y, name = y, affected by kineticLaw

init y=800.0
dy/dt=(1/(compartme))*((-1.0 * Uninfec_1) + ( 1.0 * Length_of) + (-1.0 * Cytotoxic) + (-1.0 * Immune_Ki))

# Species:   id = z, name = z, affected by kineticLaw

init z=100.0
dz/dt=(1/(compartme))*(( 1.0 * Stimulati) + (-1.0 * Clearance))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

