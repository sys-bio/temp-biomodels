
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Wolf2000_Glycolytic_Oscillations
#
# is http://identifiers.org/biomodels.db/MODEL3352181362
# is http://identifiers.org/biomodels.db/BIOMD0000000206
# isDescribedBy http://identifiers.org/pubmed/10692304
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  k0, name = k0, constant
par k0=50.0

# Parameter:   id =  k1, name = k1, constant
par k1=550.0

# Parameter:   id =  k2, name = k2, constant
par k2=9.8

# Parameter:   id =  k31, name = k31, constant
par k31=323.8

# Parameter:   id =  k33, name = k33, constant
par k33=57823.1

# Parameter:   id =  k32, name = k32, constant
par k32=76411.1

# Parameter:   id =  k34, name = k34, constant
par k34=23.7

# Parameter:   id =  k4, name = k4, constant
par k4=80.0

# Parameter:   id =  k5, name = k5, constant
par k5=9.7

# Parameter:   id =  k6, name = k6, constant
par k6=2000.0

# Parameter:   id =  k7, name = k7, constant
par k7=28.0

# Parameter:   id =  k8, name = k8, constant
par k8=85.7

# Parameter:   id =  k9, name = k9, constant
par k9=80.0

# Parameter:   id =  k10, name = k10, constant
par k10=375.0

# Parameter:   id =  atot, name = atot, constant
par atot=4.0

# Parameter:   id =  ntot, name = ntot, constant
par ntot=1.0

# Parameter:   id =  n, name = n, constant
par n=4.0

# Parameter:   id =  ki, name = ki, constant
par ki=1.0

# Reaction: id = v1, name = v1

v1=compartme*k1*s1*at/(1+(at/ki)^n)

# Reaction: id = v2, name = v2

v2=compartme*k2*s2

# Reaction: id = v3, name = v3

v3=compartme*(k31*k32*s3*na*(atot-at)-k33*k34*s4*at*(ntot-na))/(k33*(ntot-na)+k32*(atot-at))

# Reaction: id = v4, name = v4

v4=compartme*k4*s4*(atot-at)

# Reaction: id = v5, name = v5

v5=compartme*k5*s5

# Reaction: id = v7, name = v7

v7=compartme*k7*at

# Reaction: id = v8, name = v8

v8=compartme*k8*s3*(ntot-na)

# Reaction: id = v9, name = v9

v9=compartme*k9*s6o

# Reaction: id = v10, name = v10

v10=compartme*k10*(s6-s6o)

# Reaction: id = v6, name = v6

v6=compartme*k6*s6*(ntot-na)

# Reaction: id = v0, name = v0

v0=compartme*k0

# Species:   id = s1, name = Glucose, affected by kineticLaw

init s1=1.0
ds1/dt=(1/(compartme))*((-1.0 * v1) + ( 1.0 * v0))

# Species:   id = at, name = ATP, affected by kineticLaw

init at=2.0
dat/dt=(1/(compartme))*((-2.0 * v1) + ( 1.0 * v3) + ( 1.0 * v4) + (-1.0 * v7))

# Species:   id = s2, name = F16P, affected by kineticLaw

init s2=5.0
ds2/dt=(1/(compartme))*(( 1.0 * v1) + (-1.0 * v2))

# Species:   id = s3, name = Triose_Gly3Phos_DHAP, affected by kineticLaw

init s3=0.6
ds3/dt=(1/(compartme))*(( 2.0 * v2) + (-1.0 * v3) + (-1.0 * v8))

# Species:   id = na, name = NAD, affected by kineticLaw

init na=0.6
dna/dt=(1/(compartme))*((-1.0 * v3) + ( 1.0 * v8) + ( 1.0 * v6))

# Species:   id = s4, name = 3PG, affected by kineticLaw

init s4=0.7
ds4/dt=(1/(compartme))*(( 1.0 * v3) + (-1.0 * v4))

# Species:   id = s5, name = Pyruvate, affected by kineticLaw

init s5=8.0
ds5/dt=(1/(compartme))*(( 1.0 * v4) + (-1.0 * v5))

# Species:   id = s6, name = Acetaldehyde, affected by kineticLaw

init s6=0.08
ds6/dt=(1/(compartme))*(( 1.0 * v5) + (-1.0 * v10) + (-1.0 * v6))

# Species:   id = s6o, name = extracellular acetaldehyde, affected by kineticLaw

init s6o=0.02
ds6o/dt=(1/(compartme))*((-1.0 * v9) + ( 0.1 * v10))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

