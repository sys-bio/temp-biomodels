
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Zhu2015 - Combined gemcitabine and birinapant in pancreatic cancer cells - basic PD model
#
# is http://identifiers.org/biomodels.db/MODEL1604270000
# isInstanceOf http://identifiers.org/kegg.drug/D02368
# isInstanceOf http://identifiers.org/kegg.drug/D10417
# isInstanceOf http://identifiers.org/biomodels.db/MODEL1604270000
# isInstanceOf http://identifiers.org/bto/BTO:0000988
# isInstanceOf http://identifiers.org/ncit/C191
# isDescribedBy http://identifiers.org/pubmed/26252969
# is http://identifiers.org/biomodels.db/BIOMD0000000668
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Pancreas, name = Pancreas, constant
par Pancreas=1.0

# Parameter:   id =  Ra_0, name = Ra_0, constant
par Ra_0=307000.0

# Parameter:   id =  Rd_0, name = Rd_0, constant
par Rd_0=1940.0

# Parameter:   id =  Rss, name = Rss, constant
par Rss=5490000.0

# Parameter:   id =  kg, name = kg, constant
par kg=0.0209

# Parameter:   id =  kd, name = kd, constant
par kd=3.85E-4

# Parameter:   id =  Imax_g, name = Imax_g, constant
par Imax_g=0.991

# Parameter:   id =  Imax_b, name = Imax_b, constant
par Imax_b=0.375

# Parameter:   id =  IC50_g, name = IC50_g, constant
par IC50_g=20.8

# Parameter:   id =  IC50_b, name = IC50_b, constant
par IC50_b=145.0

# Parameter:   id =  Hi_g, name = Hi_g, constant
par Hi_g=3.57

# Parameter:   id =  Hi_b, name = Hi_b, constant
par Hi_b=1.06

# Parameter:   id =  Smax_g, name = Smax_g, constant
par Smax_g=4.09

# Parameter:   id =  Smax_b, name = Smax_b, constant
par Smax_b=17.5

# Parameter:   id =  SC50_g, name = SC50_g, constant
par SC50_g=14.0

# Parameter:   id =  SC50_b, name = SC50_b, constant
par SC50_b=168.0

# Parameter:   id =  Hs_g, name = Hs_g, constant
par Hs_g=5.0

# Parameter:   id =  Hs_b, name = Hs_b, constant
par Hs_b=0.984

# Parameter:   id =  ktau_g, name = ktau_g, constant
par ktau_g=0.086

# Parameter:   id =  ktau_b, name = ktau_b, constant
par ktau_b=0.611

# Parameter:   id =  Psi_i, name = Psi_i, constant
par Psi_i=1.0

# Parameter:   id =  Psi_s, name = Psi_s, constant
par Psi_s=1.0

# Parameter:   id =  C_g, name = C_g, constant
par C_g=0.0

# Parameter:   id =  C_b, name = C_b, constant
par C_b=0.0

# Parameter:   id =  ModelValue_2, name = Initial for Rss, constant
par ModelValu=5490000.0

# Parameter:   id =  ModelValue_4, name = Initial for kd, constant
par ModelVa_1=3.85E-4

# Parameter:   id =  ModelValue_3, name = Initial for kg, constant
par ModelVa_2=0.0209

# assignmentRule: variable = Inh_g
Inh_g=Imax_g*C_g^Hi_g/((Psi_i*IC50_g)^Hi_g+C_g^Hi_g)
aux Inh_g=Inh_g

# assignmentRule: variable = Inh_b
Inh_b=Imax_b*C_b^Hi_b/((Psi_i*IC50_b)^Hi_b+C_b^Hi_b)
aux Inh_b=Inh_b

# assignmentRule: variable = Sti_g
Sti_g=Smax_g*C_g^Hs_g/((Psi_s*SC50_g)^Hs_g+C_g^Hs_g)
aux Sti_g=Sti_g

# assignmentRule: variable = Sti_b
Sti_b=Smax_b*C_b^Hs_b/((Psi_s*SC50_b)^Hs_b+C_b^Hs_b)
aux Sti_b=Sti_b

# rateRule: variable = Ra
init Ra=307000.0
dRa/dt=(1-Inh_g)*(1-Inh_b)*ModelVa_2*Ra*(1-Ra/ModelValu)-(1+Sti_g4)*(1+Sti_b4)*ModelVa_1*Ra

# rateRule: variable = Rd
init Rd=1940.0
dRd/dt=(1+Sti_g4)*(1+Sti_b4)*ModelVa_1*Ra-ModelVa_1*Rd

# Reaction: id = g_death_stimulus_delay_1, name = g_death_stimulus delay 1

g_death_s=Pancreas*ktau_g*Sti_g

# Reaction: id = g_death_stimulus_delay_2, name = g_death_stimulus delay 2

g_death_1=Pancreas*ktau_g*Sti_g1

# Reaction: id = g_death_stimulus_delay_3, name = g_death_stimulus delay 3

g_death_2=Pancreas*ktau_g*Sti_g2

# Reaction: id = g_death_stimulus_delay_4, name = g_death_stimulus delay 4

g_death_3=Pancreas*ktau_g*Sti_g3

# Reaction: id = g_death_stimulus_delay_4_degradation, name = g_death_stimulus delay 4 degradation

g_death_4=Pancreas*ktau_g*Sti_g4

# Reaction: id = b_death_stimulus_delay_1, name = b_death_stimulus delay 1

b_death_s=Pancreas*ktau_b*Sti_b

# Reaction: id = b_death_stimulus_delay_2, name = b_death_stimulus delay 2

b_death_1=Pancreas*ktau_b*Sti_b1

# Reaction: id = b_death_stimulus_delay_3, name = b_death_stimulus delay 3

b_death_2=Pancreas*ktau_b*Sti_b2

# Reaction: id = b_death_stimulus_delay_4, name = b_death_stimulus delay 4

b_death_3=Pancreas*ktau_b*Sti_b3

# Reaction: id = b_death_stimulus_delay_4_degradation, name = b_death_stimulus delay 4 degradation

b_death_4=Pancreas*ktau_b*Sti_b4

# Species:   id = Ra, name = Ra, involved in a rule 

# Species:   id = Rd, name = Rd, involved in a rule 

# Species:   id = Inh_g, name = Inh_g, involved in a rule 

# Species:   id = Inh_b, name = Inh_b, involved in a rule 

# Species:   id = Sti_g, name = Sti_g, involved in a rule 

# Species:   id = Sti_b, name = Sti_b, involved in a rule 

# Species:   id = Sti_g1, name = Sti_g1, affected by kineticLaw

init Sti_g1=0.0
dSti_g1/dt=(1/(Pancreas))*(( 1.0 * g_death_s) + (-1.0 * g_death_1))

# Species:   id = Sti_g2, name = Sti_g2, affected by kineticLaw

init Sti_g2=0.0
dSti_g2/dt=(1/(Pancreas))*(( 1.0 * g_death_1) + (-1.0 * g_death_2))

# Species:   id = Sti_g3, name = Sti_g3, affected by kineticLaw

init Sti_g3=0.0
dSti_g3/dt=(1/(Pancreas))*(( 1.0 * g_death_2) + (-1.0 * g_death_3))

# Species:   id = Sti_g4, name = Sti_g4, affected by kineticLaw

init Sti_g4=0.0
dSti_g4/dt=(1/(Pancreas))*(( 1.0 * g_death_3) + (-1.0 * g_death_4))

# Species:   id = Sti_b1, name = Sti_b1, affected by kineticLaw

init Sti_b1=0.0
dSti_b1/dt=(1/(Pancreas))*(( 1.0 * b_death_s) + (-1.0 * b_death_1))

# Species:   id = Sti_b2, name = Sti_b2, affected by kineticLaw

init Sti_b2=0.0
dSti_b2/dt=(1/(Pancreas))*(( 1.0 * b_death_1) + (-1.0 * b_death_2))

# Species:   id = Sti_b3, name = Sti_b3, affected by kineticLaw

init Sti_b3=0.0
dSti_b3/dt=(1/(Pancreas))*(( 1.0 * b_death_2) + (-1.0 * b_death_3))

# Species:   id = Sti_b4, name = Sti_b4, affected by kineticLaw

init Sti_b4=0.0
dSti_b4/dt=(1/(Pancreas))*(( 1.0 * b_death_3) + (-1.0 * b_death_4))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

