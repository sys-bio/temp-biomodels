
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = G?rlich2003_RanGTP_gradient
#
# is http://identifiers.org/biomodels.db/MODEL4969417017
# is http://identifiers.org/biomodels.db/BIOMD0000000192
# isDescribedBy http://identifiers.org/pubmed/12606574
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = nucleus, name = nucleus, constant
par nucleus=1.2E-11

# Compartment: id = cytoplasm, name = cytoplasm, constant
par cytoplasm=1.8E-11

# Reaction: id = RCC1_binding
# Local Parameter:   id =  r1, name = r1
par r1=74.0

# Local Parameter:   id =  r8, name = r8
par r8=55.0


RCC1_bind=nucleus*(r1*RanGDP_nu*RCC1-r8*RCC1_RanG)

# Reaction: id = GDP_dissociation
# Local Parameter:   id =  r2, name = r2
par r2=21.0

# Local Parameter:   id =  r7, name = r7
par r7=11.0


GDP_disso=nucleus*(r2*RCC1_RanG-r7*RCC1_Ran*GDP)

# Reaction: id = GTP_binding
# Local Parameter:   id =  r3, name = r3
par r3=0.6

# Local Parameter:   id =  r6, name = r6
par r6=19.0


GTP_bindi=nucleus*(r3*RCC1_Ran*GTP-r6*RCC1_Ra_1)

# Reaction: id = RanGTP_release
# Local Parameter:   id =  r4, name = r4
par r4=55.0

# Local Parameter:   id =  r5, name = r5
par r5=100.0


RanGTP_re=nucleus*(r4*RCC1_Ra_1-r5*RanGTP_nu*RCC1)

# Reaction: id = Cytoplasmic_transfer
# Local Parameter:   id =  kpermRanGTP, name = kpermRanGTP
par kpermRanG=0.03


Cytopla_1=kpermRanG*nucleus*(RanGTP_nu-RanGTP_cy)

# Reaction: id = Nucleoplasmic_transfer
# Local Parameter:   id =  kpermRanGDP, name = kpermRanGDP
par kpermRa_1=0.12


Nucleopla=kpermRa_1*nucleus*(RanGDP_nu-RanGDP_cy)

# Reaction: id = RanGTP_binding
# Local Parameter:   id =  kon, name = kon
par kon=0.3

# Local Parameter:   id =  koff, name = koff
par koff=4.0E-4


RanGTP_bi=(kon*RanGTP_cy*RanBP1-koff*RanGTP_Ra)*cytoplasm

# Reaction: id = RanBP1_RanGDP, name = RanBP1_RanGDP
# Local Parameter:   id =  kcat, name = kcat
par kcat=10.8

# Local Parameter:   id =  Km, name = Km
par Km=0.1


RanBP1_Ra=cytoplasm*kcat*RanGTP_Ra*RanGAP/(RanGTP_Ra+Km)

# Reaction: id = RanGAP_RanGDP, name = RanGAP_RanGDP
# Local Parameter:   id =  kcat_GAP, name = kcat
par kcat_GAP=10.6

# Local Parameter:   id =  Km_GAP, name = Km
par Km_GAP=0.7


RanGAP_Ra=cytoplasm*kcat_GAP*RanGTP_cy*RanGAP/(Km_GAP+RanGTP_cy)

# Species:   id = RanGDP_nuc, name = RanGDP_nuc, affected by kineticLaw

par RanGDP_nu=0.0
aux RanGDP_nu=RanGDP_nu
dRanGDP_nu/dt=(1/(nucleus))*((-1.0 * RCC1_bind) + (-1.0 * Nucleopla))

# Species:   id = RCC1_RanGDP, name = RCC1_RanGDP, affected by kineticLaw

par RCC1_RanG=0.0
aux RCC1_RanG=RCC1_RanG
dRCC1_RanG/dt=(1/(nucleus))*(( 1.0 * RCC1_bind) + (-1.0 * GDP_disso))

# Species:   id = GDP, name = GDP
par GDP=1.6
aux GDP=GDP
#WARNING speciesID: GDP, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = RCC1, name = RCC1, affected by kineticLaw

init RCC1=0.7
dRCC1/dt=(1/(nucleus))*((-1.0 * RCC1_bind) + ( 1.0 * RanGTP_re))

# Species:   id = RCC1_RanGTP, name = RCC1_RanGTP, affected by kineticLaw

par RCC1_Ra_1=0.0
aux RCC1_Ra_1=RCC1_Ra_1
dRCC1_Ra_1/dt=(1/(nucleus))*(( 1.0 * GTP_bindi) + (-1.0 * RanGTP_re))

# Species:   id = RCC1_Ran, name = RCC1_Ran, affected by kineticLaw

init RCC1_Ran=0.0
dRCC1_Ran/dt=(1/(nucleus))*(( 1.0 * GDP_disso) + (-1.0 * GTP_bindi))

# Species:   id = GTP, name = GTP
par GTP=500.0
aux GTP=GTP
#WARNING speciesID: GTP, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = RanGTP_nuc, name = RanGTP_nuc, affected by kineticLaw

par RanGTP_nu=0.0
aux RanGTP_nu=RanGTP_nu
dRanGTP_nu/dt=(1/(nucleus))*(( 1.0 * RanGTP_re) + (-1.0 * Cytopla_1))

# Species:   id = RanGAP, name = RanGAP
# Warning species is not changed by either rules or reactions

par RanGAP=0.7
aux RanGAP=RanGAP

# Species:   id = RanBP1, name = RanBP1, affected by kineticLaw

init RanBP1=2.0
dRanBP1/dt=(1/(cytoplasm))*((-1.0 * RanGTP_bi) + ( 1.0 * RanBP1_Ra))

# Species:   id = RanGTP_cy, name = RanGTP_cy, affected by kineticLaw

init RanGTP_cy=0.0
dRanGTP_cy/dt=(1/(cytoplasm))*(( 1.0 * Cytopla_1) + (-1.0 * RanGTP_bi) + (-1.0 * RanGAP_Ra))

# Species:   id = RanGTP_RanBP1, name = RanGTP_RanBP1, affected by kineticLaw

par RanGTP_Ra=0.0
aux RanGTP_Ra=RanGTP_Ra
dRanGTP_Ra/dt=(1/(cytoplasm))*(( 1.0 * RanGTP_bi) + (-1.0 * RanBP1_Ra))

# Species:   id = RanGDP_cy, name = RanGDP_cy, affected by kineticLaw

init RanGDP_cy=5.0
dRanGDP_cy/dt=(1/(cytoplasm))*(( 1.0 * Nucleopla) + ( 1.0 * RanBP1_Ra) + ( 1.0 * RanGAP_Ra))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

