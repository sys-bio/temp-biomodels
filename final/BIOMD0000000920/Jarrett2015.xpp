
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Jarrett2015 - Modelling the interaction between immune response, bacterial dynamics and inflammatory damage
#
# is http://identifiers.org/biomodels.db/MODEL1803200002
# is http://identifiers.org/biomodels.db/BIOMD0000000920
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_reaction_for_A, name = Rate Law for reaction for A
Rate_Law_(alpha_2,P,beta_2,I,mu_2,B,A,K_B)=(alpha_2*P-(beta_2*I+mu_2*(1-B/K_B))*A)


# FunctionDefinition id = Rate_Law_for_reaction_for_B, name = Rate Law for reaction for B
Rate_La_1(g,B,K_B,alpha_4,I,beta_4,P,gamma,time)=((g*(1-B/K_B)+alpha_4*I-beta_4*P)*B+exp((-1)*gamma*t))


# FunctionDefinition id = Rate_Law_for_reaction_for_I, name = Rate Law for reaction for I
Rate_La_2(alpha_3,P,rho_2,B,beta_3,A,mu_3,I)=(alpha_3*P+rho_2*B-(beta_3*A+mu_3)*I)


# FunctionDefinition id = Rate_Law_for_reaction_for_P, name = Rate Law for reaction for P
Rate_La_3(alpha_1,I,rho_1,B,P,beta_1,A,mu_1,K_B)=((alpha_1*I+rho_1*B)*(1-P)-(beta_1*A+mu_1*(1-B/K_B))*P)


# Compartment: id = BALB_c_Mouse, name = BALB/c Mouse, constant
par BALB_c_Mo=1.0

# Parameter:   id =  alpha_1, name = alpha_1, constant
par alpha_1=0.27

# Parameter:   id =  rho_1, name = rho_1, constant
par rho_1=0.2

# Parameter:   id =  beta_1, name = beta_1, constant
par beta_1=0.01

# Parameter:   id =  mu_1, name = mu_1, constant
par mu_1=0.12

# Parameter:   id =  K_B, name = K_B, constant
par K_B=1.0

# Parameter:   id =  alpha_2, name = alpha_2, constant
par alpha_2=0.11

# Parameter:   id =  beta_2, name = beta_2, constant
par beta_2=0.135

# Parameter:   id =  mu_2, name = mu_2, constant
par mu_2=0.25

# Parameter:   id =  alpha_3, name = alpha_3, constant
par alpha_3=1.05

# Parameter:   id =  beta_3, name = beta_3, constant
par beta_3=2.0

# Parameter:   id =  rho_2, name = rho_2, constant
par rho_2=0.45

# Parameter:   id =  mu_3, name = mu_3, constant
par mu_3=0.0174

# Parameter:   id =  g, name = g, constant
par g=0.9

# Parameter:   id =  alpha_4, name = alpha_4, constant
par alpha_4=1.5

# Parameter:   id =  beta_4, name = beta_4, constant
par beta_4=5.0

# Parameter:   id =  gamma, name = gamma, constant
par gamma=0.01

# Reaction: id = reaction_for_A, name = reaction for A

reaction_=BALB_c_Mo*Rate_Law_(alpha_2, pro_infla, beta_2, inflammat, mu_2, bacterial, anti_infl, K_B)

# Reaction: id = reaction_For_I, name = reaction For I

reactio_1=BALB_c_Mo*Rate_La_2(alpha_3, pro_infla, rho_2, bacterial, beta_3, anti_infl, mu_3, inflammat)

# Reaction: id = reaction_for_B, name = reaction for B

reactio_2=BALB_c_Mo*Rate_La_1(g, bacterial, K_B, alpha_4, inflammat, beta_4, pro_infla, gamma, t)

# Reaction: id = reaction_For_P, name = reaction For P

reactio_3=BALB_c_Mo*Rate_La_3(alpha_1, inflammat, rho_1, bacterial, pro_infla, beta_1, anti_infl, mu_1, K_B)

# Species:   id = anti_inflammatory__A, name = anti-inflammatory (A), affected by kineticLaw

par anti_infl=3.0
aux anti_infl=anti_infl
danti_infl/dt=(1/(BALB_c_Mo))*(( 1.0 * reaction_))

# Species:   id = inflammation__I, name = inflammation (I), affected by kineticLaw

par inflammat=1.0
aux inflammat=inflammat
dinflammat/dt=(1/(BALB_c_Mo))*(( 1.0 * reactio_1))

# Species:   id = bacterial_infection__B, name = bacterial infection (B), affected by kineticLaw

par bacterial=1.0
aux bacterial=bacterial
dbacterial/dt=(1/(BALB_c_Mo))*(( 1.0 * reactio_2))

# Species:   id = pro_inflammatory__P, name = pro-inflammatory (P), affected by kineticLaw

par pro_infla=1.0
aux pro_infla=pro_infla
dpro_infla/dt=(1/(BALB_c_Mo))*(( 1.0 * reactio_3))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

