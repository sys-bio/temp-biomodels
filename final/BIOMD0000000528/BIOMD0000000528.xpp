
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Fribourg2014 - Dynamics of viral antagonism and innate immune response (H1N1 influenza A virus - Cal/09)
#
# is http://identifiers.org/biomodels.db/MODEL1403310002
# is http://identifiers.org/biomodels.db/BIOMD0000000528
# isDescribedBy http://identifiers.org/pubmed/24594370
# isDerivedFrom http://identifiers.org/pubmed/20159146
# isDerivedFrom http://identifiers.org/pubmed/20739535
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = default, name = default, constant
par default=1.0

# Compartment: id = c2, name = Environment, constant
par c2=1.0

# Compartment: id = compartment, name = Cell, constant
par compartme=1.0

# Parameter:   id =  NS, name = NS, defined by a Rule

# Parameter:   id =  r5, name = r5, constant
par r5=1.0

# Parameter:   id =  n3, name = n3, constant
par n3=5.0

# Parameter:   id =  bm, name = bm, constant
par bm=6.0

# Parameter:   id =  IC1, name = IC1, defined by a Rule

# Parameter:   id =  sp, name = sp, constant
par sp=0.3

# Parameter:   id =  delta1, name = delta1, constant
par delta1=0.1

# Parameter:   id =  n1, name = n1, constant
par n1=1.0

# Parameter:   id =  IC2, name = IC2, defined by a Rule

# Parameter:   id =  sv, name = sv, constant
par sv=0.1

# Parameter:   id =  delta2, name = delta2, constant
par delta2=0.4

# Parameter:   id =  n2, name = n2, constant
par n2=5.0

# Parameter:   id =  IC2ifa, name = IC2ifa, defined by a Rule

# Parameter:   id =  TJ, name = TJ, defined by a Rule

# Parameter:   id =  TJtot, name = TJtot, constant
par TJtot=1.0E-4

# Parameter:   id =  K3, name = K3, constant
par K3=0.0043

# Parameter:   id =  K9, name = K9, constant
par K9=780.0

# Parameter:   id =  delta, name = delta, constant
par delta=3.0E-4

# Parameter:   id =  r0, name = r0, constant
par r0=0.001

# Parameter:   id =  k15, name = k15, constant
par k15=3.6E-8

# Parameter:   id =  tao1, name = tao1, constant
par tao1=2.5

# Parameter:   id =  C, name = C, constant
par C=500000.0

# Parameter:   id =  vmax2, name = vmax2, constant
par vmax2=72000.0

# Parameter:   id =  NA, name = NA, constant
par NA=6.023E23

# Parameter:   id =  K2, name = K2, constant
par K2=0.002

# Parameter:   id =  K5, name = K5, constant
par K5=0.01

# Parameter:   id =  tao3, name = tao3, constant
par tao3=0.56

# Parameter:   id =  r3, name = r3, constant
par r3=1.0E-7

# Parameter:   id =  k8, name = k8, constant
par k8=0.0036

# Parameter:   id =  tao4, name = tao4, constant
par tao4=0.46

# Parameter:   id =  k11, name = k11, constant
par k11=3.6E-4

# Parameter:   id =  k14, name = k14, constant
par k14=3.204E-7

# Parameter:   id =  tao6, name = tao6, constant
par tao6=1.0

# Parameter:   id =  k12, name = k12, constant
par k12=360.0

# Parameter:   id =  k16, name = k16, constant
par k16=0.36

# Parameter:   id =  tao8, name = tao8, constant
par tao8=2.0

# Parameter:   id =  vmax17, name = vmax17, constant
par vmax17=72000.0

# Parameter:   id =  K17, name = K17, constant
par K17=0.002

# Parameter:   id =  r1, name = r1, constant
par r1=1.0E-4

# Parameter:   id =  rmax20, name = rmax20, constant
par rmax20=0.001

# Parameter:   id =  K20, name = K20, constant
par K20=6.0E-4

# Parameter:   id =  tao9, name = tao9, constant
par tao9=2.0

# Parameter:   id =  vmax19, name = vmax19, constant
par vmax19=154800.0

# Parameter:   id =  K19, name = K19, constant
par K19=0.004

# Parameter:   id =  r4, name = r4, constant
par r4=1.0E-5

# Parameter:   id =  k26, name = k26, constant
par k26=0.360085

# Parameter:   id =  tao12, name = tao12, constant
par tao12=1.0

# Parameter:   id =  k28, name = k28, constant
par k28=360.0

# Parameter:   id =  tao13, name = tao13, constant
par tao13=15.0

# assignmentRule: variable = NS
NS=r5*t^n3/(bm^n3+t^n3)
aux NS=NS

# assignmentRule: variable = IC1
IC1=(1+sp*(NS/delta1)^n1)/(1+(NS/delta1)^n1)
aux IC1=IC1

# assignmentRule: variable = IC2
IC2=1
aux IC2=IC2

# assignmentRule: variable = IC2ifa
IC2ifa=1
aux IC2ifa=IC2ifa

# assignmentRule: variable = TJ
TJ=TJtot*(IFNb_env+IFNa_env)/(K3+IFNb_env+IFNa_env)*1/(1+K9*SOCS1m/delta)
aux TJ=TJ

# Reaction: id = J1, name = J1

J1=(r0*IC1+k15*IRF7Pn)*IC2-IFNb_mRNA*log(2)/tao1

# Reaction: id = J2, name = J2

J2=1000000000*C*vmax2/NA*IFNb_mRNA/(K2+IFNb_mRNA)

# Reaction: id = J3, name = J3

J3=K5*TJ*STAT/2/(K5+STAT)-STATP2n*log(2)/tao3

# Reaction: id = J4, name = J4

J4=(r3*IC1+k8*STATP2n)*IC2-SOCS1m*log(2)/tao4

# Reaction: id = J5, name = J5

J5=(k11*STATP2n+k14*IRF7Pn)*IC2-IRF7m*log(2)/tao6

# Reaction: id = J6, name = J6

J6=k12*IC1*IRF7m

# Reaction: id = J7, name = J7

J7=k16*IRF7Pn*IC2ifa-IFNa_mRNA*log(2)/tao8

# Reaction: id = J8, name = J8

J8=1000000000*C*vmax17/NA*IFNa_mRNA/(K17+IFNa_mRNA)

# Reaction: id = J9, name = J9

J9=(r1*IC1+rmax20*TNFenv/(K20+TNFenv))*IC2-TNFam*log(2)/tao9

# Reaction: id = J10, name = J10

J10=1000000000*C*vmax19/NA*TNFam/(K19+TNFam)

# Reaction: id = J11, name = J11

J11=(r4*IC1+k26*STATP2n)*IC2-STATm*log(2)/tao12

# Reaction: id = J12, name = J12

J12=k28*STATm-STAT*log(2)/tao13

# Species:   id = w, name = w
par w=0.0
aux w=w
#WARNING speciesID: w, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = IFNb_mRNA, name = IFNb_mRNA, affected by kineticLaw

init IFNb_mRNA=0.0
dIFNb_mRNA/dt=(1/(compartme))*(( 1.0 * J1))

# Species:   id = IFNb_env, name = IFNb_env, affected by kineticLaw

init IFNb_env=0.0
dIFNb_env/dt=(1/(c2))*(( 1.0 * J2))

# Species:   id = STATP2n, name = STATP2n, affected by kineticLaw

init STATP2n=0.0
dSTATP2n/dt=(1/(compartme))*(( 1.0 * J3))

# Species:   id = SOCS1m, name = SOCS1m, affected by kineticLaw

init SOCS1m=0.0
dSOCS1m/dt=(1/(compartme))*(( 1.0 * J4))

# Species:   id = IRF7m, name = IRF7m, affected by kineticLaw

init IRF7m=0.0
dIRF7m/dt=(1/(compartme))*(( 1.0 * J5))

# Species:   id = IRF7Pn, name = IRF7Pn, affected by kineticLaw

init IRF7Pn=0.0
dIRF7Pn/dt=(1/(compartme))*(( 1.0 * J6))

# Species:   id = IFNa_mRNA, name = IFNa_mRNA, affected by kineticLaw

init IFNa_mRNA=0.0
dIFNa_mRNA/dt=(1/(compartme))*(( 1.0 * J7))

# Species:   id = IFNa_env, name = IFNa_env, affected by kineticLaw

init IFNa_env=0.0
dIFNa_env/dt=(1/(c2))*(( 1.0 * J8))

# Species:   id = TNFam, name = TNFam, affected by kineticLaw

init TNFam=0.0
dTNFam/dt=(1/(compartme))*(( 1.0 * J9))

# Species:   id = TNFenv, name = TNFenv, affected by kineticLaw

init TNFenv=0.0
dTNFenv/dt=(1/(c2))*(( 1.0 * J10))

# Species:   id = STATm, name = STATm, affected by kineticLaw

init STATm=0.0
dSTATm/dt=(1/(compartme))*(( 1.0 * J11))

# Species:   id = STAT, name = STAT, affected by kineticLaw

init STAT=0.1
dSTAT/dt=(1/(compartme))*(( 1.0 * J12))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

