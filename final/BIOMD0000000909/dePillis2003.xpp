
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = dePillis2003 - The dynamics of an optimally controlled tumor model: A case study
#
# hasInstance http://identifiers.org/mamo/MAMO_0000046
# hasInstance http://identifiers.org/taxonomy/9606
# hasInstance http://identifiers.org/ncit/C48686
# isDescribedBy http://identifiers.org/ncit/C48686
# isDescribedBy http://identifiers.org/doi/10.1016/S0895-7177(03)00133-X
# isDerivedFrom http://identifiers.org/doi/10.1007/bf02460644
# is http://identifiers.org/biomodels.db/MODEL2001080003
# is http://identifiers.org/biomodels.db/BIOMD0000000909
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_presence_of_normal_cell, name = Function for presence of normal cell
Function_(r2,N,b2)=(r2*N*(1-b2*N))


# FunctionDefinition id = Function_for_Tumor_cells_removed_by_immune_system, name = Function for Tumor cells removed by immune system
Functio_1(c2,I,T,c3,N,a2,u)=(c2*I*T+c3*T*N+a2*(1-exp(-u))*T)


# FunctionDefinition id = Function_for_initiation_of_immune_response_against_cancer, name = Function for initiation of immune response against cancer
Functio_2(s,p,I,T,alpha)=(s+p*I*T/(alpha+T))


# FunctionDefinition id = Function_for_normal_cells_attacked_and_removed, name = Function for normal cells attacked and removed
Functio_3(c4,T,N,a3,u)=(c4*T*N+a3*(1-exp(-u))*N)


# FunctionDefinition id = Function_for_induction_of_tumor_cell, name = Function for induction of tumor cell
Functio_4(r1,T,b1)=(r1*T*(1-b1*T))


# FunctionDefinition id = Function_for_increase_in_the_chemotherapeutic_drug_at_tumor_site, name = Function for increase in the chemotherapeutic drug at tumor site
Functio_5(v)=(v)


# FunctionDefinition id = Function_for_decrease_in_chemotherapeutic_drug_at_tumor_site, name = Function for decrease in chemotherapeutic drug at tumor site
Functio_6(d2,u)=(d2*u)


# FunctionDefinition id = Function_for_removal_of_immune_response_components, name = Function for removal of immune response components
Functio_7(c1,I,T,d1,a1,u)=(c1*I*T+d1*I+a1*(1-exp(-u))*I)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  a1, name = a1, constant
par a1=0.2

# Parameter:   id =  a2, name = a2, constant
par a2=0.3

# Parameter:   id =  a3, name = a3, constant
par a3=0.1

# Parameter:   id =  b1, name = b1, constant
par b1=1.0

# Parameter:   id =  b2, name = b2, constant
par b2=1.0

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.3

# Parameter:   id =  c1, name = c1, constant
par c1=1.0

# Parameter:   id =  c2, name = c2, constant
par c2=0.5

# Parameter:   id =  c3, name = c3, constant
par c3=1.0

# Parameter:   id =  c4, name = c4, constant
par c4=1.0

# Parameter:   id =  d1, name = d1, constant
par d1=0.2

# Parameter:   id =  d2, name = d2, constant
par d2=1.0

# Parameter:   id =  r1, name = r1, constant
par r1=1.5

# Parameter:   id =  r2, name = r2, constant
par r2=1.0

# Parameter:   id =  s, name = s, constant
par s=0.33

# Parameter:   id =  p, name = p, constant
par p=0.01

# Parameter:   id =  v, name = v, constant
par v=0.0

# Reaction: id = Presence_of_Normal_Cell, name = Presence of Normal Cell

Presence_=compartme*Function_(r2, N, b2)

# Reaction: id = Normal_cells_attacked_and_removed, name = Normal cells attacked and removed

Normal_ce=compartme*Functio_3(c4, T_renamed, N, a3, u)

# Reaction: id = Induction_of_tumor_cell, name = Induction of tumor cell

Induction=compartme*Functio_4(r1, T_renamed, b1)

# Reaction: id = Tumor_cells_removed_by_immune_system, name = Tumor cells removed by immune system

Tumor_cel=compartme*Functio_1(c2, I, T_renamed, c3, N, a2, u)

# Reaction: id = Initiation_immune_response_against_tumor, name = Initiation immune response against tumor

Initiatio=compartme*Functio_2(s, p, I, T_renamed, alpha)

# Reaction: id = Removal_of_immune_response_components, name = Removal of immune response components

Removal_o=compartme*Functio_7(c1, I, T_renamed, d1, a1, u)

# Reaction: id = Increase_in_amount_of_drug_at_tumor_site, name = Increase in amount of drug at tumor site

Increase_=compartme*Functio_5(v)

# Reaction: id = Decrease_of_chemotherapeutic_drug_at_tumor_site, name = Decrease of chemotherapeutic drug at tumor site

Decrease_=compartme*Functio_6(d2, u)

# Species:   id = N, name = N, affected by kineticLaw

init N=1.0
dN/dt=(1/(compartme))*(( 1.0 * Presence_) + (-1.0 * Normal_ce))

# Species:   id = T, name = T, affected by kineticLaw

par T_renamed=0.25
aux T_renamed=T_renamed
dT_renamed/dt=(1/(compartme))*(( 1.0 * Induction) + (-1.0 * Tumor_cel))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.15
dI/dt=(1/(compartme))*(( 1.0 * Initiatio) + (-1.0 * Removal_o))

# Species:   id = u, name = u, affected by kineticLaw

init u=0.0
du/dt=(1/(compartme))*(( 1.0 * Increase_) + (-1.0 * Decrease_))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

