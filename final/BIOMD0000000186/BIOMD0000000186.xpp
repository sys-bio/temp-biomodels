
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ibrahim2008 - Mitotic Spindle Assembly Checkpoint - Dissociation variant
#
# is http://identifiers.org/biomodels.db/MODEL6655615431
# is http://identifiers.org/biomodels.db/BIOMD0000000186
# isDescribedBy http://identifiers.org/pubmed/18253502
# isDerivedFrom http://identifiers.org/pubmed/15694304
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Cytoplasm, name = Cytoplasm, constant
par Cytoplasm=1.0

# Parameter:   id =  k1f, name = k1f, constant
par k1f=200000.0

# Parameter:   id =  k1r, name = k1r, constant
par k1r=0.2

# Parameter:   id =  k2f, name = k2f, constant
par k2f=1.0E8

# Parameter:   id =  k3f, name = k3f, constant
par k3f=0.01

# Parameter:   id =  k4f, name = k4f, constant
par k4f=1.0E7

# Parameter:   id =  k4r, name = k4r, constant
par k4r=0.02

# Parameter:   id =  k5f, name = k5f, constant
par k5f=10000.0

# Parameter:   id =  k5r, name = k5r, constant
par k5r=0.2

# Parameter:   id =  kf6, name = kf6, constant
par kf6=1000.0

# Parameter:   id =  k7f, name = k7f, constant
par k7f=1.0E8

# Parameter:   id =  k7r, name = k7r, constant
par k7r=0.08

# Parameter:   id =  k8f, name = k8f, constant
par k8f=5000000.0

# Parameter:   id =  k8r, name = k8r, constant
par k8r=0.08

# Parameter:   id =  u, name = u
par u=1.0

# Parameter:   id =  u_prime, name = u_prime
par u_prime=0.0

# Parameter:   id =  const_val_0, name = const_val_0, constant
par const_val=0.0

# Parameter:   id =  const_val_1, name = const_val_1, constant
par const_v_1=1.0

# Reaction: id = R1

R1=Cytoplasm*(u*k1f*Mad1_CMad*OMad2-k1r*Mad1_CM_1)

# Reaction: id = R2

R2=u*k2f*Mad1_CM_1*Cytoplasm*Cdc20

# Reaction: id = R3

R3=k3f*Cdc20_CMa*Cytoplasm

# Reaction: id = R4

R4=Cytoplasm*(u*k4f*Cdc20_CMa*Bub3_BubR-k4r*MCC)

# Reaction: id = R5

R5=Cytoplasm*(u*k5f*Bub3_BubR*Cdc20-k5r*Bub3_Bu_1)

# Reaction: id = R6

R6=kf6*OMad2*Cdc20*Cytoplasm

# Reaction: id = R7

R7=u*k7f*MCC*APC*Cytoplasm

# Reaction: id = R7a

R7a=u_prime*k7r*MCC_APC*Cytoplasm

# Reaction: id = R8

R8=Cytoplasm*(k8f*APC*Cdc20-k8r*APC_Cdc20)

# Species:   id = Mad1_CMad2, name = Mad1:C-Mad2, affected by kineticLaw

par Mad1_CMad=5.0E-8
aux Mad1_CMad=Mad1_CMad
dMad1_CMad/dt=(1/(Cytoplasm))*((-1.0 * R1) + ( 1.0 * R2))

# Species:   id = OMad2, name = O-Mad2, affected by kineticLaw

init OMad2=1.3E-7
dOMad2/dt=(1/(Cytoplasm))*((-1.0 * R1) + ( 1.0 * R3) + (-1.0 * R6))

# Species:   id = Mad1_CMad2_OMad2, name = Mad1:C-Mad2:O-Mad2*, affected by kineticLaw

par Mad1_CM_1=0.0
aux Mad1_CM_1=Mad1_CM_1
dMad1_CM_1/dt=(1/(Cytoplasm))*(( 1.0 * R1) + (-1.0 * R2))

# Species:   id = Cdc20, name = Cdc20, affected by kineticLaw

init Cdc20=2.2E-7
dCdc20/dt=(1/(Cytoplasm))*((-1.0 * R2) + ( 1.0 * R3) + (-1.0 * R5) + (-1.0 * R6) + (-1.0 * R8))

# Species:   id = Cdc20_CMad2, name = Cdc20:C-Mad2, affected by kineticLaw

par Cdc20_CMa=0.0
aux Cdc20_CMa=Cdc20_CMa
dCdc20_CMa/dt=(1/(Cytoplasm))*(( 1.0 * R2) + (-1.0 * R3) + (-1.0 * R4) + ( 1.0 * R6))

# Species:   id = Bub3_BubR1, name = Bub3:BubR1, affected by kineticLaw

par Bub3_BubR=1.27E-7
aux Bub3_BubR=Bub3_BubR
dBub3_BubR/dt=(1/(Cytoplasm))*((-1.0 * R4) + (-1.0 * R5))

# Species:   id = MCC, name = MCC, affected by kineticLaw

init MCC=0.0
dMCC/dt=(1/(Cytoplasm))*(( 1.0 * R4) + (-1.0 * R7) + ( 1.0 * R7a))

# Species:   id = Bub3_BubR1_Cdc20, name = Bub3:BubR1:Cdc20, affected by kineticLaw

par Bub3_Bu_1=0.0
aux Bub3_Bu_1=Bub3_Bu_1
dBub3_Bu_1/dt=(1/(Cytoplasm))*(( 1.0 * R5))

# Species:   id = APC, name = APC, affected by kineticLaw

init APC=9.0E-8
dAPC/dt=(1/(Cytoplasm))*((-1.0 * R7) + ( 1.0 * R7a) + (-1.0 * R8))

# Species:   id = MCC_APC, name = MCC:APC, affected by kineticLaw

init MCC_APC=0.0
dMCC_APC/dt=(1/(Cytoplasm))*(( 1.0 * R7) + (-1.0 * R7a))

# Species:   id = APC_Cdc20, name = APC:Cdc20, affected by kineticLaw

init APC_Cdc20=0.0
dAPC_Cdc20/dt=(1/(Cytoplasm))*(( 1.0 * R8))

# event : mt_attachment
mt_attach=if (t > 2000) then (1.5) else (0.2)
global 1 {mt_attach - 1.1} {u=const_val;u_prime=const_v_1}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

