
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Lenbury2001_InsulinKineticsModel_A
#
# isDescribedBy http://identifiers.org/pubmed/11226623
# is http://identifiers.org/biomodels.db/MODEL1201140002
# is http://identifiers.org/biomodels.db/BIOMD0000000878
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_for_formation_of_insulin, name = function for formation of insulin
function_(r_1,y,c_1,z)=(z*(r_1*y+c_1))


# FunctionDefinition id = Function_for_utilisation_of_insulin, name = Function for utilisation of insulin
Functio_1(r_2,x,z)=(z*r_2*x)


# FunctionDefinition id = Function_for_production_of_glucose, name = Function for production of glucose
Functio_2(epsilon,r_3,z,c_2)=(epsilon*r_3/z+epsilon*c_2)


# FunctionDefinition id = Function_for_utilisation_of_glucose, name = Function for utilisation of glucose
Functio_3(epsilon,r_4,x)=(epsilon*r_4*x)


# FunctionDefinition id = Function_for_production_of_Beta_cell, name = Function for production of Beta cell
Functio_4(r_5,y,y_hat,z_hat,z,r_6)=(r_5*(y-y_hat)*(z_hat-z)+r_6*z*(z_hat-z))


# FunctionDefinition id = Function_for_removal_of_Beta_Cell, name = Function for removal of Beta Cell
Functio_5(r_7,z)=(r_7*z)


# Compartment: id = COMpartment, name = COMpartment, constant
par COMpartme=1.0

# Parameter:   id =  time_environment, name = time, constant
par time_envi=1.0

# Parameter:   id =  r_1, name = r_1, constant
par r_1=0.2

# Parameter:   id =  r_2, name = r_2, constant
par r_2=0.1

# Parameter:   id =  c_1, name = c_1, constant
par c_1=0.1

# Parameter:   id =  r_3, name = r_3, constant
par r_3=0.1

# Parameter:   id =  r_4, name = r_4, constant
par r_4=0.1

# Parameter:   id =  c_2, name = c_2, constant
par c_2=0.1

# Parameter:   id =  r_5, name = r_5, constant
par r_5=0.1

# Parameter:   id =  r_6, name = r_6, constant
par r_6=0.1

# Parameter:   id =  r_7, name = r_7, constant
par r_7=0.05

# Parameter:   id =  z_hat, name = z_hat, constant
par z_hat=2.57039578276886

# Parameter:   id =  y_hat, name = y_hat, constant
par y_hat=1.24

# Parameter:   id =  epsilon, name = epsilon, constant
par epsilon=0.1

# Reaction: id = Production_of_insulin, name = Production of insulin

Productio=COMpartme*function_(r_1, y, c_1, z)

# Reaction: id = Utilisation_of_insulin, name = Utilisation of insulin

Utilisati=COMpartme*Functio_1(r_2, x, z)

# Reaction: id = Production_of_glucose, name = Production of glucose

Product_1=COMpartme*Functio_2(epsilon, r_3, z, c_2)

# Reaction: id = utilisation_of_glucose, name = utilisation of glucose

utilisa_1=COMpartme*Functio_3(epsilon, r_4, x)

# Reaction: id = Production_of_Beta_cell, name = Production of Beta cell

Product_2=COMpartme*Functio_4(r_5, y, y_hat, z_hat, z, r_6)

# Reaction: id = Removal_of_Beta_Cell, name = Removal of Beta Cell

Removal_o=COMpartme*Functio_5(r_7, z)

# Species:   id = x, name = x, affected by kineticLaw

init x=4.57
dx/dt=(1/(COMpartme))*(( 1.0 * Productio) + (-1.0 * Utilisati))

# Species:   id = y, name = y, affected by kineticLaw

init y=1.9
dy/dt=(1/(COMpartme))*(( 1.0 * Product_1) + (-1.0 * utilisa_1))

# Species:   id = z, name = z, affected by kineticLaw

init z=1.01
dz/dt=(1/(COMpartme))*(( 1.0 * Product_2) + (-1.0 * Removal_o))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

