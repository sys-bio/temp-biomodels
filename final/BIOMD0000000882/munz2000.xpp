
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Munz2009 - Zombie SIZRC
#
# isDescribedBy http://identifiers.org/isbn/ISBN:1607413477
# is http://identifiers.org/biomodels.db/MODEL1008060001
# is http://identifiers.org/biomodels.db/BIOMD0000000882
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_Removal_of_zombie_or_susceptible, name = Function for Removal of zombie or susceptible
Function_(beta,Susceptible,Zombie,delta)=(beta*Susceptible*Zombie+delta*Susceptible)


# FunctionDefinition id = Function_for_resurrection_to_Zombie, name = Function for resurrection to Zombie
Functio_1(zeta,Removal)=(zeta*Removal)


# FunctionDefinition id = Function_for_Susceptible_to_Zombie_or_death, name = Function for Susceptible to Zombie or death
Functio_2(beta,Susceptible,Zombie,delta)=(beta*Susceptible*Zombie+delta*Susceptible)


# FunctionDefinition id = Function_for_Death_from_Zombie, name = Function for Death from Zombie
Functio_3(alpha,Susceptible,Zombie)=(alpha*Susceptible*Zombie)


# FunctionDefinition id = Function_for_Zombification, name = Function for Zombification
Functio_4(beta,Susceptible,Zombie,zeta,Removal)=(beta*Susceptible*Zombie+zeta*Removal)


# FunctionDefinition id = Function_for_Birth, name = Function for Birth
Functio_5(p)=(p)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.005

# Parameter:   id =  beta, name = beta, constant
par beta=0.0095

# Parameter:   id =  delta, name = delta, constant
par delta=1.0E-4

# Parameter:   id =  zeta, name = zeta, constant
par zeta=1.0E-4

# Parameter:   id =  p, name = p, constant
par p=0.05

# Reaction: id = Birth, name = Birth

Birth=compartme*Functio_5(p)

# Reaction: id = Zombification, name = Zombification

Zombifica=compartme*Functio_4(beta, Susceptib, Zombie, zeta, Removal)

# Reaction: id = Susceptible_to_Zombie_or_death, name = Susceptible to Zombie or death

Suscept_1=compartme*Functio_2(beta, Susceptib, Zombie, delta)

# Reaction: id = Removal_of_zombie_or_susceptible, name = Removal of zombie or susceptible

Removal_o=compartme*Function_(alpha, Susceptib, Zombie, delta)

# Reaction: id = Resurrection_to_Zombie, name = Resurrection to Zombie

Resurrect=compartme*Functio_1(zeta, Removal)

# Reaction: id = Death_from_Zombie, name = Death from Zombie

Death_fro=compartme*Functio_3(alpha, Susceptib, Zombie)

# Species:   id = Susceptible, name = Susceptible, affected by kineticLaw

par Susceptib=500.0
aux Susceptib=Susceptib
dSusceptib/dt=(1/(compartme))*(( 1.0 * Birth) + (-1.0 * Suscept_1))

# Species:   id = Zombie, name = Zombie, affected by kineticLaw

init Zombie=1.0
dZombie/dt=(1/(compartme))*(( 1.0 * Zombifica) + (-1.0 * Death_fro))

# Species:   id = Removal, name = Removal, affected by kineticLaw

init Removal=0.0
dRemoval/dt=(1/(compartme))*(( 1.0 * Removal_o) + (-1.0 * Resurrect))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

