
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Eftimie2019-Macrophages Plasticity
#
# is http://identifiers.org/biomodels.db/MODEL1909050001
# is http://identifiers.org/biomodels.db/BIOMD0000000806
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = function_for_uninfected_tumour_cell_logistic_growth_1, name = function for uninfected tumour cell logistic growth_1
function_(K,UnInfected_Tumour_Cells_Xu,r)=(r*UnInfected_Tumour_Cells_Xu*(1-UnInfected_Tumour_Cells_Xu/K))


# FunctionDefinition id = function_for_uninfected_tumour_cell_infection_1, name = function for uninfected tumour cell infection_1
functio_1(UnInfected_Tumour_Cells_Xu,Virus_Xv,d_v,v_h_u)=(d_v*Virus_Xv*UnInfected_Tumour_Cells_Xu/(v_h_u+UnInfected_Tumour_Cells_Xu))


# FunctionDefinition id = function_for_uninfected_tumour_cell_elimination_1_1, name = function for uninfected tumour cell elimination 1_1
functio_2(Effector_Cytotoxic_CD8_TCells__Xe,UnInfected_Tumour_Cells_Xu,d_u,h_e)=(d_u*UnInfected_Tumour_Cells_Xu*Effector_Cytotoxic_CD8_TCells__Xe/(h_e+Effector_Cytotoxic_CD8_TCells__Xe))


# FunctionDefinition id = function_for_uninfected_tumour_cell_elimination_2_1, name = function for uninfected tumour cell elimination 2_1
functio_3(M1_Macrophage_Xm1,M2_Macrophage_Xm2,UnInfected_Tumour_Cells_Xu,d_m1,h_m)=(d_m1*UnInfected_Tumour_Cells_Xu*M1_Macrophage_Xm1/(h_m+M2_Macrophage_Xm2))


# FunctionDefinition id = function_for_uninfected_tumour_cell_growth_M2_1, name = function for uninfected tumour cell growth;M2_1
functio_4(M2_Macrophage_Xm2,UnInfected_Tumour_Cells_Xu,d_m2,h_m)=(d_m2*UnInfected_Tumour_Cells_Xu*M2_Macrophage_Xm2/(h_m+M2_Macrophage_Xm2))


# FunctionDefinition id = function_for_virus_growth_1, name = function for virus growth_1
functio_5(Infected_Tumour_Cells_Xi,b,delta_i)=(delta_i*b*Infected_Tumour_Cells_Xi)


# FunctionDefinition id = function_for_infected_tumour_cell_elimination_1_1, name = function for infected tumour cell elimination 1_1
functio_6(Effector_Cytotoxic_CD8_TCells__Xe,Infected_Tumour_Cells_Xi,h_e,v_d_u)=(v_d_u*Infected_Tumour_Cells_Xi*Effector_Cytotoxic_CD8_TCells__Xe/(h_e+Effector_Cytotoxic_CD8_TCells__Xe))


# FunctionDefinition id = function_for_infected_tumour_cell_elimination_2_1, name = function for infected tumour cell elimination 2_1
functio_7(Infected_Tumour_Cells_Xi,M1_Macrophage_Xm1,M2_Macrophage_Xm2,h_m,v_d_m1)=(v_d_m1*Infected_Tumour_Cells_Xi*M1_Macrophage_Xm1/(h_m+M2_Macrophage_Xm2))


# FunctionDefinition id = function_for_virus_clearance_1_1, name = function for virus clearance 1_1
functio_8(M1_Macrophage_Xm1,M2_Macrophage_Xm2,Virus_Xv,h_m,v_d_m1)=(v_d_m1*Virus_Xv*M1_Macrophage_Xm1/(h_m+M2_Macrophage_Xm2))


# FunctionDefinition id = function_for_virus_clearance_2_1, name = function for virus clearance 2_1
functio_9(Effector_Cytotoxic_CD8_TCells__Xe,Virus_Xv,h_e,v_d_u)=(v_d_u*Virus_Xv*Effector_Cytotoxic_CD8_TCells__Xe/(h_e+Effector_Cytotoxic_CD8_TCells__Xe))


# FunctionDefinition id = function_for_M1_activation_1_1, name = function for M1 activation 1_1
functi_10(Infected_Tumour_Cells_Xi,Virus_Xv,v_a_1)=(v_a_1*(Infected_Tumour_Cells_Xi+Virus_Xv))


# FunctionDefinition id = function_for_M1_activation_2_1, name = function for M1 activation 2_1
functi_11(UnInfected_Tumour_Cells_Xu,u_a_1)=(u_a_1*UnInfected_Tumour_Cells_Xu)


# FunctionDefinition id = function_for_M1_recruitment_1, name = function for M1 recruitment_1
functi_12(M,M1_Macrophage_Xm1,M2_Macrophage_Xm2,p_m1)=(p_m1*M1_Macrophage_Xm1*(1-(M1_Macrophage_Xm1+M2_Macrophage_Xm2)/M))


# FunctionDefinition id = function_for_M1_to_M2_repolarisation_1, name = function for M1 to M2 repolarisation_1
functi_13(M1_Macrophage_Xm1,UnInfected_Tumour_Cells_Xu,h_u,o_r_m1,u_r_m1)=(M1_Macrophage_Xm1*(o_r_m1+u_r_m1*UnInfected_Tumour_Cells_Xu/(h_u+UnInfected_Tumour_Cells_Xu)))


# FunctionDefinition id = function_for_M2_to_M1_repolarisation_1, name = function for M2 to M1 repolarisation_1
functi_14(M2_Macrophage_Xm2,Virus_Xv,h_v,o_r_m2,v_r_m2)=(M2_Macrophage_Xm2*(o_r_m2+v_r_m2*Virus_Xv/(h_v+Virus_Xv)))


# FunctionDefinition id = function_for_M2_activation_1, name = function for M2 activation_1
functi_15(UnInfected_Tumour_Cells_Xu,u_a_2)=(u_a_2*UnInfected_Tumour_Cells_Xu)


# FunctionDefinition id = function_for_M2_growth_1, name = function for M2 growth_1
functi_16(M,M1_Macrophage_Xm1,M2_Macrophage_Xm2,p_m2)=(p_m2*M2_Macrophage_Xm2*(1-(M1_Macrophage_Xm1+M2_Macrophage_Xm2)/M))


# FunctionDefinition id = function_for_T_cells_activation_1, name = function for T cells activation_1
functi_17(M1_Macrophage_Xm1,M2_Macrophage_Xm2,h_m,p_e)=(p_e*M1_Macrophage_Xm1/(h_m+M2_Macrophage_Xm2))


# FunctionDefinition id = function_for_T_cells_inactivation_1, name = function for T cells inactivation_1
functi_18(Effector_Cytotoxic_CD8_TCells__Xe,UnInfected_Tumour_Cells_Xu,d_t)=(d_t*UnInfected_Tumour_Cells_Xu*Effector_Cytotoxic_CD8_TCells__Xe)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  r, name = r, constant
par r=0.924

# Parameter:   id =  K, name = K, constant
par K=3.3E9

# Parameter:   id =  d_v, name = d_v, constant
par d_v=0.011

# Parameter:   id =  v_h_u, name = v_h_u, constant
par v_h_u=100000.0

# Parameter:   id =  d_u, name = d_u
par d_u=0.44

# Parameter:   id =  h_e, name = h_e, constant
par h_e=1.0

# Parameter:   id =  d_m1, name = d_m1
par d_m1=0.01

# Parameter:   id =  h_m, name = h_m, constant
par h_m=1000.0

# Parameter:   id =  d_m2, name = d_m2, constant
par d_m2=0.4

# Parameter:   id =  delta_i, name = delta_i, constant
par delta_i=0.475

# Parameter:   id =  b, name = b, constant
par b=2500.0

# Parameter:   id =  v_d_u, name = v_d_u, constant
par v_d_u=4.4

# Parameter:   id =  v_d_m1, name = v_d_m1, constant
par v_d_m1=1.5

# Parameter:   id =  H, name = H
par H=0.0

# Parameter:   id =  omega, name = omega, constant
par omega=2.0

# Parameter:   id =  d_em1, name = d_em1, constant
par d_em1=0.2

# Parameter:   id =  v_a_1, name = v_a_1, constant
par v_a_1=1.0E-6

# Parameter:   id =  u_a_1, name = u_a_1, constant
par u_a_1=3.0E-6

# Parameter:   id =  p_m1, name = p_m1, constant
par p_m1=0.22

# Parameter:   id =  M, name = M, constant
par M=1.0E8

# Parameter:   id =  o_r_m1, name = o_r_m1, constant
par o_r_m1=0.001

# Parameter:   id =  o_r_m2, name = o_r_m2, constant
par o_r_m2=0.001

# Parameter:   id =  u_r_m1, name = u_r_m1, constant
par u_r_m1=4.0

# Parameter:   id =  v_r_m2, name = v_r_m2, constant
par v_r_m2=0.5

# Parameter:   id =  p_m2, name = p_m2, constant
par p_m2=0.22

# Parameter:   id =  h_u, name = h_u, constant
par h_u=5.0E9

# Parameter:   id =  h_v, name = h_v, constant
par h_v=0.105636

# Parameter:   id =  d_em2, name = d_em2, constant
par d_em2=0.2

# Parameter:   id =  u_a_2, name = u_a_2, constant
par u_a_2=4.0E-8

# Parameter:   id =  d_ee, name = d_ee, constant
par d_ee=0.4

# Parameter:   id =  p_e, name = p_e, constant
par p_e=2070.0

# Parameter:   id =  d_t, name = d_t, constant
par d_t=1.0E-10

# Reaction: id = Uninfected_tumour_cell_logistic_growth, name = Uninfected tumour cell logistic growth

Uninfec_1=compartme*function_(K, UnInfecte, r)

# Reaction: id = Uninfected_tumour_cell_infection, name = Uninfected tumour cell infection

Uninfec_2=compartme*functio_1(UnInfecte, Virus_Xv, d_v, v_h_u)

# Reaction: id = Uninfected_tumour_cell_elimination_1, name = Uninfected tumour cell elimination 1

Uninfec_3=compartme*functio_2(Effector_, UnInfecte, d_u, h_e)

# Reaction: id = Uninfected_tumour_cell_elimination_2, name = Uninfected tumour cell elimination 2

Uninfec_4=compartme*functio_3(M1_Macrop, M2_Macrop, UnInfecte, d_m1, h_m)

# Reaction: id = Uninfected_tumour_cell_growth_M2, name = Uninfected tumour cell growth;M2

Uninfec_5=compartme*functio_4(M2_Macrop, UnInfecte, d_m2, h_m)

# Reaction: id = Infected_tumour_cell_death, name = Infected tumour cell death

Infecte_1=compartme*delta_i*Infected_

# Reaction: id = virus_growth, name = virus growth

virus_gro=compartme*functio_5(Infected_, b, delta_i)

# Reaction: id = Infected_tumour_cell_elimination_1, name = Infected tumour cell elimination 1

Infecte_2=compartme*functio_6(Effector_, Infected_, h_e, v_d_u)

# Reaction: id = Infected_tumour_cell_elimination_2, name = Infected tumour cell elimination 2

Infecte_3=compartme*functio_7(Infected_, M1_Macrop, M2_Macrop, h_m, v_d_m1)

# Reaction: id = virus_injection, name = virus injection

virus_inj=compartme*Constant_(H)

# Reaction: id = virus_death, name = virus death

virus_dea=compartme*omega*Virus_Xv

# Reaction: id = virus_clearance_1, name = virus clearance 1

virus_cle=compartme*functio_8(M1_Macrop, M2_Macrop, Virus_Xv, h_m, v_d_m1)

# Reaction: id = virus_clearance_2, name = virus clearance 2

virus_c_1=compartme*functio_9(Effector_, Virus_Xv, h_e, v_d_u)

# Reaction: id = M1_activation_1, name = M1 activation 1

M1_activa=compartme*functi_10(Infected_, Virus_Xv, v_a_1)

# Reaction: id = M1_activation_2, name = M1 activation 2

M1_acti_1=compartme*functi_11(UnInfecte, u_a_1)

# Reaction: id = M1_recruitment, name = M1 recruitment

M1_recrui=compartme*functi_12(M, M1_Macrop, M2_Macrop, p_m1)

# Reaction: id = M1_to_M2_repolarisation, name = M1 to M2 repolarisation

M1_to_M2_=compartme*functi_13(M1_Macrop, UnInfecte, h_u, o_r_m1, u_r_m1)

# Reaction: id = M2_to_M1_repolarisation, name = M2 to M1 repolarisation

M2_to_M1_=compartme*functi_14(M2_Macrop, Virus_Xv, h_v, o_r_m2, v_r_m2)

# Reaction: id = M1_death, name = M1 death

M1_death=compartme*d_em1*M1_Macrop

# Reaction: id = M2_activation, name = M2 activation

M2_activa=compartme*functi_15(UnInfecte, u_a_2)

# Reaction: id = M2_growth, name = M2 growth

M2_growth=compartme*functi_16(M, M1_Macrop, M2_Macrop, p_m2)

# Reaction: id = M2_death, name = M2 death

M2_death=compartme*d_em2*M2_Macrop

# Reaction: id = T_cells_activation, name = T cells activation

T_cells_a=compartme*functi_17(M1_Macrop, M2_Macrop, h_m, p_e)

# Reaction: id = T_cells_death, name = T cells death

T_cells_d=compartme*d_ee*Effector_

# Reaction: id = T_cells_inactivation, name = T cells inactivation

T_cells_i=compartme*functi_18(Effector_, UnInfecte, d_t)

# Species:   id = UnInfected_Tumour_Cells_Xu, name = UnInfected_Tumour_Cells(Xu), affected by kineticLaw

par UnInfecte=500000.0
aux UnInfecte=UnInfecte
dUnInfecte/dt=(1/(compartme))*(( 1.0 * Uninfec_1) + (-1.0 * Uninfec_2) + (-1.0 * Uninfec_3) + (-1.0 * Uninfec_4) + ( 1.0 * Uninfec_5))

# Species:   id = Infected_Tumour_Cells_Xi, name = Infected_Tumour_Cells(Xi), affected by kineticLaw

par Infected_=0.0
aux Infected_=Infected_
dInfected_/dt=(1/(compartme))*(( 1.0 * Uninfec_2) + (-1.0 * Infecte_1) + (-1.0 * Infecte_2) + (-1.0 * Infecte_3))

# Species:   id = Virus_Xv, name = Virus(Xv), affected by kineticLaw

init Virus_Xv=0.0
dVirus_Xv/dt=(1/(compartme))*(( 1.0 * virus_gro) + ( 1.0 * virus_inj) + (-1.0 * virus_dea) + (-1.0 * virus_cle) + (-1.0 * virus_c_1))

# Species:   id = Effector_Cytotoxic_CD8_TCells__Xe, name = Effector_Cytotoxic_CD8_TCells (Xe), affected by kineticLaw

par Effector_=0.0
aux Effector_=Effector_
dEffector_/dt=(1/(compartme))*(( 1.0 * T_cells_a) + (-1.0 * T_cells_d) + (-1.0 * T_cells_i))

# Species:   id = M1_Macrophage_Xm1, name = M1_Macrophage(Xm1), affected by kineticLaw

par M1_Macrop=0.0
aux M1_Macrop=M1_Macrop
dM1_Macrop/dt=(1/(compartme))*(( 1.0 * M1_activa) + ( 1.0 * M1_acti_1) + ( 1.0 * M1_recrui) + (-1.0 * M1_to_M2_) + ( 1.0 * M2_to_M1_) + (-1.0 * M1_death))

# Species:   id = M2_Macrophage_Xm2, name = M2_Macrophage(Xm2), affected by kineticLaw

par M2_Macrop=0.0
aux M2_Macrop=M2_Macrop
dM2_Macrop/dt=(1/(compartme))*(( 1.0 * M1_to_M2_) + (-1.0 * M2_to_M1_) + ( 1.0 * M2_activa) + ( 1.0 * M2_growth) + (-1.0 * M2_death))

# event : Heaviside_function_at_10
Heaviside=if (t >= 10) then (1.5) else (0.2)
global 1 {Heaviside - 1.1} {H=H+2*10^7}

# event : Heaviside_function_at_11
Heavisi_1=if (t >= 11) then (1.5) else (0.2)
global 1 {Heavisi_1 - 1.1} {H=H-2*10^7}

# event : Heaviside_function_at_13
Heavisi_2=if (t >= 13) then (1.5) else (0.2)
global 1 {Heavisi_2 - 1.1} {H=H+2*10^7}

# event : Heaviside_function_at_14
Heavisi_3=if (t >= 14) then (1.5) else (0.2)
global 1 {Heavisi_3 - 1.1} {H=H-2*10^7}

# event : dm1_at_11
dm1_at_11=if (t >= 11) then (1.5) else (0.2)
global 1 {dm1_at_11 - 1.1} {d_m1=d_m1+0.28}

# event : du_at_15
du_at_15=if (t >= 15) then (1.5) else (0.2)
global 1 {du_at_15 - 1.1} {d_u=d_u+0.41}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

