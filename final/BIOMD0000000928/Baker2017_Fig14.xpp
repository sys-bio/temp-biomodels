
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Baker2017 - The role of cytokines, MMPs and fibronectin fragments osteoarthritis
#
# is http://identifiers.org/biomodels.db/MODEL1704120000
# is http://identifiers.org/biomodels.db/BIOMD0000000928
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_R_4, name = Function for R_4
Function_(Mbp,compartmentOne)=(Mbp/compartmentOne)


# FunctionDefinition id = Function_for_R_1, name = Function for R_1
Functio_1(Fdam,compartmentOne)=(Fdam/compartmentOne)


# FunctionDefinition id = Function_for_R_13, name = Function for R_13
Functio_2(Gamma_p,compartmentOne,solution0)=(Gamma_p*solution0/compartmentOne)


# FunctionDefinition id = Function_for_R_12, name = Function for R_12
Functio_3(Pfp,compartmentOne,solution1,solution3)=(1/(1+solution1^2)*Pfp/(1+solution3^2)*solution3^2/compartmentOne)


# FunctionDefinition id = Function_for_R_6, name = Function for R_6
Functio_4(Gamma_m,compartmentOne,solution2)=(Gamma_m*solution2/compartmentOne)


# FunctionDefinition id = Function_for_R_3, name = Function for R_3
Functio_5(Gamma_f,compartmentOne,solution3)=(Gamma_f*solution3/compartmentOne)


# FunctionDefinition id = Function_for_R_7, name = Function for R_7
Functio_6(Aph,App,compartmentOne,solution0)=(App*1/(Aph^2+solution0^2)*solution0^2/compartmentOne)


# FunctionDefinition id = Function_for_R_9, name = Function for R_9
Functio_7(compartmentOne,solution1)=(solution1/compartmentOne)


# FunctionDefinition id = Function_for_R_10, name = Function for R_10
Functio_8(Pbp,compartmentOne,solution1)=(Pbp/(1+solution1^2)/compartmentOne)


# FunctionDefinition id = Function_for_R_8, name = Function for R_8
Functio_9(Afh,Afp,compartmentOne,solution3)=(Afp*1/(Afh^2+solution3^2)*solution3^2/compartmentOne)


# FunctionDefinition id = Function_for_R_11, name = Function for R_11
Functi_10(Ppp,compartmentOne,solution0,solution1)=(1/(1+solution1^2)*Ppp/(1+solution0^2)*solution0^2/compartmentOne)


# FunctionDefinition id = Function_for_R_5, name = Function for R_5
Functi_11(Mph,Mpp,compartmentOne,solution0)=(Mpp*1/(Mph^2+solution0^2)*solution0^2/compartmentOne)


# FunctionDefinition id = Function_for_R_2, name = Function for R_2
Functi_12(compartmentOne,solution2)=(solution2/compartmentOne)


# Compartment: id = compartmentOne, name = Cartilage, constant
par compartme=1.0

# Parameter:   id =  Afh, name = Afh, constant
par Afh=1.0

# Parameter:   id =  Afp, name = Afp, constant
par Afp=10.0

# Parameter:   id =  Aph, name = Aph, constant
par Aph=1.0

# Parameter:   id =  App, name = App, constant
par App=10.0

# Parameter:   id =  Fdam, name = Fdam, constant
par Fdam=0.0

# Parameter:   id =  Gamma_f, name = Gamma_f, constant
par Gamma_f=1.0

# Parameter:   id =  Gamma_m, name = Gamma_m, constant
par Gamma_m=1.0

# Parameter:   id =  Gamma_p, name = Gamma_p, constant
par Gamma_p=1.0

# Parameter:   id =  Mbp, name = Mbp, constant
par Mbp=0.01

# Parameter:   id =  Mph, name = Mph, constant
par Mph=1.0

# Parameter:   id =  Mpp, name = Mpp, constant
par Mpp=10.0

# Parameter:   id =  Pbp, name = Pbp, constant
par Pbp=0.01

# Parameter:   id =  Pfp, name = Pfp, constant
par Pfp=10.0

# Parameter:   id =  Ppp, name = Ppp, constant
par Ppp=10.0

# Reaction: id = R_1, name = R_1

R_1=compartme*Functio_1(Fdam, compartme)

# Reaction: id = R_2, name = R_2

R_2=compartme*Functi_12(compartme, solution2)

# Reaction: id = R_3, name = R_3

R_3=compartme*Functio_5(Gamma_f, compartme, solution3)

# Reaction: id = R_4, name = R_4

R_4=compartme*Function_(Mbp, compartme)

# Reaction: id = R_5, name = R_5

R_5=compartme*Functi_11(Mph, Mpp, compartme, solution0)

# Reaction: id = R_6, name = R_6

R_6=compartme*Functio_4(Gamma_m, compartme, solution2)

# Reaction: id = R_7, name = R_7

R_7=compartme*Functio_6(Aph, App, compartme, solution0)

# Reaction: id = R_8, name = R_8

R_8=compartme*Functio_9(Afh, Afp, compartme, solution3)

# Reaction: id = R_9, name = R_9

R_9=compartme*Functio_7(compartme, solution1)

# Reaction: id = R_10, name = R_10

R_10=compartme*Functio_8(Pbp, compartme, solution1)

# Reaction: id = R_11, name = R_11

R_11=compartme*Functi_10(Ppp, compartme, solution0, solution1)

# Reaction: id = R_12, name = R_12

R_12=compartme*Functio_3(Pfp, compartme, solution1, solution3)

# Reaction: id = R_13, name = R_13

R_13=compartme*Functio_2(Gamma_p, compartme, solution0)

# Species:   id = solution0, name = p-Cytokines, affected by kineticLaw
# Species is changed by 1 event(s)
init solution0=0.18
dsolution0/dt=(1/(compartme))*((-1.0 * R_5) + ( 1.0 * R_5) + (-1.0 * R_7) + ( 1.0 * R_7) + ( 1.0 * R_10) + (-1.0 * R_11) + ( 2.0 * R_11) + ( 1.0 * R_12) + (-1.0 * R_13))

# Species:   id = solution1, name = a-Cytokines, affected by kineticLaw

init solution1=5.0
dsolution1/dt=(1/(compartme))*(( 1.0 * R_7) + ( 1.0 * R_8) + (-1.0 * R_9) + (-1.0 * R_10) + ( 1.0 * R_10) + (-1.0 * R_11) + ( 1.0 * R_11) + (-1.0 * R_12) + ( 1.0 * R_12))

# Species:   id = solution2, name = MMP, affected by kineticLaw

init solution2=0.55
dsolution2/dt=(1/(compartme))*((-1.0 * R_2) + ( 1.0 * R_2) + ( 1.0 * R_4) + ( 1.0 * R_5) + (-1.0 * R_6))

# Species:   id = solution3, name = Fragments, affected by kineticLaw

init solution3=0.75
dsolution3/dt=(1/(compartme))*(( 1.0 * R_1) + ( 1.0 * R_2) + (-1.0 * R_3) + (-1.0 * R_8) + ( 1.0 * R_8) + (-1.0 * R_12) + ( 1.0 * R_12))

# event : event
# unable to handle events with delays currently.
# event ignored.


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

