
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Smolen2004_CircClock
#
# is http://identifiers.org/biomodels.db/MODEL6619579403
# is http://identifiers.org/biomodels.db/BIOMD0000000034
# isDescribedBy http://identifiers.org/pubmed/15111397
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment_0000002, name = cytoplasm, constant
par compartme=1.0

# Compartment: id = compartment_0000001, name = nucleus, constant
par compart_1=1.0

# Parameter:   id =  parameter_0000001, name = ACvri, defined by a Rule

# Parameter:   id =  parameter_0000002, name = ACper, defined by a Rule

# Parameter:   id =  parameter_0000003, name = ACpdp, defined by a Rule

# Parameter:   id =  parameter_0000005, name = Kpv, constant
par paramet_3=0.2

# Parameter:   id =  parameter_0000006, name = Kpp, constant
par paramet_4=0.24

# Parameter:   id =  parameter_0000007, name = Kppd, constant
par paramet_5=0.1

# Parameter:   id =  parameter_0000008, name = Kvc, constant
par paramet_6=0.54

# Parameter:   id =  parameter_0000010, name = Kpdc, constant
par paramet_7=0.54

# Parameter:   id =  parameter_0000011, name = Kcv, constant
par paramet_8=0.083

# Parameter:   id =  parameter_0000012, name = Kcp, constant
par paramet_9=0.134

# Parameter:   id =  parameter_0000013, name = Kcpd, constant
par parame_10=0.248

# Parameter:   id =  parameter_0000014, name = Kvdeac, constant
par parame_11=0.2124

# Parameter:   id =  parameter_0000015, name = Kpdeac, constant
par parame_12=0.2124

# Parameter:   id =  parameter_0000016, name = Kpddeac, constant
par parame_13=0.2124

# Parameter:   id =  parameter_0000017, name = Fv, constant
par parame_14=1.062

# Parameter:   id =  parameter_0000018, name = Fp, constant
par parame_15=1.062

# Parameter:   id =  parameter_0000019, name = Fpd, constant
par parame_16=1.062

# Parameter:   id =  parameter_0000020, name = OPvri, defined by a Rule

# Parameter:   id =  parameter_0000021, name = OPper, defined by a Rule

# Parameter:   id =  parameter_0000022, name = OPpdp, defined by a Rule

# Parameter:   id =  parameter_0000023, name = Tvriop, constant
par parame_20=2.8249

# Parameter:   id =  parameter_0000024, name = Tperop, constant
par parame_21=2.8249

# Parameter:   id =  parameter_0000025, name = Tpdpop, constant
par parame_22=2.8249

# Parameter:   id =  parameter_0000026, name = N, constant
par parame_23=5.0

# Parameter:   id =  parameter_0000027, name = Vper, constant
par parame_24=10.62

# Parameter:   id =  parameter_0000028, name = Vvri, constant
par parame_25=76.464

# Parameter:   id =  parameter_0000029, name = Vpdp, constant
par parame_26=344.09

# Parameter:   id =  parameter_0000030, name = Vclk, constant
par parame_27=1.062

# Parameter:   id =  parameter_0000031, name = Rpbas, constant
par parame_28=0.02124

# Parameter:   id =  parameter_0000032, name = Rvbas, constant
par parame_29=0.19116

# Parameter:   id =  parameter_0000033, name = Rcbas, constant
par parame_30=0.001062

# Parameter:   id =  parameter_0000034, name = Rpdbas, constant
par parame_31=0.38232

# Parameter:   id =  parameter_0000036, name = Vdclk, constant
par parame_32=0.2124

# Parameter:   id =  parameter_0000037, name = vdvri, constant
par parame_33=0.7434

# Parameter:   id =  parameter_0000038, name = vdpdp, constant
par parame_34=0.6903

# Parameter:   id =  parameter_0000039, name = Tdelay, constant
par parame_35=2.8249

# Parameter:   id =  parameter_0000040, name = Vpcyt, constant
par parame_36=1.6992

# Parameter:   id =  parameter_0000041, name = Kpcyt, constant
par parame_37=0.25

# Parameter:   id =  parameter_0000042, name = Vpnuc, constant
par parame_38=0.3186

# Parameter:   id =  parameter_0000043, name = Kpnuc, constant
par parame_39=0.001

# Parameter:   id =  parameter_0000044, name = Vtrans, constant
par parame_40=1.6992

# Parameter:   id =  parameter_0000045, name = Ktrans, constant
par parame_41=0.25

# Parameter:   id =  parameter_0000046, name = Vdegp, constant
par parame_42=5.31

# Parameter:   id =  parameter_0000047, name = Kdegp, constant
par parame_43=0.01

# Parameter:   id =  parameter_0000048, name = kd, constant
par parame_44=0.00531

# rateRule: variable = parameter_0000001
dparameter/dt=parame_14*species_7/(species_7+paramet_8)*paramet_3/(paramet_3+species_0+species_1+species_2)*(1-parameter)-parame_11*parameter

# rateRule: variable = parameter_0000002
dparamet_1/dt=parame_15*species_7/(species_7+paramet_9)*paramet_4/(paramet_4+species_0+species_1+species_2)*(1-paramet_1)-parame_12*paramet_1

# rateRule: variable = parameter_0000003
dparamet_2/dt=parame_16*species_7/(species_7+parame_10)*paramet_5/(paramet_5+species_0+species_1+species_2)*(1-paramet_2)-parame_13*paramet_2

# rateRule: variable = parameter_0000020
dparame_17/dt=(parameter^parame_23-parame_17)/parame_20

# rateRule: variable = parameter_0000021
dparame_18/dt=(paramet_1^parame_23-parame_18)/parame_21

# rateRule: variable = parameter_0000022
dparame_19/dt=(paramet_2^parame_23-parame_19)/parame_22

# Reaction: id = reaction_0000001, name = Per production

reaction_=compartme*(parame_24*parame_18+parame_28)

# Reaction: id = reaction_0000002, name = Vri production

reactio_1=compart_1*(parame_25*parame_17+parame_29)

# Reaction: id = reaction_0000003, name = Pdp production

reactio_2=compart_1*delay(parame_26*parame_19+parame_31, parame_35)

# Reaction: id = reaction_0000004, name = Clk production

reactio_3=compart_1*(parame_27*species_8^2/(species_8^2+paramet_7^2)*paramet_6^2/(species_6^2+paramet_6^2)+parame_30)

# Reaction: id = reaction_0000005, name = Clk specific degradation

reactio_4=compart_1*parame_32*species_7

# Reaction: id = reaction_0000006, name = Pdp specific degradation

reactio_5=compart_1*parame_34*species_8

# Reaction: id = reaction_0000007, name = Vri specific degradation

reactio_6=compart_1*parame_33*species_6

# Reaction: id = reaction_0000008, name = first cytoplasmic Per phosphorylation

reactio_7=compartme*parame_36*species_3/(parame_37+species_3)

# Reaction: id = reaction_0000009, name = second cytoplasmic Per phosphorylation

reactio_8=compartme*parame_36*species_4/(parame_37+species_4)

# Reaction: id = reaction_0000010, name = Per nuclear transport

reactio_9=compartme*parame_40*species_5/(parame_41+species_5)

# Reaction: id = reaction_0000011, name = first nuclear Per phosphorylation

reacti_10=compart_1*parame_38*species_0/(parame_39+species_0)

# Reaction: id = reaction_0000012, name = second nuclear Rer phosphorylation

reacti_11=compart_1*parame_38*species_1/(parame_39+species_1)

# Reaction: id = reaction_0000013, name = Per specific degradation

reacti_12=compart_1*parame_42*species_2/(parame_43+species_2)

# Reaction: id = reaction_0000014, name = Clk aspecific degradation

reacti_13=compart_1*parame_44*species_7

# Reaction: id = reaction_0000015, name = Pdp aspecific degradation

reacti_14=compart_1*parame_44*species_8

# Reaction: id = reaction_0000016, name = Vri aspecific degradation

reacti_15=compart_1*parame_44*species_6

# Reaction: id = reaction_0000017, name = Per_cyt aspecific degradation

reacti_16=compartme*parame_44*species_3

# Reaction: id = reaction_0000018, name = Per-P_cyt aspecific degradation

reacti_17=compartme*parame_44*species_4

# Reaction: id = reaction_0000019, name = Per-PP_cyt aspecific degradation

reacti_18=compartme*parame_44*species_5

# Reaction: id = reaction_0000020, name = Per_nuc aspecific degradation

reacti_19=compart_1*parame_44*species_0

# Reaction: id = reaction_0000021, name = Per-P_nuc aspecific degradation

reacti_20=compart_1*parame_44*species_1

# Reaction: id = reaction_0000022, name = Per-PP_nuc aspecific degradation

reacti_21=compart_1*parame_44*species_2

# Species:   id = species_0000001, name = P0nuc, affected by kineticLaw

par species_0=0.001
aux species_0=species_0
dspecies_0/dt=(1/(compart_1))*(( 1.0 * reactio_9) + (-1.0 * reacti_10) + (-1.0 * reacti_19))

# Species:   id = species_0000002, name = P1nuc, affected by kineticLaw

par species_1=0.001
aux species_1=species_1
dspecies_1/dt=(1/(compart_1))*(( 1.0 * reacti_10) + (-1.0 * reacti_11) + (-1.0 * reacti_20))

# Species:   id = species_0000003, name = P2nuc, affected by kineticLaw

par species_2=0.001
aux species_2=species_2
dspecies_2/dt=(1/(compart_1))*(( 1.0 * reacti_11) + (-1.0 * reacti_12) + (-1.0 * reacti_21))

# Species:   id = species_0000004, name = P0cyt, affected by kineticLaw

par species_3=0.001
aux species_3=species_3
dspecies_3/dt=(1/(compartme))*(( 1.0 * reaction_) + (-1.0 * reactio_7) + (-1.0 * reacti_16))

# Species:   id = species_0000005, name = P1cyt, affected by kineticLaw

par species_4=0.001
aux species_4=species_4
dspecies_4/dt=(1/(compartme))*(( 1.0 * reactio_7) + (-1.0 * reactio_8) + (-1.0 * reacti_17))

# Species:   id = species_0000006, name = P2cyt, affected by kineticLaw

par species_5=0.001
aux species_5=species_5
dspecies_5/dt=(1/(compartme))*(( 1.0 * reactio_8) + (-1.0 * reactio_9) + (-1.0 * reacti_18))

# Species:   id = species_0000007, name = VRI, affected by kineticLaw

par species_6=0.001
aux species_6=species_6
dspecies_6/dt=(1/(compart_1))*(( 1.0 * reactio_1) + (-1.0 * reactio_6) + (-1.0 * reacti_15))

# Species:   id = species_0000008, name = CLK, affected by kineticLaw

par species_7=0.001
aux species_7=species_7
dspecies_7/dt=(1/(compart_1))*(( 1.0 * reactio_3) + (-1.0 * reactio_4) + (-1.0 * reacti_13))

# Species:   id = species_0000009, name = PDP, affected by kineticLaw

par species_8=0.001
aux species_8=species_8
dspecies_8/dt=(1/(compart_1))*(( 1.0 * reactio_2) + (-1.0 * reactio_5) + (-1.0 * reacti_14))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

