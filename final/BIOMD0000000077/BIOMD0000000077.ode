
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Blum2000_LHsecretion_1
#
# is http://identifiers.org/biomodels.db/MODEL3092061764
# is http://identifiers.org/biomodels.db/BIOMD0000000077
# isDescribedBy http://identifiers.org/pubmed/10662710
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Parameter:   id =  alpha, name = alpha, constant
par alpha=2.0

# Parameter:   id =  beta, name = beta, constant
par beta=4.0

# assignmentRule: variable = CHO
CHO=0.001*alpha*IP3*(0.3+0.3*beta*t*exp(1-beta*t))/(1+0.001*alpha*IP3)
aux CHO=CHO

# Reaction: id = reaction_0, name = H binding to  R
# Local Parameter:   id =  k1, name = k1
par k1=2.5

# Local Parameter:   id =  k2, name = k2
par k2=5.0


reaction_=cell*(k1*H*R-k2*HR)

# Reaction: id = reaction_1, name = HR forming HRRH
# Local Parameter:   id =  k1, name = k1
par k1_1=2500.0

# Local Parameter:   id =  k2, name = k2
par k2_1=5.0


reactio_1=cell*(k1_1*HR^2-k2_1*HRRH)

# Reaction: id = reaction_2, name = G protein react with dimer producing E
# Local Parameter:   id =  k1, name = k1
par k1_1_2=4000.0

# Local Parameter:   id =  k2, name = k2
par k2_1_2=200.0


reactio_2=cell*(k1_1_2*HRRH*GQ-k2_1_2*E)

# Reaction: id = reaction_3, name = IP3 converted into inactive metabolites
# Local Parameter:   id =  k1, name = k1
par k1_1_2_3=10.0


reactio_3=cell*k1_1_2_3*IP3

# Reaction: id = reaction_4, name = Production of IP3
# Local Parameter:   id =  k, name = k
par k=2.0E7


reactio_4=cell*k*E

# Species:   id = H, name = H, affected by kineticLaw
# Species is changed by 1 event(s)
init H=1.0
dH/dt=(1/(cell))*((-1.0 * reaction_))

# Species:   id = HR, name = HR, affected by kineticLaw

init HR=0.0
dHR/dt=(1/(cell))*(( 1.0 * reaction_) + (-2.0 * reactio_1))

# Species:   id = R, name = R, affected by kineticLaw

init R=0.01
dR/dt=(1/(cell))*((-1.0 * reaction_))

# Species:   id = HRRH, name = HRRH, affected by kineticLaw

init HRRH=0.0
dHRRH/dt=(1/(cell))*(( 1.0 * reactio_1) + (-1.0 * reactio_2))

# Species:   id = E, name = E, affected by kineticLaw

init E=0.0
dE/dt=(1/(cell))*(( 1.0 * reactio_2))

# Species:   id = GQ, name = GQ, affected by kineticLaw

init GQ=0.1
dGQ/dt=(1/(cell))*((-1.0 * reactio_2))

# Species:   id = IP3, name = IP3, affected by kineticLaw

init IP3=0.0
dIP3/dt=(1/(cell))*((-1.0 * reactio_3) + ( 1.0 * reactio_4))

# Species:   id = CHO, name = CHO, defined in a rule 

# event : RemovalH
RemovalH=if (t > 5) then (1.5) else (0.2)
global 1 {RemovalH - 1.1} {H=0}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

