
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Voliotis2019-GnRH Pulse Generation
#
# is http://identifiers.org/biomodels.db/MODEL2003190007
# is http://identifiers.org/biomodels.db/BIOMD0000000931
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  d_D, name = d_D, constant
par d_D=0.25

# Parameter:   id =  d_N, name = d_N, constant
par d_N=1.0

# Parameter:   id =  d_v, name = d_v, constant
par d_v=10.0

# Parameter:   id =  k_D, name = k_D, constant
par k_D=4.5

# Parameter:   id =  k_N, name = k_N, constant
par k_N=320.0

# Parameter:   id =  k_D0, name = k_D0, constant
par k_D0=0.175

# Parameter:   id =  k_N0, name = k_N0, constant
par k_N0=0.0

# Parameter:   id =  p_v, name = p_v, constant
par p_v=1.0

# Parameter:   id =  v_0, name = v_0, constant
par v_0=30000.0

# Parameter:   id =  K_D, name = K_D, constant
par K_D_1=0.3

# Parameter:   id =  K_N, name = K_N, constant
par K_N_1=32.0

# Parameter:   id =  K_v1, name = K_v1, constant
par K_v1=1200.0

# Parameter:   id =  K_v2, name = K_v2, constant
par K_v2=1200.0

# Parameter:   id =  I_0, name = I_0, constant
par I_0=0.2

# Parameter:   id =  n_1, name = n_1, constant
par n_1=2.0

# Parameter:   id =  n_2, name = n_2, constant
par n_2=2.0

# Parameter:   id =  n_3, name = n_3, constant
par n_3=2.0

# Parameter:   id =  n_4, name = n_4, constant
par n_4=2.0

# Parameter:   id =  f_D, name = f_D, defined by a Rule

# Parameter:   id =  f_N, name = f_N, defined by a Rule

# Parameter:   id =  f_v, name = f_v, defined by a Rule

# Parameter:   id =  I, name = I, defined by a Rule

# assignmentRule: variable = I
I=I_0+p_v*v*N^n_4/(N^n_4+K_N_1^n_4)
aux I=I

# assignmentRule: variable = f_v
f_v=v_0*(1-exp(-I))/(1+exp(-I))
aux f_v=f_v

# assignmentRule: variable = f_N
f_N=k_N0+k_N*v^n_2/(v^n_2+K_v2^n_2)*K_D_1^n_3/(D^n_3+K_D_1^n_3)
aux f_N=f_N

# assignmentRule: variable = f_D
f_D=k_D0+k_D*v^n_1/(v^n_1+K_v1^n_1)
aux f_D=f_D

# Reaction: id = Dyn_Secretion, name = Dyn_Secretion

Dyn_Secre=compartme*Constant_(f_D)

# Reaction: id = NKB_Secretion, name = NKB_Secretion

NKB_Secre=compartme*Constant_(f_N)

# Reaction: id = Firing_Rate, name = Firing_Rate

Firing_Ra=compartme*Constant_(f_v)

# Reaction: id = Dyn_Decay, name = Dyn_Decay

Dyn_Decay=compartme*d_D*D

# Reaction: id = NKB_Decay, name = NKB_Decay

NKB_Decay=compartme*d_N*N

# Reaction: id = FR_Decay, name = FR_Decay

FR_Decay=compartme*d_v*v

# Species:   id = D, name = D, affected by kineticLaw

init D=2.348
dD/dt=(1/(compartme))*(( 1.0 * Dyn_Secre) + (-1.0 * Dyn_Decay))

# Species:   id = N, name = N, affected by kineticLaw

init N=0.07764
dN/dt=(1/(compartme))*(( 1.0 * NKB_Secre) + (-1.0 * NKB_Decay))

# Species:   id = v, name = v, affected by kineticLaw

init v=300.0
dv/dt=(1/(compartme))*(( 1.0 * Firing_Ra) + (-1.0 * FR_Decay))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

