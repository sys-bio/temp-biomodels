
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Lee2008 - ERK and PI3K signal integration by Myc
#
# isDescribedBy http://identifiers.org/pubmed/18463697
# is http://identifiers.org/biomodels.db/MODEL1909170004
# is http://identifiers.org/biomodels.db/BIOMD0000000818
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible, name = Henri-Michaelis-Menten (irreversible)
Henri_Mic(substrate,Km,V)=(V*substrate/(Km+substrate))


# FunctionDefinition id = facilitated_synthesis, name = facilitated synthesis
facilitat(k,A)=(k*A)


# FunctionDefinition id = Facilitated_function, name = Facilitated function
Facilit_1(kcat,A,B,Km)=(kcat*A*B/(Km+B))


# Compartment: id = Cell, name = Cell, constant
par Cell=1.0

# Parameter:   id =  kM, name = kM, constant
par kM=1.0

# Parameter:   id =  ERKmax, name = ERKmax*, constant
par ERKmax=1.0

# Parameter:   id =  K_GP, name = K_GP, constant
par K_GP=0.01

# Parameter:   id =  k_GD, name = k_GD, constant
par k_GD=72.0

# Parameter:   id =  K_GD, name = K_GD, constant
par K_GD_1=0.01

# Parameter:   id =  k_MS, name = k_MS*, constant
par k_MS=2.3

# Parameter:   id =  K_MT, name = K_MT, constant
par K_MT=0.01

# Parameter:   id =  dM, name = dM, constant
par dM=2.08

# Parameter:   id =  dMS, name = dMS, constant
par dMS=0.35

# Parameter:   id =  dMT, name = dMT, constant
par dMT=2.08

# Parameter:   id =  PI3Kmax_, name = PI3Kmax**, constant
par PI3Kmax_=1.0

# Parameter:   id =  k_ap, name = k_ap, constant
par k_ap=360.0

# Parameter:   id =  K_AP, name = K_AP, constant
par K_AP_1=0.01

# Parameter:   id =  k_AD, name = k_AD, constant
par k_AD=72.0

# Parameter:   id =  K_AD, name = K_AD, constant
par K_AD_1=0.01

# Parameter:   id =  k_GP, name = k_GP, constant
par k_GP_1=360.0

# Parameter:   id =  K_MS, name = K_MS, constant
par K_MS_1=0.01

# Parameter:   id =  k_MT, name = k_MT, constant
par k_MT_1=0.4

# assignmentRule: variable = Myc_total
Myc_total=Myc+Myc_ser62+Myc_thr58
aux Myc_total=Myc_total

# Reaction: id = Myc_synthesis, name = Myc_synthesis

Myc_synth=Cell*facilitat(kM, GF)

# Reaction: id = AKT_phosphorylation, name = AKT phosphorylation

AKT_phosp=Cell*Facilit_1(k_ap, PI3K, AKT, K_AP_1)

# Reaction: id = AKTp_dephosphorylation, name = AKTp dephosphorylation

AKTp_deph=Cell*Henri_Mic(AKTp, K_AD_1, k_AD)

# Reaction: id = GSK3B_phosphorylation, name = GSK3B phosphorylation

GSK3B_pho=Cell*Facilit_1(k_GP_1, AKTp, GSK3B, K_GP)

# Reaction: id = GSK3Bp_dephosphorylation, name = GSK3Bp dephosphorylation

GSK3Bp_de=Cell*Henri_Mic(GSK3Bp, K_GD_1, k_GD)

# Reaction: id = Myc_ser62_phosphorylation, name = Myc_ser62 phosphorylation

Myc_ser_1=Cell*Facilit_1(k_MS, ERK, Myc, K_MS_1)

# Reaction: id = Myc_thr58_phosphorylation, name = Myc_thr58 phosphorylation

Myc_thr_1=Cell*Facilit_1(k_MT_1, GSK3B, Myc_ser62, K_MT)

# Reaction: id = Myc_degradation, name = Myc degradation

Myc_degra=Cell*dM*Myc

# Reaction: id = Myc_ser62_degradation, name = Myc_ser62 degradation

Myc_ser_2=Cell*dMS*Myc_ser62

# Reaction: id = Myc_thr58_degradation, name = Myc_thr58 degradation

Myc_thr_2=Cell*dMT*Myc_thr58

# Species:   id = Myc, name = Myc, affected by kineticLaw

init Myc=0.0
dMyc/dt=(1/(Cell))*(( 1.0 * Myc_synth) + (-1.0 * Myc_ser_1) + (-1.0 * Myc_degra))

# Species:   id = AKT, name = AKT, affected by kineticLaw

init AKT=0.6
dAKT/dt=(1/(Cell))*((-1.0 * AKT_phosp) + ( 1.0 * AKTp_deph))

# Species:   id = AKTp, name = AKTp, affected by kineticLaw

init AKTp=0.0
dAKTp/dt=(1/(Cell))*(( 1.0 * AKT_phosp) + (-1.0 * AKTp_deph))

# Species:   id = PI3K, name = PI3K
# Warning species is not changed by either rules or reactions
# Species is changed by 3 event(s)
par PI3K=1.0
aux PI3K=PI3K

# Species:   id = GSK3B, name = GSK3B, affected by kineticLaw

init GSK3B=0.6
dGSK3B/dt=(1/(Cell))*((-1.0 * GSK3B_pho) + ( 1.0 * GSK3Bp_de))

# Species:   id = GSK3Bp, name = GSK3Bp, affected by kineticLaw

init GSK3Bp=0.0
dGSK3Bp/dt=(1/(Cell))*(( 1.0 * GSK3B_pho) + (-1.0 * GSK3Bp_de))

# Species:   id = ERK, name = ERK
# Warning species is not changed by either rules or reactions
# Species is changed by 1 event(s)
par ERK=1.0
aux ERK=ERK

# Species:   id = Myc_ser62, name = Myc_ser62, affected by kineticLaw

init Myc_ser62=0.0
dMyc_ser62/dt=(1/(Cell))*(( 1.0 * Myc_ser_1) + (-1.0 * Myc_thr_1) + (-1.0 * Myc_ser_2))

# Species:   id = Myc_thr58, name = Myc_thr58, affected by kineticLaw

init Myc_thr58=0.0
dMyc_thr58/dt=(1/(Cell))*(( 1.0 * Myc_thr_1) + (-1.0 * Myc_thr_2))

# Species:   id = GF, name = GF
# Warning species is not changed by either rules or reactions

par GF=1.0
aux GF=GF

# Species:   id = Myc_total, name = Myc_total, involved in a rule 

# event : erk
erk_1=if (t >= 1) then (1.5) else (0.2)
global 1 {erk_1 - 1.1} {ERK=0.1}

# event : pi3k
pi3k_1=if (t >= 1) then (1.5) else (0.2)
global 1 {pi3k_1 - 1.1} {PI3K=0.1}

# event : pi3k1
pi3k1=if (t >= 4) then (1.5) else (0.2)
global 1 {pi3k1 - 1.1} {PI3K=1}

# event : pi3k2
pi3k2=if (t >= 6) then (1.5) else (0.2)
global 1 {pi3k2 - 1.1} {PI3K=0.1}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

