
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Leloup2003_CircClock_LD_REV-ERBalpha
#
# isDerivedFrom http://identifiers.org/kegg.pathway/hsa04710
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000083
# isDerivedFrom http://identifiers.org/biomodels.db/MODEL4710748444
# isDerivedFrom http://identifiers.org/go/GO:0042752
# isDerivedFrom http://identifiers.org/taxonomy/40674
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000021
# is http://identifiers.org/biomodels.db/MODEL4710748444
# is http://identifiers.org/biomodels.db/BIOMD0000000083
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Parameter:   id =  parameter_0000096, name = LD, defined by a Rule

# Parameter:   id =  parameter_0000097, name = vsp, defined by a Rule

# Parameter:   id =  vmP, name = vmP, constant
par vmP=2.2

# Parameter:   id =  kdmp, name = kdmp, constant
par kdmp=0.02

# Parameter:   id =  vsC, name = vsC, constant
par vsC=2.2

# Parameter:   id =  vmC, name = vmC, constant
par vmC=2.0

# Parameter:   id =  kdmc, name = kdmc, constant
par kdmc=0.02

# Parameter:   id =  vsB, name = vsB, constant
par vsB=1.8

# Parameter:   id =  vmB, name = vmB, constant
par vmB=1.3

# Parameter:   id =  kdmb, name = kdmb, constant
par kdmb=0.02

# Parameter:   id =  ksP, name = ksP, constant
par ksP=1.2

# Parameter:   id =  V1P, name = V1P, constant
par V1P=9.6

# Parameter:   id =  V2P, name = V2P, constant
par V2P=0.6

# Parameter:   id =  k4, name = k4, constant
par k4=0.4

# Parameter:   id =  k3, name = k3, constant
par k3=0.8

# Parameter:   id =  kdn, name = kdn, constant
par kdn=0.02

# Parameter:   id =  ksC, name = ksC, constant
par ksC=3.2

# Parameter:   id =  V1C, name = V1C, constant
par V1C=1.2

# Parameter:   id =  V2C, name = V2C, constant
par V2C=0.2

# Parameter:   id =  kdnC, name = kdnC, constant
par kdnC=0.02

# Parameter:   id =  KmB, name = KmB, constant
par KmB=0.4

# Parameter:   id =  Kp, name = Kp, constant
par Kp=1.006

# Parameter:   id =  Kdp, name = Kdp, constant
par Kdp=0.1

# Parameter:   id =  VdPC, name = VdPC, constant
par VdPC=3.4

# Parameter:   id =  vdCC, name = vdCC, constant
par vdCC=1.4

# Parameter:   id =  Kd, name = Kd, constant
par Kd=0.3

# Parameter:   id =  V1PC, name = V1PC, constant
par V1PC=2.4

# Parameter:   id =  V2PC, name = V2PC, constant
par V2PC=0.2

# Parameter:   id =  k2, name = k2, constant
par k2=0.4

# Parameter:   id =  k1, name = k1, constant
par k1=0.8

# Parameter:   id =  V3PC, name = V3PC, constant
par V3PC=2.4

# Parameter:   id =  V4PC, name = V4PC, constant
par V4PC=0.2

# Parameter:   id =  k7, name = k7, constant
par k7=1.0

# Parameter:   id =  k8, name = k8, constant
par k8=0.2

# Parameter:   id =  vdPCC, name = vdPCC, constant
par vdPCC=1.4

# Parameter:   id =  vdPCN, name = vdPCN, constant
par vdPCN=1.4

# Parameter:   id =  ksB, name = ksB, constant
par ksB=0.32

# Parameter:   id =  V1B, name = V1B, constant
par V1B=1.4

# Parameter:   id =  V2B, name = V2B, constant
par V2B=0.2

# Parameter:   id =  k5, name = k5, constant
par k5=0.8

# Parameter:   id =  k6, name = k6, constant
par k6=0.4

# Parameter:   id =  vdBC, name = vdBC, constant
par vdBC=3.0

# Parameter:   id =  V3B, name = V3B, constant
par V3B=1.4

# Parameter:   id =  V4B, name = V4B, constant
par V4B=0.4

# Parameter:   id =  vdBN, name = vdBN, constant
par vdBN=3.0

# Parameter:   id =  vdIN, name = vdIN, constant
par vdIN=1.6

# Parameter:   id =  vsR, name = vsR, constant
par vsR=1.6

# Parameter:   id =  KAR, name = KAR, constant
par KAR=0.6

# Parameter:   id =  vmR, name = vmR, constant
par vmR=1.6

# Parameter:   id =  kmR, name = kmR, constant
par kmR=0.4

# Parameter:   id =  kdmr, name = kdmr, constant
par kdmr=0.02

# Parameter:   id =  ksR, name = ksR, constant
par ksR=1.7

# Parameter:   id =  k9, name = k9, constant
par k9=0.8

# Parameter:   id =  k10, name = k10, constant
par k10=0.4

# Parameter:   id =  vdRC, name = vdRC, constant
par vdRC=4.4

# Parameter:   id =  vdRN, name = vdRN, constant
par vdRN=0.8

# Parameter:   id =  KAP, name = KAP, constant
par KAP=0.6

# Parameter:   id =  KAC, name = KAC, constant
par KAC=0.6

# Parameter:   id =  KmP, name = KmP, constant
par KmP=0.3

# Parameter:   id =  KmC, name = KmC, constant
par KmC=0.4

# Parameter:   id =  h, name = h, constant
par h=2.0

# Parameter:   id =  m, name = m, constant
par m=2.0

# Parameter:   id =  n, name = n, constant
par n=2.0

# assignmentRule: variable = parameter_0000096
parameter=ceil(sin(pi*t/12+0.001)/2)
aux parameter=parameter

# assignmentRule: variable = parameter_0000097
paramet_1=2.4+(3-2.4)*parameter
aux paramet_1=paramet_1

# Reaction: id = reaction_0, name = Mb synthesized
# Local Parameter:   id =  K, name = K
par K=1.0


reaction_=cell*vsB*K^m/(K^m+Rn^m)

# Reaction: id = reaction_1, name = Mb translated into protein

reactio_1=cell*ksB*Mb

# Reaction: id = reaction_2, name = Mb nonspecific degradation

reactio_2=cell*kdmb*Mb

# Reaction: id = reaction_3, name = Bc phosphorylation

reactio_3=cell*V1B*Bc/(Kp+Bc)

# Reaction: id = reaction_4, name = Bc transfered from cytosolic to nuclear

reactio_4=cell*(k5*Bc-k6*Bn)

# Reaction: id = reaction_5, name = Mc translated into protein

reactio_5=cell*ksC*Mc

# Reaction: id = reaction_6, name = Mc nonspecific degradation

reactio_6=cell*kdmc*Mc

# Reaction: id = reaction_7, name = Cc phosphorylation

reactio_7=cell*V1C*Cc/(Kp+Cc)

# Reaction: id = reaction_8, name = Ccp specific degradation

reactio_8=cell*vdCC*Ccp/(Kd+Ccp)

# Reaction: id = reaction_9, name = Mp synthesis

reactio_9=cell*paramet_1*Bn^n/(KAP^n+Bn^n)

# Reaction: id = reaction_10, name = Mp translated into protein

reacti_10=cell*ksP*Mp

# Reaction: id = reaction_11, name = Pcp specific degradation

reacti_11=cell*VdPC*Pcp/(Kd+Pcp)

# Reaction: id = reaction_12, name = Pc phospholation

reacti_12=cell*V1P*Pc/(Kp+Pc)

# Reaction: id = reaction_13, name = Cc and Pc produce PCc

reacti_13=cell*(k3*Cc*Pc-k4*PCc)

# Reaction: id = reaction_14, name = PCc phospholation

reacti_14=cell*V1PC*PCc/(Kp+PCc)

# Reaction: id = reaction_15, name = PCcp specific degradation

reacti_15=cell*vdPCC*PCcp/(Kd+PCcp)

# Reaction: id = reaction_16, name = PCc transfered into nuclear

reacti_16=cell*(k1*PCc-k2*PCn)

# Reaction: id = reaction_17, name = PCnp nonspecific degradation

reacti_17=cell*kdn*PCnp

# Reaction: id = reaction_18, name = Bcp nonspecific degradation

reacti_18=cell*kdn*Bcp

# Reaction: id = reaction_19, name = Bnp nonspecific degradation

reacti_19=cell*kdn*Bnp

# Reaction: id = reaction_20, name = Mc synthesis

reacti_20=cell*vsC*Bn^n/(KAC^n+Bn^n)

# Reaction: id = reaction_21, name = PCn phospholation

reacti_21=cell*V3PC*PCn/(Kp+PCn)

# Reaction: id = reaction_22, name = Mp nonspecific degradation

reacti_22=cell*kdmp*Mp

# Reaction: id = reaction_23, name = Per_Cry and Clock_Bmal form inactive complex

reacti_23=cell*(k7*PCn*Bn-k8*In)

# Reaction: id = reaction_24, name = Mb specific degradation

reacti_24=cell*vmB*Mb/(KmB+Mb)

# Reaction: id = reaction_25, name = Mc specific degradation

reacti_25=cell*vmC*Mc/(KmC+Mc)

# Reaction: id = reaction_26, name = Mp specific degradation

reacti_26=cell*vmP*Mp/(KmP+Mp)

# Reaction: id = reaction_27, name = Pc nonspecific degradation

reacti_27=cell*kdn*Pc

# Reaction: id = reaction_28, name = Cc nonspecific degradation

reacti_28=cell*kdnC*Cc

# Reaction: id = reaction_29, name = Pcp nonspecific degradation

reacti_29=cell*kdn*Pcp

# Reaction: id = reaction_30, name = Ccp nonspecific degradation

reacti_30=cell*kdn*Ccp

# Reaction: id = reaction_31, name = PCcp nonspecific degradation

reacti_31=cell*kdn*PCcp

# Reaction: id = reaction_32, name = PCc nonspecific degradation

reacti_32=cell*kdn*PCc

# Reaction: id = reaction_33, name = PCnp specific degradation

reacti_33=cell*vdPCN*PCnp/(Kd+PCnp)

# Reaction: id = reaction_34, name = Bc nonspecific degradation

reacti_34=cell*kdn*Bc

# Reaction: id = reaction_35, name = Bcp specific degradation

reacti_35=cell*vdBC*Bcp/(Kd+Bcp)

# Reaction: id = reaction_36, name = Bn phospholation

reacti_36=cell*V3B*Bn/(Kp+Bn)

# Reaction: id = reaction_37, name = Bnp specific degradation

reacti_37=cell*vdBN*Bnp/(Kd+Bnp)

# Reaction: id = reaction_38, name = In nonspecific degration

reacti_38=cell*kdn*In

# Reaction: id = reaction_39, name = In specific degradation

reacti_39=cell*vdIN*In/(Kd+In)

# Reaction: id = reaction_40, name = Bn nonspecific degradation

reacti_40=cell*kdn*Bn

# Reaction: id = reaction_41, name = Bcp dephospholation

reacti_41=cell*V2B*Bcp/(Kdp+Bcp)

# Reaction: id = reaction_42, name = Bnp dephospholation

reacti_42=cell*V4B*Bnp/(Kdp+Bnp)

# Reaction: id = reaction_43, name = Ccp dephospholation

reacti_43=cell*V2C*Ccp/(Kdp+Ccp)

# Reaction: id = reaction_44, name = Pcp dephospholation

reacti_44=cell*V2P*Pcp/(Kdp+Pcp)

# Reaction: id = reaction_45, name = PCnp dephospholation

reacti_45=cell*V4PC*PCnp/(Kdp+PCnp)

# Reaction: id = reaction_46, name = PCn nonspecific degradation

reacti_46=cell*kdn*PCn

# Reaction: id = reaction_47, name = PCcp dephospholation

reacti_47=cell*V2PC*PCcp/(Kdp+PCcp)

# Reaction: id = reaction_48, name = Mr synthesized

reacti_48=cell*vsR*Bn^h/(KAR^h+Bn^h)

# Reaction: id = reaction_49, name = Mr nonspecific degradation

reacti_49=cell*kdmr*Mr

# Reaction: id = reaction_50, name = Mr specific degradation

reacti_50=cell*vmR*Mr/(kmR+Mr)

# Reaction: id = reaction_51, name = Mr translated into protein

reacti_51=cell*ksR*Mr

# Reaction: id = reaction_52, name = Rc transfered into nuclear

reacti_52=cell*(k9*Rc-k10*Rn)

# Reaction: id = reaction_53, name = Rc specific degradation

reacti_53=cell*vdRC*Rc/(Kd+Rc)

# Reaction: id = reaction_54, name = Rc nonspecific degradation

reacti_54=cell*kdn*Rc

# Reaction: id = reaction_55, name = Rn specific degradation

reacti_55=cell*vdRN*Rn/(Kd+Rn)

# Reaction: id = reaction_56, name = Rn nonspecific degradation

reacti_56=cell*kdn*Rn

# Species:   id = Mb, name = Mb, affected by kineticLaw

init Mb=0.0
dMb/dt=(1/(cell))*(( 1.0 * reaction_) + (-1.0 * reactio_2) + (-1.0 * reacti_24))

# Species:   id = Bc, name = Bc, affected by kineticLaw

init Bc=0.0
dBc/dt=(1/(cell))*(( 1.0 * reactio_1) + (-1.0 * reactio_3) + (-1.0 * reactio_4) + (-1.0 * reacti_34) + ( 1.0 * reacti_41))

# Species:   id = Bcp, name = Bcp, affected by kineticLaw

init Bcp=0.0
dBcp/dt=(1/(cell))*(( 1.0 * reactio_3) + (-1.0 * reacti_18) + (-1.0 * reacti_35) + (-1.0 * reacti_41))

# Species:   id = Bn, name = Bn, affected by kineticLaw

init Bn=0.0
dBn/dt=(1/(cell))*(( 1.0 * reactio_4) + (-1.0 * reacti_23) + (-1.0 * reacti_36) + (-1.0 * reacti_40) + ( 1.0 * reacti_42))

# Species:   id = Cc, name = Cc, affected by kineticLaw

init Cc=0.0
dCc/dt=(1/(cell))*(( 1.0 * reactio_5) + (-1.0 * reactio_7) + (-1.0 * reacti_13) + (-1.0 * reacti_28) + ( 1.0 * reacti_43))

# Species:   id = Mc, name = Mc, affected by kineticLaw

init Mc=0.0
dMc/dt=(1/(cell))*((-1.0 * reactio_6) + ( 1.0 * reacti_20) + (-1.0 * reacti_25))

# Species:   id = Ccp, name = Ccp, affected by kineticLaw

init Ccp=0.0
dCcp/dt=(1/(cell))*(( 1.0 * reactio_7) + (-1.0 * reactio_8) + (-1.0 * reacti_30) + (-1.0 * reacti_43))

# Species:   id = Mp, name = Mp, affected by kineticLaw

init Mp=0.0
dMp/dt=(1/(cell))*(( 1.0 * reactio_9) + (-1.0 * reacti_22) + (-1.0 * reacti_26))

# Species:   id = Pc, name = Pc, affected by kineticLaw

init Pc=0.0
dPc/dt=(1/(cell))*(( 1.0 * reacti_10) + (-1.0 * reacti_12) + (-1.0 * reacti_13) + (-1.0 * reacti_27) + ( 1.0 * reacti_44))

# Species:   id = Pcp, name = Pcp, affected by kineticLaw

init Pcp=0.0
dPcp/dt=(1/(cell))*((-1.0 * reacti_11) + ( 1.0 * reacti_12) + (-1.0 * reacti_29) + (-1.0 * reacti_44))

# Species:   id = PCc, name = PCc, affected by kineticLaw

init PCc=0.0
dPCc/dt=(1/(cell))*(( 1.0 * reacti_13) + (-1.0 * reacti_14) + (-1.0 * reacti_16) + (-1.0 * reacti_32) + ( 1.0 * reacti_47))

# Species:   id = PCcp, name = PCcp, affected by kineticLaw

init PCcp=0.0
dPCcp/dt=(1/(cell))*(( 1.0 * reacti_14) + (-1.0 * reacti_15) + (-1.0 * reacti_31) + (-1.0 * reacti_47))

# Species:   id = PCn, name = PCn, affected by kineticLaw

init PCn=0.0
dPCn/dt=(1/(cell))*(( 1.0 * reacti_16) + (-1.0 * reacti_21) + (-1.0 * reacti_23) + ( 1.0 * reacti_45) + (-1.0 * reacti_46))

# Species:   id = Bnp, name = Bnp, affected by kineticLaw

init Bnp=0.0
dBnp/dt=(1/(cell))*((-1.0 * reacti_19) + ( 1.0 * reacti_36) + (-1.0 * reacti_37) + (-1.0 * reacti_42))

# Species:   id = PCnp, name = PCnp, affected by kineticLaw

init PCnp=0.0
dPCnp/dt=(1/(cell))*((-1.0 * reacti_17) + ( 1.0 * reacti_21) + (-1.0 * reacti_33) + (-1.0 * reacti_45))

# Species:   id = In, name = In, affected by kineticLaw

init In=0.0
dIn/dt=(1/(cell))*(( 1.0 * reacti_23) + (-1.0 * reacti_38) + (-1.0 * reacti_39))

# Species:   id = Mr, name = Mr, affected by kineticLaw

init Mr=0.0
dMr/dt=(1/(cell))*(( 1.0 * reacti_48) + (-1.0 * reacti_49) + (-1.0 * reacti_50))

# Species:   id = Rc, name = Rc, affected by kineticLaw

init Rc=0.0
dRc/dt=(1/(cell))*(( 1.0 * reacti_51) + (-1.0 * reacti_52) + (-1.0 * reacti_53) + (-1.0 * reacti_54))

# Species:   id = Rn, name = Rn, affected by kineticLaw

init Rn=0.0
dRn/dt=(1/(cell))*(( 1.0 * reacti_52) + (-1.0 * reacti_55) + (-1.0 * reacti_56))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

