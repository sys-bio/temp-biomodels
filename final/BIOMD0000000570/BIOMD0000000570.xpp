
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Aubert2002 - Coupling between Brain electrical activity, Metabolism and Hemodynamics
#
# is http://identifiers.org/biomodels.db/MODEL1503020000
# is http://identifiers.org/biomodels.db/BIOMD0000000570
# isDescribedBy http://identifiers.org/pubmed/12414257
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = v_pump, name = v_pump
v_pump(S_V,k_pump,ATP,NA,Km_pump)=(S_V*k_pump*ATP*NA/(1+ATP/Km_pump))


# FunctionDefinition id = function_1, name = v_Leak-Na
function_(S_V,gNA,F,RT_F,Na_e,Na,Vm)=(S_V*gNA/F*(RT_F*log(Na_e/Na)-Vm))


# FunctionDefinition id = v_GLC_m, name = v_GLC_m
v_GLC_m(Tmax,GLC_c,Kt_GLC,GLC_i)=(Tmax*(GLC_c/(GLC_c+Kt_GLC)-GLC_i/(GLC_i+Kt_GLC)))


# FunctionDefinition id = function_2, name = v_HK-PFK
functio_1(ATP,GLC_i,Kg,KI_ATP,nH,kHK_PFK)=(kHK_PFK*ATP*GLC_i/(GLC_i+Kg)/(1+(ATP/KI_ATP)^nH))


# FunctionDefinition id = v_PGK, name = v_PGK
v_PGK(kPGK,GAP,ADP,NAD,NADH)=(kPGK*GAP*ADP*NAD/NADH)


# FunctionDefinition id = v_LAC_m, name = v_LAC_m
v_LAC_m(Tmax,LAC_i,Kt_LAC,LAC_c)=(Tmax*(LAC_i/(LAC_i+Kt_LAC)-LAC_c/(LAC_c+Kt_LAC)))


# FunctionDefinition id = v_O2_m, name = v_O2_m
v_O2_m(PS_V,KO2,HbOP,O2_c,nh,O2_i)=(PS_V*(KO2*(HbOP/O2_c-1)^((-1)/nh)-O2_i))


# FunctionDefinition id = v_O2_c, name = v_O2_c
v_O2_c(F_in,V_cap,O2_a,O2_c)=(2*F_in/V_cap*(O2_a-O2_c))


# FunctionDefinition id = v_GLC_c, name = v_GLC_c
v_GLC_c(F_in,V_cap,GLC_a,GLC_c)=(2*F_in/V_cap*(GLC_a-GLC_c))


# FunctionDefinition id = v_LAC_c, name = v_LAC_c
v_LAC_c(F_in,V_cap,LAC_a,LAC_c)=(2*F_in/V_cap*(LAC_a-LAC_c))


# FunctionDefinition id = v_dHb_in, name = v_dHb_in
v_dHb_in(F_in,O2_a,O2_c)=(F_in*2*(O2_a-O2_c))


# FunctionDefinition id = v_dHb_out, name = v_dHb_out
v_dHb_out(F_out,dHb,V_v)=(F_out*dHb/V_v)


# Compartment: id = compartment_1, name = Tissue, constant
par compartme=1.0

# Compartment: id = compartment_2, name = Arteries, constant
par compart_1=1.0

# Compartment: id = compartment_3, name = Capillaries, constant
par compart_2=1.0
# Compartment: id = compartment_4, name = Venous balloon, defined by a Rule

# Parameter:   id =  parameter_1, name = S/V, constant
par parameter=90000.0

# Parameter:   id =  parameter_2, name = gNa, constant
par paramet_1=0.0039

# Parameter:   id =  parameter_3, name = F, constant
par paramet_2=96500.0

# Parameter:   id =  parameter_4, name = RT/F, constant
par paramet_3=26.73

# Parameter:   id =  parameter_5, name = Vm, constant
par paramet_4=-70.0

# Parameter:   id =  parameter_6, name = Na_extracellular, constant
par paramet_5=150.0

# Parameter:   id =  parameter_7, name = ATP, defined by a Rule

# Parameter:   id =  parameter_8, name = k_pump, constant
par paramet_7=2.9E-7

# Parameter:   id =  parameter_9, name = Km_pump, constant
par paramet_8=0.5

# Parameter:   id =  parameter_10, name = ADP, defined by a Rule

# Parameter:   id =  parameter_11, name = qAK, constant
par parame_10=0.92

# Parameter:   id =  parameter_12, name = A, constant
par parame_11=2.212

# Parameter:   id =  parameter_13, name = AMP, defined by a Rule

# Parameter:   id =  parameter_14, name = Tmax,GLC, constant
par parame_13=0.0476

# Parameter:   id =  parameter_15, name = Kt,GLC, constant
par parame_14=9.0

# Parameter:   id =  parameter_16, name = kHK-PFK, constant
par parame_15=0.12

# Parameter:   id =  parameter_17, name = KI,ATP, constant
par parame_16=1.0

# Parameter:   id =  parameter_18, name = nH, constant
par parame_17=4.0

# Parameter:   id =  parameter_19, name = Kg, constant
par parame_18=0.05

# Parameter:   id =  parameter_20, name = kPGK, constant
par parame_19=42.6

# Parameter:   id =  parameter_21, name = N, constant
par parame_20=0.212

# Parameter:   id =  parameter_22, name = NAD+, defined by a Rule

# Parameter:   id =  parameter_23, name = kPK, constant
par parame_22=86.7

# Parameter:   id =  parameter_24, name = k+LDH, constant
par parame_23=2000.0

# Parameter:   id =  parameter_25, name = k-LDH, constant
par parame_24=44.8

# Parameter:   id =  parameter_26, name = Tmax,LAC, constant
par parame_25=0.00628

# Parameter:   id =  parameter_27, name = Kt,LAC, constant
par parame_26=0.5

# Parameter:   id =  parameter_28, name = vATPase, constant
par parame_27=0.149

# Parameter:   id =  parameter_29, name = k+CK, constant
par parame_28=3666.0

# Parameter:   id =  parameter_30, name = k-CK, constant
par parame_29=20.0

# Parameter:   id =  parameter_31, name = C, constant
par parame_30=10.0

# Parameter:   id =  parameter_32, name = PS/V, constant
par parame_31=1.6

# Parameter:   id =  parameter_33, name = KO2, constant
par parame_32=0.0361

# Parameter:   id =  parameter_34, name = Hb*OP, constant
par parame_33=8.6

# Parameter:   id =  parameter_35, name = nh, constant
par parame_34=2.73

# Parameter:   id =  parameter_36, name = F0, constant
par parame_35=0.012

# Parameter:   id =  parameter_37, name = F_in, defined by a Rule

# Parameter:   id =  parameter_38, name = V_cap, constant
par parame_37=0.0055

# Parameter:   id =  parameter_47, name = v_Mito, constant
par parame_38=0.0192

# Parameter:   id =  dAMP_dATP, name = dAMP/dATP, defined by a Rule

# Parameter:   id =  v_Mito_H3, name = v_Mito_H3, defined by a Rule

# Parameter:   id =  V_max_Mito, name = V_max_Mito, constant
par V_max_Mit=0.05233

# Parameter:   id =  Km_Mito, name = Km,Mito, constant
par Km_Mito=0.05

# Parameter:   id =  KI_Mito, name = KI,Mito, constant
par KI_Mito=183.3

# Parameter:   id =  n_Mito, name = n_Mito, constant
par n_Mito=0.1

# Parameter:   id =  K_O2_Mito, name = K_O2_Mito, constant
par K_O2_Mito=0.001

# Parameter:   id =  is_maximum, name = is_maximum
par is_maximu=0.0

# Parameter:   id =  is_rising, name = is_rising
par is_rising=1.0

# Parameter:   id =  is_falling, name = is_falling
par is_fallin=0.0

# Parameter:   id =  slope_up, name = slope_up, defined by a Rule

# Parameter:   id =  alpha_F_in, name = alpha_F_in, constant
par alpha_F_i=0.5

# Parameter:   id =  maximum, name = maximum, defined by a Rule

# Parameter:   id =  t_on, name = t_on, constant
par t_on=5.0

# Parameter:   id =  t_end, name = t_end, constant
par t_end=360.0

# Parameter:   id =  slope_down, name = slope_down, defined by a Rule

# Parameter:   id =  F_out, name = F_out, defined by a Rule

# Parameter:   id =  v_stim_constant, name = v_stim_constant
par v_stim_co=0.23

# Parameter:   id =  rCBF, name = rCBF, defined by a Rule

# Parameter:   id =  rCMRO2, name = rCMRO2, defined by a Rule

# Parameter:   id =  rVv, name = rVv, defined by a Rule

# Parameter:   id =  O2c_bar, name = O2c_bar, defined by a Rule

# Parameter:   id =  ratioO2c_bar, name = ratioO2c_bar, defined by a Rule

# Parameter:   id =  Compartment_7, name = Initial for Venous balloon, constant
par Compart_4=0.0237

# Parameter:   id =  ModelValue_35, name = Initial for F0, constant
par ModelValu=0.012

# Parameter:   id =  ModelValue_60, name = Initial for O2c_bar, constant
par ModelVa_1=5.68

# Parameter:   id =  ModelValue_50, name = Initial for alpha_F_in, constant
par ModelVa_2=0.5

# Parameter:   id =  ModelValue_51, name = Initial for maximum, constant
par ModelVa_3=0.006

# Parameter:   id =  ModelValue_53, name = Initial for t_end, constant
par ModelVa_4=360.0

# Parameter:   id =  ModelValue_52, name = Initial for t_on, constant
par ModelVa_5=5.0

# assignmentRule: variable = species_2
species_2=paramet_6*compartme
aux species_2=species_2

# assignmentRule: variable = species_12
specie_12=(parame_30-specie_11/compartme)*compartme
aux specie_12=specie_12

# assignmentRule: variable = parameter_10
paramet_9=paramet_6/2*(-parame_10+(parame_10^2+4*parame_10*(parame_11/paramet_6-1))^0.5)
aux paramet_9=paramet_9

# assignmentRule: variable = species_3
species_3=paramet_9*compartme
aux species_3=species_3

# assignmentRule: variable = parameter_13
parame_12=parame_11-paramet_6-paramet_9
aux parame_12=parame_12

# assignmentRule: variable = parameter_22
parame_21=parame_20-species_7/compartme
aux parame_21=parame_21

# assignmentRule: variable = species_6
species_6=parame_21*compartme
aux species_6=species_6

# assignmentRule: variable = dAMP_dATP
dAMP_dATP=-1+parame_10/2-1/2*(parame_10^2+4*parame_10*(parame_11/paramet_6-1))^(1/2)+parame_10*parame_11/(paramet_6*(parame_10^2+4*parame_10*(parame_11/paramet_6-1))^(1/2))
aux dAMP_dATP=dAMP_dATP

# assignmentRule: variable = v_Mito_H3
v_Mito_H3=V_max_Mit*species_8/compartme/(Km_Mito+species_8/compartme)*1/(1+(paramet_6/(paramet_9*KI_Mito))^n_Mito)*specie_13/compartme/(K_O2_Mito+specie_13/compartme)
aux v_Mito_H3=v_Mito_H3

# assignmentRule: variable = maximum
maximum=ModelValu*ModelVa_2
aux maximum=maximum

# assignmentRule: variable = slope_up
slope_up=ModelVa_3/ModelVa_5*t
aux slope_up=slope_up

# assignmentRule: variable = slope_down
slope_dow=maximum*(t_on+t_end-t)/t_on
aux slope_dow=slope_dow

# assignmentRule: variable = parameter_37
parame_36=parame_35+is_rising*slope_up+is_maximu*maximum+is_fallin*slope_dow
aux parame_36=parame_36

# assignmentRule: variable = F_out
F_out=parame_35*((compart_3/Compart_4)^2+(compart_3/Compart_4)^(-0.5)*35*1/Compart_4*parame_36)/(1+parame_35*(compart_3/Compart_4)^(-0.5)*35*1/Compart_4)
aux F_out=F_out

# assignmentRule: variable = rCBF
rCBF=parame_36/ModelValu
aux rCBF=rCBF

# assignmentRule: variable = rCMRO2
rCMRO2=mitochond/0.0192
aux rCMRO2=rCMRO2

# assignmentRule: variable = rVv
rVv=compart_3/Compart_4
aux rVv=rVv

# assignmentRule: variable = O2c_bar
O2c_bar=2*specie_19/compart_2-specie_14/compart_1
aux O2c_bar=O2c_bar

# assignmentRule: variable = ratioO2c_bar
ratioO2c_=O2c_bar/ModelVa_1
aux ratioO2c_=ratioO2c_

# rateRule: variable = compartment_4
init compart_3=0.0237
dcompart_3/dt=parame_36-F_out

# rateRule: variable = parameter_7
init paramet_6=2.2
dparamet_6/dt=((-2)*reactio_3+reactio_4+reactio_5-reactio_1+15*mitochond+reactio_8-ATPases)*(1-dAMP_dATP)^(-1)

# Reaction: id = reaction_1, name = Sodium leak

reaction_=compartme*function_(parameter, paramet_1, paramet_2, paramet_3, paramet_5, species_1/compartme, paramet_4)

# Reaction: id = reaction_2, name = Na/K - pump

reactio_1=compartme*v_pump(parameter, paramet_7, species_2/compartme, species_1/compartme, paramet_8)

# Reaction: id = reaction_3, name = Blood-brain transport of glucose

reactio_2=v_GLC_m(parame_13, specie_17/compart_2, parame_14, species_4/compartme)

# Reaction: id = reaction_4, name = Hexokinase-phosphofructokinase system

reactio_3=compartme*functio_1(species_2/compartme, species_4/compartme, parame_18, parame_16, parame_17, parame_15)

# Reaction: id = reaction_5, name = Phosphoglycerate kinase

reactio_4=compartme*v_PGK(parame_19, species_5/compartme, species_3/compartme, species_6/compartme, species_7/compartme)

# Reaction: id = reaction_6, name = Pyruvate kinase

reactio_5=parame_22*species_3*species_9/compartme

# Reaction: id = reaction_7, name = Lactate dehydrogenase

reactio_6=compartme*(parame_23*species_8/compartme*species_7/compartme-parame_24*specie_10/compartme*species_6/compartme)

# Reaction: id = reaction_8, name = Blood-brain transport of lactate

reactio_7=v_LAC_m(parame_25, specie_10/compartme, parame_26, specie_18/compart_2)

# Reaction: id = reaction_9, name = Creatine Kinase

reactio_8=compartme*(parame_28*specie_11/compartme*species_3/compartme-parame_29*specie_12/compartme*species_2/compartme)

# Reaction: id = reaction_10, name = Blood-brain transport of oxygen

reactio_9=v_O2_m(parame_31, parame_32, parame_33, specie_19/compart_2, parame_34, specie_13/compartme)

# Reaction: id = reaction_11, name = Blood flow contribution to O2 variation

reacti_10=v_O2_c(parame_36, parame_37, specie_14/compart_1, specie_19/compart_2)

# Reaction: id = reaction_12, name = Blood flow contribution to GLC_c variation

reacti_11=v_GLC_c(parame_36, parame_37, specie_15/compart_1, specie_17/compart_2)

# Reaction: id = reaction_13, name = Blood flow contribution to LAC_c variation

reacti_12=v_LAC_c(parame_36, parame_37, specie_16/compart_1, specie_18/compart_2)

# Reaction: id = mitochondrial_respiration, name = mitochondrial respiration

mitochond=compartme*Constant_(v_Mito_H3)

# Reaction: id = ATPases, name = ATPases
# Local Parameter:   id =  v, name = v
par v=0.149


ATPases=compartme*Constant_(v)

# Reaction: id = Na__inflow_after_stimulation, name = Na+ inflow after stimulation

Na__inflo=compartme*Constant_(v_stim_co)

# Reaction: id = inflow_of_dHb, name = inflow of dHb

inflow_of=compart_2*v_dHb_in(parame_36, specie_14/compart_1, specie_19/compart_2)

# Reaction: id = outflow_of_dHb, name = outflow of dHb

outflow_o=compart_2*v_dHb_out(F_out, dHb/compart_2, compart_3)

# Species:   id = species_1, name = Na+, affected by kineticLaw

init species_1=15.0
dspecies_1/dt=( 1.0 * reaction_) + (-3.0 * reactio_1) + ( 1.0 * Na__inflo)

# Species:   id = species_2, name = ATP, involved in a rule 

# Species:   id = species_3, name = ADP, involved in a rule 

# Species:   id = species_4, name = GLC, affected by kineticLaw

init species_4=1.2
dspecies_4/dt=( 1.0 * reactio_2) + (-1.0 * reactio_3)

# Species:   id = species_5, name = GAP, affected by kineticLaw

init species_5=0.0057
dspecies_5/dt=( 2.0 * reactio_3) + (-1.0 * reactio_4)

# Species:   id = species_6, name = NAD+, involved in a rule 

# Species:   id = species_7, name = NADH, affected by kineticLaw

init species_7=0.026
dspecies_7/dt=( 1.0 * reactio_4) + (-1.0 * reactio_6) + (-1.0 * mitochond)

# Species:   id = species_8, name = PYR, affected by kineticLaw

init species_8=0.16
dspecies_8/dt=( 1.0 * reactio_5) + (-1.0 * reactio_6) + (-1.0 * mitochond)

# Species:   id = species_9, name = PEP, affected by kineticLaw

init species_9=0.02
dspecies_9/dt=( 1.0 * reactio_4) + (-1.0 * reactio_5)

# Species:   id = species_10, name = LAC, affected by kineticLaw

par specie_10=1.0
aux specie_10=specie_10
dspecie_10/dt=( 1.0 * reactio_6) + (-1.0 * reactio_7)

# Species:   id = species_11, name = PCr, affected by kineticLaw

par specie_11=5.0
aux specie_11=specie_11
dspecie_11/dt=(-1.0 * reactio_8)

# Species:   id = species_12, name = Cr, involved in a rule 

# Species:   id = species_13, name = O2, affected by kineticLaw

par specie_13=0.0262
aux specie_13=specie_13
dspecie_13/dt=( 1.0 * reactio_9) + (-3.0 * mitochond)

# Species:   id = species_14, name = O2, constant
par specie_14=8.34


# Species:   id = species_15, name = GLC, constant
par specie_15=4.8


# Species:   id = species_16, name = LAC, constant
par specie_16=0.313


# Species:   id = species_17, name = GLC, affected by kineticLaw

par specie_17=4.56
aux specie_17=specie_17
dspecie_17/dt=(-100.0 * reactio_2) + ( 1.0 * reacti_11)

# Species:   id = species_18, name = LAC, affected by kineticLaw

par specie_18=0.35
aux specie_18=specie_18
dspecie_18/dt=( 100.0 * reactio_7) + ( 1.0 * reacti_12)

# Species:   id = species_19, name = O2, affected by kineticLaw

par specie_19=7.01
aux specie_19=specie_19
dspecie_19/dt=(-100.0 * reactio_9) + ( 1.0 * reacti_10)

# Species:   id = dHb, name = dHb, affected by kineticLaw

init dHb=0.0630000000000001
ddHb/dt=( 1.0 * inflow_of) + (-1.0 * outflow_o)

# event : from_increase_to_stable
from_incr=if (t == ModelVa_5) then (1.5) else (0.2)
global 1 {from_incr - 1.1} {is_maximum=1;is_rising=0}

# event : from_stable_to_decrease__end_of_stimulation
from_stab=if (t == ModelVa_4) then (1.5) else (0.2)
global 1 {from_stab - 1.1} {is_maximum=0;is_falling=1;v_stim_constant=0}

# event : from_decrease_to_at_rest
from_decr=if (t == (ModelVa_4+ModelVa_5)) then (1.5) else (0.2)
global 1 {from_decr - 1.1} {is_falling=0}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

