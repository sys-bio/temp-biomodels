
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Bindschadler2001_coupled_Ca_oscillators
#
# is http://identifiers.org/biomodels.db/MODEL9107330008
# is http://identifiers.org/biomodels.db/BIOMD0000000058
# isDescribedBy http://identifiers.org/pubmed/12779457
# isDerivedFrom http://identifiers.org/biomodels.db/MODEL9200487367
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  Phi1_c1, name = Phi1_c1, defined by a Rule

# Parameter:   id =  r2, name = r2, constant
par r2=100.0

# Parameter:   id =  R1, name = R1, constant
par R1=6.0

# Parameter:   id =  Phi_minus1_c1, name = Phi_minus1_c1, defined by a Rule

# Parameter:   id =  k1, name = k1, constant
par k1=44.0

# Parameter:   id =  R3, name = R3, constant
par R3=50.0

# Parameter:   id =  Phi2_c1, name = Phi2_c1, defined by a Rule

# Parameter:   id =  k2, name = k2, constant
par k2=26.5

# Parameter:   id =  r4, name = r4, constant
par r4=20.0

# Parameter:   id =  Phi3_c1, name = Phi3_c1, defined by a Rule

# Parameter:   id =  k3, name = k3, constant
par k3=1.6

# Parameter:   id =  R5, name = R5, constant
par R5=1.6

# Parameter:   id =  Phi1_c2, name = Phi1_c2, defined by a Rule

# Parameter:   id =  Phi_minus1_c2, name = Phi_minus1_c2, defined by a Rule

# Parameter:   id =  Phi2_c2, name = Phi2_c2, defined by a Rule

# Parameter:   id =  Phi3_c2, name = Phi3_c2, defined by a Rule

# assignmentRule: variable = Phi1_c1
Phi1_c1=r2*c1/(R1+c1)
aux Phi1_c1=Phi1_c1

# assignmentRule: variable = Phi_minus1_c1
Phi_minus=k1/(R3+c1)
aux Phi_minus=Phi_minus

# assignmentRule: variable = Phi2_c1
Phi2_c1=(k2+r4*c1)/(R3+c1)
aux Phi2_c1=Phi2_c1

# assignmentRule: variable = Phi3_c1
Phi3_c1=k3/(R5+c1)
aux Phi3_c1=Phi3_c1

# assignmentRule: variable = Phi1_c2
Phi1_c2=r2*c2/(R1+c2)
aux Phi1_c2=Phi1_c2

# assignmentRule: variable = Phi_minus1_c2
Phi_min_1=k1/(R3+c2)
aux Phi_min_1=Phi_min_1

# assignmentRule: variable = Phi2_c2
Phi2_c2=(k2+r4*c2)/(R3+c2)
aux Phi2_c2=Phi2_c2

# assignmentRule: variable = Phi3_c2
Phi3_c2=k3/(R5+c2)
aux Phi3_c2=Phi3_c2

# Reaction: id = Jreceptor_Cell1, name = IP3R mediated Ca release Cell1
# Local Parameter:   id =  kf, name = kf
par kf=28.0

# Local Parameter:   id =  p, name = p
par p=0.2778


Jreceptor=compartme*kf*(p*h1*Phi1_c1/(Phi1_c1*p+Phi_minus))^4

# Reaction: id = Jpump_Cell1, name = ATPase pump mediated Ca efflux Cell1
# Local Parameter:   id =  Vp, name = Vp
par Vp=1.2

# Local Parameter:   id =  Kp, name = Kp
par Kp=0.18


Jpump_Cel=compartme*Vp*c1^2/(Kp^2+c1^2)

# Reaction: id = Jleak_Cell1, name = IP3R independent Ca release Cell1
# Local Parameter:   id =  Jleak, name = Jleak
par Jleak=0.2


Jleak_Cel=compartme*Jleak

# Reaction: id = Inactivated_to_S_Cell1, name = Inactivated to Shut state transition Cell1

Inactivat=compartme*Phi3_c1*(1-h1)

# Reaction: id = Open_to_Inactivated_Cell1, name = Open to Inactivated state transition Cell1
# Local Parameter:   id =  p, name = p
par p_1=0.2778


Open_to_I=compartme*Phi1_c1*Phi2_c1*h1*p_1/(Phi1_c1*p_1+Phi_minus)

# Reaction: id = Jreceptor_Cell2, name = IP3R mediated Ca release Cell2
# Local Parameter:   id =  kf, name = kf
par kf_1=28.0

# Local Parameter:   id =  p, name = p
par p_1_2=0.2778


Jrecept_1=compartme*kf_1*(p_1_2*h2*Phi1_c2/(Phi1_c2*p_1_2+Phi_min_1))^4

# Reaction: id = Jpump_Cell2, name = ATPase pump mediated Ca efflux Cell2
# Local Parameter:   id =  Vp, name = Vp
par Vp_1=1.2

# Local Parameter:   id =  Kp, name = Kp
par Kp_1=0.18


Jpump_C_1=compartme*Vp_1*c2^2/(Kp_1^2+c2^2)

# Reaction: id = Jleak_Cell2, name = IP3R independent Ca release Cell2
# Local Parameter:   id =  Jleak, name = Jleak
par Jleak_1=0.2


Jleak_C_1=compartme*Jleak_1

# Reaction: id = Inactivated_to_S_Cell2, name = Inactivated to Shut state transition Cell2

Inactiv_1=compartme*Phi3_c2*(1-h2)

# Reaction: id = Open_to_Inactivated_Cell2, name = Open to Inactivated state transition Cell2
# Local Parameter:   id =  p, name = p
par p_1_2_3=0.2778


Open_to_1=compartme*Phi1_c2*Phi2_c2*h2*p_1_2_3/(Phi1_c2*p_1_2_3+Phi_min_1)

# Reaction: id = diffusion, name = Diffusion of Ca between cells
# Local Parameter:   id =  D, name = D
par D=0.01


diffusion=compartme*D*(c2-c1)

# Species:   id = c1, name = Calcium ion Cell1, affected by kineticLaw

init c1=0.3
dc1/dt=(1/(compartme))*(( 1.0 * Jreceptor) + (-1.0 * Jpump_Cel) + ( 1.0 * Jleak_Cel) + ( 1.0 * diffusion))

# Species:   id = h1, name = Receptor fraction Cell1, affected by kineticLaw

init h1=0.8
dh1/dt=(1/(compartme))*(( 1.0 * Inactivat) + (-1.0 * Open_to_I))

# Species:   id = c2, name = Calcium ion Cell2, affected by kineticLaw

init c2=0.1
dc2/dt=(1/(compartme))*(( 1.0 * Jrecept_1) + (-1.0 * Jpump_C_1) + ( 1.0 * Jleak_C_1) + (-1.0 * diffusion))

# Species:   id = h2, name = Receptor fraction Cell2, affected by kineticLaw

init h2=0.1
dh2/dt=(1/(compartme))*(( 1.0 * Inactiv_1) + (-1.0 * Open_to_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

