
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Arnold2011_Poolman2000_CalvinCycle_Starch
#
# is http://identifiers.org/biomodels.db/MODEL1109270007
# is http://identifiers.org/biomodels.db/BIOMD0000000391
# isDescribedBy http://identifiers.org/pubmed/22001849
# is http://identifiers.org/go/GO:0019253
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_2, name = MM s1 + reg 2*c (FBPase)
function_(Vm,S,K,R1,KR1,R2,KR2)=(Vm*S/(S+K*(1+R1/KR1+R2/KR2)))


# FunctionDefinition id = function_7, name = MM s1 + reg A,3*c (TPT)
functio_1(Vm,S,KA,A,K,R1,KR1,R2,KR2,R3,KR3)=(Vm*S/(S*(1+KA/A)+K*(1+(1+KA/A)*(R1/KR1+R2/KR2+R3/KR3))))


# FunctionDefinition id = function_4, name = MM s2 + reg 3*c-s1,1*m-s2 (Ru5P kinase)
functio_2(Vm,S1,S2,K1,R1,KR1,R2,KR2,R3,KR3,R4,KR41,K2,KR42)=(Vm*S1*S2/((S1+K1*(1+R1/KR1+R2/KR2+R3/KR3))*(S2*(1+R4/KR41)+K2*(1+R4/KR42))))


# FunctionDefinition id = function_6, name = MM s2 - reg (ATP synth)
functio_3(Vm,s1,s2,K1,K2)=(Vm*s1*s2/((s1+K1)*(s2+K2)))


# FunctionDefinition id = function_1, name = MM s1 + reg 5*c (RuBisCO)
functio_4(Vm,S,K,R1,KR1,R2,KR2,R3,KR3,R4,KR4,R5,KR5)=(Vm*S/(S+K*(1+R1/KR1+R2/KR2+R3/KR3+R4/KR4+R5/KR5)))


# FunctionDefinition id = function_3, name = MM s1 + reg 1*c (SBPase, starch phos)
functio_5(Vm,S,K,R1,KR1)=(Vm*S/(S+K*(1+R1/KR1)))


# FunctionDefinition id = function_5, name = starch synthase
functio_6(Vm,S1,S2,K1,K2,R1,KR1,R2,KA1,A1,KA2,A2,KA3,A3)=(Vm*S1*S2/((S1+K1)*(1+R1/KR1)*(S2+K2*(1+K2*R2/(KA1*A1+KA2*A2+KA3*A3)))))


# Compartment: id = chloroplast, name = chloroplast, constant
par chloropla=1.0

# Compartment: id = cytosol, name = cytosol, constant
par cytosol=1.0

# assignmentRule: variable = Pi
Pi_ren=15-2*(RuBP+DPGA+FBP+SBP)-(PGA+GAP+DHAP+F6P+E4P+S7P+X5P+R5P+Ru5P+G6P+G1P+ATP)
aux Pi_ren=Pi_ren

# assignmentRule: variable = ADP
ADP=1.5-ATP
aux ADP=ADP

# Reaction: id = RuBisCO, name = RuBisCo
# Local Parameter:   id =  Vm, name = Vm
par Vm=340.0

# Local Parameter:   id =  K, name = K
par K=0.02

# Local Parameter:   id =  KR1, name = KR1
par KR1=0.84

# Local Parameter:   id =  KR2, name = KR2
par KR2=0.04

# Local Parameter:   id =  KR3, name = KR3
par KR3=0.0075

# Local Parameter:   id =  KR4, name = KR4
par KR4=0.9

# Local Parameter:   id =  KR5, name = KR5
par KR5=0.07


RuBisCO=chloropla*functio_4(Vm, RuBP, K, PGA, KR1, FBP, KR2, SBP, KR3, Pi_ren, KR4, NADPH, KR5)

# Reaction: id = PGA_K, name = PGA kinase
# Local Parameter:   id =  k1, name = k1
par k1=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2=1.6129E12


PGA_K=chloropla*(k1*PGA*ATP-k2*DPGA*ADP)

# Reaction: id = GAP_DH, name = GAP dehydrogenase
# Local Parameter:   id =  k1, name = k1
par k1_1=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1=31.25


GAP_DH=chloropla*(k1_1*DPGA*NADPH*H-k2_1*GAP*NADP*Pi_ren)

# Reaction: id = TP_I, name = TP isomerase
# Local Parameter:   id =  k1, name = k1
par k1_1_2=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1_2=2.2727E7


TP_I=chloropla*(k1_1_2*GAP-k2_1_2*DHAP)

# Reaction: id = FBP_A, name = FBP aldolase
# Local Parameter:   id =  k1, name = k1
par k1_1_2_3=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1_2_3=7.0423E7


FBP_A=chloropla*(k1_1_2_3*DHAP*GAP-k2_1_2_3*FBP)

# Reaction: id = FBPase, name = FBP ase
# Local Parameter:   id =  Vm, name = Vm
par Vm_1=200.0

# Local Parameter:   id =  K, name = K
par K_1=0.03

# Local Parameter:   id =  KR1, name = KR1
par KR1_1=0.7

# Local Parameter:   id =  KR2, name = KR2
par KR2_1=12.0


FBPase=chloropla*function_(Vm_1, FBP, K_1, F6P, KR1_1, Pi_ren, KR2_1)

# Reaction: id = F6P_TK, name = F6P transketolase
# Local Parameter:   id =  k1, name = k1
par k1_1_2__4=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1_2__4=5.9524E9


F6P_TK=chloropla*(k1_1_2__4*GAP*F6P-k2_1_2__4*X5P*E4P)

# Reaction: id = SBP_A, name = SBP aldolase
# Local Parameter:   id =  k1, name = k1
par k1_1_2__5=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1_2__5=3.84615E7


SBP_A=chloropla*(k1_1_2__5*DHAP*E4P-k2_1_2__5*SBP)

# Reaction: id = SBPase, name = SBP ase
# Local Parameter:   id =  Vm, name = Vm
par Vm_1_2=40.0

# Local Parameter:   id =  K, name = K
par K_1_2=0.02

# Local Parameter:   id =  KR1, name = KR1
par KR1_1_2=12.0


SBPase=chloropla*functio_5(Vm_1_2, SBP, K_1_2, Pi_ren, KR1_1_2)

# Reaction: id = S7P_TK, name = S7P transketolase
# Local Parameter:   id =  k1, name = k1
par k1_1_2__6=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1_2__6=5.8824E8


S7P_TK=chloropla*(k1_1_2__6*GAP*S7P-k2_1_2__6*X5P*R5P)

# Reaction: id = R5P_I, name = R5P isomerase
# Local Parameter:   id =  k1, name = k1
par k1_1_2__7=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1_2__7=1.25E9


R5P_I=chloropla*(k1_1_2__7*R5P-k2_1_2__7*Ru5P)

# Reaction: id = Ru5P_E, name = Ru5P epimerase
# Local Parameter:   id =  k1, name = k1
par k1_1_2__8=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1_2__8=7.46269E8


Ru5P_E=chloropla*(k1_1_2__8*X5P-k2_1_2__8*Ru5P)

# Reaction: id = Ru5P_K, name = Ru5P kinase
# Local Parameter:   id =  Vm, name = Vm
par Vm_1_2_3=1000.0

# Local Parameter:   id =  K1, name = K1
par K1_1_2__9=0.05

# Local Parameter:   id =  KR1, name = KR1
par KR1_1_2_3=2.0

# Local Parameter:   id =  KR2, name = KR2
par KR2_1_2=0.7

# Local Parameter:   id =  KR3, name = KR3
par KR3_1=4.0

# Local Parameter:   id =  KR41, name = KR41
par KR41=2.5

# Local Parameter:   id =  K2, name = K2
par K2_1_2__9=0.05

# Local Parameter:   id =  KR42, name = KR42
par KR42=0.4


Ru5P_K=chloropla*functio_2(Vm_1_2_3, Ru5P, ATP, K1_1_2__9, PGA, KR1_1_2_3, RuBP, KR2_1_2, Pi_ren, KR3_1, ADP, KR41, K2_1_2__9, KR42)

# Reaction: id = PG_I, name = PG isomerase
# Local Parameter:   id =  k1, name = k1
par k1_1_2_10=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1_2_10=2.174E8


PG_I=chloropla*(k1_1_2_10*F6P-k2_1_2_10*G6P)

# Reaction: id = PG_M, name = PG mutase
# Local Parameter:   id =  k1, name = k1
par k1_1_2_11=5.0E8

# Local Parameter:   id =  k2, name = k2
par k2_1_2_11=8.621E9


PG_M=chloropla*(k1_1_2_11*G6P-k2_1_2_11*G1P)

# Reaction: id = Starch_S, name = starch synthase
# Local Parameter:   id =  Vm, name = Vm
par Vm_1_2__4=40.0

# Local Parameter:   id =  K1, name = K1
par K1_1_2_12=0.08

# Local Parameter:   id =  K2, name = K2
par K2_1_2_12=0.08

# Local Parameter:   id =  KR1, name = KR1
par KR1_1_2_4=10.0

# Local Parameter:   id =  KA1, name = KA1
par KA1=0.1

# Local Parameter:   id =  KA2, name = KA2
par KA2=0.02

# Local Parameter:   id =  KA3, name = KA3
par KA3=0.02


Starch_S=chloropla*functio_6(Vm_1_2__4, G1P, ATP, K1_1_2_12, K2_1_2_12, ADP, KR1_1_2_4, Pi_ren, KA1, PGA, KA2, F6P, KA3, FBP)

# Reaction: id = Starch_P, name = starch phosphorylase
# Local Parameter:   id =  Vm, name = Vm
par Vm_1_2__5=40.0

# Local Parameter:   id =  K, name = K
par K_1_2_3=0.1

# Local Parameter:   id =  KR1, name = KR1
par KR1_1_2_5=0.05


Starch_P=chloropla*functio_5(Vm_1_2__5, Pi_ren, K_1_2_3, G1P, KR1_1_2_5)

# Reaction: id = ATP_S, name = ATP synthetase
# Local Parameter:   id =  Vm, name = Vm
par Vm_1_2__6=350.0

# Local Parameter:   id =  K1, name = K1
par K1_1_2_13=0.014

# Local Parameter:   id =  K2, name = K2
par K2_1_2_13=0.3


ATP_S=chloropla*functio_3(Vm_1_2__6, ADP, Pi_ren, K1_1_2_13, K2_1_2_13)

# Reaction: id = TPT_PGA, name = TPT - PGA
# Local Parameter:   id =  Vm, name = Vm
par Vm_1_2__7=250.0

# Local Parameter:   id =  KA, name = KA
par KA=0.74

# Local Parameter:   id =  K, name = K
par K_1_2_3_4=0.25

# Local Parameter:   id =  KR1, name = KR1
par KR1_1_2_6=0.63

# Local Parameter:   id =  KR2, name = KR2
par KR2_1_2_3=0.075

# Local Parameter:   id =  KR3, name = KR3
par KR3_1_2=0.077


TPT_PGA=chloropla*functio_1(Vm_1_2__7, PGA, KA, Pext, K_1_2_3_4, Pi_ren, KR1_1_2_6, GAP, KR2_1_2_3, DHAP, KR3_1_2)

# Reaction: id = TPT_GAP, name = TPT - GAP
# Local Parameter:   id =  Vm, name = Vm
par Vm_1_2__8=250.0

# Local Parameter:   id =  KA, name = KA
par KA_1=0.74

# Local Parameter:   id =  K, name = K
par K_1_2_3_5=0.075

# Local Parameter:   id =  KR1, name = KR1
par KR1_1_2_7=0.63

# Local Parameter:   id =  KR2, name = KR2
par KR2_1_2_4=0.25

# Local Parameter:   id =  KR3, name = KR3
par KR3_1_2_3=0.077


TPT_GAP=chloropla*functio_1(Vm_1_2__8, GAP, KA_1, Pext, K_1_2_3_5, Pi_ren, KR1_1_2_7, PGA, KR2_1_2_4, DHAP, KR3_1_2_3)

# Reaction: id = TPT_DHAP, name = TPT - DHAP
# Local Parameter:   id =  Vm, name = Vm
par Vm_1_2__9=250.0

# Local Parameter:   id =  KA, name = KA
par KA_1_2=0.74

# Local Parameter:   id =  K, name = K
par K_1_2_3_6=0.077

# Local Parameter:   id =  KR1, name = KR1
par KR1_1_2_8=0.63

# Local Parameter:   id =  KR2, name = KR2
par KR2_1_2_5=0.25

# Local Parameter:   id =  KR3, name = KR3
par KR3_1_2_4=0.075


TPT_DHAP=chloropla*functio_1(Vm_1_2__9, DHAP, KA_1_2, Pext, K_1_2_3_6, Pi_ren, KR1_1_2_8, PGA, KR2_1_2_5, GAP, KR3_1_2_4)

# Species:   id = RuBP, name = RuBP, affected by kineticLaw

init RuBP=2.0
dRuBP/dt=(1/(chloropla))*((-1.0 * RuBisCO) + ( 1.0 * Ru5P_K))

# Species:   id = PGA, name = PGA, affected by kineticLaw

init PGA=2.4
dPGA/dt=(1/(chloropla))*(( 2.0 * RuBisCO) + (-1.0 * PGA_K) + (-1.0 * TPT_PGA))

# Species:   id = DPGA, name = DPGA, affected by kineticLaw

init DPGA=0.0011
dDPGA/dt=(1/(chloropla))*(( 1.0 * PGA_K) + (-1.0 * GAP_DH))

# Species:   id = GAP, name = GAP, affected by kineticLaw

init GAP=0.02
dGAP/dt=(1/(chloropla))*(( 1.0 * GAP_DH) + (-1.0 * TP_I) + (-1.0 * FBP_A) + (-1.0 * F6P_TK) + (-1.0 * S7P_TK) + (-1.0 * TPT_GAP))

# Species:   id = DHAP, name = DHAP, affected by kineticLaw

init DHAP=0.48
dDHAP/dt=(1/(chloropla))*(( 1.0 * TP_I) + (-1.0 * FBP_A) + (-1.0 * SBP_A) + (-1.0 * TPT_DHAP))

# Species:   id = FBP, name = FBP, affected by kineticLaw

init FBP=0.669999999999999
dFBP/dt=(1/(chloropla))*(( 1.0 * FBP_A) + (-1.0 * FBPase))

# Species:   id = F6P, name = F6P, affected by kineticLaw

init F6P=0.640764257004719
dF6P/dt=(1/(chloropla))*(( 1.0 * FBPase) + (-1.0 * F6P_TK) + (-1.0 * PG_I))

# Species:   id = E4P, name = E4P, affected by kineticLaw

init E4P=0.05
dE4P/dt=(1/(chloropla))*(( 1.0 * F6P_TK) + (-1.0 * SBP_A))

# Species:   id = SBP, name = SBP, affected by kineticLaw

init SBP=0.3
dSBP/dt=(1/(chloropla))*(( 1.0 * SBP_A) + (-1.0 * SBPase))

# Species:   id = S7P, name = S7P, affected by kineticLaw

init S7P=2.0
dS7P/dt=(1/(chloropla))*(( 1.0 * SBPase) + (-1.0 * S7P_TK))

# Species:   id = X5P, name = X5P, affected by kineticLaw

init X5P=0.0747384155455904
dX5P/dt=(1/(chloropla))*(( 1.0 * F6P_TK) + ( 1.0 * S7P_TK) + (-1.0 * Ru5P_E))

# Species:   id = R5P, name = R5P, affected by kineticLaw

init R5P=0.125186846038864
dR5P/dt=(1/(chloropla))*(( 1.0 * S7P_TK) + (-1.0 * R5P_I))

# Species:   id = Ru5P, name = Ru5P, affected by kineticLaw

init Ru5P=0.0500747384155456
dRu5P/dt=(1/(chloropla))*(( 1.0 * R5P_I) + ( 1.0 * Ru5P_E) + (-1.0 * Ru5P_K))

# Species:   id = G6P, name = G6P, affected by kineticLaw

init G6P=1.47375779111085
dG6P/dt=(1/(chloropla))*(( 1.0 * PG_I) + (-1.0 * PG_M))

# Species:   id = G1P, name = G1P, affected by kineticLaw

init G1P=0.0854779518844294
dG1P/dt=(1/(chloropla))*(( 1.0 * PG_M) + (-1.0 * Starch_S) + ( 1.0 * Starch_P))

# Species:   id = ATP, name = ATP, affected by kineticLaw

init ATP=0.68
dATP/dt=(1/(chloropla))*((-1.0 * PGA_K) + (-1.0 * Ru5P_K) + (-1.0 * Starch_S) + ( 1.0 * ATP_S))

# Species:   id = ADP, name = ADP, involved in a rule 

# Species:   id = NADPH, name = NADPH, constant
par NADPH=0.21


# Species:   id = NADP, name = NADP, constant
par NADP=0.29


# Species:   id = H, name = H, constant
par H=1.25892541179417E-5


# Species:   id = Pi, name = Pi, involved in a rule 

# Species:   id = Pext, name = Pext, constant
par Pext=0.5


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

