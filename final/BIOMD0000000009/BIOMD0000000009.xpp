
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Huang1996 - Ultrasensitivity in MAPK cascade
#
# is http://identifiers.org/biomodels.db/MODEL6615048798
# is http://identifiers.org/biomodels.db/BIOMD0000000009
# isDescribedBy http://identifiers.org/pubmed/8816754
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=4.0E-12

# Parameter:   id =  K_PP_norm_max, name = K_PP_norm_max, constant
par K_PP_norm=0.900049

# assignmentRule: variable = K_PP_norm
K_PP_no_1=(PP_K+KPase_PP_)/(PP_K+P_K+K+PP_KK_K+PP_KK_P_K+KPase_PP_+KPase_P_K)
aux K_PP_no_1=K_PP_no_1

# assignmentRule: variable = rel_K_PP_max
rel_K_PP_=K_PP_no_1/K_PP_norm
aux rel_K_PP_=rel_K_PP_

# assignmentRule: variable = KK_PP_norm
KK_PP_nor=(PP_KK+PP_KK_K+PP_KK_P_K+KKPase_PP)/(PP_KK+P_KK+KK+PP_KK_K+PP_KK_P_K+P_KKK_KK+P_KKK_P_K+KKPase_PP+KKPase_P_)
aux KK_PP_nor=KK_PP_nor

# assignmentRule: variable = KKK_P_norm
KKK_P_nor=(P_KKK+P_KKK_KK+P_KKK_P_K)/(KKK+P_KKK+P_KKK_KK+P_KKK_P_K)
aux KKK_P_nor=KKK_P_nor

# Reaction: id = r1a, name = binding of MAPKKK activator
# Local Parameter:   id =  a1, name = a1
par a1=1000.0

# Local Parameter:   id =  d1, name = d1
par d1=150.0


r1a=compartme*(a1*E1*KKK-d1*E1_KKK)

# Reaction: id = r1b, name = MAPKKK activation
# Local Parameter:   id =  k2, name = k2
par k2=150.0


r1b=compartme*k2*E1_KKK

# Reaction: id = r2a, name = binding of MAPKKK inactivator
# Local Parameter:   id =  a2, name = a2
par a2=1000.0

# Local Parameter:   id =  d2, name = d2
par d2=150.0


r2a=compartme*(a2*E2*P_KKK-d2*E2_P_KKK)

# Reaction: id = r2b, name = MAPKKK inactivation
# Local Parameter:   id =  k2, name = k2
par k2_1=150.0


r2b=compartme*k2_1*E2_P_KKK

# Reaction: id = r3a, name = binding P-MAPKKK and MAPKK
# Local Parameter:   id =  a3, name = a3
par a3=1000.0

# Local Parameter:   id =  d3, name = d3
par d3=150.0


r3a=compartme*(a3*KK*P_KKK-d3*P_KKK_KK)

# Reaction: id = r3b, name = phosphorylation of MAPKK
# Local Parameter:   id =  k3, name = k3
par k3=150.0


r3b=compartme*k3*P_KKK_KK

# Reaction: id = r4a, name = binding MAPKK-Pase and P-MAPKK
# Local Parameter:   id =  a4, name = a4
par a4=1000.0

# Local Parameter:   id =  d4, name = d4
par d4=150.0


r4a=compartme*(a4*P_KK*KKPase-d4*KKPase_P_)

# Reaction: id = r4b, name = dephosphorylation of P-MAPKK
# Local Parameter:   id =  k4, name = k4
par k4=150.0


r4b=compartme*k4*KKPase_P_

# Reaction: id = r5a, name = binding P-MAPKKK and P-MAPKK
# Local Parameter:   id =  a5, name = a5
par a5=1000.0

# Local Parameter:   id =  d5, name = d5
par d5=150.0


r5a=compartme*(a5*P_KK*P_KKK-d5*P_KKK_P_K)

# Reaction: id = r5b, name = phosphorylation of P-MAPKK
# Local Parameter:   id =  k5, name = k5
par k5=150.0


r5b=compartme*k5*P_KKK_P_K

# Reaction: id = r6a, name = binding MAPKK-Pase and PP-MAPKK
# Local Parameter:   id =  a6, name = a6
par a6=1000.0

# Local Parameter:   id =  d6, name = d6
par d6=150.0


r6a=compartme*(a6*PP_KK*KKPase-d6*KKPase_PP)

# Reaction: id = r6b, name = dephosphorylation of PP-MAPKK
# Local Parameter:   id =  k6, name = k6
par k6=150.0


r6b=compartme*k6*KKPase_PP

# Reaction: id = r7a, name = binding MAPK and PP-MAPKK
# Local Parameter:   id =  a7, name = a7
par a7=1000.0

# Local Parameter:   id =  d7, name = d7
par d7=150.0


r7a=compartme*(a7*K*PP_KK-d7*PP_KK_K)

# Reaction: id = r7b, name = phosphorylation of MAPK
# Local Parameter:   id =  k7, name = k7
par k7=150.0


r7b=compartme*k7*PP_KK_K

# Reaction: id = r8a, name = binding MAPK-Pase and P-MAPK
# Local Parameter:   id =  a8, name = a8
par a8=1000.0

# Local Parameter:   id =  d8, name = d8
par d8=150.0


r8a=compartme*(a8*P_K*KPase-d8*KPase_P_K)

# Reaction: id = r8b, name = dephosphorylation of P-MAPK
# Local Parameter:   id =  k8, name = k8
par k8=150.0


r8b=compartme*k8*KPase_P_K

# Reaction: id = r9a, name = binding PP-MAPKK and P-MAPK
# Local Parameter:   id =  a9, name = a9
par a9=1000.0

# Local Parameter:   id =  d9, name = d9
par d9=150.0


r9a=compartme*(a9*P_K*PP_KK-d9*PP_KK_P_K)

# Reaction: id = r9b, name = phosphorylation of P-MAPK
# Local Parameter:   id =  k9, name = k9
par k9=150.0


r9b=compartme*k9*PP_KK_P_K

# Reaction: id = r10a, name = binding MAPK-Pase and PP-MAPK
# Local Parameter:   id =  a10, name = a10
par a10=1000.0

# Local Parameter:   id =  d10, name = d10
par d10=150.0


r10a=compartme*(a10*PP_K*KPase-d10*KPase_PP_)

# Reaction: id = r10b, name = dephosphorylation of PP-MAPK
# Local Parameter:   id =  k10, name = k10
par k10=150.0


r10b=compartme*k10*KPase_PP_

# Species:   id = E1, name = MAPKKK activator (Ras), affected by kineticLaw

init E1=3.0E-5
dE1/dt=(1/(compartme))*((-1.0 * r1a) + ( 1.0 * r1b))

# Species:   id = E2, name = MAPKKK inactivator, affected by kineticLaw

init E2=3.0E-4
dE2/dt=(1/(compartme))*((-1.0 * r2a) + ( 1.0 * r2b))

# Species:   id = KKK, name = Mos, affected by kineticLaw

init KKK=0.003
dKKK/dt=(1/(compartme))*((-1.0 * r1a) + ( 1.0 * r2b))

# Species:   id = P_KKK, name = Mos-P, affected by kineticLaw

init P_KKK=0.0
dP_KKK/dt=(1/(compartme))*(( 1.0 * r1b) + (-1.0 * r2a) + (-1.0 * r3a) + ( 1.0 * r3b) + (-1.0 * r5a) + ( 1.0 * r5b))

# Species:   id = KK, name = Mek1, affected by kineticLaw

init KK=1.2
dKK/dt=(1/(compartme))*((-1.0 * r3a) + ( 1.0 * r4b))

# Species:   id = P_KK, name = Mek1-P, affected by kineticLaw

init P_KK=0.0
dP_KK/dt=(1/(compartme))*(( 1.0 * r3b) + (-1.0 * r4a) + (-1.0 * r5a) + ( 1.0 * r6b))

# Species:   id = PP_KK, name = Mek1-PP, affected by kineticLaw

init PP_KK=0.0
dPP_KK/dt=(1/(compartme))*(( 1.0 * r5b) + (-1.0 * r6a) + (-1.0 * r7a) + ( 1.0 * r7b) + (-1.0 * r9a) + ( 1.0 * r9b))

# Species:   id = K, name = Erk2, affected by kineticLaw

init K=1.2
dK/dt=(1/(compartme))*((-1.0 * r7a) + ( 1.0 * r8b))

# Species:   id = P_K, name = Erk2-P, affected by kineticLaw

init P_K=0.0
dP_K/dt=(1/(compartme))*(( 1.0 * r7b) + (-1.0 * r8a) + (-1.0 * r9a) + ( 1.0 * r10b))

# Species:   id = PP_K, name = Erk2-PP, affected by kineticLaw

init PP_K=0.0
dPP_K/dt=(1/(compartme))*(( 1.0 * r9b) + (-1.0 * r10a))

# Species:   id = KPase, name = MAPK-Pase, affected by kineticLaw

init KPase=0.12
dKPase/dt=(1/(compartme))*((-1.0 * r8a) + ( 1.0 * r8b) + (-1.0 * r10a) + ( 1.0 * r10b))

# Species:   id = KKPase, name = MAPKK-Pase, affected by kineticLaw

init KKPase=3.0E-4
dKKPase/dt=(1/(compartme))*((-1.0 * r4a) + ( 1.0 * r4b) + (-1.0 * r6a) + ( 1.0 * r6b))

# Species:   id = E1_KKK, name = E1_Mos, affected by kineticLaw

init E1_KKK=0.0
dE1_KKK/dt=(1/(compartme))*(( 1.0 * r1a) + (-1.0 * r1b))

# Species:   id = E2_P_KKK, name = E2_Mos-P, affected by kineticLaw

init E2_P_KKK=0.0
dE2_P_KKK/dt=(1/(compartme))*(( 1.0 * r2a) + (-1.0 * r2b))

# Species:   id = P_KKK_KK, name = P-Mos_Mek1, affected by kineticLaw

init P_KKK_KK=0.0
dP_KKK_KK/dt=(1/(compartme))*(( 1.0 * r3a) + (-1.0 * r3b))

# Species:   id = P_KKK_P_KK, name = P-Mos_P-Mek1, affected by kineticLaw

par P_KKK_P_K=0.0
aux P_KKK_P_K=P_KKK_P_K
dP_KKK_P_K/dt=(1/(compartme))*(( 1.0 * r5a) + (-1.0 * r5b))

# Species:   id = PP_KK_K, name = PP-Mek1_Erk2, affected by kineticLaw

init PP_KK_K=0.0
dPP_KK_K/dt=(1/(compartme))*(( 1.0 * r7a) + (-1.0 * r7b))

# Species:   id = PP_KK_P_K, name = PP-Mek1_P-Erk2, affected by kineticLaw

init PP_KK_P_K=0.0
dPP_KK_P_K/dt=(1/(compartme))*(( 1.0 * r9a) + (-1.0 * r9b))

# Species:   id = KKPase_PP_KK, name = MAPKK-Pase_PP-Mek1, affected by kineticLaw

par KKPase_PP=0.0
aux KKPase_PP=KKPase_PP
dKKPase_PP/dt=(1/(compartme))*(( 1.0 * r6a) + (-1.0 * r6b))

# Species:   id = KKPase_P_KK, name = MAPKK-Pase_P-Mek1, affected by kineticLaw

par KKPase_P_=0.0
aux KKPase_P_=KKPase_P_
dKKPase_P_/dt=(1/(compartme))*(( 1.0 * r4a) + (-1.0 * r4b))

# Species:   id = KPase_PP_K, name = MAPK-Pase_PP-Erk2, affected by kineticLaw

par KPase_PP_=0.0
aux KPase_PP_=KPase_PP_
dKPase_PP_/dt=(1/(compartme))*(( 1.0 * r10a) + (-1.0 * r10b))

# Species:   id = KPase_P_K, name = MAPK-Pase_P-Erk2, affected by kineticLaw

init KPase_P_K=0.0
dKPase_P_K/dt=(1/(compartme))*(( 1.0 * r8a) + (-1.0 * r8b))

# Species:   id = K_PP_norm, name = K_PP_norm, defined in a rule 

# Species:   id = KK_PP_norm, name = KK_PP_norm, defined in a rule 

# Species:   id = KKK_P_norm, name = KKK_P_norm, defined in a rule 

# Species:   id = rel_K_PP_max, name = relative maximal K_PP, defined in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

