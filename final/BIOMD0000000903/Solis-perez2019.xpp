
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Solis-perez2019 - A fractional mathematical model of breast cancer competition model
#
# hasInstance http://identifiers.org/mamo/MAMO_0000046
# hasInstance http://identifiers.org/taxonomy/9606
# hasInstance http://identifiers.org/ncit/C4872
# isDescribedBy http://identifiers.org/ncit/C4872
# isDescribedBy http://identifiers.org/doi/10.1016/j.chaos.2019.06.027
# isDerivedFrom http://identifiers.org/doi/10.1007/s12591-017-0346-x
# is http://identifiers.org/biomodels.db/MODEL1912180005
# is http://identifiers.org/biomodels.db/BIOMD0000000903
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_removal_of_stem_cell_from_the_system, name = Function for removal of stem cell from the system
Function_(gamma1,I,C)=(gamma1*I*C)


# FunctionDefinition id = Function_for_formation_of_Stem_cell, name = Function for formation of Stem cell
Functio_1(k1,C,M1,p1,E,a1)=(k1*C*(1-C/M1)+p1*C*E/(a1+C))


# FunctionDefinition id = Function_for_increase_in_healthy_cell_in_the_system, name = Function for increase in healthy cell in the system
Functio_2(q,H,M3)=(q*H*(1-H/M3))


# FunctionDefinition id = Function_for_decrease_in_healthy_cell, name = Function for decrease in healthy cell
Functio_3(delta,H,T,p3,E,a3)=(delta*H*T+p3*H*E/(a3+H))


# FunctionDefinition id = Function_for_induction_of_tumor_cell, name = Function for induction of tumor cell
Functio_4(k2,C,M1,T,M2,p2,E,a2)=(k2*C*C/M1*(1-T/M2)+p2*T*E/(a2+T))


# FunctionDefinition id = Function_for_removal_of_tumor_cell, name = Function for removal of tumor cell
Functio_5(n1,T,gamma2,I)=(n1*T+gamma2*I*T)


# FunctionDefinition id = Function_for_increase_in_excess_strogen, name = Function for increase in excess strogen
Functio_6(tau)=(tau)


# FunctionDefinition id = Function_for_decrease_in_strogen_content, name = Function for decrease in strogen content
Functio_7(mu,d1,C,a1,d2,T,a2,d3,H,a3,E)=((mu+d1*C/(a1+C)+d2*T/(a2+T)+d3*H/(a3+H))*E)


# FunctionDefinition id = Function_for_increase_in_tumor_cell_against_cancer, name = Function for increase in tumor cell against cancer
Functio_8(s,p,I,T,w)=(s+p*I*T/(w+T))


# FunctionDefinition id = Function_for_decrease_in_immune_cell, name = Function for decrease in immune cell
Functio_9(gamma3,I,T,n2,u,E,v)=(gamma3*I*T+n2*I+u*I*E/(v+E))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  k1, name = k1, constant
par k1=0.75

# Parameter:   id =  k2, name = k2, constant
par k2=0.514

# Parameter:   id =  q, name = q, constant
par q=0.7

# Parameter:   id =  M1, name = M1, constant
par M1=2270000.0

# Parameter:   id =  M2, name = M2, constant
par M2=2.27E7

# Parameter:   id =  M3, name = M3, constant
par M3=2.5E7

# Parameter:   id =  gamma1, name = gamma1, constant
par gamma1=3.0E-7

# Parameter:   id =  gamma2, name = gamma2, constant
par gamma2=3.0E-6

# Parameter:   id =  gamma3, name = gamma3, constant
par gamma3=1.0E-7

# Parameter:   id =  p1, name = p1, constant
par p1=600.0

# Parameter:   id =  p2, name = p2, constant
par p2=0.0

# Parameter:   id =  p3, name = p3, constant
par p3=100.0

# Parameter:   id =  a1, name = a1, constant
par a1=1135000.0

# Parameter:   id =  a2, name = a2, constant
par a2=1.135E7

# Parameter:   id =  a3, name = a3, constant
par a3=1250000.0

# Parameter:   id =  n1, name = n1, constant
par n1=0.01

# Parameter:   id =  n2, name = n2, constant
par n2=0.29

# Parameter:   id =  delta, name = delta, constant
par delta=6.0E-8

# Parameter:   id =  s, name = s, constant
par s=13000.0

# Parameter:   id =  p, name = p, constant
par p=0.2

# Parameter:   id =  w, name = w, constant
par w=300000.0

# Parameter:   id =  u, name = u, constant
par u=0.2

# Parameter:   id =  v, name = v, constant
par v=400.0

# Parameter:   id =  tau, name = tau, constant
par tau=2700.0

# Parameter:   id =  d1, name = d1, constant
par d1=0.01

# Parameter:   id =  d2, name = d2, constant
par d2=0.01

# Parameter:   id =  d3, name = d3, constant
par d3=0.01

# Parameter:   id =  mu, name = mu, constant
par mu=0.97

# Reaction: id = Formation_of_Stem_cell, name = Formation of Stem cell

Formation=compartme*Functio_1(k1, C, M1, p1, E, a1)

# Reaction: id = Removal_of_stem_cell_from_the_system, name = Removal of stem cell from the system

Removal_o=compartme*Function_(gamma1, I, C)

# Reaction: id = Induction_of_tumor_cell, name = Induction of tumor cell

Induction=compartme*Functio_4(k2, C, M1, T_renamed, M2, p2, E, a2)

# Reaction: id = Removal_of_tumor_cell_y_immune_cell_and_other_immune_response, name = Removal of tumor cell y immune cell and other immune response

Removal_1=compartme*Functio_5(n1, T_renamed, gamma2, I)

# Reaction: id = Increase_in_the_healthy_cell_in_the_system, name = Increase in the healthy cell in the system

Increase_=compartme*Functio_2(q, H, M3)

# Reaction: id = Decrase_of_healthy_cell_due_to_cancer, name = Decrase of healthy cell due to cancer

Decrase_o=compartme*Functio_3(delta, H, T_renamed, p3, E, a3)

# Reaction: id = Increase_in_immune_cell_against_tumor, name = Increase in immune cell against tumor

Increas_1=compartme*Functio_8(s, p, I, T_renamed, w)

# Reaction: id = Decrease_in_the_density_of_immune_cell_that_provide_immune_response, name = Decrease in the density of immune cell that provide immune response

Decrease_=compartme*Functio_9(gamma3, I, T_renamed, n2, u, E, v)

# Reaction: id = Increase_in_Excess_strogen, name = Increase in Excess strogen

Increas_2=compartme*Functio_6(tau)

# Reaction: id = Decrease_in_strogen_content, name = Decrease in strogen content

Decreas_1=compartme*Functio_7(mu, d1, C, a1, d2, T_renamed, a2, d3, H, a3, E)

# Species:   id = C, name = C, affected by kineticLaw

init C=737100.0
dC/dt=(1/(compartme))*(( 1.0 * Formation) + (-1.0 * Removal_o))

# Species:   id = T, name = T, affected by kineticLaw

par T_renamed=7616700.0
aux T_renamed=T_renamed
dT_renamed/dt=(1/(compartme))*(( 1.0 * Induction) + (-1.0 * Removal_1))

# Species:   id = H, name = H, affected by kineticLaw

init H=2.5E7
dH/dt=(1/(compartme))*(( 1.0 * Increase_) + (-1.0 * Decrase_o))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.0
dI/dt=(1/(compartme))*(( 1.0 * Increas_1) + (-1.0 * Decrease_))

# Species:   id = E, name = E, affected by kineticLaw

init E=0.0
dE/dt=(1/(compartme))*(( 1.0 * Increas_2) + (-1.0 * Decreas_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

