
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Goldbeter1996 - Cyclin Cdc2 kinase Oscillations
#
# isDescribedBy http://identifiers.org/pubmed/8631387
# is http://identifiers.org/biomodels.db/MODEL1812120005
# is http://identifiers.org/biomodels.db/BIOMD0000000729
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = function_for_decay, name = function for decay
function_(k1,S,k2)=(k1*S/(k2+S))


# FunctionDefinition id = function_for_synthesis, name = function for synthesis
functio_1(k1,P,k2)=(k1*(1-P)/(k2+1-P))


# FunctionDefinition id = function_for_C_decay, name = function for C decay
functio_2(k1,M,S,k2)=(k1*M*S/(k2+S))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  V1, name = V1, defined by a Rule

# Parameter:   id =  V3, name = V3, defined by a Rule

# Parameter:   id =  VM1, name = VM1, constant
par VM1=3.0

# Parameter:   id =  V2, name = V2, constant
par V2=1.5

# Parameter:   id =  VM3, name = VM3, constant
par VM3=1.0

# Parameter:   id =  V4, name = V4, constant
par V4=0.5

# Parameter:   id =  Kc, name = Kc, constant
par Kc=0.5

# Parameter:   id =  vi, name = vi, constant
par vi=0.05

# Parameter:   id =  vd, name = vd, constant
par vd=0.25

# Parameter:   id =  Kd, name = Kd, constant
par Kd=0.02

# Parameter:   id =  K1, name = K1, constant
par K1=0.01

# Parameter:   id =  K2, name = K2, constant
par K2=0.01

# Parameter:   id =  K3, name = K3, constant
par K3=0.01

# Parameter:   id =  K4, name = K4, constant
par K4=0.01

# Parameter:   id =  kd, name = kd, constant
par kd_1=0.01

# assignmentRule: variable = V1
V1=C/(Kc+C)*VM1
aux V1=V1

# assignmentRule: variable = V3
V3=M*VM3
aux V3=V3

# Reaction: id = Cyclin_synthesis, name = Cyclin synthesis

Cyclin_sy=compartme*Constant_(vi)

# Reaction: id = Cyclin_degradation, name = Cyclin degradation

Cyclin_de=compartme*functio_2(vd, X, C, Kd)

# Reaction: id = Cyclin_decay, name = Cyclin decay

Cyclin__1=compartme*kd_1*C

# Reaction: id = Cdc2_kinase_activation, name = Cdc2 kinase activation

Cdc2_kina=compartme*functio_1(V1, M, K1)

# Reaction: id = Cdc2_kinase_inactivation, name = Cdc2 kinase inactivation

Cdc2_ki_1=compartme*function_(V2, M, K2)

# Reaction: id = X_activation, name = X activation

X_activat=compartme*functio_1(V3, X, K3)

# Reaction: id = X_inactivation, name = X inactivation

X_inactiv=compartme*function_(V4, X, K4)

# Species:   id = C, name = C, affected by kineticLaw

init C=0.0
dC/dt=(1/(compartme))*(( 1.0 * Cyclin_sy) + (-1.0 * Cyclin_de) + (-1.0 * Cyclin__1))

# Species:   id = M, name = M, affected by kineticLaw

init M=0.0
dM/dt=(1/(compartme))*(( 1.0 * Cdc2_kina) + (-1.0 * Cdc2_ki_1))

# Species:   id = X, name = X, affected by kineticLaw

init X=0.0
dX/dt=(1/(compartme))*(( 1.0 * X_activat) + (-1.0 * X_inactiv))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

