
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Marwan2003 - Genetics, regulatory hierarchy between genes
#
# is http://identifiers.org/biomodels.db/BIOMD0000000037
# is http://identifiers.org/biomodels.db/MODEL6621175859
# isDescribedBy http://identifiers.org/pubmed/12750324
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Reaction: id = Photoreceptor_activation
# Local Parameter:   id =  IfrSfrPfr, name = IfrSfrPfr
par IfrSfrPfr=0.1


Photorece=compartme*Pfr*IfrSfrPfr

# Reaction: id = Photoreceptor_inactivation
# Local Parameter:   id =  IrSrPr, name = IrSrPr
par IrSrPr=0.0


Photore_1=IrSrPr*Pr*compartme

# Reaction: id = Transducer_activation
# Local Parameter:   id =  kia, name = kia
par kia=0.1


Transduce=Xi*kia*Pr*compartme

# Reaction: id = Transducer_inactivation
# Local Parameter:   id =  kai, name = kai
par kai=0.8


Transdu_1=kai*Xa*compartme

# Reaction: id = preS_formation
# Local Parameter:   id =  kx, name = kx
par kx=0.2


preS_form=prepreS*kx*Xa*compartme

# Reaction: id = S_generation
# Local Parameter:   id =  ky, name = ky
par ky=1.0


S_generat=preS*ky*Ya*compartme

# Reaction: id = Glucose_sensor_inactivation
# Local Parameter:   id =  kG, name = kG
par kG=0.1


Glucose_s=kG*Ya*Gluc*compartme

# Reaction: id = S_formation
# Local Parameter:   id =  alpha1, name = alpha1
par alpha1=30.0


S_formati=compartme*alpha1/(1+V^3)

# Reaction: id = V_formation
# Local Parameter:   id =  alpha2, name = alpha2
par alpha2=50.0


V_formati=compartme*alpha2/(1+S^3)

# Reaction: id = S_degradation
# Local Parameter:   id =  kd_s, name = kd_s
par kd_s=1.0


S_degrada=kd_s*S*compartme

# Reaction: id = V_degradation
# Local Parameter:   id =  kd_v, name = kd_v
par kd_v=1.0


V_degrada=compartme*V*kd_v

# Reaction: id = Photoreceptor_decay
# Local Parameter:   id =  kd, name = kd
par kd=0.1


Photore_2=compartme*kd*Pr

# Species:   id = Pfr, name = Pfr, affected by kineticLaw

init Pfr=10.0
dPfr/dt=(1/(compartme))*((-1.0 * Photorece) + ( 1.0 * Photore_1))

# Species:   id = Pr, name = Pr, affected by kineticLaw

init Pr=0.0
dPr/dt=(1/(compartme))*(( 1.0 * Photorece) + (-1.0 * Photore_1) + (-1.0 * Photore_2))

# Species:   id = Xi, name = Xi, affected by kineticLaw

init Xi=6.0
dXi/dt=(1/(compartme))*((-1.0 * Transduce) + ( 1.0 * Transdu_1))

# Species:   id = Xa, name = Xa, affected by kineticLaw

init Xa=0.0
dXa/dt=(1/(compartme))*(( 1.0 * Transduce) + (-1.0 * Transdu_1))

# Species:   id = prepreS, name = prepreS, affected by kineticLaw

init prepreS=200.0
dprepreS/dt=(1/(compartme))*((-1.0 * preS_form))

# Species:   id = preS, name = preS, affected by kineticLaw

init preS=0.0
dpreS/dt=(1/(compartme))*(( 1.0 * preS_form) + (-1.0 * S_generat))

# Species:   id = Ya, name = Ya, affected by kineticLaw

init Ya=0.9
dYa/dt=(1/(compartme))*((-1.0 * Glucose_s))

# Species:   id = S, name = S, affected by kineticLaw

init S=0.0
dS/dt=(1/(compartme))*(( 1.0 * S_generat) + ( 1.0 * S_formati) + (-1.0 * S_degrada))

# Species:   id = Gluc, name = Gluc
par Gluc=0.0
aux Gluc=Gluc
#WARNING speciesID: Gluc, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = Yi, name = Yi, affected by kineticLaw

init Yi=0.0
dYi/dt=(1/(compartme))*(( 1.0 * Glucose_s))

# Species:   id = V, name = V, affected by kineticLaw

init V=30.0
dV/dt=(1/(compartme))*(( 1.0 * V_formati) + (-1.0 * V_degrada))

# Species:   id = Pi, name = Pi, affected by kineticLaw

par Pi_ren=0.0
aux Pi_ren=Pi_ren
dPi_ren/dt=(1/(compartme))*(( 1.0 * Photore_2))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

