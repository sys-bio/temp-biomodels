
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Fujita2010_Akt_Signalling_NGF
#
# is http://identifiers.org/biomodels.db/MODEL1004060002
# is http://identifiers.org/biomodels.db/BIOMD0000000263
# isDescribedBy http://identifiers.org/pubmed/20664065
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Cell, name = Cell, constant
par Cell=1.0

# Parameter:   id =  pTrkA_total, name = pTrkA_total, defined by a Rule

# Parameter:   id =  pAkt_total, name = pAkt_total, defined by a Rule

# Parameter:   id =  pTrkA_scaleFactor, name = pTrkA_scaleFactor, constant
par pTrkA_sca=0.848783474941268

# Parameter:   id =  pAkt_scaleFactor, name = pAkt_scaleFactor, constant
par pAkt_scal=2.42381211094508

# Parameter:   id =  pS6_scaleFactor, name = pS6_scaleFactor, constant
par pS6_scale=0.525842718263069

# Parameter:   id =  pS6_total, name = pS6_total, defined by a Rule

# Parameter:   id =  NGF_conc_step, name = NGF_conc_step, constant
par NGF_conc_=0.0

# Parameter:   id =  NGF_conc_pulse, name = NGF_conc_pulse, constant
par NGF_con_1=0.0

# Parameter:   id =  NGF_conc_ramp, name = NGF_conc_ramp, constant
par NGF_con_2=30.0

# Parameter:   id =  TrkA_turnover, name = TrkA_turnover, constant
par TrkA_turn=0.0011032440769796

# Parameter:   id =  pulse_time, name = pulse_time, constant
par pulse_tim=60.0

# Parameter:   id =  ramp_time, name = ramp_time, constant
par ramp_time=3600.0

# assignmentRule: variable = pS6_total
pS6_total=pS6*pS6_scale
aux pS6_total=pS6_total

# assignmentRule: variable = pAkt_total
pAkt_tota=(pAkt+pAkt_S6)*pAkt_scal
aux pAkt_tota=pAkt_tota

# assignmentRule: variable = pTrkA_total
pTrkA_tot=(pTrkA+pTrkA_Akt)*pTrkA_sca
aux pTrkA_tot=pTrkA_tot

# assignmentRule: variable = NGF
# the operator NGF_conc_step is not supported by xpp
# the formula is : NGF_conc_step+ piecew1 +NGF_conc_ramp*time/ramp_time
# the operator NGF_conc_ramp is not supported by xpp
# the formula is : NGF_conc_step+ piecew1 +NGF_conc_ramp*time/ramp_time
#Rule ignored : there are some unsupported functions !!

# Reaction: id = reaction_1, name = NGF+TrkA
# Local Parameter:   id =  k1, name = k1
par k1=0.00269408

# Local Parameter:   id =  k2, name = k2
par k2=0.0133747


reaction_=Cell*(k1*NGF*TrkA-k2*NGF_TrkA)

# Reaction: id = reaction_2, name = pTrkA+Akt
# Local Parameter:   id =  k1, name = k1
par k1_1=0.0882701

# Local Parameter:   id =  k2, name = k2
par k2_1=1.47518E-10


reactio_1=Cell*(k1_1*pTrkA*Akt-k2_1*pTrkA_Akt)

# Reaction: id = reaction_3, name = Akt_phosphorylation
# Local Parameter:   id =  k1, name = k1
par k1_1_2=0.0202517


reactio_2=Cell*k1_1_2*pTrkA_Akt

# Reaction: id = reaction_4, name = pTrkA_degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_3=0.0684084


reactio_3=Cell*k1_1_2_3*pTrkA

# Reaction: id = reaction_5, name = pAkt+S6
# Local Parameter:   id =  k1, name = k1
par k1_1_2__4=68.3666

# Local Parameter:   id =  k2, name = k2
par k2_1_2=5.23519


reactio_4=Cell*(k1_1_2__4*pAkt*S6-k2_1_2*pAkt_S6)

# Reaction: id = reaction_6, name = S6_phosphorylation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__5=0.0056515


reactio_5=Cell*k1_1_2__5*pAkt_S6

# Reaction: id = reaction_7, name = pAkt_dephospho
# Local Parameter:   id =  k1, name = k1
par k1_1_2__6=1.28135


reactio_6=Cell*k1_1_2__6*pAkt

# Reaction: id = reaction_8, name = pS6_dephospho
# Local Parameter:   id =  k1, name = k1
par k1_1_2__7=2.93167E-4


reactio_7=Cell*k1_1_2__7*pS6

# Reaction: id = reaction_9, name = TrkA_synthesis

reactio_8=Cell*TrkA_turn*pro_TrkA

# Reaction: id = reaction_10, name = TrkA_phosphorylation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__8=0.00833178


reactio_9=Cell*k1_1_2__8*NGF_TrkA

# Reaction: id = reaction_11, name = TrkA_degradation

reacti_10=Cell*TrkA_turn*TrkA

# Species:   id = NGF, name = NGF, involved in a rule 

# Species:   id = TrkA, name = TrkA, affected by kineticLaw

init TrkA=8.52065090518276
dTrkA/dt=(1/(Cell))*((-1.0 * reaction_) + ( 1.0 * reactio_8) + (-1.0 * reacti_10))

# Species:   id = pTrkA, name = pTrkA, affected by kineticLaw

init pTrkA=0.0
dpTrkA/dt=(1/(Cell))*((-1.0 * reactio_1) + ( 1.0 * reactio_2) + (-1.0 * reactio_3) + ( 1.0 * reactio_9))

# Species:   id = pTrkA_Akt, name = pTrkA_Akt, affected by kineticLaw

init pTrkA_Akt=0.0
dpTrkA_Akt/dt=(1/(Cell))*(( 1.0 * reactio_1) + (-1.0 * reactio_2))

# Species:   id = Akt, name = Akt, affected by kineticLaw

init Akt=1.15594897919397
dAkt/dt=(1/(Cell))*((-1.0 * reactio_1) + ( 1.0 * reactio_6))

# Species:   id = pAkt, name = pAkt, affected by kineticLaw

init pAkt=0.0
dpAkt/dt=(1/(Cell))*(( 1.0 * reactio_2) + (-1.0 * reactio_4) + ( 1.0 * reactio_5) + (-1.0 * reactio_6))

# Species:   id = S6, name = S6, affected by kineticLaw

init S6=3.552336039555
dS6/dt=(1/(Cell))*((-1.0 * reactio_4) + ( 1.0 * reactio_7))

# Species:   id = pAkt_S6, name = pAkt_S6, affected by kineticLaw

init pAkt_S6=0.0
dpAkt_S6/dt=(1/(Cell))*(( 1.0 * reactio_4) + (-1.0 * reactio_5))

# Species:   id = pS6, name = pS6, affected by kineticLaw

init pS6=0.0
dpS6/dt=(1/(Cell))*(( 1.0 * reactio_5) + (-1.0 * reactio_7))

# Species:   id = pro_TrkA, name = pro_TrkA, constant
par pro_TrkA=8.52065090518276


# Species:   id = NGF_TrkA, name = NGF_TrkA, affected by kineticLaw

init NGF_TrkA=0.0
dNGF_TrkA/dt=(1/(Cell))*(( 1.0 * reaction_) + (-1.0 * reactio_9))


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (t  <=  pulse_tim) then (NGF_con_1) else (0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

