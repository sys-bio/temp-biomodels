
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Nyman2012_InsulinSignalling
#
# is http://identifiers.org/biomodels.db/MODEL1207270000
# is http://identifiers.org/biomodels.db/BIOMD0000000423
# isDescribedBy http://identifiers.org/pubmed/22248283
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000343
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = default, name = default, constant
par default=1.0

# Parameter:   id =  k1a, name = k1a, constant
par k1a=0.153418

# Parameter:   id =  k1aBasic, name = k1aBasic, constant
par k1aBasic=0.0383389

# Parameter:   id =  k1b, name = k1b, constant
par k1b=3.4699E-6

# Parameter:   id =  k1c, name = k1c, constant
par k1c=0.574266

# Parameter:   id =  k1d, name = k1d, constant
par k1d=4.78844

# Parameter:   id =  k1e, name = k1e, constant
par k1e=5.25027E-5

# Parameter:   id =  k1f, name = k1f, constant
par k1f=119.353

# Parameter:   id =  k1g, name = k1g, constant
par k1g=4.14899

# Parameter:   id =  k1r, name = k1r, constant
par k1r=37954.7

# Parameter:   id =  k21, name = k21, constant
par k21=538004.0

# Parameter:   id =  k22, name = k22, constant
par k22=1.7252E-6

# Parameter:   id =  km2, name = km2, constant
par km2=262759.0

# Parameter:   id =  km23, name = km23, constant
par km23=88.9096

# Parameter:   id =  k3, name = k3, constant
par k3=8.62917E-5

# Parameter:   id =  km3, name = km3, constant
par km3=0.132671

# Parameter:   id =  ins, name = ins, constant
par ins=100.0

# Parameter:   id =  measIRS1, name = measIRS1, defined by a Rule

# Parameter:   id =  measIRp, name = measIRp, defined by a Rule

# Parameter:   id =  IRmem, name = IRmem, defined by a Rule

# assignmentRule: variable = measIRS1
measIRS1=IRSiP
aux measIRS1=measIRS1

# assignmentRule: variable = measIRp
measIRp=IRp+IRiP
aux measIRp=measIRp

# assignmentRule: variable = IRmem
IRmem=IRp+IRins+IR
aux IRmem=IRmem

# Reaction: id = v1a, name = v1a

v1a=k1a*ins*IR+k1aBasic*IR

# Reaction: id = v1b, name = v1b

v1b=k1b*IRins

# Reaction: id = v1c, name = v1c

v1c=k1c*IRins

# Reaction: id = v1d, name = v1d

v1d=k1d*IRp

# Reaction: id = v1e, name = v1e

v1e=IRiP*(k1e+k1f*Xp/(1+Xp))

# Reaction: id = v1g, name = v1g

v1g=k1g*IRp

# Reaction: id = v1r, name = v1r

v1r=k1r*IRi

# Reaction: id = v2, name = v2

v2=k21*IRS*(IRp+k22*IRiP)/(1+km23*Xp)

# Reaction: id = vm2, name = vm2

vm2=km2*IRSiP

# Reaction: id = v3, name = v3

v3=k3*X*IRSiP

# Reaction: id = vm3, name = vm3

vm3=km3*Xp

# Species:   id = IR, name = IR, affected by kineticLaw

init IR=8.94067597532632
dIR/dt=(1/(default))*((-1.0 * v1a) + ( 1.0 * v1b) + ( 1.0 * v1g) + ( 1.0 * v1r))

# Species:   id = IRins, name = IRins, affected by kineticLaw

init IRins=0.59688996214639
dIRins/dt=(1/(default))*(( 1.0 * v1a) + (-1.0 * v1b) + (-1.0 * v1c))

# Species:   id = IRp, name = IRp, affected by kineticLaw

init IRp=0.0383525925240207
dIRp/dt=(1/(default))*(( 1.0 * v1c) + (-1.0 * v1d) + (-1.0 * v1g))

# Species:   id = IRiP, name = IRiP, affected by kineticLaw

init IRiP=0.424076631823384
dIRiP/dt=(1/(default))*(( 1.0 * v1d) + (-1.0 * v1e))

# Species:   id = IRi, name = IRi, affected by kineticLaw

init IRi=4.83863890758515E-6
dIRi/dt=(1/(default))*(( 1.0 * v1e) + (-1.0 * v1r))

# Species:   id = IRS, name = IRS, affected by kineticLaw

init IRS=9.43998194225544
dIRS/dt=(1/(default))*((-1.0 * v2) + ( 1.0 * vm2))

# Species:   id = IRSiP, name = IRSiP, affected by kineticLaw

init IRSiP=0.560018057744573
dIRSiP/dt=(1/(default))*(( 1.0 * v2) + (-1.0 * vm2))

# Species:   id = X, name = X, affected by kineticLaw

init X=9.99635886407151
dX/dt=(1/(default))*((-1.0 * v3) + ( 1.0 * vm3))

# Species:   id = Xp, name = Xp, affected by kineticLaw

init Xp=0.00364113592848386
dXp/dt=(1/(default))*(( 1.0 * v3) + (-1.0 * vm3))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

