
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Schaber2012 - Hog pathway in yeast
#
# is http://identifiers.org/biomodels.db/MODEL1209110001
# is http://identifiers.org/biomodels.db/BIOMD0000000429
# isDescribedBy http://identifiers.org/pubmed/23149687
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_10, name = 1 para inh Mass action (rrev)
function_(ko,k,S,M,Ki,h)=(ko*k*S/(1+(M/Ki)^h))


# FunctionDefinition id = function_9, name = 3 param mass action (irrev)
functio_1(ko,k,M,S)=(ko*k*M*S)


# FunctionDefinition id = function_8, name = 2 param 2 S MA with inhibition (irrev)
functio_2(ko,k,M1,S1,S2,M2,Ki,h)=(ko*k*M1*S1*S2/(1+(M2/Ki)^h))


# FunctionDefinition id = function_4, name = Modified constant flux (irrev)
functio_3(k,M)=(k*M)


# FunctionDefinition id = function_6, name = transport (rev)
functio_4(A,P,S,f,ks)=(f*ks*A*(S-P))


# FunctionDefinition id = function_2, name = Modified mass action (irrev)
functio_5(k,M,S)=(k*M*S)


# FunctionDefinition id = function_5, name = 2 param mod. add. constant flux MM (irrev)
functio_6(k1,M1,k2,M2,Km)=(k1*M1*(1+k2*M2)/(Km+M1*(1+k2*M2)))


# FunctionDefinition id = function_7, name = mod. constat flux (MM) (irrev)
functio_7(k,M,Km)=(k*M/(Km+M))


# FunctionDefinition id = function_3, name = mod. MA OR (irrev)
functio_8(k1,M1,S,k2,M2)=(k1*M1*S+k2*M2*S)


# FunctionDefinition id = function_1, name = 3 param activation with inhibition (iirev)
functio_9(ko,k,M1,S,M2,h,Ki)=(ko*k*M1*S/(1+(M2/Ki)^h))

# Compartment: id = compartment_1, name = Vos, defined by a Rule

# Compartment: id = compartment_2, name = Vex, constant
par compart_1=50000.0
# Compartment: id = compartment_3, name = V, defined by a Rule

# Compartment: id = compartment_4, name = M, constant
par compart_3=1.0

# Parameter:   id =  parameter_1, name = R, constant
par parameter=8.314

# Parameter:   id =  parameter_2, name = T, constant
par paramet_1=303.15

# Parameter:   id =  parameter_3, name = mol, constant
par paramet_2=6.022E23

# Parameter:   id =  parameter_4, name = phi, constant
par paramet_3=0.93

# Parameter:   id =  parameter_5, name = c2p, constant
par paramet_4=1.0E-9

# Parameter:   id =  parameter_6, name = tm, constant
par paramet_5=10.0

# Parameter:   id =  parameter_7, name = Lp, constant
par paramet_6=0.013

# Parameter:   id =  parameter_8, name = P0, constant
par paramet_7=0.61

# Parameter:   id =  parameter_9, name = eps, constant
par paramet_8=14.3

# Parameter:   id =  parameter_10, name = minf, constant
par paramet_9=0.41

# Parameter:   id =  parameter_11, name = ce_0, constant
par parame_10=260000.0

# Parameter:   id =  parameter_12, name = V_0, constant
par parame_11=50.0

# Parameter:   id =  parameter_13, name = Vb, constant
par parame_12=20.5

# Parameter:   id =  parameter_14, name = maxHog1nucf, constant
par parame_13=0.8

# Parameter:   id =  parameter_15, name = VP_0, constant
par parame_14=47.9119840840503

# Parameter:   id =  parameter_16, name = Area, defined by a Rule

# Parameter:   id =  parameter_17, name = Hog1PPrelIniwt, constant
par parame_16=2.23

# Parameter:   id =  parameter_18, name = N2uM, constant
par parame_17=5.62907756305974E-5

# Parameter:   id =  parameter_19, name = ci_0, constant
par parame_18=502026.122077738

# Parameter:   id =  parameter_20, name = cin_0, constant
par parame_19=322026.122077738

# Parameter:   id =  parameter_21, name = Turgor, defined by a Rule

# Parameter:   id =  parameter_22, name = ActivationSln1_nlfb, defined by a Rule

# Parameter:   id =  parameter_23, name = NaCl, constant
par parame_22=0.4

# Parameter:   id =  parameter_24, name = ActivOffsetSln1_nlfb, constant
par parame_23=-7.10539561053171E-4

# Parameter:   id =  parameter_25, name = kHog1phos1, constant
par parame_24=42.6396538263077

# Parameter:   id =  parameter_26, name = kHog1dephos, constant
par parame_25=1.78587

# Parameter:   id =  parameter_27, name = ks, defined by a Rule

# Parameter:   id =  parameter_28, name = Fps1TransportCapacitty, defined by a Rule

# Parameter:   id =  parameter_29, name = FitVrel, defined by a Rule

# Parameter:   id =  parameter_30, name = FitHog1PPrel, defined by a Rule

# Parameter:   id =  parameter_31, name = FitProteinrel, defined by a Rule

# Parameter:   id =  parameter_32, name = FitGlyinrel, defined by a Rule

# Parameter:   id =  parameter_33, name = Turgor2Osm, defined by a Rule

# Parameter:   id =  parameter_34, name = Fps1ClosureRate, constant
par parame_33=0.128378897200866

# Parameter:   id =  parameter_35, name = Protein_deg_k, constant
par parame_34=6.78688610600496E-5

# Parameter:   id =  parameter_36, name = FitRNArel, defined by a Rule

# Parameter:   id =  parameter_37, name = Hog1Total, constant
par parame_36=0.382101784980495

# Parameter:   id =  parameter_38, name = Pbs2Total, constant
par parame_37=0.12158807536209

# Parameter:   id =  parameter_39, name = RNA_deg_k_MM, constant
par parame_38=7.09644965005112

# Parameter:   id =  parameter_40, name = Sho1Total, constant
par parame_39=0.131157507219292

# Parameter:   id =  parameter_41, name = kHog1phos2, constant
par parame_40=48.0003902091319

# Parameter:   id =  parameter_42, name = Hog1PPrelIniSln1, constant
par parame_41=2.23

# Parameter:   id =  parameter_43, name = Hog1PPrelIniSho1, constant
par parame_42=2.23

# Parameter:   id =  parameter_44, name = Osmex, defined by a Rule

# Parameter:   id =  parameter_45, name = Osmin, defined by a Rule

# Parameter:   id =  parameter_46, name = Vos_0, constant
par parame_45=29.5

# Parameter:   id =  parameter_47, name = A_0, constant
par parame_46=65.6342903668733

# Parameter:   id =  parameter_48, name = ts, constant
par parame_47=600.0

# Parameter:   id =  parameter_49, name = cen, defined by a Rule

# Parameter:   id =  parameter_50, name = Glyex_0, constant
par parame_49=1800.0

# Parameter:   id =  parameter_51, name = Protein_0, constant
par parame_50=0.0454266559338921

# Parameter:   id =  parameter_52, name = RNA_0, constant
par parame_51=0.034

# Parameter:   id =  parameter_53, name = Glyin_0, constant
par parame_52=180000.0

# Parameter:   id =  parameter_54, name = Hog1PP_0, constant
par parame_53=0.00681669584405203

# Parameter:   id =  parameter_55, name = ActivOffsetSho1_nlfb, constant
par parame_54=-0.0036065403549782

# Parameter:   id =  parameter_56, name = ActivationSho1_nlfb, defined by a Rule

# Parameter:   id =  parameter_57, name = Sho1BranchActive, constant
par parame_56=1.0

# Parameter:   id =  parameter_58, name = Sln1BranchActive, constant
par parame_57=1.0

# Parameter:   id =  parameter_59, name = Fps1TotalIni, constant
par parame_58=0.0510557334969518

# Parameter:   id =  parameter_60, name = Fps1TotalTrans, defined by a Rule

# Parameter:   id =  parameter_61, name = TurgorActiv_h, constant
par parame_60=2.0

# Parameter:   id =  parameter_62, name = TurgorActivation, defined by a Rule

# Parameter:   id =  parameter_63, name = TurgorDeactivation, defined by a Rule

# Parameter:   id =  parameter_64, name = v16_5_k, constant
par parame_63=0.00264562

# Parameter:   id =  parameter_65, name = v16_6_k, constant
par parame_64=0.00320327093093651

# Parameter:   id =  parameter_66, name = v16_7_k, constant
par parame_65=0.00529124000000002

# Parameter:   id =  parameter_67, name = Hog1Activity, constant
par parame_66=0.001

# Parameter:   id =  parameter_68, name = tinh, constant
par parame_67=600.0

# Parameter:   id =  parameter_69, name = Hog1Inhibition, defined by a Rule

# Parameter:   id =  parameter_70, name = Inhibition, constant
par parame_69=0.0

# Parameter:   id =  parameter_71, name = Fps1Delta, constant
par parame_70=1.0

# Parameter:   id =  parameter_72, name = v2_k, constant
par parame_71=0.607124

# Parameter:   id =  parameter_73, name = v1_fb_Ki, constant
par parame_72=0.00940584

# Parameter:   id =  parameter_74, name = v1_fb_h, constant
par parame_73=0.345701

# Parameter:   id =  parameter_75, name = v1_fb_k, constant
par parame_74=0.075474

# Parameter:   id =  parameter_76, name = v11_k, constant
par parame_75=9.06781E-5

# Parameter:   id =  parameter_77, name = v9_k, constant
par parame_76=18.1824

# Parameter:   id =  parameter_78, name = v9_Km, constant
par parame_77=0.506878

# Parameter:   id =  parameter_79, name = v4_k1, constant
par parame_78=0.00226722

# Parameter:   id =  parameter_80, name = v3_fb_Ki, constant
par parame_79=0.297524

# Parameter:   id =  parameter_81, name = v3_fb_h, constant
par parame_80=2.0793

# Parameter:   id =  parameter_82, name = v3_fb_k, constant
par parame_81=0.00459138

# Parameter:   id =  parameter_83, name = v15_5_k, constant
par parame_82=0.00529124

# Parameter:   id =  parameter_84, name = v16_6_Ki, constant
par parame_83=0.0811033

# Parameter:   id =  parameter_85, name = v16_6_h, constant
par parame_84=0.628719

# Parameter:   id =  parameter_86, name = v13_k1, constant
par parame_85=680.818

# Parameter:   id =  parameter_87, name = v13_k2, constant
par parame_86=46.8363

# Parameter:   id =  parameter_88, name = v13_Km, constant
par parame_87=0.420741

# assignmentRule: variable = compartment_3
compart_2=parame_12+compartme
aux compart_2=compart_2

# assignmentRule: variable = parameter_16
parame_15=(36*pi)^(1/3)*compart_2^(2/3)
aux parame_15=parame_15

# assignmentRule: variable = parameter_21
parame_20= piecew1 
aux parame_20=parame_20

# assignmentRule: variable = parameter_22
parame_21= piecew2 
aux parame_21=parame_21

# assignmentRule: variable = parameter_27
parame_26=parame_85*parame_50*(1+parame_86*parame_53)/(parame_87+parame_50*(1+parame_86*parame_53))*parame_45/(0.5*parame_46*(parame_52-parame_49))
aux parame_26=parame_26

# assignmentRule: variable = parameter_28
parame_27=specie_14/compart_3/parame_58
aux parame_27=parame_27

# assignmentRule: variable = parameter_29
parame_28=100*compart_2/parame_11
aux parame_28=parame_28

# assignmentRule: variable = parameter_30
parame_29=100*species_3/compartme*compartme/(parame_13*parame_36*parame_45)
aux parame_29=parame_29

# assignmentRule: variable = parameter_31
parame_30=19.9*species_7/compartme*compartme/(parame_50*parame_45)
aux parame_30=parame_30

# assignmentRule: variable = parameter_32
parame_31=17*species_1/compartme*compartme/(parame_52*parame_45)
aux parame_31=parame_31

# assignmentRule: variable = parameter_33
parame_32=parame_20/(parameter*paramet_1*paramet_4)
aux parame_32=parame_32

# assignmentRule: variable = parameter_36
parame_35=3.4*species_8/compartme*compartme/(parame_51*parame_45)
aux parame_35=parame_35

# assignmentRule: variable = parameter_45
parame_44=species_1/compartme+parame_19*parame_45/compartme
aux parame_44=parame_44

# assignmentRule: variable = parameter_49
parame_48= piecew3 
aux parame_48=parame_48

# assignmentRule: variable = parameter_44
parame_43=parame_48+specie_13/compart_1
aux parame_43=parame_43

# assignmentRule: variable = parameter_56
parame_55= piecew4 
aux parame_55=parame_55

# assignmentRule: variable = parameter_60
parame_59=specie_14/compart_3+specie_15/compart_3
aux parame_59=parame_59

# assignmentRule: variable = parameter_62
parame_61=parame_20^parame_60/(paramet_7^parame_60+parame_20^parame_60)
aux parame_61=parame_61

# assignmentRule: variable = parameter_63
parame_62=1-parame_20^parame_60/(paramet_7^parame_60+parame_20^parame_60)
aux parame_62=parame_62

# assignmentRule: variable = parameter_69
parame_68= piecew6 
aux parame_68=parame_68

# assignmentRule: variable = species_12
specie_12=parame_68*species_3/compartme*compartme
aux specie_12=specie_12

# rateRule: variable = compartment_1
init compartme=29.5
dcompartme/dt=(-paramet_6)*parame_15*(parame_20+paramet_4*parameter*paramet_1*(parame_43-parame_44))

# Reaction: id = reaction_1, name = v1_fb

reaction_=compartme*functio_9(parame_57, parame_74, parame_21, species_4/compartme, specie_12/compartme, parame_73, parame_72)

# Reaction: id = reaction_2, name = v2

reactio_1=compartme*functio_5(parame_71, species_6/compartme, species_5/compartme)

# Reaction: id = reaction_3, name = v5

reactio_2=compartme*functio_8(parame_24, species_5/compartme, species_2/compartme, parame_40, specie_11/compartme)

# Reaction: id = reaction_4, name = v6

reactio_3=compartme*functio_5(parame_25, species_6/compartme, species_9/compartme)

# Reaction: id = reaction_5, name = v11

reactio_4=compartme*functio_3(parame_75, species_8/compartme)

# Reaction: id = reaction_6, name = v12

reactio_5=parame_34*species_7

# Reaction: id = reaction_7, name = v13

reactio_6=compartme*functio_6(parame_85, species_7/compartme, parame_86, specie_12/compartme, parame_87)

# Reaction: id = reaction_8, name = v14

reactio_7=functio_4(parame_15, specie_13/compart_1, species_1/compartme, parame_27, parame_26)

# Reaction: id = reaction_9, name = v9

reactio_8=compartme*functio_7(parame_76, specie_12/compartme, parame_77)

# Reaction: id = reaction_10, name = v10

reactio_9=parame_38*species_8

# Reaction: id = reaction_11, name = v7

reacti_10=compartme*functio_8(parame_24, species_5/compartme, species_9/compartme, parame_40, specie_11/compartme)

# Reaction: id = reaction_12, name = v8

reacti_11=compartme*functio_5(parame_25, species_6/compartme, species_3/compartme)

# Reaction: id = reaction_13, name = v4

reacti_12=parame_78*specie_11

# Reaction: id = reaction_14, name = v3_fb

reacti_13=compartme*functio_2(parame_56, parame_81, parame_55, species_4/compartme, specie_10/compartme, specie_12/compartme, parame_79, parame_80)

# Reaction: id = reaction_15, name = v15_5

reacti_14=compart_3*functio_1(parame_70, parame_82, parame_62, specie_14/compart_3)

# Reaction: id = reaction_16, name = v16_6

reacti_15=compart_3*function_(parame_70, parame_64, specie_15/compart_3, specie_12/compartme, parame_83, parame_84)

# Species:   id = species_1, name = Glyin, affected by kineticLaw

init species_1=5310000.0
dspecies_1/dt=( 1.0 * reactio_6) + (-1.0 * reactio_7)

# Species:   id = species_2, name = Hog1, affected by kineticLaw

init species_2=9.6760009944572
dspecies_2/dt=(-1.0 * reactio_2) + ( 1.0 * reactio_3)

# Species:   id = species_3, name = Hog1PP, affected by kineticLaw

init species_3=0.201092527399535
dspecies_3/dt=( 1.0 * reacti_10) + (-1.0 * reacti_11)

# Species:   id = species_4, name = Pbs2, affected by kineticLaw

init species_4=3.57956846222666
dspecies_4/dt=(-1.0 * reaction_) + ( 1.0 * reactio_1) + ( 1.0 * reacti_12) + (-1.0 * reacti_13)

# Species:   id = species_5, name = Pbs2P, affected by kineticLaw

init species_5=0.00385515442085361
dspecies_5/dt=( 1.0 * reaction_) + (-1.0 * reactio_1)

# Species:   id = species_6, name = Phosphatase
# Warning species is not changed by either rules or reactions

par species_6=1.27698439056792
aux species_6=species_6

# Species:   id = species_7, name = Protein, affected by kineticLaw

init species_7=1.34008635004982
dspecies_7/dt=( 1.0 * reactio_4) + (-1.0 * reactio_5)

# Species:   id = species_8, name = RNA, affected by kineticLaw

init species_8=1.003
dspecies_8/dt=( 1.0 * reactio_8) + (-1.0 * reactio_9)

# Species:   id = species_9, name = Hog1P, affected by kineticLaw

init species_9=1.39490913506788
dspecies_9/dt=( 1.0 * reactio_2) + (-1.0 * reactio_3) + (-1.0 * reacti_10) + ( 1.0 * reacti_11)

# Species:   id = species_10, name = Sho1, affected by kineticLaw

par specie_10=3.86572185643496
aux specie_10=specie_10
dspecie_10/dt=( 1.0 * reacti_12) + (-1.0 * reacti_13)

# Species:   id = species_11, name = Sho1Pbs2P, affected by kineticLaw

par specie_11=0.00342460653415448
aux specie_11=specie_11
dspecie_11/dt=(-1.0 * reacti_12) + ( 1.0 * reacti_13)

# Species:   id = species_12, name = Hog1PPActive, involved in a rule 

# Species:   id = species_13, name = Glyex, affected by kineticLaw

par specie_13=9.0E7
aux specie_13=specie_13
dspecie_13/dt=( 1.0 * reactio_7)

# Species:   id = species_14, name = Fps1, affected by kineticLaw

par specie_14=0.0255278667484759
aux specie_14=specie_14
dspecie_14/dt=(-1.0 * reacti_14) + ( 1.0 * reacti_15)

# Species:   id = species_15, name = Fps1P, affected by kineticLaw

par specie_15=0.0255278667484759
aux specie_15=specie_15
dspecie_15/dt=( 1.0 * reacti_14) + (-1.0 * reacti_15)


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (compart_2  >  parame_14) then (paramet_8*log(compart_2/parame_14)) else (0)

piecew2=if (((parame_46-parame_15)/parame_46)  >  parame_23) then ((parame_46-parame_15)/parame_46-parame_23) else (0)

piecew3=if (t  >  parame_47) then (parame_10-parame_49+(1-exp((parame_47-t)/paramet_5))*2*paramet_3*parame_22*10^6) else (parame_10-parame_49)

piecew4=if (((parame_46-parame_15)/parame_46)  >  parame_54) then ((parame_46-parame_15)/parame_46-parame_54) else (0)

piecew5=if (t  >  parame_67) then (parame_66) else (1)

piecew6=if (parame_69  ==  1) then ( piecew5 ) else (1)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

