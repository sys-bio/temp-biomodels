
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Dritschel2018 - A mathematical model of cytotoxic and helper T cell interactions in a tumour microenvironment
#
# isDescribedBy http://identifiers.org/doi/10.1080/23737867.2018.1465863
# isDerivedFrom http://identifiers.org/pubmed/8186756
# is http://identifiers.org/biomodels.db/MODEL1907230003
# is http://identifiers.org/biomodels.db/BIOMD0000000763
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_Tumor_Elimination, name = Function_for_Tumor_Elimination
Function_(p,k,T_C,N)=(p*k*T_C*N)


# FunctionDefinition id = Function_for_T_Cytotoxic_Infiltration_Active, name = Function_for_T_Cytotoxic_Infiltration_Active
Functio_1(T_C,T_H)=(T_C*T_H)


# FunctionDefinition id = Function_for_T_Cytotoxic_Death, name = Function_for_T_Cytotoxic_Death
Functio_2(T_C)=(T_C)


# FunctionDefinition id = Function_for_T_Cytotoxic_Tumor_Infiltrate_Elimination, name = Function_for_T_Cytotoxic_Tumor_Infiltrate_Elimination
Functio_3(p,k,T_C,N)=((1-p)*k*T_C*N)


# FunctionDefinition id = Function_for_Tumor_Growth, name = Function_for_Tumor_Growth
Functio_4(gamma,N)=(gamma*(1-N)*N)


# FunctionDefinition id = Function_for_T_Helper_Infiltration_Active, name = Function_for_T_Helper_Infiltration_Active
Functio_5(alpha,Ntilde,T_H,N)=(alpha*N*T_H/(Ntilde^2+N^2))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  gamma, name = gamma, constant
par gamma=10.0

# Parameter:   id =  p, name = p, constant
par p=0.5

# Parameter:   id =  k, name = k, constant
par k=4.15

# Parameter:   id =  sigma_H, name = sigma_H, constant
par sigma_H=0.5

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.19

# Parameter:   id =  Ntilde, name = Ntilde, constant
par Ntilde=0.04

# Parameter:   id =  delta_H, name = delta_H, constant
par delta_H=1.0

# Parameter:   id =  sigma_C, name = sigma_C, constant
par sigma_C=2.0

# Reaction: id = Tumor_Growth, name = Tumor_Growth

Tumor_Gro=compartme*Functio_4(gamma, N_Tumour)

# Reaction: id = Tumor_Elimination, name = Tumor_Elimination

Tumor_Eli=compartme*Function_(p, k, T_C, N_Tumour)

# Reaction: id = T_Helper_Infiltration_Passive, name = T_Helper_Infiltration_Passive

T_Helper_=compartme*Constant_(sigma_H)

# Reaction: id = T_Cytotoxic_Infiltration_Passive, name = T_Cytotoxic_Infiltration_Passive

T_Cytotox=compartme*Constant_(sigma_C)

# Reaction: id = T_Cytotoxic_Infiltration_Active, name = T_Cytotoxic_Infiltration_Active

T_Cytot_1=compartme*Functio_1(T_C, T_H)

# Reaction: id = T_Helper_Infiltration_Active, name = T_Helper_Infiltration_Active

T_Helpe_1=compartme*Functio_5(alpha, Ntilde, T_H, N_Tumour)

# Reaction: id = T_Cytotoxic_Death, name = T_Cytotoxic_Death

T_Cytot_2=compartme*Functio_2(T_C)

# Reaction: id = T_Cytotoxic_Tumor_Infiltrate_Elimination, name = T_Cytotoxic_Tumor_Infiltrate_Elimination

T_Cytot_3=compartme*Functio_3(p, k, T_C, N_Tumour)

# Reaction: id = T_Helper_Death, name = T_Helper_Death

T_Helpe_2=compartme*delta_H*T_H

# Species:   id = N_Tumour, name = N_Tumour, affected by kineticLaw

init N_Tumour=0.01
dN_Tumour/dt=(1/(compartme))*(( 1.0 * Tumor_Gro) + (-1.0 * Tumor_Eli))

# Species:   id = T_H, name = T_H, affected by kineticLaw

init T_H=0.6
dT_H/dt=(1/(compartme))*(( 1.0 * T_Helper_) + ( 1.0 * T_Helpe_1) + (-1.0 * T_Helpe_2))

# Species:   id = T_C, name = T_C, affected by kineticLaw

init T_C=4.5
dT_C/dt=(1/(compartme))*(( 1.0 * T_Cytotox) + ( 1.0 * T_Cytot_1) + (-1.0 * T_Cytot_2) + (-1.0 * T_Cytot_3))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

