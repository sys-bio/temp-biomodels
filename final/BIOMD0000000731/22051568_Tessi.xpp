
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Robertson-Tessi M 2012 A model of tumor Immune interaction
#
# is http://identifiers.org/biomodels.db/MODEL1901250001
# is http://identifiers.org/biomodels.db/BIOMD0000000731
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = equation_for_Tumor_Growth_1, name = equation for Tumor Growth_1
equation_(P,Tumorcells,gamma,gamma1,m)=(Tumorcells/((1/gamma1)^P+(Tumorcells^(1-m)/gamma)^P)^(1/P))


# FunctionDefinition id = equation_for_Tumor_Kill_1, name = equation for Tumor Kill_1
equatio_1(S1,TGFb,Tx,func_CD8_ETC,func_TRegs,k2,k3,r0)=(r0*Tx/(1+k2*Tx/func_CD8_ETC)*1/((1+k3*func_TRegs/func_CD8_ETC)*(1+TGFb/S1)))


# FunctionDefinition id = equation_for_unlicensed_DC_production_1, name = equation for unlicensed DC production_1
equatio_2(I1,IL10,R1,Tx,alpha,func_TRegs)=(alpha*Tx/((1+IL10/I1)*(1+func_TRegs/R1)))


# FunctionDefinition id = equation_for_Dendritic_cell_licensing_1, name = equation for Dendritic cell licensing_1
equatio_3(Mh,lambda,ul_DC)=(lambda*ul_DC/(1+ul_DC/Mh))


# FunctionDefinition id = equation_for_IL2_production_1, name = equation for IL2 production_1
equatio_4(I2,IL10,S4,TGFb,pc,sl_CD4_HTC)=(pc*sl_CD4_HTC/((1+TGFb/S4)*(1+IL10/I2)))


# FunctionDefinition id = equation_for_IL2_Degradation_1, name = equation for IL2 Degradation_1
equatio_5(IL2,tc)=(IL2/tc)


# FunctionDefinition id = equation_for_TGF_beta_Production_1, name = equation for TGF beta Production_1
equatio_6(Tx,func_TRegs,p1,p2)=(p1*func_TRegs+p2*Tx)


# FunctionDefinition id = equation_for_TGF_beta_Degradation_1, name = equation for TGF beta Degradation_1
equatio_7(TGFb,ts)=(TGFb/ts)


# FunctionDefinition id = equation_for_IL10_production_1, name = equation for IL10 production_1
equatio_8(Tx,func_TRegs,p3,p4)=(p3*func_TRegs+p4*Tx)


# FunctionDefinition id = equation_for_IL10_degradation_1, name = equation for IL10 degradation_1
equatio_9(IL10,t1)=(IL10/t1)


# FunctionDefinition id = equation_for_short_lived_CD8_production_1, name = equation for short lived CD8 production_1
equati_10(M,Me,alpha1,k4,l_DC)=(alpha1*Me/(1+k4*M/l_DC))


# FunctionDefinition id = equation_for_fully_functional_CD8_production_1, name = equation for fully functional CD8 production_1
equati_11(C1,IL2,S2,TGFb,alpha2,sl_CD8_ETC)=(alpha2*sl_CD8_ETC*IL2/((1+TGFb/S2)*(C1+IL2)))


# FunctionDefinition id = equation_for_short_lived_CD4_HTC_production_1, name = equation for short lived CD4 HTC production_1
equati_12(M,Mh,alpha3,k4,l_DC,ul_DC)=(alpha3*Mh/(1+k4*M/(ul_DC+l_DC)))


# FunctionDefinition id = equation_for_fully_functional_CD4_HTC_1, name = equation for fully functional CD4 HTC_1
equati_13(C1,IL2,S2,TGFb,alpha4,sl_CD4_HTC)=(alpha4*sl_CD4_HTC*IL2/((1+TGFb/S2)*(C1+IL2)))


# FunctionDefinition id = equation_for_short_lived_TReg_production_1, name = equation for short lived TReg production_1
equati_14(M,Mr,alpha5,k4,l_DC)=(alpha5*Mr/(1+k4*M/l_DC))


# FunctionDefinition id = equation_for_fully_functional_TRegs_production_by_CD4_HTC_1, name = equation for fully functional TRegs production by CD4 HTC_1
equati_15(S3,TGFb,alpha7,func_CD4_HTC)=(alpha7*func_CD4_HTC*TGFb/(S3+TGFb))


# FunctionDefinition id = equation_for_fully_functional_TRegs_production_by_sl_TRegs_1, name = equation for fully functional TRegs production by sl_TRegs_1
equati_16(C1,IL2,alpha6,sl_TRegs)=(alpha6*sl_TRegs*IL2/(C1+IL2))


# Compartment: id = MISC, name = TumorMicroenv, constant
par MISC=1.0

# Parameter:   id =  gamma, name = gamma, constant
par gamma=333.0

# Parameter:   id =  m, name = m, constant
par m=0.5

# Parameter:   id =  gamma1, name = gamma1, defined by a Rule

# Parameter:   id =  Tx, name = Tx, defined by a Rule

# Parameter:   id =  k1, name = k1, constant
par k1=100.0

# Parameter:   id =  n, name = n, constant
par n=0.6666

# Parameter:   id =  P, name = P, constant
par P=3.0

# Parameter:   id =  deltaU, name = deltaU, constant
par deltaU=0.14

# Parameter:   id =  deltaD, name = deltaD, constant
par deltaD=0.5

# Parameter:   id =  deltaA, name = deltaA, constant
par deltaA=0.2

# Parameter:   id =  deltaE, name = deltaE, constant
par deltaE=1.0

# Parameter:   id =  deltaH, name = deltaH, constant
par deltaH=0.1

# Parameter:   id =  deltaR, name = deltaR, constant
par deltaR=0.1

# Parameter:   id =  k2, name = k2, constant
par k2=1.2

# Parameter:   id =  T1, name = T1, constant
par T1=1000000.0

# Parameter:   id =  log_Tumor, name = log Tumor, defined by a Rule

# Parameter:   id =  log_effector, name = log effector, defined by a Rule

# Parameter:   id =  log_Treg, name = log Treg, defined by a Rule

# Parameter:   id =  alpha, name = alpha, constant
par alpha=6.31E-5

# Parameter:   id =  r0, name = r0, constant
par r0=0.9

# Parameter:   id =  k3, name = k3, constant
par k3=11.0

# Parameter:   id =  S1, name = S1, constant
par S1=3.5

# Parameter:   id =  alpha1, name = alpha1, constant
par alpha1=23.0

# Parameter:   id =  k4, name = k4, constant
par k4=0.33

# Parameter:   id =  lambda, name = lambda, constant
par lambda=0.5

# Parameter:   id =  I1, name = I1, constant
par I1=0.4

# Parameter:   id =  alpha6, name = alpha6, constant
par alpha6=2.1

# Parameter:   id =  alpha7, name = alpha7, constant
par alpha7=0.022

# Parameter:   id =  C1, name = C1, constant
par C1=0.3

# Parameter:   id =  S2, name = S2, constant
par S2=2.9

# Parameter:   id =  S3, name = S3, constant
par S3=1.7

# Parameter:   id =  pc, name = pc, constant
par pc=1.7E-5

# Parameter:   id =  p1, name = p1, constant
par p1=1.8E-8

# Parameter:   id =  p2, name = p2, constant
par p2=1.1E-7

# Parameter:   id =  R1, name = R1, constant
par R1=2.0E7

# Parameter:   id =  alpha2, name = alpha2, constant
par alpha2=16.0

# Parameter:   id =  alpha3, name = alpha3, constant
par alpha3=9.9

# Parameter:   id =  alpha4, name = alpha4, constant
par alpha4=1.9

# Parameter:   id =  alpha5, name = alpha5, constant
par alpha5=5.1

# Parameter:   id =  p3, name = p3, constant
par p3=1.4E-8

# Parameter:   id =  p4, name = p4, constant
par p4=1.3E-10

# Parameter:   id =  S4, name = S4, constant
par S4=0.9

# Parameter:   id =  tc, name = tc, constant
par tc=0.08

# Parameter:   id =  ts, name = ts, constant
par ts=0.07

# Parameter:   id =  t1, name = t1, constant
par t1_1=0.05

# Parameter:   id =  I2, name = I2, constant
par I2=0.75

# Parameter:   id =  Treg_origin_fraction_CD4, name = Treg_origin_fraction_CD4, defined by a Rule

# Parameter:   id =  Treg_origin_fraction_Treg, name = Treg_origin_fraction_Treg, defined by a Rule

# assignmentRule: variable = gamma1
gamma1=gamma*T1^(m-1)
aux gamma1=gamma1

# assignmentRule: variable = Tx
Tx=Tumorcell/(1+(Tumorcell^(1-n)/k1)^P)^(1/P)
aux Tx=Tx

# assignmentRule: variable = log_Tumor
log_Tumor=log(Tumorcell)
aux log_Tumor=log_Tumor

# assignmentRule: variable = log_effector
log_effec=log(func_CD8_)
aux log_effec=log_effec

# assignmentRule: variable = log_Treg
log_Treg=log(func_TReg)
aux log_Treg=log_Treg

# assignmentRule: variable = Treg_origin_fraction_CD4
Treg_orig=func_TR_1/(func_TR_1+func_TR_3)
aux Treg_orig=Treg_orig

# assignmentRule: variable = Treg_origin_fraction_Treg
Treg_or_1=func_TR_3/(func_TR_1+func_TR_3)
aux Treg_or_1=Treg_or_1

# Reaction: id = Tumor_Growth, name = Tumor_Growth

Tumor_Gro=MISC*equation_(P, Tumorcell, gamma, gamma1, m)

# Reaction: id = Tumor_Cell_Killing, name = Tumor_Cell_Killing

Tumor_Cel=MISC*equatio_1(S1, TGFb, Tx, func_CD8_, func_TReg, k2, k3, r0)

# Reaction: id = ul_DC_Production, name = unlicensed_DC Production

ul_DC_Pro=MISC*equatio_2(I1, IL10, R1, Tx, alpha, func_TReg)

# Reaction: id = Dendritic_Cell_Licensing, name = Dendritic Cell Licensing

Dendritic=MISC*equatio_3(Mh, lambda, ul_DC)

# Reaction: id = sl_TRegs_Degradation, name = shortlived_TRegs Degradation

sl_TRegs_=MISC*deltaA*sl_TRegs

# Reaction: id = IL2_Production, name = IL2 Production

IL2_Produ=MISC*equatio_4(I2, IL10, S4, TGFb, pc, sl_CD4_HT)

# Reaction: id = IL2_Degradation, name = IL2 Degradation

IL2_Degra=MISC*equatio_5(IL2, tc)

# Reaction: id = TGFb_Production, name = TGFb Production

TGFb_Prod=MISC*equatio_6(Tx, func_TReg, p1, p2)

# Reaction: id = TGFb_Degradation, name = TGFb Degradation

TGFb_Degr=MISC*equatio_7(TGFb, ts)

# Reaction: id = IL10_Production, name = IL10 Production

IL10_Prod=MISC*equatio_8(Tx, func_TReg, p3, p4)

# Reaction: id = IL10_Degradation, name = IL10 Degradation

IL10_Degr=MISC*equatio_9(IL10, t1_1)

# Reaction: id = ul_DC_Degradation, name = unlicensed_DC Degradation

ul_DC_Deg=MISC*deltaU*ul_DC

# Reaction: id = l_DC_Degradation, name = licensed_DC Degradation

l_DC_Degr=MISC*deltaD*l_DC

# Reaction: id = sl_CD8_ETC_Production, name = shortlived_CD8_ETC Production

sl_CD8__1=MISC*equati_10(M_1, Me, alpha1, k4, l_DC)

# Reaction: id = sl_CD8_ETC_Degradation, name = shortlived_CD8_ETC Degradation

sl_CD8__2=MISC*deltaA*sl_CD8_ET

# Reaction: id = func_CD8_ETC_Production, name = func_CD8 ETC Production

func_CD_1=MISC*equati_11(C1, IL2, S2, TGFb, alpha2, sl_CD8_ET)

# Reaction: id = func_CD8_ETC_Degradation, name = func_CD8 ETC Degradation

func_CD_2=MISC*deltaE*func_CD8_

# Reaction: id = sl_CD4_HTC_Production, name = shortlived_CD4_HTC Production

sl_CD4__1=MISC*equati_12(M_1, Mh, alpha3, k4, l_DC, ul_DC)

# Reaction: id = sl_CD4_HTC_Degradation, name = shortlived_CD4_HTC Degradation

sl_CD4__2=MISC*deltaA*sl_CD4_HT

# Reaction: id = func_CD4_HTC_Production, name = func_CD4 HTC Production

func_CD_3=MISC*equati_13(C1, IL2, S2, TGFb, alpha4, sl_CD4_HT)

# Reaction: id = sl_TRegs_Production, name = shortlived_TRegs Production

sl_TReg_1=MISC*equati_14(M_1, Mr, alpha5, k4, l_DC)

# Reaction: id = func_TRegs_Production_from_CD4, name = func_TRegs Production from CD4

func_TR_1=MISC*equati_15(S3, TGFb, alpha7, func_CD4_)

# Reaction: id = func_CD4_HTC_Degradation, name = func_CD4_HTC Degradation

func_CD_4=MISC*deltaH*func_CD4_

# Reaction: id = func_TRegs_Degradation, name = func_TRegs Degradation

func_TR_2=MISC*deltaR*func_TReg

# Reaction: id = func_TRegs_Production_from_sl_TRegs, name = func_TRegs Production from sl_TRegs

func_TR_3=MISC*equati_16(C1, IL2, alpha6, sl_TRegs)

# Species:   id = Pool, name = Source, constant
par Pool=1.0


# Species:   id = Tumorcells, name = Tumorcells, affected by kineticLaw

par Tumorcell=1.0
aux Tumorcell=Tumorcell
dTumorcell/dt=(1/(MISC))*(( 1.0 * Tumor_Gro) + (-1.0 * Tumor_Cel))

# Species:   id = Sink, name = Sink, constant
par Sink=1.0


# Species:   id = sl_CD8_ETC, name = shortlived_CD8_ETC, affected by kineticLaw

par sl_CD8_ET=0.0
aux sl_CD8_ET=sl_CD8_ET
dsl_CD8_ET/dt=(1/(MISC))*(( 1.0 * sl_CD8__1) + (-1.0 * sl_CD8__2))

# Species:   id = func_CD8_ETC, name = func_CD8_ETC, affected by kineticLaw

par func_CD8_=1.0E-5
aux func_CD8_=func_CD8_
dfunc_CD8_/dt=(1/(MISC))*(( 1.0 * func_CD_1) + (-1.0 * func_CD_2))

# Species:   id = sl_CD4_HTC, name = shortlived_CD4_HTC, affected by kineticLaw

par sl_CD4_HT=0.0
aux sl_CD4_HT=sl_CD4_HT
dsl_CD4_HT/dt=(1/(MISC))*(( 1.0 * sl_CD4__1) + (-1.0 * sl_CD4__2))

# Species:   id = func_CD4_HTC, name = func_CD4_HTC, affected by kineticLaw

par func_CD4_=0.0
aux func_CD4_=func_CD4_
dfunc_CD4_/dt=(1/(MISC))*(( 1.0 * func_CD_3) + (-1.0 * func_TR_1) + (-1.0 * func_CD_4))

# Species:   id = sl_TRegs, name = shortlived_TRegs, affected by kineticLaw

init sl_TRegs=0.0
dsl_TRegs/dt=(1/(MISC))*((-1.0 * sl_TRegs_) + ( 1.0 * sl_TReg_1))

# Species:   id = ul_DC, name = unlicensed_DC, affected by kineticLaw

init ul_DC=0.0
dul_DC/dt=(1/(MISC))*(( 1.0 * ul_DC_Pro) + (-1.0 * Dendritic) + (-1.0 * ul_DC_Deg))

# Species:   id = l_DC, name = licensed_DC, affected by kineticLaw

init l_DC=1.0E-5
dl_DC/dt=(1/(MISC))*(( 1.0 * Dendritic) + (-1.0 * l_DC_Degr))

# Species:   id = func_TRegs, name = func_TRegs, affected by kineticLaw

par func_TReg=0.0
aux func_TReg=func_TReg
dfunc_TReg/dt=(1/(MISC))*(( 1.0 * func_TR_1) + (-1.0 * func_TR_2) + ( 1.0 * func_TR_3))

# Species:   id = IL2, name = IL2, affected by kineticLaw

init IL2=0.0
dIL2/dt=(1/(MISC))*(( 1.0 * IL2_Produ) + (-1.0 * IL2_Degra))

# Species:   id = TGFb, name = TGFb, affected by kineticLaw

init TGFb=0.0
dTGFb/dt=(1/(MISC))*(( 1.0 * TGFb_Prod) + (-1.0 * TGFb_Degr))

# Species:   id = IL10, name = IL10, affected by kineticLaw

init IL10=0.0
dIL10/dt=(1/(MISC))*(( 1.0 * IL10_Prod) + (-1.0 * IL10_Degr))

# Species:   id = M, name = MemTcell
# Warning species is not changed by either rules or reactions

par M_1=1.0E7
aux M_1=M_1

# Species:   id = Mh, name = MemHelperTcells
# Warning species is not changed by either rules or reactions

par Mh=6000000.0
aux Mh=Mh

# Species:   id = Me, name = MemEffectorCells
# Warning species is not changed by either rules or reactions

par Me=3000000.0
aux Me=Me

# Species:   id = Mr, name = RegMemTcell
# Warning species is not changed by either rules or reactions

par Mr=1000000.0
aux Mr=Mr

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

