
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = SmithAE2002_RanTransport
#
# is http://identifiers.org/biomodels.db/MODEL1886921294
# is http://identifiers.org/biomodels.db/BIOMD0000000164
# isDescribedBy http://identifiers.org/pubmed/11799242
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Cytosol, name = Cytosol, constant
par Cytosol=1.0

# Compartment: id = EC, name = EC, constant
par EC=1.40845070422535

# Compartment: id = Nucleus, name = Nucleus, constant
par Nucleus=0.408450704225352

# Compartment: id = Nuc_membrane, name = Nuc_membrane, constant
par Nuc_membr=0.245070422535211

# Compartment: id = PM, name = PM, constant
par PM=1.40845070422535

# Parameter:   id =  RanGAP_Kcat_FRanGTP_dephosphorylation, name = RanGAP_Kcat_FRanGTP_dephosphorylation, constant
par RanGAP_Kc=6.0

# Parameter:   id =  Vmax_RanGTP_dephosphorylation_FRanGTP_dephosphorylation, name = Vmax_RanGTP_dephosphorylation_FRanGTP_dephosphorylation, defined by a Rule

# Parameter:   id =  RanGAP_Kcat_dephosphorylationF, name = RanGAP_Kcat_dephosphorylationF, constant
par RanGAP__1=6.0

# Parameter:   id =  Vmax_dephosphorylation_dephosphorylationF, name = Vmax_dephosphorylation_dephosphorylationF, defined by a Rule

# Parameter:   id =  RanGAP_Kcat_RanGTP_dephosphorylation, name = RanGAP_Kcat_RanGTP_dephosphorylation, constant
par RanGAP__2=6.0

# Parameter:   id =  Vmax_RanGTP_dephosphorylation_RanGTP_dephosphorylation, name = Vmax_RanGTP_dephosphorylation_RanGTP_dephosphorylation, defined by a Rule

# Parameter:   id =  RanGAP_Kcat_dephosphorylation, name = RanGAP_Kcat_dephosphorylation, constant
par RanGAP__3=6.0

# Parameter:   id =  Vmax_dephosphorylation_dephosphorylation, name = Vmax_dephosphorylation_dephosphorylation, defined by a Rule

# Parameter:   id =  kinj, name = kinj, constant
par kinj=25.0

# Parameter:   id =  start, name = start, constant
par start=1.0

# Parameter:   id =  tau, name = tau, constant
par tau=0.4

# Parameter:   id =  ar_for_Microinj, name = ar_for_Microinj, defined by a Rule

# assignmentRule: variable = Vmax_RanGTP_dephosphorylation_FRanGTP_dephosphorylation
Vmax_RanG=RanGAP_Kc*RanGAP_Cy
aux Vmax_RanG=Vmax_RanG

# assignmentRule: variable = Vmax_dephosphorylation_dephosphorylationF
Vmax_deph=RanGAP_Cy*RanGAP__1
aux Vmax_deph=Vmax_deph

# assignmentRule: variable = Vmax_RanGTP_dephosphorylation_RanGTP_dephosphorylation
Vmax_Ra_1=RanGAP__2*RanGAP_Cy
aux Vmax_Ra_1=Vmax_Ra_1

# assignmentRule: variable = Vmax_dephosphorylation_dephosphorylation
Vmax_de_1=RanGAP_Cy*RanGAP__3
aux Vmax_de_1=Vmax_de_1

# assignmentRule: variable = ar_for_Microinj
ar_for_Mi= piecew1 
aux ar_for_Mi=ar_for_Mi

# Reaction: id = Carrier_FRanGTP_binding, name = Carrier FRanGTP binding
# Local Parameter:   id =  Kon_Carrier_RanGTP_binding, name = Kon_Carrier_RanGTP_binding
par Kon_Carri=0.0

# Local Parameter:   id =  Koff_Carrier_RanGTP_binding, name = Koff_Carrier_RanGTP_binding
par Koff_Carr=0.0


Carrier_F=(Kon_Carri*Carrier_C*FRanGTP_C+(-Koff_Carr*FCarrier_))*Cytosol

# Reaction: id = FRanGTP_dephosphorylation, name = FRanGTP dephosphorylation
# Local Parameter:   id =  Km_RanGTP_dephosphorylation, name = Km_RanGTP_dephosphorylation
par Km_RanGTP=0.43


FRanGTP_d=Vmax_RanG*FRanGTP_C*1/(Km_RanGTP+FRanGTP_C)*Cytosol

# Reaction: id = dephosphorylationF, name = dephosphorylationF
# Local Parameter:   id =  Km_dephosphorylation, name = Km_dephosphorylation
par Km_dephos=0.43


dephospho=Vmax_deph*FRanBP1_C*1/(Km_dephos+FRanBP1_C)*Cytosol

# Reaction: id = FRanGTP_Carrier_binding, name = FRanGTP Carrier binding
# Local Parameter:   id =  Kon_RanGTP_Carrier_binding, name = Kon_RanGTP_Carrier_binding
par Kon_RanGT=100.0

# Local Parameter:   id =  Koff_RanGTP_Carrier_binding, name = Koff_RanGTP_Carrier_binding
par Koff_RanG=1.0


FRanGTP_1=(Kon_RanGT*Carrier_N*FRanGTP_N+(-Koff_RanG*FCarrie_1))*Nucleus

# Reaction: id = NTF2_FRanGDP_Unbinding, name = NTF2_FRanGDP Unbinding
# Local Parameter:   id =  Kon_NTF2_RanGDP_binding, name = Kon_NTF2_RanGDP_binding
par Kon_NTF2_=100.0

# Local Parameter:   id =  Koff_NTF2_RanGDP_binding, name = Koff_NTF2_RanGDP_binding
par Koff_NTF2=2.5


NTF2_FRan=(Kon_NTF2_*NTF2_Cyto*FRanGDP_C+(-Koff_NTF2*FNTF2_Ran))*Cytosol

# Reaction: id = RanBP1_bindingF, name = RanBP1 bindingF
# Local Parameter:   id =  Kon_RanBP1_binding, name = Kon_RanBP1_binding
par Kon_RanBP=100.0

# Local Parameter:   id =  Koff_RanBP1_binding, name = Koff_RanBP1_binding
par Koff_RanB=0.5


RanBP1_bi=(Kon_RanBP*FCarrier_*RanBP1_Cy+(-Koff_RanB*FRanBP1_C))*Cytosol

# Reaction: id = NTF2_FRanGDP_unbinding, name = NTF2_FRanGDP unbinding
# Local Parameter:   id =  Koff_NTF2_RanGDP_unbinding, name = Koff_NTF2_RanGDP_unbinding
par Koff_NT_1=2.5

# Local Parameter:   id =  Kon_NTF2_RanGDP_unbinding, name = Kon_NTF2_RanGDP_unbinding
par Kon_NTF_1=100.0


NTF2_FR_1=(Koff_NT_1*FNTF2_R_1+(-Kon_NTF_1*NTF2_Nucl*FRanGDP_N))*Nucleus

# Reaction: id = Microinj, name = Microinj

Microinj=ar_for_Mi*Cytosol*1

# Reaction: id = FRanGDP_to_FRanGTP, name = FRanGDP to FRanGTP
# Local Parameter:   id =  RCC1Kcat, name = RCC1Kcat
par RCC1Kcat=8.5

# Local Parameter:   id =  RCC1Km, name = RCC1Km
par RCC1Km=1.1


FRanGDP_t=0.75*RCC1Kcat*RCC1_Nucl*FRanGDP_N*1/(RCC1Km+FRanGDP_N+NTF2_RanG)*Nucleus

# Reaction: id = RanGTP_dephosphorylation, name = RanGTP dephosphorylation
# Local Parameter:   id =  Km_RanGTP_dephosphorylation, name = Km_RanGTP_dephosphorylation
par Km_RanG_1=0.43


RanGTP_de=Vmax_Ra_1*RanGTP_Cy*1/(Km_RanG_1+RanGTP_Cy)*Cytosol

# Reaction: id = RanGTP_Carrier_binding, name = RanGTP Carrier binding
# Local Parameter:   id =  Kon_RanGTP_Carrier_binding, name = Kon_RanGTP_Carrier_binding
par Kon_Ran_1=100.0

# Local Parameter:   id =  Koff_RanGTP_Carrier_binding, name = Koff_RanGTP_Carrier_binding
par Koff_Ra_1=1.0


RanGTP_Ca=(Kon_Ran_1*RanGTP_Nu*Carrier_N+(-Koff_Ra_1*Carrier_1))*Nucleus

# Reaction: id = NTF2_RanGDP_Unbinding, name = NTF2_RanGDP Unbinding
# Local Parameter:   id =  Kon_NTF2_RanGDP_binding, name = Kon_NTF2_RanGDP_binding
par Kon_NTF_2=100.0

# Local Parameter:   id =  Koff_NTF2_RanGDP_binding, name = Koff_NTF2_RanGDP_binding
par Koff_NT_2=2.5


NTF2_Ra_2=(Kon_NTF_2*RanGDP_Cy*NTF2_Cyto+(-Koff_NT_2*NTF2_Ra_1))*Cytosol

# Reaction: id = dephosphorylation, name = dephosphorylation
# Local Parameter:   id =  Km_dephosphorylation, name = Km_dephosphorylation
par Km_deph_1=0.43


dephosp_1=Vmax_de_1*RanBP1_Ca*1/(Km_deph_1+RanBP1_Ca)*Cytosol

# Reaction: id = RanGDP_to_RanGTP, name = RanGDP to RanGTP
# Local Parameter:   id =  RCC1Kcat, name = RCC1Kcat
par RCC1Kca_1=8.5

# Local Parameter:   id =  RCC1Km, name = RCC1Km
par RCC1Km_1=1.1


RanGDP_to=0.75*RCC1Kca_1*RCC1_Nucl*RanGDP_Nu*1/(RCC1Km_1+RanGDP_Nu+NTF2_RanG)*Nucleus

# Reaction: id = NTF2_RAN_Nuc_Exchange, name = NTF2_RAN_Nuc_Exchange
# Local Parameter:   id =  RCC1Kcat, name = RCC1Kcat
par RCC1Kca_2=8.5

# Local Parameter:   id =  RCC1Km, name = RCC1Km
par RCC1Km__2=1.1


NTF2_RAN_=0.25*RCC1Kca_2*RCC1_Nucl*NTF2_RanG*1/(RCC1Km__2+RanGDP_Nu+NTF2_RanG)*Nucleus

# Reaction: id = NTF2_RanGDP_unbinding, name = NTF2_RanGDP unbinding
# Local Parameter:   id =  Koff_NTF2_RanGDP_unbinding, name = Koff_NTF2_RanGDP_unbinding
par Koff_NT_3=2.5

# Local Parameter:   id =  Kon_NTF2_RanGDP_unbinding, name = Kon_NTF2_RanGDP_unbinding
par Kon_NTF_3=100.0


NTF2_Ra_3=(Koff_NT_3*NTF2_RanG+(-Kon_NTF_3*RanGDP_Nu*NTF2_Nucl))*Nucleus

# Reaction: id = Carrier_RanGTP_binding, name = Carrier RanGTP binding
# Local Parameter:   id =  Kon_Carrier_RanGTP_binding, name = Kon_Carrier_RanGTP_binding
par Kon_Car_1=0.0

# Local Parameter:   id =  Koff_Carrier_RanGTP_binding, name = Koff_Carrier_RanGTP_binding
par Koff_Ca_1=0.0


Carrier_2=(Kon_Car_1*RanGTP_Cy*Carrier_C+(-Koff_Ca_1*Carrier_R))*Cytosol

# Reaction: id = NTF2_FRAN_Nuc_Exchange, name = NTF2_FRAN_Nuc_Exchange
# Local Parameter:   id =  RCC1Kcat, name = RCC1Kcat
par RCC1Kca_3=8.5

# Local Parameter:   id =  RCC1Km, name = RCC1Km
par RCC1Km__3=1.1


NTF2_FR_2=0.25*RCC1Kca_3*RCC1_Nucl*FNTF2_R_1*1/(RCC1Km__3+RanGDP_Nu+FNTF2_R_1)*Nucleus

# Reaction: id = RanBP1_binding, name = RanBP1 binding
# Local Parameter:   id =  Kon_RanBP1_binding, name = Kon_RanBP1_binding
par Kon_Ran_2=100.0

# Local Parameter:   id =  Koff_RanBP1_binding, name = Koff_RanBP1_binding
par Koff_Ra_2=0.5


RanBP1__1=(Kon_Ran_2*RanBP1_Cy*Carrier_R+(-Koff_Ra_2*RanBP1_Ca))*Cytosol

# Reaction: id = Carrier_RanGTP_flux, name = Carrier_RanGTP flux
# Local Parameter:   id =  I, name = I
par I=0.0

# Local Parameter:   id =  Carrier_RanGTP_Kperm, name = Carrier_RanGTP_Kperm
par Carrier_6=0.173333


Carrier_3=Carrier_6*(Carrier_R+(-Carrier_1))*Nuc_membr

# Reaction: id = NTF2_flux, name = NTF2 flux
# Local Parameter:   id =  I, name = I
par I_1=0.0

# Local Parameter:   id =  NTF2_Kperm, name = NTF2_Kperm
par NTF2_Kper=3.73333


NTF2_flux=NTF2_Kper*(NTF2_Cyto+(-NTF2_Nucl))*Nuc_membr

# Reaction: id = NTF2_RanGDP_flux, name = NTF2_RanGDP flux
# Local Parameter:   id =  I, name = I
par I_1_2=0.0

# Local Parameter:   id =  NTF2_RanGDP_Kperm, name = NTF2_RanGDP_Kperm
par NTF2_Ra_5=3.73333


NTF2_Ra_4=NTF2_Ra_5*(NTF2_Ra_1+(-NTF2_RanG))*Nuc_membr

# Reaction: id = Carrier_flux, name = Carrier flux
# Local Parameter:   id =  I, name = I
par I_1_2_3=0.0

# Local Parameter:   id =  Carrier_Kperm, name = Carrier_Kperm
par Carrier_K=1.86667


Carrier_4=Carrier_K*(Carrier_C+(-Carrier_N))*Nuc_membr

# Reaction: id = FRanGDP_flux, name = FRanGDP flux
# Local Parameter:   id =  I, name = I
par I_1_2_3_4=0.0

# Local Parameter:   id =  RanGDP_Kperm, name = RanGDP_Kperm
par RanGDP_Kp=0.0


FRanGDP_f=RanGDP_Kp*(FRanGDP_C+(-FRanGDP_N))*Nuc_membr

# Reaction: id = Carrier_FRanGTP_flux, name = Carrier_FRanGTP flux
# Local Parameter:   id =  I, name = I
par I_1_2_3_5=0.0

# Local Parameter:   id =  Carrier_RanGTP_Kperm, name = Carrier_RanGTP_Kperm
par Carrier_7=0.173333


Carrier_5=Carrier_7*(FCarrier_+(-FCarrie_1))*Nuc_membr

# Reaction: id = FNTF2_RanGDP_flux, name = FNTF2_RanGDP flux
# Local Parameter:   id =  I, name = I
par I_1_2_3_6=0.0

# Local Parameter:   id =  NTF2_RanGDP_Kperm, name = NTF2_RanGDP_Kperm
par NTF2_Ra_6=3.73333


FNTF2_R_2=NTF2_Ra_6*(FNTF2_Ran+(-FNTF2_R_1))*Nuc_membr

# Reaction: id = FRanGTP_flux, name = FRanGTP flux
# Local Parameter:   id =  I, name = I
par I_1_2_3_7=0.0

# Local Parameter:   id =  RanGTP_Kperm, name = RanGTP_Kperm
par RanGTP_Kp=0.0


FRanGTP_f=RanGTP_Kp*(FRanGTP_C+(-FRanGTP_N))*Nuc_membr

# Reaction: id = RanGDP_flux, name = RanGDP flux
# Local Parameter:   id =  I, name = I
par I_1_2_3_8=0.0

# Local Parameter:   id =  RanGDP_Kperm, name = RanGDP_Kperm
par RanGDP__1=0.0


RanGDP_fl=RanGDP__1*(RanGDP_Cy+(-RanGDP_Nu))*Nuc_membr

# Reaction: id = RanGTP_flux, name = RanGTP flux
# Local Parameter:   id =  I, name = I
par I_1_2_3_9=0.0

# Local Parameter:   id =  RanGTP_Kperm, name = RanGTP_Kperm
par RanGTP__1=0.0


RanGTP_fl=RanGTP__1*(RanGTP_Cy+(-RanGTP_Nu))*Nuc_membr

# Species:   id = Carrier_Cytosol, name = Carrier_Cytosol, affected by kineticLaw

par Carrier_C=11.8952664327711
aux Carrier_C=Carrier_C
dCarrier_C/dt=(1/(Cytosol))*((-1.0 * Carrier_F) + ( 1.0 * dephospho) + ( 1.0 * dephosp_1) + (-1.0 * Carrier_2) + (-1.0 * Carrier_4))

# Species:   id = Carrier_RanGTP_Cytosol, name = Carrier_RanGTP_Cytosol, affected by kineticLaw

par Carrier_R=0.00182967434742422
aux Carrier_R=Carrier_R
dCarrier_R/dt=(1/(Cytosol))*(( 1.0 * Carrier_2) + (-1.0 * RanBP1__1) + (-1.0 * Carrier_3))

# Species:   id = RanGAP_Cytosol, name = RanGAP_Cytosol
# Warning species is not changed by either rules or reactions

par RanGAP_Cy=0.5
aux RanGAP_Cy=RanGAP_Cy

# Species:   id = RanBP1_Cytosol, name = RanBP1_Cytosol, affected by kineticLaw

par RanBP1_Cy=2.91577340630959
aux RanBP1_Cy=RanBP1_Cy
dRanBP1_Cy/dt=(1/(Cytosol))*(( 1.0 * dephospho) + (-1.0 * RanBP1_bi) + ( 1.0 * dephosp_1) + (-1.0 * RanBP1__1))

# Species:   id = RanBP1_Carrier_RanGTP_Cytosol, name = RanBP1_Carrier_RanGTP_Cytosol, affected by kineticLaw

par RanBP1_Ca=0.0842265936904004
aux RanBP1_Ca=RanBP1_Ca
dRanBP1_Ca/dt=(1/(Cytosol))*((-1.0 * dephosp_1) + ( 1.0 * RanBP1__1))

# Species:   id = NTF2_Nucleus, name = NTF2_Nucleus, affected by kineticLaw

par NTF2_Nucl=0.560888580955963
aux NTF2_Nucl=NTF2_Nucl
dNTF2_Nucl/dt=(1/(Nucleus))*(( 1.0 * NTF2_FR_1) + ( 4.0 * NTF2_RAN_) + ( 1.0 * NTF2_Ra_3) + ( 4.0 * NTF2_FR_2) + ( 1.0 * NTF2_flux))

# Species:   id = RanGDP_Nucleus, name = RanGDP_Nucleus, affected by kineticLaw

par RanGDP_Nu=0.0466849733424111
aux RanGDP_Nu=RanGDP_Nu
dRanGDP_Nu/dt=(1/(Nucleus))*((-1.0 * RanGDP_to) + ( 1.0 * NTF2_RAN_) + ( 1.0 * NTF2_Ra_3) + ( 1.0 * RanGDP_fl))

# Species:   id = RCC1_Nucleus, name = RCC1_Nucleus
# Warning species is not changed by either rules or reactions

par RCC1_Nucl=0.4
aux RCC1_Nucl=RCC1_Nucl

# Species:   id = RanGTP_Nucleus, name = RanGTP_Nucleus, affected by kineticLaw

par RanGTP_Nu=0.0118032373274648
aux RanGTP_Nu=RanGTP_Nu
dRanGTP_Nu/dt=(1/(Nucleus))*((-1.0 * RanGTP_Ca) + ( 1.0 * RanGDP_to) + ( 3.0 * NTF2_RAN_) + ( 1.0 * RanGTP_fl))

# Species:   id = NTF2_RanGDP_Nucleus, name = NTF2_RanGDP_Nucleus, affected by kineticLaw

par NTF2_RanG=0.939111419044037
aux NTF2_RanG=NTF2_RanG
dNTF2_RanG/dt=(1/(Nucleus))*((-4.0 * NTF2_RAN_) + (-1.0 * NTF2_Ra_3) + ( 1.0 * NTF2_Ra_4))

# Species:   id = Carrier_Nucleus, name = Carrier_Nucleus, affected by kineticLaw

par Carrier_N=10.8211328580636
aux Carrier_N=Carrier_N
dCarrier_N/dt=(1/(Nucleus))*((-1.0 * FRanGTP_1) + (-1.0 * RanGTP_Ca) + ( 1.0 * Carrier_4))

# Species:   id = RanGDP_Cytosol, name = RanGDP_Cytosol, affected by kineticLaw

par RanGDP_Cy=1.75546095870568
aux RanGDP_Cy=RanGDP_Cy
dRanGDP_Cy/dt=(1/(Cytosol))*(( 1.0 * RanGTP_de) + (-1.0 * NTF2_Ra_2) + ( 1.0 * dephosp_1) + (-1.0 * RanGDP_fl))

# Species:   id = Carrier_RanGTP_Nucleus, name = Carrier_RanGTP_Nucleus, affected by kineticLaw

par Carrier_1=11.5694219089212
aux Carrier_1=Carrier_1
dCarrier_1/dt=(1/(Nucleus))*(( 1.0 * RanGTP_Ca) + ( 1.0 * Carrier_3))

# Species:   id = NTF2_RanGDP_Cytosol, name = NTF2_RanGDP_Cytosol, affected by kineticLaw

par NTF2_Ra_1=1.47617820113791
aux NTF2_Ra_1=NTF2_Ra_1
dNTF2_Ra_1/dt=(1/(Cytosol))*(( 1.0 * NTF2_Ra_2) + (-1.0 * NTF2_Ra_4))

# Species:   id = FRanGTP_Cytosol, name = FRanGTP_Cytosol, affected by kineticLaw

par FRanGTP_C=0.0
aux FRanGTP_C=FRanGTP_C
dFRanGTP_C/dt=(1/(Cytosol))*((-1.0 * Carrier_F) + (-1.0 * FRanGTP_d) + (-1.0 * FRanGTP_f))

# Species:   id = FCarrier_RanGTP_Cytosol, name = FCarrier_RanGTP_Cytosol, affected by kineticLaw

par FCarrier_=0.0
aux FCarrier_=FCarrier_
dFCarrier_/dt=(1/(Cytosol))*(( 1.0 * Carrier_F) + (-1.0 * RanBP1_bi) + (-1.0 * Carrier_5))

# Species:   id = FRanGDP_Cytosol, name = FRanGDP_Cytosol, affected by kineticLaw

par FRanGDP_C=1.0
aux FRanGDP_C=FRanGDP_C
dFRanGDP_C/dt=(1/(Cytosol))*(( 1.0 * FRanGTP_d) + ( 1.0 * dephospho) + (-1.0 * NTF2_FRan) + ( 1.0 * Microinj) + (-1.0 * FRanGDP_f))

# Species:   id = FNTF2_RanGDP_Cytosol, name = FNTF2_RanGDP_Cytosol, affected by kineticLaw

par FNTF2_Ran=0.0
aux FNTF2_Ran=FNTF2_Ran
dFNTF2_Ran/dt=(1/(Cytosol))*(( 1.0 * NTF2_FRan) + (-1.0 * FNTF2_R_2))

# Species:   id = FRanBP1_Carrier_RanGTP_Cytosol, name = FRanBP1_Carrier_RanGTP_Cytosol, affected by kineticLaw

par FRanBP1_C=0.0
aux FRanBP1_C=FRanBP1_C
dFRanBP1_C/dt=(1/(Cytosol))*((-1.0 * dephospho) + ( 1.0 * RanBP1_bi))

# Species:   id = FCarrier_RanGTP_Nucleus, name = FCarrier_RanGTP_Nucleus, affected by kineticLaw

par FCarrie_1=0.0
aux FCarrie_1=FCarrie_1
dFCarrie_1/dt=(1/(Nucleus))*(( 1.0 * FRanGTP_1) + ( 1.0 * Carrier_5))

# Species:   id = FRanGDP_Nucleus, name = FRanGDP_Nucleus, affected by kineticLaw

par FRanGDP_N=0.0
aux FRanGDP_N=FRanGDP_N
dFRanGDP_N/dt=(1/(Nucleus))*(( 1.0 * NTF2_FR_1) + (-1.0 * FRanGDP_t) + ( 1.0 * NTF2_FR_2) + ( 1.0 * FRanGDP_f))

# Species:   id = FNTF2_RanGDP_Nucleus, name = FNTF2_RanGDP_Nucleus, affected by kineticLaw

par FNTF2_R_1=0.0
aux FNTF2_R_1=FNTF2_R_1
dFNTF2_R_1/dt=(1/(Nucleus))*((-1.0 * NTF2_FR_1) + (-4.0 * NTF2_FR_2) + ( 1.0 * FNTF2_R_2))

# Species:   id = FRanGTP_Nucleus, name = FRanGTP_Nucleus, affected by kineticLaw

par FRanGTP_N=0.0
aux FRanGTP_N=FRanGTP_N
dFRanGTP_N/dt=(1/(Nucleus))*((-1.0 * FRanGTP_1) + ( 1.0 * FRanGDP_t) + ( 3.0 * NTF2_FR_2) + ( 1.0 * FRanGTP_f))

# Species:   id = NTF2_Cytosol, name = NTF2_Cytosol, affected by kineticLaw

par NTF2_Cyto=0.023821798862085
aux NTF2_Cyto=NTF2_Cyto
dNTF2_Cyto/dt=(1/(Cytosol))*((-1.0 * NTF2_FRan) + (-1.0 * NTF2_Ra_2) + (-1.0 * NTF2_flux))

# Species:   id = Pipet_Cytosol, name = Pipet_Cytosol
# Warning species is not changed by either rules or reactions

par Pipet_Cyt=0.0
aux Pipet_Cyt=Pipet_Cyt

# Species:   id = RanGTP_Cytosol, name = RanGTP_Cytosol, affected by kineticLaw

par RanGTP_Cy=0.0
aux RanGTP_Cy=RanGTP_Cy
dRanGTP_Cy/dt=(1/(Cytosol))*((-1.0 * RanGTP_de) + (-1.0 * Carrier_2) + (-1.0 * RanGTP_fl))


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if ((t  >  start) && (t  <  (start+tau))) then (kinj*0.0016611295681*Pipet_Cyt) else (0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

