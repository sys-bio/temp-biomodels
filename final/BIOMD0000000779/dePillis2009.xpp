
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = dePillis2009 - Mathematical model creation for cancer chemo-immunotherapy
#
# isDescribedBy http://identifiers.org/doi/10.1080/17486700802216301
# is http://identifiers.org/biomodels.db/MODEL1908050002
# is http://identifiers.org/biomodels.db/BIOMD0000000779
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_CD8_T_Cell_Death_Medicine, name = Function_for_CD8_T_Cell_Death_Medicine
Function_(K_L,delta_L,M,L)=(K_L*(1-exp((-1)*delta_L*M))*L)


# FunctionDefinition id = Function_for_Lymphocyte_Synthesis_Turnover_Bone_Marrow, name = Function_for_Lymphocyte_Synthesis_Turnover_Bone_Marrow
Functio_1(beta,alphabeta,C)=(beta*(alphabeta-C))


# FunctionDefinition id = Function_for_CD8_T_Cell_Stimulation_IL_2, name = Function_for_CD8_T_Cell_Stimulation_IL-2
Functio_2(p_I,L,I,g_I)=(p_I*L*I/(g_I+I))


# FunctionDefinition id = Function_for_IL_2_Production_Activated_CD8, name = Function_for_IL-2_Production_Activated_CD8
Functio_3(omega,L,I,zeta)=(omega*L*I/(zeta+I))


# FunctionDefinition id = Function_for_NK_Production_and_Turnover, name = Function_for_NK_Production_and_Turnover
Functio_4(f,ef,C,N)=(f*(ef*C-N))


# FunctionDefinition id = Function_for_CD8_T_Cell_Stimulation_NK, name = Function_for_CD8_T_Cell_Stimulation_NK
Functio_5(r_1,N,T)=(r_1*N*T)


# FunctionDefinition id = Function_for_CD8_Breakdown_Stimulation_IL_2, name = Function_for_CD8_Breakdown_Stimulation_IL-2
Functio_6(u,L,C,I,kappa)=(u*L^2*C*I/(kappa+I))


# FunctionDefinition id = Function_for_NK_Death_Medicine, name = Function_for_NK_Death_Medicine
Functio_7(M,K_N,delta_N,N)=(K_N*(1-exp((-1)*delta_N*M))*N)


# FunctionDefinition id = Function_for_Logistic_Tumour_Growth, name = Function_for_Logistic_Tumour_Growth
Functio_8(a,T,b)=(a*T*(1-b*T))


# FunctionDefinition id = Function_for_CD8_T_Cell_Turnover, name = Function_for_CD8_T_Cell_Turnover
Functio_9(phi,m,L,I)=(phi*m*L/(phi+I))


# FunctionDefinition id = Function_for_NK_Induced_Tumour_Death, name = Function_for_NK-Induced_Tumour_Death
Functi_10(c,N,T)=(c*N*T)


# FunctionDefinition id = Function_for_CD8_T_Cell_Stimulation_Tumour_Debris, name = Function_for_CD8_T_Cell_Stimulation_Tumour_Debris
Functi_11(j,T,L,k)=(j*T*L/(k+T))


# FunctionDefinition id = Function_for_NK_Stimulation_IL_2, name = Function_for_NK_Stimulation_IL-2
Functi_12(p_N,N,I,g_N)=(p_N*N*I/(g_N+I))


# FunctionDefinition id = Function_for_Lymphocyte_Death_Medicine, name = Function_for_Lymphocyte_Death_Medicine
Functi_13(K_C,delta_C,M,C)=(K_C*(1-exp((-1)*delta_C*M))*C)


# FunctionDefinition id = Function_for_IL_2_Production_Naive, name = Function_for_IL-2_Production_Naive
Functi_14(phi,C)=(phi*C)


# FunctionDefinition id = Function_for_Chemotherapy_Induced_Tumour_Death, name = Function_for_Chemotherapy-Induced_Tumour_Death
Functi_15(K_T,delta_T,M,T)=(K_T*(1-exp((-1)*delta_T*M))*T)


# FunctionDefinition id = Function_for_NK_Death_Tumour_Killing, name = Function_for_NK_Death_Tumour_Killing
Functi_16(p,N,T)=(p*N*T)


# FunctionDefinition id = Function_for_CD8_T_Cell_Death_Tumour_Killing, name = Function_for_CD8_T_Cell_Death_Tumour_Killing
Functi_17(q,L,T)=(q*L*T)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  a, name = a, constant
par a=0.431

# Parameter:   id =  b, name = b, constant
par b=1.02E-9

# Parameter:   id =  c, name = c, constant
par c=2.9077E-13

# Parameter:   id =  K_T, name = K_T, constant
par K_T=0.9

# Parameter:   id =  delta_T, name = delta_T, constant
par delta_T=1.8328

# Parameter:   id =  ef, name = ef, constant
par ef=0.111

# Parameter:   id =  f, name = f, constant
par f=0.0125

# Parameter:   id =  p, name = p, constant
par p=2.794E-13

# Parameter:   id =  p_N, name = p_N, constant
par p_N=0.068

# Parameter:   id =  g_N, name = g_N, constant
par g_N=250360.0

# Parameter:   id =  K_N, name = K_N, constant
par K_N=0.0675

# Parameter:   id =  delta_N, name = delta_N, constant
par delta_N=1.8328

# Parameter:   id =  m, name = m, constant
par m=0.009

# Parameter:   id =  theta, name = theta, constant
par theta=0.0025036

# Parameter:   id =  q, name = q, constant
par q=3.422E-10

# Parameter:   id =  r_1, name = r_1, constant
par r_1=2.9077E-11

# Parameter:   id =  r_2, name = r_2, constant
par r_2=5.8467E-13

# Parameter:   id =  p_I, name = p_I, constant
par p_I=2.971

# Parameter:   id =  g_I, name = g_I, constant
par g_I=2503.6

# Parameter:   id =  u, name = u, constant
par u=4.417E-14

# Parameter:   id =  kappa, name = kappa, constant
par kappa=2503.6

# Parameter:   id =  j, name = j, constant
par j=0.01245

# Parameter:   id =  k, name = k, constant
par k=2.019E7

# Parameter:   id =  K_L, name = K_L, constant
par K_L=0.0486

# Parameter:   id =  delta_L, name = delta_L, constant
par delta_L=1.8328

# Parameter:   id =  alphabeta, name = alphabeta, constant
par alphabeta=2.25E9

# Parameter:   id =  beta, name = beta, constant
par beta=0.0063

# Parameter:   id =  K_C, name = K_C, constant
par K_C=0.034

# Parameter:   id =  delta_C, name = delta_C, constant
par delta_C=1.8328

# Parameter:   id =  gamma, name = gamma, constant
par gamma=0.5199

# Parameter:   id =  mu_I, name = mu_I, constant
par mu_I=11.7427

# Parameter:   id =  omega, name = omega, constant
par omega=0.07874

# Parameter:   id =  phi, name = phi, constant
par phi=2.38405E-7

# Parameter:   id =  zeta, name = zeta, constant
par zeta=2503.6

# Parameter:   id =  d, name = d, constant
par d=0.0

# Parameter:   id =  l, name = l, constant
par l=0.0

# Parameter:   id =  s, name = s, constant
par s=0.0

# Parameter:   id =  D, name = D, defined by a Rule

# Parameter:   id =  v_M, name = v_M, constant
par v_M=0.0

# Parameter:   id =  v_I, name = v_I, constant
par v_I=0.0

# Parameter:   id =  v_L, name = v_L, constant
par v_L=0.0

# Parameter:   id =  ModelValue_34_0, name = Initial for d, constant
par ModelValu=0.0

# Parameter:   id =  ModelValue_35_0, name = Initial for l, constant
par ModelVa_1=0.0

# Parameter:   id =  ModelValue_36_0, name = Initial for s, constant
par ModelVa_2=0.0

# assignmentRule: variable = D
D_1=ModelValu*(L_CD8_T_C/T_Tumour_)^ModelVa_1/(ModelVa_2+(L_CD8_T_C/T_Tumour_)^ModelVa_1)
aux D_1=D_1

# Reaction: id = Logistic_Tumour_Growth, name = Logistic_Tumour_Growth

Logistic_=compartme*Functio_8(a, T_Tumour_, b)

# Reaction: id = NK_Induced_Tumour_Death, name = NK-Induced_Tumour_Death

NK_Induce=compartme*Functi_10(c, N_Natural, T_Tumour_)

# Reaction: id = CD8_T_Cell_Induced_Tumour_Death, name = CD8_T_Cell-Induced_Tumour_Death

CD8_T_Cel=compartme*D_1*T_Tumour_

# Reaction: id = Chemotherapy_Induced_Tumour_Death, name = Chemotherapy-Induced_Tumour_Death

Chemother=compartme*Functi_15(K_T, delta_T, M_Chemoth, T_Tumour_)

# Reaction: id = NK_Death_Tumour_Killing, name = NK_Death_Tumour_Killing

NK_Death_=compartme*Functi_16(p, N_Natural, T_Tumour_)

# Reaction: id = NK_Stimulation_IL_2, name = NK_Stimulation_IL-2

NK_Stimul=compartme*Functi_12(p_N, N_Natural, I_IL_2, g_N)

# Reaction: id = NK_Death_Medicine, name = NK_Death_Medicine

NK_Deat_1=compartme*Functio_7(M_Chemoth, K_N, delta_N, N_Natural)

# Reaction: id = CD8_T_Cell_Turnover, name = CD8_T_Cell_Turnover

CD8_T_C_1=compartme*Functio_9(phi, m, L_CD8_T_C, I_IL_2)

# Reaction: id = CD8_T_Cell_Death_Tumour_Killing, name = CD8_T_Cell_Death_Tumour_Killing

CD8_T_C_2=compartme*Functi_17(q, L_CD8_T_C, T_Tumour_)

# Reaction: id = CD8_T_Cell_Stimulation_NK, name = CD8_T_Cell_Stimulation_NK

CD8_T_C_3=compartme*Functio_5(r_1, N_Natural, T_Tumour_)

# Reaction: id = CD8_T_Cell_Activation, name = CD8_T_Cell_Activation

CD8_T_C_4=compartme*Functio_5(r_2, C_Lymphoc, T_Tumour_)

# Reaction: id = CD8_Breakdown_Stimulation_IL_2, name = CD8_Breakdown_Stimulation_IL-2

CD8_Break=compartme*Functio_6(u, L_CD8_T_C, C_Lymphoc, I_IL_2, kappa)

# Reaction: id = CD8_T_Cell_Stimulation_Tumour_Debris, name = CD8_T_Cell_Stimulation_Tumour_Debris

CD8_T_C_5=compartme*Functi_11(j, T_Tumour_, L_CD8_T_C, k)

# Reaction: id = CD8_T_Cell_Death_Medicine, name = CD8_T_Cell_Death_Medicine

CD8_T_C_6=compartme*Function_(K_L, delta_L, M_Chemoth, L_CD8_T_C)

# Reaction: id = Lymphocyte_Synthesis_Turnover_Bone_Marrow, name = Lymphocyte_Synthesis_Turnover_Bone_Marrow

Lymphocyt=compartme*Functio_1(beta, alphabeta, C_Lymphoc)

# Reaction: id = Lymphocyte_Death_Medicine, name = Lymphocyte_Death_Medicine

Lymphoc_1=compartme*Functi_13(K_C, delta_C, M_Chemoth, C_Lymphoc)

# Reaction: id = Medicine_Excretion, name = Medicine_Excretion

Medicine_=compartme*gamma*M_Chemoth

# Reaction: id = IL_2_Turnover, name = IL-2_Turnover

IL_2_Turn=compartme*mu_I*I_IL_2

# Reaction: id = IL_2_Production_Naive, name = IL-2_Production_Naive

IL_2_Prod=compartme*Functi_14(phi, C_Lymphoc)

# Reaction: id = IL_2_Production_Activated_CD8, name = IL-2_Production_Activated_CD8

IL_2_Pr_1=compartme*Functio_3(omega, L_CD8_T_C, I_IL_2, zeta)

# Reaction: id = Medicine_Injection, name = Medicine_Injection

Medicin_1=compartme*Constant_(v_M)

# Reaction: id = NK_Production_and_Turnover, name = NK_Production_and_Turnover

NK_Produc=compartme*Functio_4(f, ef, C_Lymphoc, N_Natural)

# Reaction: id = CD8_T_Cell_Stimulation_IL_2, name = CD8_T_Cell_Stimulation_IL-2

CD8_T_C_7=compartme*Functio_2(p_I, L_CD8_T_C, I_IL_2, g_I)

# Reaction: id = IL_2_Injection, name = IL-2_Injection

IL_2_Inje=compartme*Constant_(v_I)

# Reaction: id = CD8_T_Cell_Activated_Injection, name = CD8_T_Cell_Activated_Injection

CD8_T_C_8=compartme*Constant_(v_L)

# Species:   id = T_Tumour_Cells, name = T_Tumour_Cells, affected by kineticLaw

par T_Tumour_=1.0E7
aux T_Tumour_=T_Tumour_
dT_Tumour_/dt=(1/(compartme))*(( 1.0 * Logistic_) + (-1.0 * NK_Induce) + (-1.0 * CD8_T_Cel) + (-1.0 * Chemother))

# Species:   id = N_Natural_Killer_Cells, name = N_Natural_Killer_Cells, affected by kineticLaw

par N_Natural=2.5E8
aux N_Natural=N_Natural
dN_Natural/dt=(1/(compartme))*((-1.0 * NK_Death_) + ( 1.0 * NK_Stimul) + (-1.0 * NK_Deat_1) + ( 1.0 * NK_Produc))

# Species:   id = L_CD8_T_Cells, name = L_CD8_T_Cells, affected by kineticLaw

par L_CD8_T_C=526800.0
aux L_CD8_T_C=L_CD8_T_C
dL_CD8_T_C/dt=(1/(compartme))*((-1.0 * CD8_T_C_1) + (-1.0 * CD8_T_C_2) + ( 1.0 * CD8_T_C_3) + ( 1.0 * CD8_T_C_4) + (-1.0 * CD8_Break) + ( 1.0 * CD8_T_C_5) + (-1.0 * CD8_T_C_6) + ( 1.0 * CD8_T_C_7) + ( 1.0 * CD8_T_C_8))

# Species:   id = C_Lymphocytes, name = C_Lymphocytes, affected by kineticLaw

par C_Lymphoc=2.25E9
aux C_Lymphoc=C_Lymphoc
dC_Lymphoc/dt=(1/(compartme))*(( 1.0 * Lymphocyt) + (-1.0 * Lymphoc_1))

# Species:   id = M_Chemotherapy_Drug, name = M_Chemotherapy_Drug, affected by kineticLaw

par M_Chemoth=0.0
aux M_Chemoth=M_Chemoth
dM_Chemoth/dt=(1/(compartme))*((-1.0 * Medicine_) + ( 1.0 * Medicin_1))

# Species:   id = I_IL_2, name = I_IL-2, affected by kineticLaw

init I_IL_2=1073.0
dI_IL_2/dt=(1/(compartme))*((-1.0 * IL_2_Turn) + ( 1.0 * IL_2_Prod) + ( 1.0 * IL_2_Pr_1) + ( 1.0 * IL_2_Inje))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

