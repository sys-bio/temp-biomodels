
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Sedaghat2002_InsulinSignalling_noFeedback
#
# is http://identifiers.org/biomodels.db/MODEL6526728774
# is http://identifiers.org/biomodels.db/BIOMD0000000137
# isDescribedBy http://identifiers.org/pubmed/12376338
# isDerivedFrom http://identifiers.org/biomodels.db/MODEL1201140005
# isDerivedFrom http://identifiers.org/biomodels.db/MODEL1201140006
# isDerivedFrom http://identifiers.org/pubmed/1890850
# isDerivedFrom http://identifiers.org/pubmed/1890848
# isDerivedFrom http://identifiers.org/pubmed/8304439
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = CellSurface, name = CellSurface, constant
par CellSurfa=1.0

# Compartment: id = Intracellular, name = Intracellular, constant
par Intracell=1.0

# Parameter:   id =  k1, name = k1, constant
par k1=6.0E-8

# Parameter:   id =  kminus1, name = kminus1, constant
par kminus1=0.2

# Parameter:   id =  k2, name = k2, constant
par k2=6.0E-8

# Parameter:   id =  kminus2, name = kminus2, constant
par kminus2=20.0

# Parameter:   id =  k3, name = k3, constant
par k3=2500.0

# Parameter:   id =  kminus3, name = kminus3, constant
par kminus3=0.2

# Parameter:   id =  k4, name = k4, constant
par k4=3.3333334E-4

# Parameter:   id =  kminus4, name = kminus4, constant
par kminus4=0.003

# Parameter:   id =  k4prime, name = k4prime, constant
par k4prime=0.0021

# Parameter:   id =  kminus4prime, name = kminus4prime, constant
par kminus4pr=2.1E-4

# Parameter:   id =  k5, name = k5
par k5=0.0

# Parameter:   id =  kminus5, name = kminus5, constant
par kminus5=1.67E-18

# Parameter:   id =  k6, name = k6, constant
par k6=0.461

# Parameter:   id =  k7, name = k7, constant
par k7=4.16

# Parameter:   id =  kminus7, name = kminus7, constant
par kminus7=1.396

# Parameter:   id =  k8, name = k8, constant
par k8=7.06E-4

# Parameter:   id =  kminus8, name = kminus8, constant
par kminus8=10.0

# Parameter:   id =  k9, name = k9, defined by a Rule

# Parameter:   id =  k9_stimulated, name = k9_stimulated, constant
par k9_stimul=1.39

# Parameter:   id =  k9_basal, name = k9_basal, constant
par k9_basal=0.13145

# Parameter:   id =  kminus9, name = kminus9, constant
par kminus9=42.15

# Parameter:   id =  k10, name = k10, constant
par k10=2.961

# Parameter:   id =  kminus10, name = kminus10, constant
par kminus10=2.77

# Parameter:   id =  k11, name = k11, defined by a Rule

# Parameter:   id =  kminus11, name = kminus11, constant
par kminus11=6.9315

# Parameter:   id =  k12, name = k12, defined by a Rule

# Parameter:   id =  kminus12, name = kminus12, constant
par kminus12=6.9315

# Parameter:   id =  k13, name = k13, constant
par k13=0.00696

# Parameter:   id =  kminus13, name = kminus13, constant
par kminus13=0.167

# Parameter:   id =  k13prime, name = k13prime, defined by a Rule

# Parameter:   id =  k14, name = k14, constant
par k14=0.11088

# Parameter:   id =  kminus14, name = kminus14, constant
par kminus14=0.001155

# Parameter:   id =  Effect, name = Effect, defined by a Rule

# Parameter:   id =  IRp, name = IRp, constant
par IRp=897.0

# Parameter:   id =  SHIP, name = SHIP, constant
par SHIP=1.0

# Parameter:   id =  PTEN, name = PTEN, constant
par PTEN=1.0

# Parameter:   id =  PTP, name = PTP, constant
par PTP=1.0

# Parameter:   id =  APequil, name = APequil, constant
par APequil=9.09091

# Parameter:   id =  PI3K, name = PI3K, constant
par PI3K=5.0

# Parameter:   id =  x4x5, name = x4x5, defined by a Rule

# assignmentRule: variable = k9
k9=(k9_stimul+k9_basal)*x12/PI3K+k9_basal
aux k9=k9

# assignmentRule: variable = k11
k11=0.1*kminus11*(x13-0.31)/(3.1-0.31)
aux k11=k11

# assignmentRule: variable = k12
k12=0.1*kminus12*(x13-0.31)/(3.1-0.31)
aux k12=k12

# assignmentRule: variable = Effect
Effect=(0.2*x17+0.8*x19)/APequil
aux Effect=Effect

# assignmentRule: variable = k13prime
k13prime=(40/60-4/96)*kminus13*Effect
aux k13prime=k13prime

# assignmentRule: variable = x4x5
x4x5=x4+x5
aux x4x5=x4x5

# Reaction: id = R1, name = Insulin binding

R1=CellSurfa*(k1*x1*x2-kminus1*x3)

# Reaction: id = R2, name = Receptor Autophosphorylation

R2=CellSurfa*k3*x3

# Reaction: id = R3, name = Insulin Binding

R3=CellSurfa*k2*x1*x5-kminus2*x4

# Reaction: id = R4, name = Receptor dephosphorylation

R4=CellSurfa*kminus3*PTP*x5

# Reaction: id = R5, name = Receptor endocytosis

R5=CellSurfa*(k4*x2-kminus4*x6)

# Reaction: id = R6, name = Receptor transport

R6=CellSurfa*(k4prime*x4-kminus4pr*x7)

# Reaction: id = R7, name = Receptor transport

R7=CellSurfa*(k4prime*x5-kminus4pr*x8)

# Reaction: id = R8, name = Receptor synthesis

R8=Intracell*k5

# Reaction: id = R9, name = Receptor degradation

R9=Intracell*kminus5*x6

# Reaction: id = R10, name = Intracellular receptor dephosphorylation

R10=Intracell*k6*PTP*x7

# Reaction: id = R11, name = Intracellular receptor dephosphorylation

R11=Intracell*k6*PTP*x8

# Reaction: id = R12, name = IRS1 activation

R12=Intracell*(k7*x9*(x4+x5)/IRp-kminus7*PTP*x10)

# Reaction: id = R13, name = IRS1-PI3K complex formation

R13=Intracell*(k8*x10*x11-kminus8*x12)

# Reaction: id = R14, name = PI 3,4,5 P3 generation

R14=Intracell*(k9*x14-kminus9*PTEN*x13)

# Reaction: id = R15, name = PI 3,4,5P3 generation

R15=Intracell*(k10*x15-kminus10*SHIP*x13)

# Reaction: id = R16, name = Akt activation

R16=Intracell*(k11*x16-kminus11*x17)

# Reaction: id = R17, name = PKC activation

R17=Intracell*(k12*x18-kminus12*x19)

# Reaction: id = R18, name = GLUT4 synthesis

R18=Intracell*k14

# Reaction: id = R19, name = GLUT4 degradation

R19=Intracell*kminus14*x20

# Reaction: id = R20, name = GLUT4 translocation

R20=Intracell*((k13+k13prime)*x20-kminus13*x21)

# Species:   id = x1, name = Insulin
# Warning species is not changed by either rules or reactions
# Species is changed by 1 event(s)
par x1=1.0E8
aux x1=x1

# Species:   id = x2, name = Unbound Insulin Receptor, affected by kineticLaw

init x2=900.0
dx2/dt=(1/(CellSurfa))*((-1.0 * R1) + ( 1.0 * R4) + (-1.0 * R5))

# Species:   id = x3, name = Unphosphorylated once bound receptor, affected by kineticLaw

init x3=0.0
dx3/dt=(1/(CellSurfa))*(( 1.0 * R1) + (-1.0 * R2))

# Species:   id = x5, name = Phosphorylated once bound receptor, affected by kineticLaw

init x5=0.0
dx5/dt=(1/(CellSurfa))*(( 1.0 * R2) + (-1.0 * R3) + (-1.0 * R4) + (-1.0 * R7))

# Species:   id = x4, name = Phosphorylated twice bound receptor, affected by kineticLaw

init x4=0.0
dx4/dt=(1/(CellSurfa))*(( 1.0 * R3) + (-1.0 * R6))

# Species:   id = x6, name = Unbound unphosphorylated intracellular receptor, affected by kineticLaw

init x6=100.0
dx6/dt=(1/(Intracell))*(( 1.0 * R5) + ( 1.0 * R8) + (-1.0 * R9) + ( 1.0 * R10) + ( 1.0 * R11))

# Species:   id = x7, name = Phosphorylated twice bound intracellular receptor, affected by kineticLaw

init x7=0.0
dx7/dt=(1/(Intracell))*(( 1.0 * R6) + (-1.0 * R10))

# Species:   id = x8, name = Phosphorylated once bound intracellular receptor, affected by kineticLaw

init x8=0.0
dx8/dt=(1/(Intracell))*(( 1.0 * R7) + (-1.0 * R11))

# Species:   id = x9, name = Unphosphorylated IRS1, affected by kineticLaw

init x9=1000.0
dx9/dt=(1/(Intracell))*((-1.0 * R12))

# Species:   id = x10, name = Phosphorylated IRS1, affected by kineticLaw

init x10=0.0
dx10/dt=(1/(Intracell))*(( 1.0 * R12) + (-1.0 * R13))

# Species:   id = x11, name = PI3 Kinase, affected by kineticLaw

init x11=100.0
dx11/dt=(1/(Intracell))*((-1.0 * R13))

# Species:   id = x12, name = IRS1- PI3 Kinase Complex, affected by kineticLaw

init x12=0.0
dx12/dt=(1/(Intracell))*(( 1.0 * R13))

# Species:   id = x13, name = PI3,4,5P3, affected by kineticLaw

init x13=0.31
dx13/dt=(1/(Intracell))*(( 1.0 * R14) + ( 1.0 * R15))

# Species:   id = x14, name = PI4,5P2, affected by kineticLaw

init x14=99.4
dx14/dt=(1/(Intracell))*((-1.0 * R14))

# Species:   id = x15, name = PI3,4P2, affected by kineticLaw

init x15=0.29
dx15/dt=(1/(Intracell))*((-1.0 * R15))

# Species:   id = x16, name = Unactivated Akt, affected by kineticLaw

init x16=100.0
dx16/dt=(1/(Intracell))*((-1.0 * R16))

# Species:   id = x17, name = Activated Akt, affected by kineticLaw

init x17=0.0
dx17/dt=(1/(Intracell))*(( 1.0 * R16))

# Species:   id = x18, name = Unactivated PKC, affected by kineticLaw

init x18=100.0
dx18/dt=(1/(Intracell))*((-1.0 * R17))

# Species:   id = x19, name = Activated PKC, affected by kineticLaw

init x19=0.0
dx19/dt=(1/(Intracell))*(( 1.0 * R17))

# Species:   id = x20, name = Intracellular GLUT4, affected by kineticLaw

init x20=96.0
dx20/dt=(1/(Intracell))*(( 1.0 * R18) + (-1.0 * R19) + (-1.0 * R20))

# Species:   id = x21, name = Cell surface GLUT4, affected by kineticLaw

init x21=4.0
dx21/dt=(1/(CellSurfa))*(( 1.0 * R20))

# event : event_0000001
event_000=if (t >= 15) then (1.5) else (0.2)
global 1 {event_000 - 1.1} {x1=0}

# event : event_0000002
event_0_1=if ((x6+x7+x8) > 100) then (1.5) else (0.2)
global 1 {event_0_1 - 1.1} {k5=1.67E-2}

# event : event_0000003
event_0_2=if ((x6+x7+x8) <= 100) then (1.5) else (0.2)
global 1 {event_0_2 - 1.1} {k5=0.1002}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

