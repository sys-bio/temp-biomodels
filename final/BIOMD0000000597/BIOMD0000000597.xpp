
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Flis2015 - Plant clock gene circuit (P2011.1.2 PLM_71 ver 1)
#
# is http://identifiers.org/biomodels.db/MODEL1510190000
# is http://identifiers.org/biomodels.db/BIOMD0000000597
# isDescribedBy http://identifiers.org/pubmed/26468131
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000412
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_4_cLUX_m_trscr, name = function_4_cLUX_m_trscr
function_(cEC,cL,def,e,g2,g6,n13)=(n13*g2/(cEC+g2)*g6^e/(cL^e+g6^e)/def)


# FunctionDefinition id = function_4_cL_degr_1, name = function_4_cL_degr_1
functio_1(c,cL,def,g3,m3,p3)=((m3*cL+p3*cL^c/(cL^c+g3^c))/def)


# FunctionDefinition id = function_4_cL_modif_1, name = function_4_cL_modif_1
functio_2(c,cL,def,g3,p3)=(p3*cL^c/(cL^c+g3^c)/def)


# FunctionDefinition id = function_4_cLm_degr_1, name = function_4_cLm_degr_1
functio_3(cLm,def,m4)=(m4*cLm/def)


# FunctionDefinition id = function_4_cP9_m_degr_1, name = function_4_cP9_m_degr_1
functio_4(cP9_m,def,m12)=(m12*cP9_m/def)


# FunctionDefinition id = function_4_cP9_trsl_1, name = function_4_cP9_trsl_1
functio_5(cP9_m,def,p8)=(p8*cP9_m/def)


# FunctionDefinition id = function_4_cP7_m_trscr_1, name = function_4_cP7_m_trscr_1
functio_6(cL,cLm,cP9,def,e,f,g10,g11,n8,n9)=((n8*(cLm+cL)^e/((cLm+cL)^e+g10^e)+n9*cP9^f/(cP9^f+g11^f))/def)


# FunctionDefinition id = function_4_cP7_m_degr_1, name = function_4_cP7_m_degr_1
functio_7(cP7_m,def,m14)=(m14*cP7_m/def)


# FunctionDefinition id = function_4_cP7_trsl_1, name = function_4_cP7_trsl_1
functio_8(cP7_m,def,p9)=(p9*cP7_m/def)


# FunctionDefinition id = function_4_cNI_m_trscr_1, name = function_4_cNI_m_trscr_1
functio_9(b,cLm,cP7,def,e,g12,g13,n10,n11)=((n10*cLm^e/(cLm^e+g12^e)+n11*cP7^b/(cP7^b+g13^b))/def)


# FunctionDefinition id = function_4_cNI_m_degr_1, name = function_4_cNI_m_degr_1
functi_10(cNI_m,def,m16)=(m16*cNI_m/def)


# FunctionDefinition id = function_4_cNI_trsl_1, name = function_4_cNI_trsl_1
functi_11(cNI_m,def,p10)=(p10*cNI_m/def)


# FunctionDefinition id = function_4_cT_m_trscr, name = function_4_cT_m_trscr
functi_12(cEC,cL,def,e,g4,g5,n2)=(n2*g4/(cEC+g4)*g5^e/(cL^e+g5^e)/def)


# FunctionDefinition id = function_4_cT_m_degr_1, name = function_4_cT_m_degr_1
functi_13(cT_m,def,m5)=(m5*cT_m/def)


# FunctionDefinition id = function_4_cT_trsl_1, name = function_4_cT_trsl_1
functi_14(cT_m,def,p4)=(p4*cT_m/def)


# FunctionDefinition id = function_4_cE4_m_degr_1, name = function_4_cE4_m_degr_1
functi_15(cE4_m,def,m34)=(m34*cE4_m/def)


# FunctionDefinition id = function_4_cE4_trsl_1, name = function_4_cE4_trsl_1
functi_16(cE4_m,def,p23)=(p23*cE4_m/def)


# FunctionDefinition id = function_4_cE4_degr_1, name = function_4_cE4_degr_1
functi_17(cCOP1d,cCOP1n,cE3n,cE4,cLUX,def,m35,m36,m37,p21,p25,p26)=((m35*cE4+p25*cE4*cE3n-p21*p25*cE4*cE3n/(p26*cLUX+p21+m37*cCOP1d+m36*cCOP1n))/def)


# FunctionDefinition id = function_4_cE3_m_trscr_1, name = function_4_cE3_m_trscr_1
functi_18(cL,def,e,g16,n3)=(n3*g16^e/(cL^e+g16^e)/def)


# FunctionDefinition id = function_4_cE3_m_degr_1, name = function_4_cE3_m_degr_1
functi_19(cE3_m,def,m26)=(m26*cE3_m/def)


# FunctionDefinition id = function_4_cE3_trsl_1, name = function_4_cE3_trsl_1
functi_20(cE3_m,def,p16)=(p16*cE3_m/def)


# FunctionDefinition id = function_4_cE3_degr_1, name = function_4_cE3_degr_1
functi_21(cCOP1c,cE3,def,m9)=(m9*cE3*cCOP1c/def)


# FunctionDefinition id = function_4_cE3n_import_1, name = function_4_cE3n_import_1
functi_22(cE3,cE3n,def,p19,p20)=((p19*cE3-p20*cE3n)/def)


# FunctionDefinition id = function_4_cE3n_degr_1, name = function_4_cE3n_degr_1
functi_23(cCOP1d,cCOP1n,cE3n,cE4,cG,cLUX,def,m19,m29,m30,m36,m37,p17,p21,p25,p26,p28,p29)=((m29*cE3n*cCOP1n+m30*cE3n*cCOP1d+p25*cE4*cE3n-p21*p25*cE4*cE3n/(p26*cLUX+p21+m37*cCOP1d+m36*cCOP1n)+p17*cE3n*p28*cG/(p29+m19+p17*cE3n))/def)


# FunctionDefinition id = function_4_cLUX_m_degr_1, name = function_4_cLUX_m_degr_1
functi_24(cLUX_m,def,m34)=(m34*cLUX_m/def)


# FunctionDefinition id = function_4_cLUX_trsl_1, name = function_4_cLUX_trsl_1
functi_25(cLUX_m,def,p27)=(p27*cLUX_m/def)


# FunctionDefinition id = function_4_cLUX_degr_1, name = function_4_cLUX_degr_1
functi_26(cCOP1d,cCOP1n,cE3n,cE4,cLUX,def,m36,m37,m39,p21,p25,p26)=((m39*cLUX+p26*cLUX*p25*cE4*cE3n/(p26*cLUX+p21+m37*cCOP1d+m36*cCOP1n))/def)


# FunctionDefinition id = function_4_cCOP1c_trsl_1, name = function_4_cCOP1c_trsl_1
functi_27(def,n5)=(n5/def)


# FunctionDefinition id = function_4_cCOP1n_import_1, name = function_4_cCOP1n_import_1
functi_28(cCOP1c,def,p6)=(p6*cCOP1c/def)


# FunctionDefinition id = function_4_cG_m_degr_1, name = function_4_cG_m_degr_1
functi_29(cG_m,def,m18)=(m18*cG_m/def)


# FunctionDefinition id = function_4_cL_m_degr_L, name = function_4_cL_m_degr_L
functi_30(m1,L,m2,cL_m,def)=((m1*L+m2)*cL_m/def)


# FunctionDefinition id = function_4_cG_trsl_1, name = function_4_cG_trsl_1
functi_31(cG_m,def,p11)=(p11*cG_m/def)


# FunctionDefinition id = function_4_cG_degr_1, name = function_4_cG_degr_1
functi_32(cE3n,cG,def,m19,p17,p28,p29)=((m19*cG+p28*cG-p29*p28*cG/(p29+m19+p17*cE3n))/def)


# FunctionDefinition id = function_4_cZTL_trsl_1, name = function_4_cZTL_trsl_1
functi_33(def,p14)=(p14/def)


# FunctionDefinition id = function_4_cZTL_degr_1, name = function_4_cZTL_degr_1
functi_34(cZTL,def,m20)=(m20*cZTL/def)


# FunctionDefinition id = function_4_cZG_degr_1, name = function_4_cZG_degr_1
functi_35(cZG,def,m21)=(m21*cZG/def)


# FunctionDefinition id = function_4_cG_cE3_assoc_1, name = function_4_cG_cE3_assoc_1
functi_36(cE3,cG,def,p17)=(p17*cE3*cG/def)


# FunctionDefinition id = function_4_cEG_degr_1, name = function_4_cEG_degr_1
functi_37(cCOP1c,cCOP1d,cCOP1n,cE3n,cEG,cG,def,m10,m19,m9,p17,p18,p28,p29,p31)=((m9*cEG*cCOP1c+p18*cEG-p31*(p18*cEG+p17*cE3n*p28*cG/(p29+m19+p17*cE3n))/(m9*cCOP1n+m10*cCOP1d+p31))/def)


# FunctionDefinition id = function_4_cEC_form_1, name = function_4_cEC_form_1
functi_38(cCOP1d,cCOP1n,cE3n,cE4,cLUX,def,m36,m37,p21,p25,p26)=(p26*cLUX*p25*cE4*cE3n/(p26*cLUX+p21+m37*cCOP1d+m36*cCOP1n)/def)


# FunctionDefinition id = stepFunction, name = tanh() step function
stepFunct(t,offset,amplitude,phase,pulseDuration,cyclePeriod,rampDuration)=(offset+0.5*amplitude*(1+tanh(cyclePeriod*((t+phase)/cyclePeriod-flr((t+phase)/cyclePeriod))/rampDuration))-0.5*amplitude*(1+tanh((cyclePeriod*((t+phase)/cyclePeriod-flr((t+phase)/cyclePeriod))-pulseDuration)/rampDuration))+0.5*amplitude*(1+tanh((cyclePeriod*((t+phase)/cyclePeriod-flr((t+phase)/cyclePeriod))-cyclePeriod)/rampDuration)))


# FunctionDefinition id = function_4_cL_m_trscr, name = function_4_cL_m_trscr
functi_39(L,a,cNI,cP,cP7,cP9,cT,def,g1,n1,q1)=((L*q1*cP+n1*g1^a/((cP9+cP7+cNI+cT)^a+g1^a))/def)


# FunctionDefinition id = function_4_cL_trsl, name = function_4_cL_trsl
functi_40(L,cL_m,def,p1,p2)=(cL_m*(p1*L+p2)/def)


# FunctionDefinition id = function_4_cP_trsl, name = function_4_cP_trsl
functi_41(D,cP,def,p7)=(p7*D*(1-cP)/def)


# FunctionDefinition id = function_4_cP_degr, name = function_4_cP_degr
functi_42(L,cP,def,m11)=(m11*cP*L/def)


# FunctionDefinition id = function_4_cP9_m_trscr_1, name = function_4_cP9_m_trscr_1
functi_43(L,cEC,cL,cP,def,e,g8,g9,n4,n7,q3)=((L*q3*cP+(n4+n7*cL^e/(cL^e+g9^e))*g8/(cEC+g8))/def)


# FunctionDefinition id = function_4_cP9_degr, name = function_4_cP9_degr
functi_44(D,cP9,def,m13,m22)=((m13+m22*D)*cP9/def)


# FunctionDefinition id = function_4_cP7_degr, name = function_4_cP7_degr
functi_45(D,cP7,def,m15,m23)=((m15+m23*D)*cP7/def)


# FunctionDefinition id = function_4_cNI_degr, name = function_4_cNI_degr
functi_46(D,cNI,def,m17,m24)=((m17+m24*D)*cNI/def)


# FunctionDefinition id = function_4_cT_degr, name = function_4_cT_degr
functi_47(D,cT,cZG,cZTL,def,m6,m7,m8,p5)=(((m6+m7*D)*cT*(p5*cZTL+cZG)+m8*cT)/def)


# FunctionDefinition id = function_4_cCOP1c_degr, name = function_4_cCOP1c_degr
functi_48(L,cCOP1c,def,m27,p15)=(m27*cCOP1c*(1+p15*L)/def)


# FunctionDefinition id = function_4_cCOP1n_degr, name = function_4_cCOP1n_degr
functi_49(L,cCOP1n,def,m27,p15)=(m27*cCOP1n*(1+p15*L)/def)


# FunctionDefinition id = function_4_cCOP1d_activ, name = function_4_cCOP1d_activ
functi_50(L,cCOP1n,cP,def,n14,n6)=((n6*L*cP*cCOP1n+n14*cCOP1n)/def)


# FunctionDefinition id = function_4_cCOP1d_degr, name = function_4_cCOP1d_degr
functi_51(D,cCOP1d,def,m31,m33)=(m31*(1+m33*D)*cCOP1d/def)


# FunctionDefinition id = function_4_cG_m_trscr_1, name = function_4_cG_m_trscr_1
functi_52(L,cEC,cL,cP,def,e,g14,g15,n12,q2)=((L*q2*cP+n12*g14/(cEC+g14)*g15^e/(cL^e+g15^e))/def)


# FunctionDefinition id = function_4_cG_cZTL_assoc, name = function_4_cG_cZTL_assoc
functi_53(D,L,cG,cZG,cZTL,def,p12,p13)=((p12*L*cZTL*cG-p13*D*cZG)/def)


# FunctionDefinition id = function_4_cEC_degr, name = function_4_cEC_degr
functi_54(L,cCOP1d,cCOP1n,cE3n,cEC,cEG,cG,d,def,g7,m10,m19,m32,m36,m37,m9,p17,p18,p24,p28,p29,p31)=((m36*cCOP1n*cEC+m37*cCOP1d*cEC+m32*cEC*(1+p24*L*(p28*cG/(p29+m19+p17*cE3n)+(p18*cEG+p17*cE3n*p28*cG/(p29+m19+p17*cE3n))/(m9*cCOP1n+m10*cCOP1d+p31))^d/((p28*cG/(p29+m19+p17*cE3n)+(p18*cEG+p17*cE3n*p28*cG/(p29+m19+p17*cE3n))/(m9*cCOP1n+m10*cCOP1d+p31))^d+g7^d)))/def)


# Compartment: id = def, name = def, constant
par def=1.0

# Parameter:   id =  n1, name = n1, constant
par n1=2.6

# Parameter:   id =  n2, name = n2, constant
par n2=0.64

# Parameter:   id =  n3, name = n3, constant
par n3=0.29

# Parameter:   id =  n4, name = n4, constant
par n4=0.07

# Parameter:   id =  n5, name = n5, constant
par n5=0.23

# Parameter:   id =  n6, name = n6, constant
par n6=20.0

# Parameter:   id =  n7, name = n7, constant
par n7=0.2

# Parameter:   id =  n8, name = n8, constant
par n8=0.5

# Parameter:   id =  n9, name = n9, constant
par n9=0.2

# Parameter:   id =  n10, name = n10, constant
par n10=0.4

# Parameter:   id =  n11, name = n11, constant
par n11=0.6

# Parameter:   id =  n12, name = n12, constant
par n12=12.5

# Parameter:   id =  n13, name = n13, constant
par n13=1.3

# Parameter:   id =  n14, name = n14, constant
par n14=0.1

# Parameter:   id =  g1, name = g1, constant
par g1=0.1

# Parameter:   id =  g2, name = g2, constant
par g2=0.01

# Parameter:   id =  g3, name = g3, constant
par g3=0.6

# Parameter:   id =  g4, name = g4, constant
par g4=0.01

# Parameter:   id =  g5, name = g5, constant
par g5=0.15

# Parameter:   id =  g6, name = g6, constant
par g6=0.3

# Parameter:   id =  g7, name = g7, constant
par g7=0.6

# Parameter:   id =  g8, name = g8, constant
par g8=0.01

# Parameter:   id =  g9, name = g9, constant
par g9=0.3

# Parameter:   id =  g10, name = g10, constant
par g10=0.5

# Parameter:   id =  g11, name = g11, constant
par g11=0.7

# Parameter:   id =  g12, name = g12, constant
par g12=0.2

# Parameter:   id =  g13, name = g13, constant
par g13=1.0

# Parameter:   id =  g14, name = g14, constant
par g14=0.004

# Parameter:   id =  g15, name = g15, constant
par g15=0.4

# Parameter:   id =  g16, name = g16, constant
par g16=0.3

# Parameter:   id =  m1, name = m1, constant
par m1=0.3

# Parameter:   id =  m2, name = m2, constant
par m2=0.24

# Parameter:   id =  m3, name = m3, constant
par m3=0.2

# Parameter:   id =  m4, name = m4, constant
par m4=0.2

# Parameter:   id =  m5, name = m5, constant
par m5=0.3

# Parameter:   id =  m6, name = m6, constant
par m6=0.3

# Parameter:   id =  m7, name = m7, constant
par m7=0.7

# Parameter:   id =  m8, name = m8, constant
par m8=0.4

# Parameter:   id =  m9, name = m9, constant
par m9=1.1

# Parameter:   id =  m10, name = m10, constant
par m10=1.0

# Parameter:   id =  m11, name = m11, constant
par m11=1.0

# Parameter:   id =  m12, name = m12, constant
par m12=1.0

# Parameter:   id =  m13, name = m13, constant
par m13=0.32

# Parameter:   id =  m14, name = m14, constant
par m14=0.4

# Parameter:   id =  m15, name = m15, constant
par m15=0.7

# Parameter:   id =  m16, name = m16, constant
par m16=0.5

# Parameter:   id =  m17, name = m17, constant
par m17=0.5

# Parameter:   id =  m18, name = m18, constant
par m18=3.4

# Parameter:   id =  m19, name = m19, constant
par m19=0.2

# Parameter:   id =  m20, name = m20, constant
par m20=0.6

# Parameter:   id =  m21, name = m21, constant
par m21=0.08

# Parameter:   id =  m22, name = m22, constant
par m22=0.1

# Parameter:   id =  m23, name = m23, constant
par m23=1.8

# Parameter:   id =  m24, name = m24, constant
par m24=0.1

# Parameter:   id =  m25, name = m25, constant
par m25=1.8

# Parameter:   id =  m26, name = m26, constant
par m26=0.5

# Parameter:   id =  m27, name = m27, constant
par m27=0.1

# Parameter:   id =  m28, name = m28, constant
par m28=20.0

# Parameter:   id =  m29, name = m29, constant
par m29=5.0

# Parameter:   id =  m30, name = m30, constant
par m30=3.0

# Parameter:   id =  m31, name = m31, constant
par m31=0.3

# Parameter:   id =  m32, name = m32, constant
par m32=0.2

# Parameter:   id =  m33, name = m33, constant
par m33=13.0

# Parameter:   id =  m34, name = m34, constant
par m34=0.6

# Parameter:   id =  m35, name = m35, constant
par m35=0.3

# Parameter:   id =  m36, name = m36, constant
par m36=0.1

# Parameter:   id =  m37, name = m37, constant
par m37=0.8

# Parameter:   id =  m38, name = m38, constant
par m38=0.5

# Parameter:   id =  m39, name = m39, constant
par m39=0.3

# Parameter:   id =  a, name = a, constant
par a=2.0

# Parameter:   id =  b, name = b, constant
par b=2.0

# Parameter:   id =  c, name = c, constant
par c=2.0

# Parameter:   id =  d, name = d, constant
par d=2.0

# Parameter:   id =  e, name = e, constant
par e=2.0

# Parameter:   id =  f, name = f, constant
par f=2.0

# Parameter:   id =  p1, name = p1, constant
par p1=0.13

# Parameter:   id =  p2, name = p2, constant
par p2=0.27

# Parameter:   id =  p3, name = p3, constant
par p3=0.1

# Parameter:   id =  p4, name = p4, constant
par p4=0.56

# Parameter:   id =  p5, name = p5, constant
par p5=4.0

# Parameter:   id =  p6, name = p6, constant
par p6=0.6

# Parameter:   id =  p7, name = p7, constant
par p7=0.3

# Parameter:   id =  p8, name = p8, constant
par p8=0.6

# Parameter:   id =  p9, name = p9, constant
par p9=0.8

# Parameter:   id =  p10, name = p10, constant
par p10=0.54

# Parameter:   id =  p11, name = p11, constant
par p11=0.51

# Parameter:   id =  p12, name = p12, constant
par p12=3.4

# Parameter:   id =  p13, name = p13, constant
par p13=0.1

# Parameter:   id =  p14, name = p14, constant
par p14=0.14

# Parameter:   id =  p15, name = p15, constant
par p15=3.0

# Parameter:   id =  p16, name = p16, constant
par p16=0.62

# Parameter:   id =  p17, name = p17, constant
par p17=4.8

# Parameter:   id =  p18, name = p18, constant
par p18=4.0

# Parameter:   id =  p19, name = p19, constant
par p19=1.0

# Parameter:   id =  p20, name = p20, constant
par p20=0.1

# Parameter:   id =  p21, name = p21, constant
par p21=1.0

# Parameter:   id =  p22, name = p22, constant
par p22=0.5

# Parameter:   id =  p23, name = p23, constant
par p23=0.37

# Parameter:   id =  p24, name = p24, constant
par p24=10.0

# Parameter:   id =  p25, name = p25, constant
par p25=8.0

# Parameter:   id =  p26, name = p26, constant
par p26=0.3

# Parameter:   id =  p27, name = p27, constant
par p27=0.8

# Parameter:   id =  p28, name = p28, constant
par p28=2.0

# Parameter:   id =  p29, name = p29, constant
par p29=0.1

# Parameter:   id =  p30, name = p30, constant
par p30=0.9

# Parameter:   id =  p31, name = p31, constant
par p31=0.1

# Parameter:   id =  q1, name = q1, constant
par q1=1.2

# Parameter:   id =  q2, name = q2, constant
par q2=1.56

# Parameter:   id =  q3, name = q3, constant
par q3=2.8

# Parameter:   id =  L, name = L, defined by a Rule

# Parameter:   id =  D, name = D, defined by a Rule

# Parameter:   id =  E34, name = E34, constant
par E34=1.0

# Parameter:   id =  Gn, name = Gn, constant
par Gn=1.0

# Parameter:   id =  EGn, name = EGn, constant
par EGn=1.0

# Parameter:   id =  step1, name = Lightstep, defined by a Rule

# Parameter:   id =  offsetStep1, name = offsetStep1
par offsetSte=0.0

# Parameter:   id =  amplitudeStep1, name = amplitudeStep1
par amplitude=1.0

# Parameter:   id =  phaseStep1, name = phaseStep1, constant
par phaseStep=0.0

# Parameter:   id =  pulseDurationStep1, name = pulseDurationStep1, constant
par pulseDura=12.0

# Parameter:   id =  cyclePeriodStep1, name = cyclePeriodStep1, constant
par cyclePeri=24.0

# Parameter:   id =  rampDurationStep1, name = rampDurationStep1, constant
par rampDurat=0.05

# assignmentRule: variable = step1
step1=stepFunct(t, offsetSte, amplitude, phaseStep, pulseDura, cyclePeri, rampDurat)
aux step1=step1

# assignmentRule: variable = L
L=step1
aux L=L

# assignmentRule: variable = D
D_1=1-L
aux D_1=D_1

# Reaction: id = cL_m_trscr, name = cL_m_trscr

cL_m_trsc=def*functi_39(L, a, cNI, cP, cP7, cP9, cT, def, g1, n1, q1)

# Reaction: id = cL_m_degr, name = cL_m_degr

cL_m_degr=def*functi_30(m1, L, m2, cL_m, def)

# Reaction: id = cL_trsl, name = cL_trsl

cL_trsl=def*functi_40(L, cL_m, def, p1, p2)

# Reaction: id = cL_degr, name = cL_degr

cL_degr=def*functio_1(c, cL, def, g3, m3, p3)

# Reaction: id = cL_modif, name = cL_modif

cL_modif=def*functio_2(c, cL, def, g3, p3)

# Reaction: id = cLm_degr, name = cLm_degr

cLm_degr=def*functio_3(cLm, def, m4)

# Reaction: id = cP_trsl, name = cP_trsl

cP_trsl=def*functi_41(D_1, cP, def, p7)

# Reaction: id = cP_degr, name = cP_degr

cP_degr=def*functi_42(L, cP, def, m11)

# Reaction: id = cP9_m_trscr, name = cP9_m_trscr

cP9_m_trs=def*functi_43(L, cEC, cL, cP, def, e, g8, g9, n4, n7, q3)

# Reaction: id = cP9_m_degr, name = cP9_m_degr

cP9_m_deg=def*functio_4(cP9_m, def, m12)

# Reaction: id = cP9_trsl, name = cP9_trsl

cP9_trsl=def*functio_5(cP9_m, def, p8)

# Reaction: id = cP9_degr, name = cP9_degr

cP9_degr=def*functi_44(D_1, cP9, def, m13, m22)

# Reaction: id = cP7_m_trscr, name = cP7_m_trscr

cP7_m_trs=def*functio_6(cL, cLm, cP9, def, e, f, g10, g11, n8, n9)

# Reaction: id = cP7_m_degr, name = cP7_m_degr

cP7_m_deg=def*functio_7(cP7_m, def, m14)

# Reaction: id = cP7_trsl, name = cP7_trsl

cP7_trsl=def*functio_8(cP7_m, def, p9)

# Reaction: id = cP7_degr, name = cP7_degr

cP7_degr=def*functi_45(D_1, cP7, def, m15, m23)

# Reaction: id = cNI_m_trscr, name = cNI_m_trscr

cNI_m_trs=def*functio_9(b, cLm, cP7, def, e, g12, g13, n10, n11)

# Reaction: id = cNI_m_degr, name = cNI_m_degr

cNI_m_deg=def*functi_10(cNI_m, def, m16)

# Reaction: id = cNI_trsl, name = cNI_trsl

cNI_trsl=def*functi_11(cNI_m, def, p10)

# Reaction: id = cNI_degr, name = cNI_degr

cNI_degr=def*functi_46(D_1, cNI, def, m17, m24)

# Reaction: id = cT_m_trscr, name = cT_m_trscr

cT_m_trsc=def*functi_12(cEC, cL, def, e, g4, g5, n2)

# Reaction: id = cT_m_degr, name = cT_m_degr

cT_m_degr=def*functi_13(cT_m, def, m5)

# Reaction: id = cT_trsl, name = cT_trsl

cT_trsl=def*functi_14(cT_m, def, p4)

# Reaction: id = cT_degr, name = cT_degr

cT_degr=def*functi_47(D_1, cT, cZG, cZTL, def, m6, m7, m8, p5)

# Reaction: id = cE4_m_trscr, name = cE4_m_trscr

cE4_m_trs=def*function_(cEC, cL, def, e, g2, g6, n13)

# Reaction: id = cE4_m_degr, name = cE4_m_degr

cE4_m_deg=def*functi_15(cE4_m, def, m34)

# Reaction: id = cE4_trsl, name = cE4_trsl

cE4_trsl=def*functi_16(cE4_m, def, p23)

# Reaction: id = cE4_degr, name = cE4_degr

cE4_degr=def*functi_17(cCOP1d, cCOP1n, cE3n, cE4, cLUX, def, m35, m36, m37, p21, p25, p26)

# Reaction: id = cE3_m_trscr, name = cE3_m_trscr

cE3_m_trs=def*functi_18(cL, def, e, g16, n3)

# Reaction: id = cE3_m_degr, name = cE3_m_degr

cE3_m_deg=def*functi_19(cE3_m, def, m26)

# Reaction: id = cE3_trsl, name = cE3_trsl

cE3_trsl=def*functi_20(cE3_m, def, p16)

# Reaction: id = cE3_degr, name = cE3_degr

cE3_degr=def*functi_21(cCOP1c, cE3, def, m9)

# Reaction: id = cE3n_import, name = cE3n_import

cE3n_impo=def*functi_22(cE3, cE3n, def, p19, p20)

# Reaction: id = cE3n_degr, name = cE3n_degr

cE3n_degr=def*functi_23(cCOP1d, cCOP1n, cE3n, cE4, cG, cLUX, def, m19, m29, m30, m36, m37, p17, p21, p25, p26, p28, p29)

# Reaction: id = cLUX_m_trscr, name = cLUX_m_trscr

cLUX_m_tr=def*function_(cEC, cL, def, e, g2, g6, n13)

# Reaction: id = cLUX_m_degr, name = cLUX_m_degr

cLUX_m_de=def*functi_24(cLUX_m, def, m34)

# Reaction: id = cLUX_trsl, name = cLUX_trsl

cLUX_trsl=def*functi_25(cLUX_m, def, p27)

# Reaction: id = cLUX_degr, name = cLUX_degr

cLUX_degr=def*functi_26(cCOP1d, cCOP1n, cE3n, cE4, cLUX, def, m36, m37, m39, p21, p25, p26)

# Reaction: id = cCOP1c_trsl, name = cCOP1c_trsl

cCOP1c_tr=def*functi_27(def, n5)

# Reaction: id = cCOP1c_degr, name = cCOP1c_degr

cCOP1c_de=def*functi_48(L, cCOP1c, def, m27, p15)

# Reaction: id = cCOP1n_import, name = cCOP1n_import

cCOP1n_im=def*functi_28(cCOP1c, def, p6)

# Reaction: id = cCOP1n_degr, name = cCOP1n_degr

cCOP1n_de=def*functi_49(L, cCOP1n, def, m27, p15)

# Reaction: id = cCOP1d_activ, name = cCOP1d_activ

cCOP1d_ac=def*functi_50(L, cCOP1n, cP, def, n14, n6)

# Reaction: id = cCOP1d_degr, name = cCOP1d_degr

cCOP1d_de=def*functi_51(D_1, cCOP1d, def, m31, m33)

# Reaction: id = cG_m_trscr, name = cG_m_trscr

cG_m_trsc=def*functi_52(L, cEC, cL, cP, def, e, g14, g15, n12, q2)

# Reaction: id = cG_m_degr, name = cG_m_degr

cG_m_degr=def*functi_29(cG_m, def, m18)

# Reaction: id = cG_trsl, name = cG_trsl

cG_trsl=def*functi_31(cG_m, def, p11)

# Reaction: id = cG_degr, name = cG_degr

cG_degr=def*functi_32(cE3n, cG, def, m19, p17, p28, p29)

# Reaction: id = cG_cZTL_assoc, name = cG_cZTL_assoc

cG_cZTL_a=def*functi_53(D_1, L, cG, cZG, cZTL, def, p12, p13)

# Reaction: id = cZTL_trsl, name = cZTL_trsl

cZTL_trsl=def*functi_33(def, p14)

# Reaction: id = cZTL_degr, name = cZTL_degr

cZTL_degr=def*functi_34(cZTL, def, m20)

# Reaction: id = cZG_degr, name = cZG_degr

cZG_degr=def*functi_35(cZG, def, m21)

# Reaction: id = cG_cE3_assoc, name = cG_cE3_assoc

cG_cE3_as=def*functi_36(cE3, cG, def, p17)

# Reaction: id = cEG_degr, name = cEG_degr

cEG_degr=def*functi_37(cCOP1c, cCOP1d, cCOP1n, cE3n, cEG, cG, def, m10, m19, m9, p17, p18, p28, p29, p31)

# Reaction: id = cEC_form, name = cEC_form

cEC_form=def*functi_38(cCOP1d, cCOP1n, cE3n, cE4, cLUX, def, m36, m37, p21, p25, p26)

# Reaction: id = cEC_degr, name = cEC_degr

cEC_degr=def*functi_54(L, cCOP1d, cCOP1n, cE3n, cEC, cEG, cG, d, def, g7, m10, m19, m32, m36, m37, m9, p17, p18, p24, p28, p29, p31)

# Species:   id = cCOP1c, name = cCOP1c, affected by kineticLaw

init cCOP1c=0.3269
dcCOP1c/dt=(1/(def))*(( 1.0 * cCOP1c_tr) + (-1.0 * cCOP1c_de) + (-1.0 * cCOP1n_im))

# Species:   id = cCOP1d, name = cCOP1d, affected by kineticLaw

init cCOP1d=0.2566
dcCOP1d/dt=(1/(def))*(( 1.0 * cCOP1d_ac) + (-1.0 * cCOP1d_de))

# Species:   id = cCOP1n, name = cCOP1n, affected by kineticLaw

init cCOP1n=0.65
dcCOP1n/dt=(1/(def))*(( 1.0 * cCOP1n_im) + (-1.0 * cCOP1n_de) + (-1.0 * cCOP1d_ac))

# Species:   id = cE3, name = cE3, affected by kineticLaw

init cE3=0.1503
dcE3/dt=(1/(def))*(( 1.0 * cE3_trsl) + (-1.0 * cE3_degr) + (-1.0 * cE3n_impo) + (-1.0 * cG_cE3_as))

# Species:   id = cE3_m, name = cE3_m, affected by kineticLaw

init cE3_m=0.2991
dcE3_m/dt=(1/(def))*(( 1.0 * cE3_m_trs) + (-1.0 * cE3_m_deg))

# Species:   id = cE3n, name = cE3n, affected by kineticLaw

init cE3n=0.0286
dcE3n/dt=(1/(def))*(( 1.0 * cE3n_impo) + (-1.0 * cE3n_degr))

# Species:   id = cE4, name = cE4, affected by kineticLaw

init cE4=0.207
dcE4/dt=(1/(def))*(( 1.0 * cE4_trsl) + (-1.0 * cE4_degr))

# Species:   id = cE4_m, name = cE4_m, affected by kineticLaw

init cE4_m=0.1012
dcE4_m/dt=(1/(def))*(( 1.0 * cE4_m_trs) + (-1.0 * cE4_m_deg))

# Species:   id = cEC, name = cEC, affected by kineticLaw

init cEC=0.0709
dcEC/dt=(1/(def))*(( 1.0 * cEC_form) + (-1.0 * cEC_degr))

# Species:   id = cEG, name = cEG, affected by kineticLaw

init cEG=0.0041
dcEG/dt=(1/(def))*(( 1.0 * cG_cE3_as) + (-1.0 * cEG_degr))

# Species:   id = cG, name = cG, affected by kineticLaw

init cG=0.0196
dcG/dt=(1/(def))*(( 1.0 * cG_trsl) + (-1.0 * cG_degr) + (-1.0 * cG_cZTL_a) + (-1.0 * cG_cE3_as))

# Species:   id = cG_m, name = cG_m, affected by kineticLaw

init cG_m=0.1017
dcG_m/dt=(1/(def))*(( 1.0 * cG_m_trsc) + (-1.0 * cG_m_degr))

# Species:   id = cL, name = cL, affected by kineticLaw

init cL=0.506
dcL/dt=(1/(def))*(( 1.0 * cL_trsl) + (-1.0 * cL_degr))

# Species:   id = cLUX, name = cLUX, affected by kineticLaw

init cLUX=0.576
dcLUX/dt=(1/(def))*(( 1.0 * cLUX_trsl) + (-1.0 * cLUX_degr))

# Species:   id = cLUX_m, name = cLUX_m, affected by kineticLaw

init cLUX_m=0.1012
dcLUX_m/dt=(1/(def))*(( 1.0 * cLUX_m_tr) + (-1.0 * cLUX_m_de))

# Species:   id = cL_m, name = cL_m, affected by kineticLaw

init cL_m=1.0151
dcL_m/dt=(1/(def))*(( 1.0 * cL_m_trsc) + (-1.0 * cL_m_degr))

# Species:   id = cLm, name = cLm, affected by kineticLaw

init cLm=0.0788
dcLm/dt=(1/(def))*(( 1.0 * cL_modif) + (-1.0 * cLm_degr))

# Species:   id = cNI, name = cNI, affected by kineticLaw

init cNI=0.0697
dcNI/dt=(1/(def))*(( 1.0 * cNI_trsl) + (-1.0 * cNI_degr))

# Species:   id = cNI_m, name = cNI_m, affected by kineticLaw

init cNI_m=0.0731
dcNI_m/dt=(1/(def))*(( 1.0 * cNI_m_trs) + (-1.0 * cNI_m_deg))

# Species:   id = cP, name = cP, affected by kineticLaw

init cP=0.956
dcP/dt=(1/(def))*(( 1.0 * cP_trsl) + (-1.0 * cP_degr))

# Species:   id = cP7, name = cP7, affected by kineticLaw

init cP7=0.1167
dcP7/dt=(1/(def))*(( 1.0 * cP7_trsl) + (-1.0 * cP7_degr))

# Species:   id = cP7_m, name = cP7_m, affected by kineticLaw

init cP7_m=0.4016
dcP7_m/dt=(1/(def))*(( 1.0 * cP7_m_trs) + (-1.0 * cP7_m_deg))

# Species:   id = cP9, name = cP9, affected by kineticLaw

init cP9=0.0238
dcP9/dt=(1/(def))*(( 1.0 * cP9_trsl) + (-1.0 * cP9_degr))

# Species:   id = cP9_m, name = cP9_m, affected by kineticLaw

init cP9_m=0.0658
dcP9_m/dt=(1/(def))*(( 1.0 * cP9_m_trs) + (-1.0 * cP9_m_deg))

# Species:   id = cT, name = cT, affected by kineticLaw

init cT=0.0435
dcT/dt=(1/(def))*(( 1.0 * cT_trsl) + (-1.0 * cT_degr))

# Species:   id = cT_m, name = cT_m, affected by kineticLaw

init cT_m=0.0977
dcT_m/dt=(1/(def))*(( 1.0 * cT_m_trsc) + (-1.0 * cT_m_degr))

# Species:   id = cZG, name = cZG, affected by kineticLaw

init cZG=0.0755
dcZG/dt=(1/(def))*(( 1.0 * cG_cZTL_a) + (-1.0 * cZG_degr))

# Species:   id = cZTL, name = cZTL, affected by kineticLaw

init cZTL=0.2505
dcZTL/dt=(1/(def))*((-1.0 * cG_cZTL_a) + ( 1.0 * cZTL_trsl) + (-1.0 * cZTL_degr))

# event : event_1
event_1=if (t > 314) then (1.5) else (0.2)
global 1 {event_1 - 1.1} {offsetStep1=1;amplitudeStep1=0}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

