
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Bravo2012 - Modelling blood coagulation factor Va inactivation by APC
#
# isDescribedBy http://identifiers.org/pubmed/22607732
# is http://identifiers.org/biomodels.db/MODEL1807020001
# is http://identifiers.org/biomodels.db/BIOMD0000000739
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  R01_koff, name = R01_koff, constant
par R01_koff=0.7

# Parameter:   id =  R01_kon, name = R01_kon, constant
par R01_kon=1.0E8

# Parameter:   id =  R02_kcat, name = R02_kcat, constant
par R02_kcat=1.0

# Parameter:   id =  R03_kcat, name = R03_kcat, constant
par R03_kcat=0.192

# Parameter:   id =  R04_koff, name = R04_koff, constant
par R04_koff=0.7

# Parameter:   id =  R04_kon, name = R04_kon, constant
par R04_kon=1.0E8

# Parameter:   id =  R05_koff, name = R05_koff, constant
par R05_koff=0.7

# Parameter:   id =  R05_kon, name = R05_kon, constant
par R05_kon=1.0E8

# Parameter:   id =  R06_kcat, name = R06_kcat, constant
par R06_kcat=0.192

# Parameter:   id =  R07_kcat, name = R07_kcat, constant
par R07_kcat=1.0

# Parameter:   id =  R08_kdis, name = R08_kdis, constant
par R08_kdis=0.028

# Parameter:   id =  R09_kdis, name = R09_kdis, constant
par R09_kdis=0.028

# Parameter:   id =  R10_koff, name = R10_koff, constant
par R10_koff=0.7

# Parameter:   id =  R10_kon, name = R10_kon, constant
par R10_kon=1.0E8

# Parameter:   id =  R11_koff, name = R11_koff, constant
par R11_koff=0.075

# Parameter:   id =  R11_kon, name = R11_kon, constant
par R11_kon=1.5E8

# Parameter:   id =  R12_koff, name = R12_koff, constant
par R12_koff=0.15

# Parameter:   id =  R12_kon, name = R12_kon, constant
par R12_kon=1.5E8

# Parameter:   id =  R13_koff, name = R13_koff, constant
par R13_koff=0.15

# Parameter:   id =  R13_kon, name = R13_kon, constant
par R13_kon=1.5E8

# Parameter:   id =  R14_koff, name = R14_koff, constant
par R14_koff=0.15

# Parameter:   id =  R14_kon, name = R14_kon, constant
par R14_kon=1.5E8

# Parameter:   id =  R15_kdis, name = R15_kdis, constant
par R15_kdis=0.0035

# Parameter:   id =  R16_kdis, name = R16_kdis, constant
par R16_kdis=0.0035

# Parameter:   id =  R17_koff, name = R17_koff, constant
par R17_koff=70.0

# Parameter:   id =  R17_kon, name = R17_kon, constant
par R17_kon=1.0E8

# Parameter:   id =  R19_koff, name = R19_koff, constant
par R19_koff=103.0

# Parameter:   id =  R19_kon, name = R19_kon, constant
par R19_kon=1.0E8

# Parameter:   id =  R20_koff, name = R20_koff, constant
par R20_koff=103.0

# Parameter:   id =  R20_kon, name = R20_kon, constant
par R20_kon=1.0E8

# Parameter:   id =  R21_koff, name = R21_koff, constant
par R21_koff=103.0

# Parameter:   id =  R21_kon, name = R21_kon, constant
par R21_kon=1.0E8

# Parameter:   id =  R22_koff, name = R22_koff, constant
par R22_koff=103.0

# Parameter:   id =  R22_kon, name = R22_kon, constant
par R22_kon=1.0E8

# Parameter:   id =  R23_dis, name = R23_dis, constant
par R23_dis=0.0035

# Parameter:   id =  R24_dis, name = R24_dis, constant
par R24_dis=0.0035

# Parameter:   id =  time_minutes, name = time_minutes, defined by a Rule

# Parameter:   id =  Curve_Va_Xa, name = Curve_Va:Xa, defined by a Rule

# Parameter:   id =  Curve_Va, name = Curve_Va, defined by a Rule

# Parameter:   id =  Curve_va_i_506, name = Curve_va_i_506, defined by a Rule

# Parameter:   id =  param_for_curve_va_i_506_normalise, name = param_for_curve_va_i_506_normalise, defined by a Rule

# Parameter:   id =  Metabolite_19, name = Initial for Va:PT, constant
par Metabolit=0.0

# Parameter:   id =  Metabolite_2, name = Initial for Va, constant
par Metabol_1=2.0E-8

# Parameter:   id =  Metabolite_13, name = Initial for Xa:Va, constant
par Metabol_2=0.0

# assignmentRule: variable = time_minutes
time_minu=t/60
aux time_minu=time_minu

# assignmentRule: variable = Curve_Va_Xa
Curve_Va_=Xa_Va/Metabol_2
aux Curve_Va_=Curve_Va_

# assignmentRule: variable = Curve_Va
Curve_Va=Va/Metabol_1
aux Curve_Va=Curve_Va

# assignmentRule: variable = param_for_curve_va_i_506_normalise
param_for= piecew2 
aux param_for=param_for

# assignmentRule: variable = Curve_va_i_506
Curve_v_1=Va_i_506/param_for
aux Curve_v_1=Curve_v_1

# Reaction: id = R01, name = R01

R01=compartme*(R01_kon*APC*Va-R01_koff*APC_Va)

# Reaction: id = R02, name = R02

R02=compartme*R02_kcat*APC_Va

# Reaction: id = R03, name = R03

R03=compartme*R03_kcat*APC_Va

# Reaction: id = R04, name = R04

R04=compartme*(R04_kon*APC*Va_i_506-R04_koff*APC_Va_i_)

# Reaction: id = R05, name = R05

R05=compartme*(R05_kon*APC*Va_i_306-R05_koff*APC_Va__1)

# Reaction: id = R06, name = R06

R06=compartme*R06_kcat*APC_Va_i_

# Reaction: id = R07, name = R07

R07=compartme*R07_kcat*APC_Va__1

# Reaction: id = R08, name = R08

R08=compartme*R08_kdis*Va_i_306

# Reaction: id = R09, name = R09

R09=compartme*R09_kdis*Va_i_306_

# Reaction: id = R10, name = R10

R10=compartme*(R10_kon*APC*Va_1_306_-R10_koff*APC_Va_1_)

# Reaction: id = R11, name = R11

R11=compartme*(R11_kon*Xa*Va-R11_koff*Xa_Va)

# Reaction: id = R12, name = R12

R12=compartme*(R12_kon*Xa*Va_i_506-R12_koff*Xa_Va_i_5)

# Reaction: id = R13, name = R13

R13=compartme*(R13_kon*Xa*Va_i_306-R13_koff*Xa_Va_i_1)

# Reaction: id = R14, name = R14

R14=compartme*(R14_kon*Xa*Va_i_306_-R14_koff*Xa_Va_i_3)

# Reaction: id = R15, name = R15

R15=compartme*R15_kdis*Xa_Va_i_1

# Reaction: id = R16, name = R16

R16=compartme*R16_kdis*Xa_Va_i_3

# Reaction: id = R17, name = R17

R17=compartme*(R17_kon*Va*PT-R17_koff*Va_PT)

# Reaction: id = R19, name = R19

R19=compartme*(R19_kon*Xa_Va*PT-R19_koff*Xa_Va_PT)

# Reaction: id = R20, name = R20

R20=compartme*(R20_kon*Xa_Va_i_5*PT-R20_koff*Xa_Va_i_2)

# Reaction: id = R21, name = R21

R21=compartme*(R21_kon*Xa_Va_i_1*PT-R21_koff*Xa_Va_i_4)

# Reaction: id = R22, name = R22

R22=compartme*(R22_kon*Xa_Va_i_3*PT-R22_kon*Xa_Va_i_6)

# Reaction: id = R23, name = R23

R23=compartme*R23_dis*Xa_Va_i_4

# Reaction: id = R24, name = R24

R24=compartme*R24_dis*Xa_Va_i_6

# Species:   id = APC, name = APC, affected by kineticLaw

init APC=2.0E-9
dAPC/dt=(1/(compartme))*((-1.0 * R01) + ( 1.0 * R02) + ( 1.0 * R03) + (-1.0 * R04) + (-1.0 * R05) + ( 1.0 * R06) + ( 1.0 * R07) + (-1.0 * R10))

# Species:   id = APC_Va, name = APC:Va, affected by kineticLaw

init APC_Va=0.0
dAPC_Va/dt=(1/(compartme))*(( 1.0 * R01) + (-1.0 * R02) + (-1.0 * R03))

# Species:   id = Va, name = Va, affected by kineticLaw

init Va=2.0E-8
dVa/dt=(1/(compartme))*((-1.0 * R01) + (-1.0 * R11) + (-1.0 * R17))

# Species:   id = Va_i_506, name = Va_i_506, affected by kineticLaw

init Va_i_506=0.0
dVa_i_506/dt=(1/(compartme))*(( 1.0 * R02) + (-1.0 * R04) + (-1.0 * R12))

# Species:   id = Va_i_306, name = Va_i_306, affected by kineticLaw

init Va_i_306=0.0
dVa_i_306/dt=(1/(compartme))*(( 1.0 * R03) + (-1.0 * R05) + (-1.0 * R08) + (-1.0 * R13))

# Species:   id = APC_Va_i_506, name = APC:Va_i_506, affected by kineticLaw

par APC_Va_i_=0.0
aux APC_Va_i_=APC_Va_i_
dAPC_Va_i_/dt=(1/(compartme))*(( 1.0 * R04) + (-1.0 * R06))

# Species:   id = APC_Va_i_306, name = APC:Va_i_306, affected by kineticLaw

par APC_Va__1=0.0
aux APC_Va__1=APC_Va__1
dAPC_Va__1/dt=(1/(compartme))*(( 1.0 * R05) + (-1.0 * R07))

# Species:   id = Va_i_306_506, name = Va_i_306/506, affected by kineticLaw

par Va_i_306_=0.0
aux Va_i_306_=Va_i_306_
dVa_i_306_/dt=(1/(compartme))*(( 1.0 * R06) + ( 1.0 * R07) + (-1.0 * R09) + (-1.0 * R14))

# Species:   id = Va_1_306_Va_LC, name = Va_1-306:Va_LC, affected by kineticLaw

par Va_1_306_=0.0
aux Va_1_306_=Va_1_306_
dVa_1_306_/dt=(1/(compartme))*(( 1.0 * R08) + ( 1.0 * R09) + (-1.0 * R10) + ( 1.0 * R15) + ( 1.0 * R16) + ( 1.0 * R23) + ( 1.0 * R24))

# Species:   id = Va_307_506, name = Va_307-506, affected by kineticLaw

par Va_307_50=0.0
aux Va_307_50=Va_307_50
dVa_307_50/dt=(1/(compartme))*(( 1.0 * R09) + ( 1.0 * R16) + ( 1.0 * R24))

# Species:   id = Va_507_679_709, name = Va_507-679/709, affected by kineticLaw

par Va_507_67=0.0
aux Va_507_67=Va_507_67
dVa_507_67/dt=(1/(compartme))*(( 1.0 * R09) + ( 1.0 * R16) + ( 1.0 * R24))

# Species:   id = APC_Va_1_306_Va_LC, name = APC:Va_1-306:Va_LC, affected by kineticLaw

par APC_Va_1_=0.0
aux APC_Va_1_=APC_Va_1_
dAPC_Va_1_/dt=(1/(compartme))*(( 1.0 * R10))

# Species:   id = Xa, name = Xa, affected by kineticLaw

init Xa=0.0
dXa/dt=(1/(compartme))*((-1.0 * R11) + (-1.0 * R12) + (-1.0 * R13) + (-1.0 * R14) + ( 1.0 * R15) + ( 1.0 * R16) + ( 1.0 * R23) + ( 1.0 * R24))

# Species:   id = Xa_Va, name = Xa:Va, affected by kineticLaw

init Xa_Va=0.0
dXa_Va/dt=(1/(compartme))*(( 1.0 * R11) + (-1.0 * R19))

# Species:   id = Xa_Va_i_506, name = Xa:Va_i_506, affected by kineticLaw

par Xa_Va_i_5=0.0
aux Xa_Va_i_5=Xa_Va_i_5
dXa_Va_i_5/dt=(1/(compartme))*(( 1.0 * R12) + (-1.0 * R20))

# Species:   id = Xa_Va_i_306_506, name = Xa:Va_i_306/506, affected by kineticLaw

par Xa_Va_i_3=0.0
aux Xa_Va_i_3=Xa_Va_i_3
dXa_Va_i_3/dt=(1/(compartme))*(( 1.0 * R14) + (-1.0 * R16) + (-1.0 * R22))

# Species:   id = Xa_Va_i_306, name = Xa:Va_i_306, affected by kineticLaw

par Xa_Va_i_1=0.0
aux Xa_Va_i_1=Xa_Va_i_1
dXa_Va_i_1/dt=(1/(compartme))*(( 1.0 * R13) + (-1.0 * R15) + (-1.0 * R21))

# Species:   id = Va_307_679_709, name = Va_307-679/709, affected by kineticLaw

par Va_307_67=0.0
aux Va_307_67=Va_307_67
dVa_307_67/dt=(1/(compartme))*(( 1.0 * R08) + ( 1.0 * R15) + ( 1.0 * R23))

# Species:   id = PT, name = PT, affected by kineticLaw

init PT=0.0
dPT/dt=(1/(compartme))*((-1.0 * R17) + (-1.0 * R19) + (-1.0 * R20) + (-1.0 * R21) + (-1.0 * R22) + ( 1.0 * R23) + ( 1.0 * R24))

# Species:   id = Va_PT, name = Va:PT, affected by kineticLaw

init Va_PT=0.0
dVa_PT/dt=(1/(compartme))*(( 1.0 * R17))

# Species:   id = Xa_Va_PT, name = Xa:Va:PT, affected by kineticLaw

init Xa_Va_PT=0.0
dXa_Va_PT/dt=(1/(compartme))*(( 1.0 * R19))

# Species:   id = Xa_Va_i_506_PT, name = Xa:Va_i_506:PT, affected by kineticLaw

par Xa_Va_i_2=0.0
aux Xa_Va_i_2=Xa_Va_i_2
dXa_Va_i_2/dt=(1/(compartme))*(( 1.0 * R20))

# Species:   id = Xa_Va_i_306_PT, name = Xa:Va_i_306:PT, affected by kineticLaw

par Xa_Va_i_4=0.0
aux Xa_Va_i_4=Xa_Va_i_4
dXa_Va_i_4/dt=(1/(compartme))*(( 1.0 * R21) + (-1.0 * R23))

# Species:   id = Xa_Va_i_306_506_PT, name = Xa:Va_i_306/506:PT, affected by kineticLaw

par Xa_Va_i_6=0.0
aux Xa_Va_i_6=Xa_Va_i_6
dXa_Va_i_6/dt=(1/(compartme))*(( 1.0 * R22) + (-1.0 * R24))


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (Metabolit  <  6E-7) then (1.08E-7) else (2.01E-7)

piecew2=if (Metabolit  <  3E-7) then (5.9E-9) else ( piecew1 )


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

