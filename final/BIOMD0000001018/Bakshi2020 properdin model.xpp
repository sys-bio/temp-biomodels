
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Bakshi2020 - Properdin model of alternative pathway of complement system
#
# is http://identifiers.org/biomodels.db/MODEL2107200004
# is http://identifiers.org/biomodels.db/BIOMD0000001018
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Rate_Law_for_C3_hydrolysis, name = Rate Law for C3_hydrolysis
Rate_Law_(k1,C3,k2,C3bBb,k3,C3bBbP)=(k1*C3+k2*(C3bBb+C3bBbP)*C3/(k3+C3))


# FunctionDefinition id = Rate_Law_for_C3_convertase_formation, name = Rate Law for C3_convertase_formation
Rate_La_1(k7,FD,C3bB_open,k8,C3bBP_open)=(k7*FD*C3bB_open/(k8+C3bB_open+C3bBP_open))


# FunctionDefinition id = Rate_Law_for_C3bBbP_formation, name = Rate Law for C3bBbP_formation
Rate_La_2(k7,FD,C3bBP_open,k8,C3bB_open)=(k7*FD*C3bBP_open/(k8+C3bB_open+C3bBP_open))


# FunctionDefinition id = Rate_Law_for_C3b_inactivation, name = Rate Law for C3b_inactivation
Rate_La_3(k19,C3bH,FI,k20)=(k19*C3bH*FI/(k20+C3bH))


# Compartment: id = Fluid_phase, name = Fluid_phase, constant
par Fluid_pha=1.0

# Parameter:   id =  k1, name = k1, constant
par k1=1.0E-4

# Parameter:   id =  k2, name = k2, constant
par k2=107.0

# Parameter:   id =  k3, name = k3, constant
par k3=5.86

# Parameter:   id =  k4, name = k4, constant
par k4=0.816

# Parameter:   id =  k5, name = k5, constant
par k5=6.9

# Parameter:   id =  k6, name = k6, constant
par k6=0.46

# Parameter:   id =  k7, name = k7, constant
par k7=130.0

# Parameter:   id =  k8, name = k8, constant
par k8=0.72

# Parameter:   id =  k9, name = k9, constant
par k9=0.33

# Parameter:   id =  k10, name = k10, constant
par k10=0.1068

# Parameter:   id =  k15, name = k15, constant
par k15=312.0

# Parameter:   id =  k16, name = k16, constant
par k16=195.0

# Parameter:   id =  k19, name = k19, constant
par k19=78.0

# Parameter:   id =  k20, name = k20, constant
par k20=0.25

# Parameter:   id =  k21, name = k21, constant
par k21=0.832

# Parameter:   id =  k25, name = k25, defined by a Rule

# Parameter:   id =  ks1, name = ks1, constant
par ks1=0.00316

# Parameter:   id =  ks2, name = ks2, constant
par ks2=7.98E-4

# Parameter:   id =  d1, name = d1, constant
par d1=3.92E-4

# Parameter:   id =  d2, name = d2, constant
par d2=3.33E-4

# Parameter:   id =  ks3, name = ks3, constant
par ks3=6.7E-4

# Parameter:   id =  d3, name = d3, constant
par d3=2.2E-4

# Parameter:   id =  k13, name = k13, constant
par k13=0.87

# Parameter:   id =  k14, name = k14, constant
par k14=0.03

# Parameter:   id =  k17, name = k17, defined by a Rule

# Parameter:   id =  k22, name = k22, constant
par k22=0.023

# Parameter:   id =  k23, name = k23, defined by a Rule

# Parameter:   id =  k24, name = k24, defined by a Rule

# Parameter:   id =  k18, name = k18, constant
par k18=0.028

# Parameter:   id =  ks4, name = ks4, constant
par ks4=7.0E-5

# Parameter:   id =  d4, name = d4, constant
par d4=1.6E-4

# assignmentRule: variable = C3bBb_total
C3bBb_tot=C3bBb+C3bBbP
aux C3bBb_tot=C3bBb_tot

# assignmentRule: variable = C3b_total
C3b_total=C3b+C3bP
aux C3b_total=C3b_total

# assignmentRule: variable = C3bB_open_total
C3bB_op_1=C3bB_open+C3bBP_ope
aux C3bB_op_1=C3bB_op_1

# assignmentRule: variable = C3bB_closed_total
C3bB_cl_1=C3bB_clos+C3bBP_clo
aux C3bB_cl_1=C3bB_cl_1

# assignmentRule: variable = k17
k17=k13
aux k17=k17

# assignmentRule: variable = k24
k24=k13
aux k24=k24

# assignmentRule: variable = k23
k23=k13
aux k23=k23

# assignmentRule: variable = k25
k25=k15
aux k25=k25

# Reaction: id = C3_hydrolysis, name = C3_hydrolysis

C3_hydrol=Fluid_pha*Rate_Law_(k1, C3, k2, C3bBb, k3, C3bBbP)

# Reaction: id = C3bB_formation, name = C3bB_formation

C3bB_form=Fluid_pha*(k4*C3b*Factor_B-k5*C3bB_clos)

# Reaction: id = C3bB_conformational_change, name = C3bB_conformational_change

C3bB_conf=Fluid_pha*(k9*C3bB_clos-k10*C3bB_open)

# Reaction: id = C3_convertase_formation, name = C3_convertase_formation

C3_conver=Fluid_pha*Rate_La_1(k7, Factor_D, C3bB_open, k8, C3bBP_ope)

# Reaction: id = Factor_H_binding_C3_convertase, name = Factor_H_binding_C3_convertase

Factor_H_=Fluid_pha*(k25*C3bBb*Factor_H-k16*C3bBbH)

# Reaction: id = Factor_H_induced__C3_convertase_decay, name = Factor_H_induced_ C3_convertase_decay

Factor__1=Fluid_pha*k21*C3bBbH

# Reaction: id = C3_convertase_decay, name = C3_convertase_decay

C3_conv_1=Fluid_pha*k6*C3bBb

# Reaction: id = Factor_H_binding_C3b, name = Factor_H_binding_C3b

Factor__2=Fluid_pha*(k15*C3b*Factor_H-k16*C3bH)

# Reaction: id = C3b_inactivation, name = C3b_inactivation

C3b_inact=Fluid_pha*Rate_La_3(k19, C3bH, Factor_I, k20)

# Reaction: id = C3_synthesis, name = C3_synthesis

C3_synthe=Fluid_pha*Constant_(ks1)

# Reaction: id = C3_degradation, name = C3_degradation

C3_degrad=Fluid_pha*d1*C3

# Reaction: id = Factor_B_synthesis, name = Factor_B_synthesis

Factor_B_=Fluid_pha*Constant_(ks2)

# Reaction: id = Factor_B_degradation, name = Factor_B_degradation

Factor__3=Fluid_pha*d2*Factor_B

# Reaction: id = Factor_H_synthesis, name = Factor_H_synthesis

Factor__4=Fluid_pha*Constant_(ks3)

# Reaction: id = Factor_H_degradation, name = Factor_H_degradation

Factor__5=Fluid_pha*d3*Factor_H

# Reaction: id = C3bP_association, name = C3bP_association

C3bP_asso=Fluid_pha*(k13*C3b*Properdin-k14*C3bP)

# Reaction: id = C3bBP_formation, name = C3bBP_formation

C3bBP_for=Fluid_pha*(k4*C3bP*Factor_B-k5*C3bBP_ope)

# Reaction: id = C3bBP_conformational_change, name = C3bBP_conformational_change

C3bBP_con=Fluid_pha*(k9*C3bBP_clo-k10*C3bBP_ope)

# Reaction: id = C3bBbP_formation, name = C3bBbP_formation

C3bBbP_fo=Fluid_pha*Rate_La_2(k7, Factor_D, C3bBP_ope, k8, C3bB_open)

# Reaction: id = C3bBbP_dissociation, name = C3bBbP_dissociation

C3bBbP_di=Fluid_pha*(k18*C3bBbP-k17*C3bBb*Properdin)

# Reaction: id = C3bBbP_decay, name = C3bBbP_decay

C3bBbP_de=Fluid_pha*k22*C3bBbP

# Reaction: id = C3bBP_closed_association, name = C3bBP_closed_association

C3bBP_c_1=Fluid_pha*(k23*C3bB_clos*Properdin-k14*C3bBP_clo)

# Reaction: id = C3bBP_open_assocation, name = C3bBP_open_assocation

C3bBP_o_1=Fluid_pha*(k24*C3bB_open*Properdin-k14*C3bBP_ope)

# Reaction: id = Properdin_synthesis, name = Properdin_synthesis

Properd_1=Fluid_pha*Constant_(ks4)

# Reaction: id = Properdin_degradation, name = Properdin_degradation

Properd_2=Fluid_pha*d4*Properdin

# Species:   id = C3, name = C3, affected by kineticLaw

init C3=6.0
dC3/dt=(1/(Fluid_pha))*((-1.0 * C3_hydrol) + ( 1.0 * C3_synthe) + (-1.0 * C3_degrad))

# Species:   id = C3b, name = C3b, affected by kineticLaw

init C3b=0.0
dC3b/dt=(1/(Fluid_pha))*(( 1.0 * C3_hydrol) + (-1.0 * C3bB_form) + ( 1.0 * Factor__1) + ( 1.0 * C3_conv_1) + (-1.0 * Factor__2) + (-1.0 * C3bP_asso) + ( 1.0 * C3bBbP_de))

# Species:   id = C3bB_closed, name = C3bB_closed, affected by kineticLaw

par C3bB_clos=0.0
aux C3bB_clos=C3bB_clos
dC3bB_clos/dt=(1/(Fluid_pha))*(( 1.0 * C3bB_form) + (-1.0 * C3bB_conf) + (-1.0 * C3bBP_c_1))

# Species:   id = C3bB_open, name = C3bB_open, affected by kineticLaw

init C3bB_open=0.0
dC3bB_open/dt=(1/(Fluid_pha))*(( 1.0 * C3bB_conf) + (-1.0 * C3_conver) + (-1.0 * C3bBP_o_1))

# Species:   id = C3bBb, name = C3bBb, affected by kineticLaw

init C3bBb=0.0
dC3bBb/dt=(1/(Fluid_pha))*(( 1.0 * C3_conver) + (-1.0 * Factor_H_) + (-1.0 * C3_conv_1) + ( 1.0 * C3bBbP_di))

# Species:   id = C3bBbH, name = C3bBbH, affected by kineticLaw

init C3bBbH=0.0
dC3bBbH/dt=(1/(Fluid_pha))*(( 1.0 * Factor_H_) + (-1.0 * Factor__1))

# Species:   id = Bb, name = Bb, affected by kineticLaw

init Bb=0.0
dBb/dt=(1/(Fluid_pha))*(( 1.0 * Factor__1) + ( 1.0 * C3_conv_1) + ( 1.0 * C3bBbP_de))

# Species:   id = Factor_H, name = Factor_H, affected by kineticLaw

init Factor_H=3.0
dFactor_H/dt=(1/(Fluid_pha))*((-1.0 * Factor_H_) + ( 1.0 * Factor__1) + (-1.0 * Factor__2) + ( 1.0 * C3b_inact) + ( 1.0 * Factor__4) + (-1.0 * Factor__5))

# Species:   id = Factor_B, name = Factor_B, affected by kineticLaw

init Factor_B=2.0
dFactor_B/dt=(1/(Fluid_pha))*((-1.0 * C3bB_form) + ( 1.0 * Factor_B_) + (-1.0 * Factor__3) + (-1.0 * C3bBP_for))

# Species:   id = C3bH, name = C3bH, affected by kineticLaw

init C3bH=0.0
dC3bH/dt=(1/(Fluid_pha))*(( 1.0 * Factor__2) + (-1.0 * C3b_inact))

# Species:   id = Factor_I, name = Factor_I
# Warning species is not changed by either rules or reactions

par Factor_I=0.4
aux Factor_I=Factor_I

# Species:   id = iC3b, name = iC3b, affected by kineticLaw

init iC3b=0.0
diC3b/dt=(1/(Fluid_pha))*(( 1.0 * C3b_inact))

# Species:   id = Factor_D, name = Factor_D
# Warning species is not changed by either rules or reactions

par Factor_D=0.08
aux Factor_D=Factor_D

# Species:   id = Properdin, name = Properdin, affected by kineticLaw

init Properdin=0.3
dProperdin/dt=(1/(Fluid_pha))*((-1.0 * C3bP_asso) + ( 1.0 * C3bBbP_di) + ( 1.0 * C3bBbP_de) + (-1.0 * C3bBP_c_1) + (-1.0 * C3bBP_o_1) + ( 1.0 * Properd_1) + (-1.0 * Properd_2))

# Species:   id = C3bBP_closed, name = C3bBP_closed, affected by kineticLaw

par C3bBP_clo=0.0
aux C3bBP_clo=C3bBP_clo
dC3bBP_clo/dt=(1/(Fluid_pha))*((-1.0 * C3bBP_con) + ( 1.0 * C3bBP_c_1))

# Species:   id = C3bBP_open, name = C3bBP_open, affected by kineticLaw

par C3bBP_ope=0.0
aux C3bBP_ope=C3bBP_ope
dC3bBP_ope/dt=(1/(Fluid_pha))*(( 1.0 * C3bBP_for) + ( 1.0 * C3bBP_con) + (-1.0 * C3bBbP_fo) + ( 1.0 * C3bBP_o_1))

# Species:   id = C3bBbP, name = C3bBbP, affected by kineticLaw

init C3bBbP=0.0
dC3bBbP/dt=(1/(Fluid_pha))*(( 1.0 * C3bBbP_fo) + (-1.0 * C3bBbP_di) + (-1.0 * C3bBbP_de))

# Species:   id = C3bP, name = C3bP, affected by kineticLaw

init C3bP=0.0
dC3bP/dt=(1/(Fluid_pha))*(( 1.0 * C3bP_asso) + (-1.0 * C3bBP_for))

# Species:   id = C3b_total, name = C3b_total, involved in a rule 

# Species:   id = C3bB_closed_total, name = C3bB_closed_total, involved in a rule 

# Species:   id = C3bB_open_total, name = C3bB_open_total, involved in a rule 

# Species:   id = C3bBb_total, name = C3bBb_total, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

