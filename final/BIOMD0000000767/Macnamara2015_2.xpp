
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Macnamara2015/2 - virotherapy virus-free submodel
#
# isDerivedFrom http://identifiers.org/ncit/C62713
# isDerivedFrom http://identifiers.org/mamo/MAMO_0000046
# isDerivedFrom http://identifiers.org/taxonomy/9606
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000766
# isDerivedFrom http://identifiers.org/biomodels.db/MODEL1907290002
# isDescribedBy http://identifiers.org/biomodels.db/BIOMD0000000766
# isDescribedBy http://identifiers.org/biomodels.db/MODEL1907290002
# isDescribedBy http://identifiers.org/pubmed/25882747
# is http://identifiers.org/biomodels.db/MODEL1907290003
# is http://identifiers.org/biomodels.db/BIOMD0000000767
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = tg, name = tg
tg(r,U,K)=(r*U*(1-U/K))


# FunctionDefinition id = eg, name = eg
eg(pe,M,U,hv)=(pe*M*U/(U+hv))


# FunctionDefinition id = kill, name = kill
kill(du,x,E,he)=(du*x*E/(he+E))


# FunctionDefinition id = exh, name = exh
exh(dt,U,E)=(dt*U*E)


# Compartment: id = tme, name = tme, constant
par tme=1.0

# Parameter:   id =  r, name = r, constant
par r=0.927

# Parameter:   id =  K, name = K, constant
par K=1.8182E8

# Parameter:   id =  du, name = du, constant
par du=2.0

# Parameter:   id =  he, name = he, constant
par he=1000.0

# Parameter:   id =  hv, name = hv, constant
par hv=10000.0

# Parameter:   id =  pe, name = pe, constant
par pe=0.4

# Parameter:   id =  de, name = de, constant
par de=0.1

# Parameter:   id =  dt, name = dt, constant
par dt=5.0E-9

# Reaction: id = tumor_growth, name = tumor growth

tumor_gro=tme*tg(r, U, K)

# Reaction: id = tumor_killing, name = tumor killing

tumor_kil=tme*kill(du, U, E, he)

# Reaction: id = effector_growth, name = effector growth

effector_=tme*eg(pe, M, U, hv)

# Reaction: id = effector_death, name = effector death

effecto_1=tme*de*E

# Reaction: id = effector_exhaustion, name = effector exhaustion

effecto_2=tme*exh(dt, U, E)

# Species:   id = U, name = U, affected by kineticLaw

init U=1000000.0
dU/dt=(1/(tme))*(( 1.0 * tumor_gro) + (-1.0 * tumor_kil))

# Species:   id = M, name = M
# Warning species is not changed by either rules or reactions

par M=1.0
aux M=M

# Species:   id = E, name = E, affected by kineticLaw

init E=0.0
dE/dt=(1/(tme))*(( 1.0 * effector_) + (-1.0 * effecto_1) + (-1.0 * effecto_2))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

