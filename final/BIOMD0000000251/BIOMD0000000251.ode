
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Nakakuki2010_CellFateDecision_Core
#
# is http://identifiers.org/biomodels.db/MODEL1003170000
# is http://identifiers.org/biomodels.db/BIOMD0000000251
# isDescribedBy http://identifiers.org/pubmed/20493519
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000175
# isDerivedFrom http://identifiers.org/pubmed/12242336
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  k7, name = k7, constant
par k7=0.5

# Parameter:   id =  k11, name = k11, constant
par k11=0.11

# Parameter:   id =  k13, name = k13, constant
par k13=0.06

# Parameter:   id =  L, name = L, constant
par L=1.0

# Parameter:   id =  K1, name = K1, constant
par K1=1.09

# Parameter:   id =  tau1, name = tau1, constant
par tau1=3.07

# Parameter:   id =  K2, name = K, constant
par K2=2.89

# Parameter:   id =  tau2, name = tau, constant
par tau2=472.0

# assignmentRule: variable = ppERKc
ppERKc=x1-x2
aux ppERKc=ppERKc

# Reaction: id = reaction_1, name = 1 PhIM 1

reaction_=compartme*((-x1)/tau1+K1*L/tau1)

# Reaction: id = reaction_2, name = 1 PhIM 2

reactio_1=compartme*((-x2)/tau2+K2*L/tau2)

# Reaction: id = reaction_3, name = 2a ppERKn
# Local Parameter:   id =  k1, name = k1
par k1_1=15.0

# Local Parameter:   id =  k2, name = k2
par k2_1=50.0

# Local Parameter:   id =  k3, name = k3
par k3=14.0


reactio_2=compartme*(k1_1*ppERKc-k2_1*ppERKn-k3*DUSP*ppERKn)

# Reaction: id = reaction_4, name = 2b DUSP
# Local Parameter:   id =  k, name = k
par k=1.0


reactio_3=compartme*k*ppERKn

# Reaction: id = reaction_5, name = 3 pRSKn
# Local Parameter:   id =  k4, name = k4
par k4=0.1

# Local Parameter:   id =  k5, name = k5
par k5=0.15


reactio_4=compartme*(k4*ppERKn-k5*pRSKn)

# Reaction: id = reaction_6, name = 4 cFOSp
# Local Parameter:   id =  k6, name = k6
par k6=0.13

# Local Parameter:   id =  n, name = n
par n=1.1


reactio_5=compartme*((ppERKn*pRSKn)^n/(k6^n+(ppERKn*pRSKn)^n)-k7*cFOSp)

# Reaction: id = reaction_7, name = 5 cFOSm
# Local Parameter:   id =  k8, name = k8
par k8=0.08


reactio_6=compartme*(k7*cFOSp-k8*cFOSm)

# Reaction: id = reaction_8, name = 6 cFOS
# Local Parameter:   id =  k10, name = k10
par k10=0.3

# Local Parameter:   id =  k9, name = k9
par k9=0.3


reactio_7=compartme*(k9*cFOSm-k10*cFOS-k11*cFOS*ppERKc+k13*pcFOS)

# Reaction: id = reaction_9, name = 7 pcFOS
# Local Parameter:   id =  k12, name = k12
par k12=0.001


reactio_8=compartme*(k11*cFOS*ppERKc-k12*pcFOS-k13*pcFOS)

# Species:   id = x1, name = x1, affected by kineticLaw

init x1=0.0
dx1/dt=(1/(compartme))*(( 1.0 * reaction_))

# Species:   id = x2, name = x2, affected by kineticLaw

init x2=0.0
dx2/dt=(1/(compartme))*(( 1.0 * reactio_1))

# Species:   id = ppERKn, name = ppERK(nucleus), affected by kineticLaw

init ppERKn=0.0
dppERKn/dt=(1/(compartme))*(( 1.0 * reactio_2))

# Species:   id = DUSP, name = DUSP, affected by kineticLaw

init DUSP=0.0
dDUSP/dt=(1/(compartme))*(( 1.0 * reactio_3))

# Species:   id = pRSKn, name = pRSKn, affected by kineticLaw

init pRSKn=0.0
dpRSKn/dt=(1/(compartme))*(( 1.0 * reactio_4))

# Species:   id = cFOSp, name = cFOS preRNA, affected by kineticLaw

init cFOSp=0.0
dcFOSp/dt=(1/(compartme))*(( 1.0 * reactio_5))

# Species:   id = cFOS, name = cFOS, affected by kineticLaw

init cFOS=0.0
dcFOS/dt=(1/(compartme))*(( 1.0 * reactio_7))

# Species:   id = pcFOS, name = pc-FOS, affected by kineticLaw

init pcFOS=0.0
dpcFOS/dt=(1/(compartme))*(( 1.0 * reactio_8))

# Species:   id = cFOSm, name = cFOSmRNA, affected by kineticLaw

init cFOSm=0.0
dcFOSm/dt=(1/(compartme))*(( 1.0 * reactio_6))

# Species:   id = ppERKc, name = ppERK(cytosol), involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

