
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Goldbeter2008_Somite_Segmentation_Clock_Notch_Wnt_FGF
#
# is http://identifiers.org/biomodels.db/MODEL6415057828
# is http://identifiers.org/biomodels.db/BIOMD0000000201
# isDescribedBy http://identifiers.org/pubmed/18308339
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cytosol, name = cytosol, constant
par cytosol=1.0

# Parameter:   id =  KdN, name = KdN, constant
par KdN=1.4

# Parameter:   id =  vsN, name = vsN, constant
par vsN=0.23

# Parameter:   id =  vdN, name = vdN, constant
par vdN=2.82

# Parameter:   id =  KdNa, name = KdNa, constant
par KdNa=0.001

# Parameter:   id =  VdNa, name = VdNa, constant
par VdNa=0.01

# Parameter:   id =  kt1, name = kt1, constant
par kt1=0.1

# Parameter:   id =  kt2, name = kt2, constant
par kt2=0.1

# Parameter:   id =  KdNan, name = KdNan, constant
par KdNan=0.001

# Parameter:   id =  VdNan, name = VdNan, constant
par VdNan=0.1

# Parameter:   id =  KdMF, name = KdMF, constant
par KdMF=0.768

# Parameter:   id =  KIG1, name = KIG1, constant
par KIG1=2.5

# Parameter:   id =  vsFK, name = vsFK, defined by a Rule

# Parameter:   id =  vsF, name = vsF, constant
par vsF=3.0

# Parameter:   id =  vmF, name = vmF, constant
par vmF=1.92

# Parameter:   id =  KA, name = KA, constant
par KA=0.05

# Parameter:   id =  KdF, name = KdF, constant
par KdF=0.37

# Parameter:   id =  vdF, name = vdF, constant
par vdF=0.39

# Parameter:   id =  ksF, name = ksF, constant
par ksF=0.3

# Parameter:   id =  kd1, name = kd1, constant
par kd1=0.0

# Parameter:   id =  vsB, name = vsB, constant
par vsB=0.087

# Parameter:   id =  kd2, name = kd2, constant
par kd2=7.062

# Parameter:   id =  v0, name = v0, constant
par v0=0.06

# Parameter:   id =  vMB, name = vMB, constant
par vMB=1.64

# Parameter:   id =  vmd, name = vmd, constant
par vmd=0.8

# Parameter:   id =  KaB, name = KaB, constant
par KaB=0.7

# Parameter:   id =  KaXa, name = KaXa, constant
par KaXa=0.05

# Parameter:   id =  Kmd, name = Kmd, constant
par Kmd=0.48

# Parameter:   id =  n, name = n, constant
par n=2.0

# Parameter:   id =  m, name = m, constant
par m=2.0

# Parameter:   id =  vMXa, name = vMXa, constant
par vMXa=0.5

# Parameter:   id =  ksAx, name = ksAx, constant
par ksAx=0.02

# Parameter:   id =  vdAx, name = vdAx, constant
par vdAx=0.6

# Parameter:   id =  KdAx, name = KdAx, constant
par KdAx=0.63

# Parameter:   id =  d1, name = d1, constant
par d1=0.1

# Parameter:   id =  a1, name = a1, constant
par a1=1.8

# Parameter:   id =  K1, name = K1, constant
par K1=0.28

# Parameter:   id =  K2, name = K2, constant
par K2=0.03

# Parameter:   id =  kt3, name = kt3, constant
par kt3=0.7

# Parameter:   id =  kt4, name = kt4, constant
par kt4=1.5

# Parameter:   id =  ksDusp, name = ksDusp, constant
par ksDusp=0.5

# Parameter:   id =  vdDusp, name = vdDusp, constant
par vdDusp=2.0

# Parameter:   id =  KdDusp, name = KdDusp, constant
par KdDusp=0.5

# Parameter:   id =  kcDusp, name = kcDusp, constant
par kcDusp=1.35

# Parameter:   id =  KaFgf, name = KaFgf, constant
par KaFgf=0.5

# Parameter:   id =  KaRas, name = KaRas, constant
par KaRas=0.103

# Parameter:   id =  KdRas, name = KdRas, constant
par KdRas=0.1

# Parameter:   id =  KdErk, name = KdErk, constant
par KdErk=0.05

# Parameter:   id =  KaErk, name = KaErk, constant
par KaErk=0.05

# Parameter:   id =  KaX, name = KaX, constant
par KaX=0.05

# Parameter:   id =  KIF, name = KIF, constant
par KIF=0.5

# Parameter:   id =  KID, name = KID, constant
par KID=0.5

# Parameter:   id =  KdX, name = KdX, constant
par KdX=0.05

# Parameter:   id =  KaMDusp, name = KaMDusp, constant
par KaMDusp=0.5

# Parameter:   id =  KdMDusp, name = KdMDusp, constant
par KdMDusp=0.5

# Parameter:   id =  q, name = q, constant
par q=2.0

# Parameter:   id =  r, name = r, constant
par r=2.0

# Parameter:   id =  kc, name = kc, constant
par kc=3.45

# Parameter:   id =  j, name = j, constant
par j=2.0

# Parameter:   id =  p, name = p, constant
par p=2.0

# Parameter:   id =  epsilon, name = epsilon, constant
par epsilon=0.3

# Parameter:   id =  theta, name = theta, constant
par theta=1.5

# Parameter:   id =  eta, name = eta, constant
par eta=0.3

# Parameter:   id =  VMsMDusp, name = VMsMDusp, constant
par VMsMDusp=0.9

# Parameter:   id =  VMdMDusp, name = VMdMDusp, constant
par VMdMDusp=0.5

# Parameter:   id =  VMK, name = VMK, constant
par VMK=5.08

# Parameter:   id =  VMP, name = VMP, constant
par VMP=1.0

# Parameter:   id =  VMaRas, name = VMaRas, constant
par VMaRas=4.968

# Parameter:   id =  VMdRas, name = VMdRas, constant
par VMdRas=0.41

# Parameter:   id =  VMaErk, name = VMaErk, constant
par VMaErk=3.3

# Parameter:   id =  VMaX, name = VMaX, constant
par VMaX=1.6

# Parameter:   id =  VMdX, name = VMdX, constant
par VMdX=0.5

# assignmentRule: variable = vsFK
vsFK=vsF*KIG1/(KIG1+K)
aux vsFK=vsFK

# assignmentRule: variable = AK
AK=Kt-K
aux AK=AK

# assignmentRule: variable = Rasi
Rasi=Rast-Rasa
aux Rasi=Rasi

# assignmentRule: variable = ERKi
ERKi=ERKt-ERKa
aux ERKi=ERKi

# assignmentRule: variable = Xi
Xi=Xt-Xa
aux Xi=Xi

# Reaction: id = n_synth, name = Notch_synthesis

n_synth=cytosol*epsilon*vsN

# Reaction: id = N_degradation, name = N_degradation

N_degrada=epsilon*cytosol*vdN*N_1/(KdN+N_1)

# Reaction: id = N_activation, name = Notch_activation

N_activat=epsilon*cytosol*kc*N_1*KIF^j/(KIF^j+F^j)

# Reaction: id = Na_degradation, name = Na_degradation

Na_degrad=epsilon*cytosol*VdNa*Na/(KdNa+Na)

# Reaction: id = Na_transport

Na_transp=epsilon*cytosol*(kt1*Na-kt2*Nan)

# Reaction: id = Nan_degradation

Nan_degra=epsilon*cytosol*VdNan*Nan/(KdNan+Nan)

# Reaction: id = MF_transkription

MF_transk=epsilon*cytosol*vsFK*Nan^p/(KA^p+Nan^p)

# Reaction: id = MF_degradation

MF_degrad=epsilon*cytosol*vmF*MF/(KdMF+MF)

# Reaction: id = F_translation

F_transla=epsilon*cytosol*ksF*MF

# Reaction: id = F_degradation

F_degrada=epsilon*cytosol*vdF*F/(KdF+F)

# Reaction: id = AK_dissoc

AK_dissoc=theta*cytosol*(d1*AK-a1*A*K)

# Reaction: id = B_synth

B_synth=theta*cytosol*vsB

# Reaction: id = B_degradation

B_degrada=theta*cytosol*kd1*B

# Reaction: id = B_phosphorylation

B_phospho=theta*cytosol*VMK*KID/(KID+D)*B/(K1+B)*AK/Kt

# Reaction: id = BP_dephosphorylation

BP_dephos=theta*cytosol*VMP*Bp/(K2+Bp)

# Reaction: id = B_shuttling

B_shuttli=theta*cytosol*(kt4*BN-kt3*B)

# Reaction: id = Bp_degradation

Bp_degrad=theta*cytosol*kd2*Bp

# Reaction: id = MAx_trans_basal

MAx_trans=theta*cytosol*v0

# Reaction: id = MAx_trans_BN

MAx_tra_1=theta*cytosol*vMB*BN^n/(KaB^n+BN^n)

# Reaction: id = MAx_trans_Xa

MAx_tra_2=theta*cytosol*vMXa*Xa^m/(KaXa^m+Xa^m)

# Reaction: id = MAx_degradation

MAx_degra=theta*cytosol*vmd*MAx/(Kmd+MAx)

# Reaction: id = A_translation

A_transla=theta*cytosol*ksAx*MAx

# Reaction: id = A_degradation

A_degrada=theta*cytosol*vdAx*A/(KdAx+A)

# Reaction: id = Ras_activation

Ras_activ=eta*cytosol*VMaRas*Fgf^r/(KaFgf^r+Fgf^r)*Rasi/(KaRas+Rasi)

# Reaction: id = Ras_inactivation

Ras_inact=eta*cytosol*VMdRas*Rasa/(KdRas+Rasa)

# Reaction: id = Erk_activation

Erk_activ=eta*cytosol*VMaErk*Rasa/Rast*ERKi/(KaErk+ERKi)

# Reaction: id = Erk_inactivation

Erk_inact=eta*cytosol*kcDusp*Dusp*ERKa/(KdErk+ERKa)

# Reaction: id = X_activation

X_activat=eta*cytosol*VMaX*ERKa/ERKt*Xi/(KaX+Xi)

# Reaction: id = X_inactivation

X_inactiv=eta*cytosol*VMdX*Xa/(KdX+Xa)

# Reaction: id = MDusp_transkription

MDusp_tra=eta*cytosol*VMsMDusp*Xa^q/(KaMDusp^q+Xa^q)

# Reaction: id = MDusp_degradation

MDusp_deg=eta*cytosol*VMdMDusp*MDusp/(KdMDusp+MDusp)

# Reaction: id = Dusp_translation

Dusp_tran=eta*cytosol*ksDusp*MDusp

# Reaction: id = Dusp_degradation

Dusp_degr=eta*cytosol*vdDusp*Dusp/(KdDusp+Dusp)

# Species:   id = N, name = Notch protein, affected by kineticLaw

par N_1=0.5
aux N_1=N_1
dN_1/dt=(1/(cytosol))*(( 1.0 * n_synth) + (-1.0 * N_degrada) + (-1.0 * N_activat))

# Species:   id = Na, name = cytosolic NicD, affected by kineticLaw

init Na=0.2
dNa/dt=(1/(cytosol))*(( 1.0 * N_activat) + (-1.0 * Na_degrad) + (-1.0 * Na_transp))

# Species:   id = Nan, name = nuclear NicD, affected by kineticLaw

init Nan=0.0
dNan/dt=(1/(cytosol))*(( 1.0 * Na_transp) + (-1.0 * Nan_degra))

# Species:   id = MF, name = Lunatic fringe mRNA, affected by kineticLaw

init MF=0.1
dMF/dt=(1/(cytosol))*(( 1.0 * MF_transk) + (-1.0 * MF_degrad))

# Species:   id = F, name = Lunatic Fringe protein, affected by kineticLaw

init F=0.001
dF/dt=(1/(cytosol))*(( 1.0 * F_transla) + (-1.0 * F_degrada))

# Species:   id = Bp, name = phosph. beta-catenin, affected by kineticLaw

init Bp=0.1
dBp/dt=(1/(cytosol))*(( 1.0 * B_phospho) + (-1.0 * BP_dephos) + (-1.0 * Bp_degrad))

# Species:   id = BN, name = nuclear beta-catenin, affected by kineticLaw

init BN=0.001
dBN/dt=(1/(cytosol))*((-1.0 * B_shuttli))

# Species:   id = A, name = Axin2 protein, affected by kineticLaw

init A=0.1
dA/dt=(1/(cytosol))*(( 1.0 * AK_dissoc) + ( 1.0 * A_transla) + (-1.0 * A_degrada))

# Species:   id = K, name = Gsk3, affected by kineticLaw

init K=3.0
dK/dt=(1/(cytosol))*(( 1.0 * AK_dissoc))

# Species:   id = B, name = beta-catenin, affected by kineticLaw

init B=0.1
dB/dt=(1/(cytosol))*(( 1.0 * B_synth) + (-1.0 * B_degrada) + (-1.0 * B_phospho) + ( 1.0 * BP_dephos) + ( 1.0 * B_shuttli))

# Species:   id = MAx, name = Axin2 mRNA, affected by kineticLaw

init MAx=0.1
dMAx/dt=(1/(cytosol))*(( 1.0 * MAx_trans) + ( 1.0 * MAx_tra_1) + ( 1.0 * MAx_tra_2) + (-1.0 * MAx_degra))

# Species:   id = Rasa, name = active Ras, affected by kineticLaw

init Rasa=0.5
dRasa/dt=(1/(cytosol))*(( 1.0 * Ras_activ) + (-1.0 * Ras_inact))

# Species:   id = ERKa, name = active ERK, affected by kineticLaw

init ERKa=0.2
dERKa/dt=(1/(cytosol))*(( 1.0 * Erk_activ) + (-1.0 * Erk_inact))

# Species:   id = Xa, name = active TF X, affected by kineticLaw

init Xa=0.1
dXa/dt=(1/(cytosol))*(( 1.0 * X_activat) + (-1.0 * X_inactiv))

# Species:   id = MDusp, name = Dusp6 mRNA, affected by kineticLaw

init MDusp=0.1
dMDusp/dt=(1/(cytosol))*(( 1.0 * MDusp_tra) + (-1.0 * MDusp_deg))

# Species:   id = Dusp, name = Dusp6 protein, affected by kineticLaw

init Dusp=0.1
dDusp/dt=(1/(cytosol))*(( 1.0 * Dusp_tran) + (-1.0 * Dusp_degr))

# Species:   id = Rasi, name = inactive Ras, involved in a rule 

# Species:   id = ERKi, name = inactive ERK, involved in a rule 

# Species:   id = Xi, name = inactive TF X, involved in a rule 

# Species:   id = Rast, name = Ras total
# Warning species is not changed by either rules or reactions

par Rast=2.0
aux Rast=Rast

# Species:   id = ERKt, name = ERK total
# Warning species is not changed by either rules or reactions

par ERKt=2.0
aux ERKt=ERKt

# Species:   id = Xt, name = X total
# Warning species is not changed by either rules or reactions

par Xt=2.0
aux Xt=Xt

# Species:   id = D, name = Dsh protein
# Warning species is not changed by either rules or reactions

par D=2.0
aux D=D

# Species:   id = AK, name = Axin2/Gsk3 destruction complex, involved in a rule 

# Species:   id = Kt, name = Kt, constant
par Kt=3.0


# Species:   id = Fgf, name = Fgf, constant
par Fgf=1.0


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

