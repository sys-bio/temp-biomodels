
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Sarma2012 - Interaction topologies of MAPK cascade (M4_K2_QSS_PSEQ)
#
# is http://identifiers.org/biomodels.db/MODEL1204280040
# is http://identifiers.org/biomodels.db/BIOMD0000000433
# isDescribedBy http://identifiers.org/pubmed/22748295
# isDerivedFrom http://identifiers.org/pubmed/19897477
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_10, name = 10
function_(MK_P,MKK_PP,MKK_P,MK_PP,MKK,MK,P2,K10b,K5b,K6b,Kse2,K9b,k10b)=(k10b*P2*MK_P/K10b/(1+MKK_PP/K5b+MKK_P/K6b+MKK/Kse2+MK/Kse2+MK_P/K10b+MK_PP/K9b))


# FunctionDefinition id = function_1, name = 1
functio_1(MKKK,K1,k1,Sig)=(k1*Sig*MKKK/(K1+MKKK))


# FunctionDefinition id = function_6, name = 6
functio_2(P1,MKK_P,MKK_PP,MK_P,MK_PP,MKK,MK,k6a,K6a,MKKK,MKKK_P,P2,K6b,K2a,Kse1,K5a,k6b,K5b,Kse2,K10b,K9b)=(k6a*P1*MKK_P/K6a/(1+MKKK_P/K2a+MKKK/Kse1+MKK_PP/K5a+MKK_P/K6a+MKK/Kse1)+k6b*P2*MKK_P/K6b/(1+MKK_PP/K5b+MKK_P/K6b+MKK/Kse2+MK/Kse2+MK_P/K10b+MK_PP/K9b))


# FunctionDefinition id = function_2, name = 2
functio_3(MKKK_P,MKKK,P1,MKK_PP,MKK_P,MKK,Kse1,K2a,K5a,K6a,k2a)=(k2a*MKKK_P*P1/K2a/(1+MKKK_P/K2a+MKKK/Kse1+MKK_PP/K5a+MKK_P/K6a+MKK/Kse1))


# FunctionDefinition id = function_3, name = 3
functio_4(k3,MKKK_P,MKK,K3,MKK_P,K4)=(k3*MKKK_P*MKK/K3/(1+MKK/K3+MKK_P/K4))


# FunctionDefinition id = function_4, name = 4
functio_5(k4,MKKK_P,MKK_P,K4,MKK,K3)=(k4*MKKK_P*MKK_P/K4/(1+MKK/K3+MKK_P/K4))


# FunctionDefinition id = function_5, name = 5
functio_6(MKK_PP,MKK_P,MK_P,MK_PP,P1,MKK,MK,k5a,K5a,MKKK,MKKK_P,k5b,P2,K5b,K6a,Kse1,K2a,K6b,Kse2,K10b,K9b)=(k5a*P1*MKK_PP/K5a/(1+MKKK_P/K2a+MKKK/Kse1+MKK_PP/K5a+MKK_P/K6a+MKK/Kse1)+k5b*P2*MKK_PP/K5b/(1+MKK_PP/K5b+MKK_P/K6b+MKK/Kse2+MK/Kse2+MK_P/K10b+MK_PP/K9b))


# FunctionDefinition id = function_7, name = 7
functio_7(k7,MKK_PP,MK,K7,MK_P,K8)=(k7*MKK_PP*MK/K7/(1+MK/K7+MK_P/K8))


# FunctionDefinition id = function_9, name = 9
functio_8(MK_PP,MKK_PP,MKK_P,MK_P,MKK,MK,P2,K9b,K5b,K6b,Kse2,K10b,k9b)=(k9b*P2*MK_PP/K9b/(1+MKK_PP/K5b+MKK_P/K6b+MKK/Kse2+MK/Kse2+MK_P/K10b+MK_PP/K9b))


# FunctionDefinition id = function_8, name = 8
functio_9(k7,MKK_PP,MK_P,K8,MK,K7)=(k7*MKK_PP*MK_P/K8/(1+MK/K7+MK_P/K8))


# Compartment: id = compartment_1, name = compartment, constant
par compartme=1.0

# Compartment: id = compartment_2, name = No Name, constant
par compart_1=1.0

# Parameter:   id =  parameter_1, name = K1, constant
par parameter=100.0

# Parameter:   id =  parameter_2, name = K2a, constant
par paramet_1=54.3

# Parameter:   id =  parameter_3, name = K3, constant
par paramet_2=50.5

# Parameter:   id =  parameter_4, name = K4, constant
par paramet_3=500.0

# Parameter:   id =  parameter_5, name = K5a, constant
par paramet_4=24.3

# Parameter:   id =  parameter_6, name = K6a, constant
par paramet_5=108.6

# Parameter:   id =  parameter_7, name = K7, constant
par paramet_6=50.5

# Parameter:   id =  parameter_8, name = K8, constant
par paramet_7=500.0

# Parameter:   id =  parameter_9, name = K9b, constant
par paramet_8=24.3

# Parameter:   id =  parameter_10, name = K10b, constant
par paramet_9=108.6

# Parameter:   id =  parameter_11, name = Kse1, constant
par parame_10=0.06

# Parameter:   id =  parameter_12, name = Kse2, constant
par parame_11=0.06

# Parameter:   id =  parameter_13, name = K5b, constant
par parame_12=24.3

# Parameter:   id =  parameter_14, name = K6b, constant
par parame_13=108.6

# Reaction: id = reaction_1, name = 1
# Local Parameter:   id =  k1, name = k1
par k1=1.0


reaction_=compartme*functio_1(species_1, parameter, k1, specie_11)

# Reaction: id = reaction_2, name = 2
# Local Parameter:   id =  k2a, name = k2a
par k2a=0.086


reactio_1=compartme*functio_3(species_2, species_1, species_9, species_5, species_4, species_3, parame_10, paramet_1, paramet_4, paramet_5, k2a)

# Reaction: id = reaction_3, name = 3
# Local Parameter:   id =  k3, name = k3
par k3=0.01


reactio_2=compartme*functio_4(k3, species_2, species_3, paramet_2, species_4, paramet_3)

# Reaction: id = reaction_4, name = 4
# Local Parameter:   id =  k4, name = k4
par k4=15.0


reactio_3=compartme*functio_5(k4, species_2, species_4, paramet_3, species_3, paramet_2)

# Reaction: id = reaction_5, name = 5
# Local Parameter:   id =  k5a, name = k5a
par k5a=0.092

# Local Parameter:   id =  k5b, name = k5b
par k5b=0.092


reactio_4=compartme*functio_6(species_5, species_4, species_7, species_8, species_9, species_3, species_6, k5a, paramet_4, species_1, species_2, k5b, specie_10, parame_12, paramet_5, parame_10, paramet_1, parame_13, parame_11, paramet_9, paramet_8)

# Reaction: id = reaction_6, name = 6
# Local Parameter:   id =  k6a, name = k6a
par k6a=0.086

# Local Parameter:   id =  k6b, name = k6b
par k6b=0.086


reactio_5=compartme*functio_2(species_9, species_4, species_5, species_7, species_8, species_3, species_6, k6a, paramet_5, species_1, species_2, specie_10, parame_13, paramet_1, parame_10, paramet_4, k6b, parame_12, parame_11, paramet_9, paramet_8)

# Reaction: id = reaction_7, name = 7
# Local Parameter:   id =  k7, name = k7
par k7=0.01


reactio_6=compartme*functio_7(k7, species_5, species_6, paramet_6, species_7, paramet_7)

# Reaction: id = reaction_8, name = 8
# Local Parameter:   id =  k7, name = k7
par k7_1=15.0


reactio_7=compartme*functio_9(k7_1, species_5, species_7, paramet_7, species_6, paramet_6)

# Reaction: id = reaction_9, name = 9
# Local Parameter:   id =  k9b, name = k9b
par k9b=0.092


reactio_8=compartme*functio_8(species_8, species_9, species_4, species_7, species_3, species_6, specie_10, paramet_8, parame_12, parame_13, parame_11, paramet_9, k9b)

# Reaction: id = reaction_10, name = 10
# Local Parameter:   id =  k10b, name = k10b
par k10b=0.086


reactio_9=compartme*function_(species_7, species_5, species_4, species_8, species_3, species_6, specie_10, paramet_9, parame_12, parame_13, parame_11, paramet_8, k10b)

# Species:   id = species_1, name = MKKK, affected by kineticLaw

init species_1=300.0
dspecies_1/dt=(1/(compartme))*((-1.0 * reaction_) + ( 1.0 * reactio_1))

# Species:   id = species_2, name = MKKK_P, affected by kineticLaw

init species_2=0.0
dspecies_2/dt=(1/(compartme))*(( 1.0 * reaction_) + (-1.0 * reactio_1))

# Species:   id = species_3, name = MKK, affected by kineticLaw

init species_3=1199.99994221325
dspecies_3/dt=(1/(compartme))*((-1.0 * reactio_2) + ( 1.0 * reactio_5))

# Species:   id = species_4, name = MKK_P, affected by kineticLaw

init species_4=0.0
dspecies_4/dt=(1/(compartme))*(( 1.0 * reactio_2) + (-1.0 * reactio_3) + ( 1.0 * reactio_4) + (-1.0 * reactio_5))

# Species:   id = species_5, name = MKK_PP, affected by kineticLaw

init species_5=0.0
dspecies_5/dt=(1/(compartme))*(( 1.0 * reactio_3) + (-1.0 * reactio_4))

# Species:   id = species_6, name = MK, affected by kineticLaw

init species_6=1199.99994221325
dspecies_6/dt=(1/(compartme))*((-1.0 * reactio_6) + ( 1.0 * reactio_9))

# Species:   id = species_7, name = MK_P, affected by kineticLaw

init species_7=0.0
dspecies_7/dt=(1/(compartme))*(( 1.0 * reactio_6) + (-1.0 * reactio_7) + ( 1.0 * reactio_8) + (-1.0 * reactio_9))

# Species:   id = species_8, name = MK_PP, affected by kineticLaw

init species_8=0.0
dspecies_8/dt=(1/(compartme))*(( 1.0 * reactio_7) + (-1.0 * reactio_8))

# Species:   id = species_9, name = P1
# Warning species is not changed by either rules or reactions

par species_9=100.0
aux species_9=species_9

# Species:   id = species_10, name = P2
# Warning species is not changed by either rules or reactions

par specie_10=200.0
aux specie_10=specie_10

# Species:   id = species_11, name = Sig
# Warning species is not changed by either rules or reactions

par specie_11=20.0
aux specie_11=specie_11

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

