
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ho2019 - Mathematical models of transmission dynamics and vaccine strategies in Hong Kong during the 2017-2018 winter influenza season (Simple)
#
# isDescribedBy http://identifiers.org/pubmed/31128142
# is http://identifiers.org/biomodels.db/MODEL1911120003
# is http://identifiers.org/biomodels.db/BIOMD0000000851
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_Susceptible_Individual_Transmission, name = Function_for_Susceptible_Individual_Transmission
Function_(beta,I,S)=(beta*I*S)


# FunctionDefinition id = Function_for_Vaccinated_Population_Growth, name = Function_for_Vaccinated_Population_Growth
Functio_1(r,V_e,A)=(r*(1-V_e/A))


# FunctionDefinition id = Function_for_Vaccinated_Population_Infection, name = Function_for_Vaccinated_Population_Infection
Functio_2(k,I,V)=(k*I*V)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  alpha, name = alpha, constant
par alpha=127.0

# Parameter:   id =  r, name = r, constant
par r=0.0155

# Parameter:   id =  A, name = A, constant
par A=0.1155

# Parameter:   id =  beta, name = beta, constant
par beta=2.7516

# Parameter:   id =  gamma, name = gamma, constant
par gamma=2.1272

# Parameter:   id =  w, name = w, constant
par w=0.45

# Parameter:   id =  k, name = k, defined by a Rule

# Parameter:   id =  T, name = T, constant
par T_renamed=3.29

# Parameter:   id =  R_0, name = R_0, constant
par R_0=1.2935

# Parameter:   id =  R_0_x, name = R_0_x, constant
par R_0_x=1.2607

# Parameter:   id =  fraction_S, name = fraction_S, defined by a Rule

# Parameter:   id =  fraction_V, name = fraction_V, defined by a Rule

# Parameter:   id =  fraction_I, name = fraction_I, defined by a Rule

# Parameter:   id =  fraction_R, name = fraction_R, defined by a Rule

# Parameter:   id =  fraction_total, name = fraction_total, defined by a Rule

# Parameter:   id =  ModelValue_3, name = Initial for beta, constant
par ModelValu=2.7516

# Parameter:   id =  ModelValue_5, name = Initial for w, constant
par ModelVa_1=0.45

# assignmentRule: variable = k
k=ModelValu*(1-ModelVa_1)
aux k=k

# assignmentRule: variable = fraction_total
fractio_4=I+R_1+S+V+V_e
aux fractio_4=fractio_4

# assignmentRule: variable = fraction_V
fractio_1=V/fractio_4
aux fractio_1=fractio_1

# assignmentRule: variable = fraction_R
fractio_3=R_1/fractio_4
aux fractio_3=fractio_3

# assignmentRule: variable = fraction_I
fractio_2=I/fractio_4
aux fractio_2=fractio_2

# assignmentRule: variable = fraction_S
fraction_=S/fractio_4
aux fraction_=fraction_

# Reaction: id = Susceptible_Individual_Transmission, name = Susceptible_Individual_Transmission

Susceptib=compartme*Function_(beta, I, S)

# Reaction: id = Vaccinated_Population_Growth, name = Vaccinated_Population_Growth

Vaccinate=compartme*Functio_1(r, V_e, A)

# Reaction: id = Vaccinated_Population_Infection, name = Vaccinated_Population_Infection

Vaccina_1=compartme*Functio_2(k, I, V)

# Reaction: id = Infected_Recovery, name = Infected_Recovery

Infected_=compartme*gamma*I

# Species:   id = S, name = S, affected by kineticLaw

init S=0.9424
dS/dt=(1/(compartme))*((-1.0 * Susceptib) + (-1.0 * Vaccinate))

# Species:   id = V, name = V, affected by kineticLaw

init V=0.0565
dV/dt=(1/(compartme))*(( 1.0 * Vaccinate) + (-1.0 * Vaccina_1))

# Species:   id = V_e, name = V_e, affected by kineticLaw

init V_e=0.0565
dV_e/dt=(1/(compartme))*(( 1.0 * Vaccinate))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.0012
dI/dt=(1/(compartme))*(( 1.0 * Susceptib) + ( 1.0 * Vaccina_1) + (-1.0 * Infected_))

# Species:   id = R, name = R, affected by kineticLaw

par R_1=0.0
aux R_1=R_1
dR_1/dt=(1/(compartme))*(( 1.0 * Infected_))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

