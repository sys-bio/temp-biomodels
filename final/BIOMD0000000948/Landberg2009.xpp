
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Landberg2009 - Alkylresorcinol Dose Response
#
# is http://identifiers.org/biomodels.db/MODEL1803050001
# is http://identifiers.org/biomodels.db/BIOMD0000000948
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = modifier_function, name = modifier function
modifier_(modifier,drug)=(modifier*drug)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Compartment: id = A1, name = A1, constant
par A1=1.0

# Compartment: id = A2, name = A2, constant
par A2=1.0

# Compartment: id = Central, name = Central, constant
par Central=1.0

# Parameter:   id =  Lag_time_1, name = Lag_time_1, constant
par Lag_time_=0.9

# Parameter:   id =  Lag_time_2, name = Lag_time_2, constant
par Lag_tim_1=4.7

# Parameter:   id =  k_a_1, name = k_a_1, constant
par k_a_1=0.3

# Parameter:   id =  k_a_2, name = k_a_2, constant
par k_a_2=1.8

# Parameter:   id =  base, name = base, constant
par base=0.32

# Parameter:   id =  CL_V, name = CL/V, constant
par CL_V=20.0

# assignmentRule: variable = F1
F1= piecew2 
aux F1=F1

# assignmentRule: variable = F2
F2= piecew3 
aux F2=F2

# Reaction: id = reaction, name = reaction

reaction=modifier_(F1, AR_Dose)

# Reaction: id = reaction_1, name = reaction_1

reaction_=modifier_(F2, AR_Dose)

# Reaction: id = reaction_2, name = reaction_2

reactio_1=k_a_1*AR_A1

# Reaction: id = reaction_3, name = reaction_3

reactio_2=k_a_2*AR_A2

# Reaction: id = reaction_4, name = reaction_4

reactio_3=Central*Constant_(base)

# Reaction: id = reaction_5, name = reaction_5

reactio_4=Central*CL_V*AR_Centra

# Species:   id = AR_A1, name = AR, affected by kineticLaw

init AR_A1=0.0
dAR_A1/dt=(1/(A1))*(( 1.0 * reaction) + (-1.0 * reactio_1))

# Species:   id = AR_A2, name = AR, affected by kineticLaw

init AR_A2=0.0
dAR_A2/dt=(1/(A2))*(( 1.0 * reaction_) + (-1.0 * reactio_2))

# Species:   id = AR_Central, name = AR, affected by kineticLaw

par AR_Centra=0.01
aux AR_Centra=AR_Centra
dAR_Centra/dt=(1/(Central))*(( 1.0 * reactio_1) + ( 1.0 * reactio_2) + ( 1.0 * reactio_3) + (-1.0 * reactio_4))

# Species:   id = AR_Dose, name = AR_Dose, affected by kineticLaw

init AR_Dose=485.0
dAR_Dose/dt=(1/(compartme))*((-1.0 * reaction) + (-1.0 * reaction_))

# Species:   id = F1, name = F1, involved in a rule 

# Species:   id = F2, name = F2, involved in a rule 


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if ((t  >=  Lag_time_) && (t  <  Lag_tim_1)) then (0.1) else (0.052)

piecew2=if (t  <  Lag_time_) then (0) else ( piecew1 )

piecew3=if (t  <  Lag_tim_1) then (0) else (0.048)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

