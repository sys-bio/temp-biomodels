
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Grigolon2018 - Feedback Loop in ARF and IAA Response
#
# is http://identifiers.org/biomodels.db/MODEL1706070000
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Cell, name = Cell, constant
par Cell=1.0

# Parameter:   id =  Sauxin, name = Sauxin, constant
par Sauxin=0.02

# Parameter:   id =  muaux, name = muaux, constant
par muaux=0.1

# Parameter:   id =  lambda1, name = lambda1, constant
par lambda1=0.48

# Parameter:   id =  thetaARF, name = thetaARF, constant
par thetaARF=100.0

# Parameter:   id =  thetaARF2, name = thetaARF2, constant
par thetaARF2=100.0

# Parameter:   id =  thetaARFIAA, name = thetaARFIAA, constant
par thetaARFI=100.0

# Parameter:   id =  muIAAm, name = muIAAm, constant
par muIAAm=0.003

# Parameter:   id =  muIAA, name = muIAA, constant
par muIAA=0.003

# Parameter:   id =  delta, name = delta, constant
par delta=4.0

# Parameter:   id =  qa, name = qa, constant
par qa=0.5

# Parameter:   id =  qd, name = qd, constant
par qd=0.44

# Parameter:   id =  pa, name = pa, constant
par pa=1.0

# Parameter:   id =  pd, name = pd, constant
par pd=0.072

# Parameter:   id =  ka, name = ka, constant
par ka=8.2E-4

# Parameter:   id =  kd, name = kd, constant
par kd=0.33

# Parameter:   id =  la, name = la, constant
par la=5.75

# Parameter:   id =  ld, name = ld, constant
par ld=0.045

# Parameter:   id =  lm, name = lm, constant
par lm=0.9

# Parameter:   id =  muIAAstar, name = muIAAstar, constant
par muIAAstar=0.1

# Reaction: id = auxin_production, name = auxin_production

auxin_pro=Sauxin

# Reaction: id = auxin_degradation, name = auxin_degradation

auxin_deg=aux*muaux

# Reaction: id = mRNA_production, name = mRNA_production

mRNA_prod=ARF*lambda1*(thetaARF*(ARF*thetaARF^-1+ARF2*thetaARF2^-1+ARFIAA*thetaARFI^-1+1))^-1

# Reaction: id = mRNA_degradation, name = mRNA_degradation

mRNA_degr=IAAm*muIAAm

# Reaction: id = IAA_degradation, name = IAA_degradation

IAA_degra=IAAp*muIAA

# Reaction: id = mRNA_translation, name = mRNA_translation

mRNA_tran=delta*IAAm

# Reaction: id = ARF2_formation, name = ARF2_formation

ARF2_form=ARF^2*qa

# Reaction: id = ARF2_dissociation, name = ARF2_dissociation

ARF2_diss=ARF2*qd

# Reaction: id = ARFIAA_formation, name = ARFIAA_formation

ARFIAA_fo=ARF*IAAp*pa

# Reaction: id = ARFIAA_dissociation, name = ARFIAA_dissociation

ARFIAA_di=ARFIAA*pd

# Reaction: id = auxTIR1_formation, name = auxTIR1_formation

auxTIR1_f=aux*ka*TIR1

# Reaction: id = auxTIR1_dissociation, name = auxTIR1_dissociation

auxTIR1_d=auxTIR1*kd

# Reaction: id = auxTIR1IAA_formation, name = auxTIR1IAA_formation

auxTIR1_1=auxTIR1*IAAp*la

# Reaction: id = auxTIR1IAA_dissociation, name = auxTIR1IAA_dissociation

auxTIR1_2=auxTIR1IA*ld

# Reaction: id = IAA_ubiquitination, name = IAA_ubiquitination

IAA_ubiqu=auxTIR1IA*lm

# Reaction: id = IAAstar_degradation, name = IAAstar_degradation

IAAstar_d=IAAstar*muIAAstar

# Species:   id = aux, name = aux, affected by kineticLaw

init aux=0.0
daux/dt=(1/(Cell))*(( 1.0 * auxin_pro) + (-1.0 * auxin_deg) + (-1.0 * auxTIR1_f) + ( 1.0 * auxTIR1_d))

# Species:   id = IAAm, name = IAAm, affected by kineticLaw

init IAAm=0.0
dIAAm/dt=(1/(Cell))*(( 1.0 * mRNA_prod) + (-1.0 * mRNA_degr) + (-1.0 * mRNA_tran) + ( 1.0 * mRNA_tran))

# Species:   id = IAAp, name = IAAp, affected by kineticLaw

init IAAp=0.0
dIAAp/dt=(1/(Cell))*((-1.0 * IAA_degra) + ( 1.0 * mRNA_tran) + (-1.0 * ARFIAA_fo) + ( 1.0 * ARFIAA_di) + (-1.0 * auxTIR1_1) + ( 1.0 * auxTIR1_2))

# Species:   id = ARF, name = ARF, affected by kineticLaw

init ARF=10.0
dARF/dt=(1/(Cell))*((-2.0 * ARF2_form) + ( 2.0 * ARF2_diss) + (-1.0 * ARFIAA_fo) + ( 1.0 * ARFIAA_di))

# Species:   id = null, name = null, constant
par null=0.0


# Species:   id = ARFIAA, name = ARFIAA, affected by kineticLaw

init ARFIAA=0.0
dARFIAA/dt=(1/(Cell))*(( 1.0 * ARFIAA_fo) + (-1.0 * ARFIAA_di))

# Species:   id = ARF2, name = ARF2, affected by kineticLaw

init ARF2=0.0
dARF2/dt=(1/(Cell))*(( 1.0 * ARF2_form) + (-1.0 * ARF2_diss))

# Species:   id = auxTIR1, name = auxTIR1, affected by kineticLaw

init auxTIR1=0.0
dauxTIR1/dt=(1/(Cell))*(( 1.0 * auxTIR1_f) + (-1.0 * auxTIR1_d) + (-1.0 * auxTIR1_1) + ( 1.0 * auxTIR1_2) + ( 1.0 * IAA_ubiqu))

# Species:   id = auxTIR1IAA, name = auxTIR1IAA, affected by kineticLaw

par auxTIR1IA=0.0
aux auxTIR1IA=auxTIR1IA
dauxTIR1IA/dt=(1/(Cell))*(( 1.0 * auxTIR1_1) + (-1.0 * auxTIR1_2) + (-1.0 * IAA_ubiqu))

# Species:   id = TIR1, name = TIR1, affected by kineticLaw

init TIR1=18.51
dTIR1/dt=(1/(Cell))*((-1.0 * auxTIR1_f) + ( 1.0 * auxTIR1_d))

# Species:   id = IAAstar, name = IAAstar, affected by kineticLaw

init IAAstar=0.0
dIAAstar/dt=(1/(Cell))*(( 1.0 * IAA_ubiqu) + (-1.0 * IAAstar_d))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

