
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Begitt2014 - STAT1 cooperative DNA binding - single GAS polymer model
#
# is http://identifiers.org/biomodels.db/MODEL1311130001
# is http://identifiers.org/biomodels.db/BIOMD0000000500
# isDescribedBy http://identifiers.org/pubmed/24413774
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_4_DNA1, name = function_4_DNA1
function_(DNA_000,DNA_100,Koff_NG1,Kon_NG1,S1,nucleus)=((Kon_NG1*DNA_000*S1-Koff_NG1*DNA_100)/nucleus)


# FunctionDefinition id = function_4_DNA50, name = function_4_DNA50
functio_1(DNA_011,DNA_01B1,Koff_P1,Kon_P1,nucleus)=((Kon_P1*DNA_011-Koff_P1*DNA_01B1)/nucleus)


# FunctionDefinition id = function_4_DNA3, name = function_4_DNA3
functio_2(DNA_000,DNA_001,Koff_NG1,Kon_NG1,S1,nucleus)=((Kon_NG1*DNA_000*S1-Koff_NG1*DNA_001)/nucleus)


# FunctionDefinition id = function_4_DNA53, name = function_4_DNA53
functio_3(DNA_11B1,DNA_1B1B1,Koff_P1,Kon_P1,nucleus)=((Kon_P1*DNA_11B1-Koff_P1*DNA_1B1B1)/nucleus)


# FunctionDefinition id = function_4_DNA54, name = function_4_DNA54
functio_4(DNA_1B11,DNA_1B1B1,Koff_P1,Kon_P1,nucleus)=((Kon_P1*DNA_1B11-Koff_P1*DNA_1B1B1)/nucleus)


# FunctionDefinition id = function_4_DNA2, name = function_4_DNA2
functio_5(DNA_000,DNA_010,Koff_G1,Kon_G1,S1,nucleus)=((Kon_G1*DNA_000*S1-Koff_G1*DNA_010)/nucleus)


# FunctionDefinition id = function_4_DNA4, name = function_4_DNA4
functio_6(DNA_100,DNA_110,Koff_G1,Kon_G1,S1,nucleus)=((Kon_G1*DNA_100*S1-Koff_G1*DNA_110)/nucleus)


# FunctionDefinition id = function_4_DNA51, name = function_4_DNA51
functio_7(DNA_111,DNA_11B1,Koff_P1,Kon_P1,nucleus)=((Kon_P1*DNA_111-Koff_P1*DNA_11B1)/nucleus)


# FunctionDefinition id = function_4_DNA12, name = function_4_DNA12
functio_8(DNA_011,DNA_111,Koff_NG1,Kon_NG1,S1,nucleus)=((Kon_NG1*DNA_011*S1-Koff_NG1*DNA_111)/nucleus)


# FunctionDefinition id = function_4_DNA9, name = function_4_DNA9
functio_9(DNA_001,DNA_011,Koff_G1,Kon_G1,S1,nucleus)=((Kon_G1*DNA_001*S1-Koff_G1*DNA_011)/nucleus)


# FunctionDefinition id = function_4_DNA52, name = function_4_DNA52
functi_10(DNA_111,DNA_1B11,Koff_P1,Kon_P1,nucleus)=((Kon_P1*DNA_111-Koff_P1*DNA_1B11)/nucleus)


# FunctionDefinition id = function_4_DNA6, name = function_4_DNA6
functi_11(DNA_010,DNA_110,Koff_NG1,Kon_NG1,S1,nucleus)=((Kon_NG1*DNA_010*S1-Koff_NG1*DNA_110)/nucleus)


# FunctionDefinition id = function_4_DNA49, name = function_4_DNA49
functi_12(DNA_110,DNA_1B10,Koff_P1,Kon_P1,nucleus)=((Kon_P1*DNA_110-Koff_P1*DNA_1B10)/nucleus)


# FunctionDefinition id = function_4_DNA8, name = function_4_DNA8
functi_13(DNA_001,DNA_101,Koff_NG1,Kon_NG1,S1,nucleus)=((Kon_NG1*DNA_001*S1-Koff_NG1*DNA_101)/nucleus)


# FunctionDefinition id = function_4_DNA7, name = function_4_DNA7
functi_14(DNA_010,DNA_011,Koff_NG1,Kon_NG1,S1,nucleus)=((Kon_NG1*DNA_010*S1-Koff_NG1*DNA_011)/nucleus)


# FunctionDefinition id = function_4_DNA10, name = function_4_DNA10
functi_15(DNA_110,DNA_111,Koff_NG1,Kon_NG1,S1,nucleus)=((Kon_NG1*DNA_110*S1-Koff_NG1*DNA_111)/nucleus)


# FunctionDefinition id = function_4_DNA11, name = function_4_DNA11
functi_16(DNA_101,DNA_111,Koff_G1,Kon_G1,S1,nucleus)=((Kon_G1*DNA_101*S1-Koff_G1*DNA_111)/nucleus)


# FunctionDefinition id = function_4_DNA5, name = function_4_DNA5
functi_17(DNA_100,DNA_101,Koff_NG1,Kon_NG1,S1,nucleus)=((Kon_NG1*DNA_100*S1-Koff_NG1*DNA_101)/nucleus)


# Compartment: id = default, name = default, constant
par default=1.0

# Compartment: id = nucleus, name = nucleus, constant
par nucleus=1.0

# Parameter:   id =  Kon_P1, name = Kon_P1, constant
par Kon_P1=60000.0

# Parameter:   id =  Koff_P1, name = Koff_P1, constant
par Koff_P1=100.0

# Parameter:   id =  Kon_G1, name = Kon_G1, constant
par Kon_G1=2.0E10

# Parameter:   id =  Koff_G1, name = Koff_G1, constant
par Koff_G1=100.0

# Parameter:   id =  Kon_NG1, name = Kon_NG1, constant
par Kon_NG1=2.0E10

# Parameter:   id =  Koff_NG1, name = Koff_NG1, constant
par Koff_NG1=20000.0

# Parameter:   id =  parameter_1, name = GAS_siteOccupancy, defined by a Rule

# assignmentRule: variable = parameter_1
parameter=DNA_010+DNA_011+DNA_110+DNA_111+DNA_01B1+DNA_1B10+DNA_1B11+DNA_11B1+DNA_1B1B1
aux parameter=parameter

# Reaction: id = DNA1, name = DNA1

DNA1=nucleus*function_(DNA_000, DNA_100, Koff_NG1, Kon_NG1, S1, nucleus)

# Reaction: id = DNA2, name = DNA2

DNA2=nucleus*functio_5(DNA_000, DNA_010, Koff_G1, Kon_G1, S1, nucleus)

# Reaction: id = DNA3, name = DNA3

DNA3=nucleus*functio_2(DNA_000, DNA_001, Koff_NG1, Kon_NG1, S1, nucleus)

# Reaction: id = DNA4, name = DNA4

DNA4=nucleus*functio_6(DNA_100, DNA_110, Koff_G1, Kon_G1, S1, nucleus)

# Reaction: id = DNA5, name = DNA5

DNA5=nucleus*functi_17(DNA_100, DNA_101, Koff_NG1, Kon_NG1, S1, nucleus)

# Reaction: id = DNA6, name = DNA6

DNA6=nucleus*functi_11(DNA_010, DNA_110, Koff_NG1, Kon_NG1, S1, nucleus)

# Reaction: id = DNA7, name = DNA7

DNA7=nucleus*functi_14(DNA_010, DNA_011, Koff_NG1, Kon_NG1, S1, nucleus)

# Reaction: id = DNA8, name = DNA8

DNA8=nucleus*functi_13(DNA_001, DNA_101, Koff_NG1, Kon_NG1, S1, nucleus)

# Reaction: id = DNA9, name = DNA9

DNA9=nucleus*functio_9(DNA_001, DNA_011, Koff_G1, Kon_G1, S1, nucleus)

# Reaction: id = DNA10, name = DNA10

DNA10=nucleus*functi_15(DNA_110, DNA_111, Koff_NG1, Kon_NG1, S1, nucleus)

# Reaction: id = DNA11, name = DNA11

DNA11=nucleus*functi_16(DNA_101, DNA_111, Koff_G1, Kon_G1, S1, nucleus)

# Reaction: id = DNA12, name = DNA12

DNA12=nucleus*functio_8(DNA_011, DNA_111, Koff_NG1, Kon_NG1, S1, nucleus)

# Reaction: id = DNA49, name = DNA49

DNA49=nucleus*functi_12(DNA_110, DNA_1B10, Koff_P1, Kon_P1, nucleus)

# Reaction: id = DNA50, name = DNA50

DNA50=nucleus*functio_1(DNA_011, DNA_01B1, Koff_P1, Kon_P1, nucleus)

# Reaction: id = DNA51, name = DNA51

DNA51=nucleus*functio_7(DNA_111, DNA_11B1, Koff_P1, Kon_P1, nucleus)

# Reaction: id = DNA52, name = DNA52

DNA52=nucleus*functi_10(DNA_111, DNA_1B11, Koff_P1, Kon_P1, nucleus)

# Reaction: id = DNA53, name = DNA53

DNA53=nucleus*functio_3(DNA_11B1, DNA_1B1B1, Koff_P1, Kon_P1, nucleus)

# Reaction: id = DNA54, name = DNA54

DNA54=nucleus*functio_4(DNA_1B11, DNA_1B1B1, Koff_P1, Kon_P1, nucleus)

# Species:   id = S1, name = S1, affected by kineticLaw

init S1=1.0E-10
dS1/dt=(1/(nucleus))*((-1.0 * DNA1) + (-1.0 * DNA2) + (-1.0 * DNA3) + (-1.0 * DNA4) + (-1.0 * DNA5) + (-1.0 * DNA6) + (-1.0 * DNA7) + (-1.0 * DNA8) + (-1.0 * DNA9) + (-1.0 * DNA10) + (-1.0 * DNA11) + (-1.0 * DNA12))

# Species:   id = DNA_000, name = DNA_000, affected by kineticLaw

init DNA_000=1.0E-10
dDNA_000/dt=(1/(nucleus))*((-1.0 * DNA1) + (-1.0 * DNA2) + (-1.0 * DNA3))

# Species:   id = DNA_100, name = DNA_100, affected by kineticLaw

init DNA_100=0.0
dDNA_100/dt=(1/(nucleus))*(( 1.0 * DNA1) + (-1.0 * DNA4) + (-1.0 * DNA5))

# Species:   id = DNA_010, name = DNA_010, affected by kineticLaw

init DNA_010=0.0
dDNA_010/dt=(1/(nucleus))*(( 1.0 * DNA2) + (-1.0 * DNA6) + (-1.0 * DNA7))

# Species:   id = DNA_001, name = DNA_001, affected by kineticLaw

init DNA_001=0.0
dDNA_001/dt=(1/(nucleus))*(( 1.0 * DNA3) + (-1.0 * DNA8) + (-1.0 * DNA9))

# Species:   id = DNA_110, name = DNA_110, affected by kineticLaw

init DNA_110=0.0
dDNA_110/dt=(1/(nucleus))*(( 1.0 * DNA4) + ( 1.0 * DNA6) + (-1.0 * DNA10) + (-1.0 * DNA49))

# Species:   id = DNA_101, name = DNA_101, affected by kineticLaw

init DNA_101=0.0
dDNA_101/dt=(1/(nucleus))*(( 1.0 * DNA5) + ( 1.0 * DNA8) + (-1.0 * DNA11))

# Species:   id = DNA_011, name = DNA_011, affected by kineticLaw

init DNA_011=0.0
dDNA_011/dt=(1/(nucleus))*(( 1.0 * DNA7) + ( 1.0 * DNA9) + (-1.0 * DNA12) + (-1.0 * DNA50))

# Species:   id = DNA_111, name = DNA_111, affected by kineticLaw

init DNA_111=0.0
dDNA_111/dt=(1/(nucleus))*(( 1.0 * DNA10) + ( 1.0 * DNA11) + ( 1.0 * DNA12) + (-1.0 * DNA51) + (-1.0 * DNA52))

# Species:   id = DNA_1B10, name = DNA_1B10, affected by kineticLaw

init DNA_1B10=0.0
dDNA_1B10/dt=(1/(nucleus))*(( 1.0 * DNA49))

# Species:   id = DNA_01B1, name = DNA_01B1, affected by kineticLaw

init DNA_01B1=0.0
dDNA_01B1/dt=(1/(nucleus))*(( 1.0 * DNA50))

# Species:   id = DNA_1B11, name = DNA_1B11, affected by kineticLaw

init DNA_1B11=0.0
dDNA_1B11/dt=(1/(nucleus))*(( 1.0 * DNA52) + (-1.0 * DNA54))

# Species:   id = DNA_11B1, name = DNA_11B1, affected by kineticLaw

init DNA_11B1=0.0
dDNA_11B1/dt=(1/(nucleus))*(( 1.0 * DNA51) + (-1.0 * DNA53))

# Species:   id = DNA_1B1B1, name = DNA_1B1B1, affected by kineticLaw

init DNA_1B1B1=0.0
dDNA_1B1B1/dt=(1/(nucleus))*(( 1.0 * DNA53) + ( 1.0 * DNA54))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

