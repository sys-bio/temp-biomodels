
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Messiha2013 - Pentose phosphate pathway model
#
# is http://identifiers.org/biomodels.db/MODEL1311290000
# is http://identifiers.org/biomodels.db/BIOMD0000000502
# isDescribedBy http://identifiers.org/doi/10.7287/peerj.preprints.146v2
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Parameter:   id =  sum_NADP, name = sum_NADP, constant
par sum_NADP=0.33

# Parameter:   id =  Kx5p_TAL, name = Kx5p_TAL, constant
par Kx5p_TAL=0.67

# Parameter:   id =  Ke4p_TAL, name = Ke4p_TAL, constant
par Ke4p_TAL=0.946

# Parameter:   id =  Kr5p_TAL, name = Kr5p_TAL, constant
par Kr5p_TAL=0.235

# Parameter:   id =  Kgap_TAL, name = Kgap_TAL, constant
par Kgap_TAL=0.1

# Parameter:   id =  Kf6p_TAL, name = Kf6p_TAL, constant
par Kf6p_TAL=1.1

# Parameter:   id =  Ks7p_TAL, name = Ks7p_TAL, constant
par Ks7p_TAL=0.15

# assignmentRule: variable = G6P
G6P=0.9+ piecew1 
aux G6P=G6P

# assignmentRule: variable = NADP
NADP=sum_NADP-NADPH
aux NADP=NADP

# Reaction: id = GND, name = GND
# Local Parameter:   id =  kcat_GND1, name = kcat_GND1
par kcat_GND1=28.0

# Local Parameter:   id =  Kp6g_GND1, name = Kp6g_GND1
par Kp6g_GND1=0.062

# Local Parameter:   id =  Knadp_GND1, name = Knadp_GND1
par Knadp_GND=0.094

# Local Parameter:   id =  Kru5p_GND1, name = Kru5p_GND1
par Kru5p_GND=0.1

# Local Parameter:   id =  Knadph_GND1, name = Knadph_GND1
par Knadph_GN=0.055

# Local Parameter:   id =  kcat_GND2, name = kcat_GND2
par kcat_GND2=27.3

# Local Parameter:   id =  Kp6g_GND2, name = Kp6g_GND2
par Kp6g_GND2=0.115

# Local Parameter:   id =  Knadp_GND2, name = Knadp_GND2
par Knadp_G_1=0.094

# Local Parameter:   id =  Kru5p_GND2, name = Kru5p_GND2
par Kru5p_G_1=0.1

# Local Parameter:   id =  Knadph_GND2, name = Knadph_GND2
par Knadph__1=0.055


GND=cell*(GND1*kcat_GND1*P6G*NADP/(Kp6g_GND1*Knadp_GND)/((1+P6G/Kp6g_GND1+Ru5P/Kru5p_GND)*(1+NADP/Knadp_GND+NADPH/Knadph_GN))+GND2*kcat_GND2*P6G*NADP/((1+P6G/Kp6g_GND2+Ru5P/Kru5p_G_1)*(1+NADP/Knadp_G_1+NADPH/Knadph__1)))

# Reaction: id = RKI, name = RKI
# Local Parameter:   id =  kcat, name = kcat
par kcat=335.0

# Local Parameter:   id =  Kru5p, name = Kru5p
par Kru5p=2.47

# Local Parameter:   id =  Kr5p, name = Kr5p
par Kr5p=5.7

# Local Parameter:   id =  Kiru5p, name = Kiru5p
par Kiru5p=9.88

# Local Parameter:   id =  Keq, name = Keq
par Keq=4.0


RKI=cell*RKI1*kcat*(Ru5P-R5P/Keq)/Kru5p/(1+Ru5P/Kru5p+R5P/Kr5p)

# Reaction: id = RPE, name = RPE
# Local Parameter:   id =  kcat, name = kcat
par kcat_1=4020.0

# Local Parameter:   id =  Kru5p, name = Kru5p
par Kru5p_1=5.97

# Local Parameter:   id =  Kx5p, name = Kx5p
par Kx5p=7.7

# Local Parameter:   id =  Keq, name = Keq
par Keq_1=1.4


RPE=cell*RPE1*kcat_1*(Ru5P-X5P/Keq_1)/Kru5p_1/(1+Ru5P/Kru5p_1+X5P/Kx5p)

# Reaction: id = SOL, name = SOL
# Local Parameter:   id =  kcat, name = kcat
par kcat_1_2=4.3

# Local Parameter:   id =  Kg6l, name = Kg6l
par Kg6l=0.8

# Local Parameter:   id =  Kp6g, name = Kp6g
par Kp6g=0.5


SOL=cell*SOL3*kcat_1_2*G6L/Kg6l/(1+G6L/Kg6l+P6G/Kp6g)

# Reaction: id = TAL, name = TAL
# Local Parameter:   id =  kcat_TAL1, name = kcat_TAL1
par kcat_TAL1=0.694

# Local Parameter:   id =  Kgap_TAL1, name = Kgap_TAL1
par Kgap_TAL1=0.272

# Local Parameter:   id =  Ks7p_TAL1, name = Ks7p_TAL1
par Ks7p_TAL1=0.786

# Local Parameter:   id =  Kf6p_TAL1, name = Kf6p_TAL1
par Kf6p_TAL1=1.44

# Local Parameter:   id =  Ke4p_TAL1, name = Ke4p_TAL1
par Ke4p_TAL1=0.362

# Local Parameter:   id =  kcat_NQM1, name = kcat_NQM1
par kcat_NQM1=0.694

# Local Parameter:   id =  Kgap_NQM1, name = Kgap_NQM1
par Kgap_NQM1=0.272

# Local Parameter:   id =  Ks7p_NQM1, name = Ks7p_NQM1
par Ks7p_NQM1=0.786

# Local Parameter:   id =  Kf6p_NQM1, name = Kf6p_NQM1
par Kf6p_NQM1=1.04

# Local Parameter:   id =  Ke4p_NQM1, name = Ke4p_NQM1
par Ke4p_NQM1=0.305

# Local Parameter:   id =  Keq, name = Keq
par Keq_1_2=1.05


TAL=cell*(TAL1*kcat_TAL1*(GAP*S7P-F6P*E4P/Keq_1_2)/(Kgap_TAL1*Ks7p_TAL1)/((1+GAP/Kgap_TAL1+F6P/Kf6p_TAL1)*(1+S7P/Ks7p_TAL1+E4P/Ke4p_TAL1))+NQM1*kcat_NQM1*(GAP*S7P-F6P*E4P/Keq_1_2)/(Kgap_NQM1*Ks7p_NQM1)/((1+GAP/Kgap_NQM1+F6P/Kf6p_NQM1)*(1+S7P/Ks7p_NQM1+E4P/Ke4p_NQM1)))

# Reaction: id = TKL_E4P, name = TKL (E4P:F6P)
# Local Parameter:   id =  kcat, name = kcat
par kcat_1__3=47.1

# Local Parameter:   id =  Keq, name = Keq
par Keq_1_2_3=10.0


TKL_E4P=cell*TKL1*kcat_1__3*(X5P*E4P-GAP*F6P/Keq_1_2_3)/(Kx5p_TAL*Ke4p_TAL)/((1+X5P/Kx5p_TAL+GAP/Kgap_TAL)*(1+E4P/Ke4p_TAL+F6P/Kf6p_TAL+R5P/Kr5p_TAL+S7P/Ks7p_TAL))

# Reaction: id = TKL_R5P, name = TKL (R5P:S7P)
# Local Parameter:   id =  kcat, name = kcat
par kcat_1__4=40.5

# Local Parameter:   id =  Keq, name = Keq
par Keq_1_2_4=1.2


TKL_R5P=cell*TKL1*kcat_1__4*(X5P*R5P-GAP*S7P/Keq_1_2_4)/(Kx5p_TAL*Kr5p_TAL)/((1+X5P/Kx5p_TAL+GAP/Kgap_TAL)*(1+E4P/Ke4p_TAL+F6P/Kf6p_TAL+R5P/Kr5p_TAL+S7P/Ks7p_TAL))

# Reaction: id = ZWF, name = ZWF
# Local Parameter:   id =  kcat, name = kcat
par kcat_1__5=189.0

# Local Parameter:   id =  Kg6p, name = Kg6p
par Kg6p=0.042

# Local Parameter:   id =  Knadp, name = Knadp
par Knadp=0.045

# Local Parameter:   id =  Kg6l, name = Kg6l
par Kg6l_1=0.01

# Local Parameter:   id =  Knadph, name = Knadph
par Knadph=0.017


ZWF=cell*ZWF1*kcat_1__5*G6P*NADP/(Kg6p*Knadp)/((1+G6P/Kg6p+G6L/Kg6l_1)*(1+NADP/Knadp+NADPH/Knadph))

# Reaction: id = NADPH_oxidase, name = NADPH oxidase
# Local Parameter:   id =  k, name = k
par k=1.0


NADPH_oxi=cell*k*NADPH

# Reaction: id = E4P_sink, name = E4P sink
# Local Parameter:   id =  k, name = k
par k_1=1.0


E4P_sink=cell*k_1*E4P

# Reaction: id = R5P_sink, name = R5P sink
# Local Parameter:   id =  k, name = k
par k_1_2=1.0


R5P_sink=cell*k_1_2*R5P

# Species:   id = E4P, name = E4P, affected by kineticLaw

init E4P=0.029
dE4P/dt=(1/(cell))*(( 1.0 * TAL) + (-1.0 * TKL_E4P) + (-1.0 * E4P_sink))

# Species:   id = G6L, name = G6L, affected by kineticLaw

init G6L=0.1
dG6L/dt=(1/(cell))*((-1.0 * SOL) + ( 1.0 * ZWF))

# Species:   id = NADPH, name = NADPH, affected by kineticLaw

init NADPH=0.16
dNADPH/dt=(1/(cell))*(( 1.0 * GND) + ( 1.0 * ZWF) + (-1.0 * NADPH_oxi))

# Species:   id = P6G, name = P6G, affected by kineticLaw

init P6G=0.25
dP6G/dt=(1/(cell))*((-1.0 * GND) + ( 1.0 * SOL))

# Species:   id = R5P, name = R5P, affected by kineticLaw

init R5P=0.118
dR5P/dt=(1/(cell))*(( 1.0 * RKI) + (-1.0 * TKL_R5P) + (-1.0 * R5P_sink))

# Species:   id = Ru5P, name = Ru5P, affected by kineticLaw

init Ru5P=0.033
dRu5P/dt=(1/(cell))*(( 1.0 * GND) + (-1.0 * RKI) + (-1.0 * RPE))

# Species:   id = S7P, name = S7P, affected by kineticLaw

init S7P=0.082
dS7P/dt=(1/(cell))*((-1.0 * TAL) + ( 1.0 * TKL_R5P))

# Species:   id = X5P, name = X5P, affected by kineticLaw

init X5P=0.041
dX5P/dt=(1/(cell))*(( 1.0 * RPE) + (-1.0 * TKL_E4P) + (-1.0 * TKL_R5P))

# Species:   id = NADP, name = NADP, involved in a rule 

# Species:   id = G6P, name = G6P, involved in a rule 

# Species:   id = F6P, name = F6P, constant
par F6P=0.325


# Species:   id = GAP, name = GAP, constant
par GAP=0.067


# Species:   id = GND1, name = GND1, constant
par GND1=0.013


# Species:   id = GND2, name = GND2, constant
par GND2=0.003


# Species:   id = NQM1, name = NQM1, constant
par NQM1=0.02


# Species:   id = RKI1, name = RKI1, constant
par RKI1=0.05


# Species:   id = RPE1, name = RPE1, constant
par RPE1=0.03


# Species:   id = SOL3, name = SOL3, constant
par SOL3=0.0296


# Species:   id = TAL1, name = TAL1, constant
par TAL1=0.144


# Species:   id = TKL1, name = TKL1, constant
par TKL1=0.455


# Species:   id = ZWF1, name = ZWF1, constant
par ZWF1=0.02



# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (t  >=  0) then (44.1*t/(48+t+0.45*t^2)) else (0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

