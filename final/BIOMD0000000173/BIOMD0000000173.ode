
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Schmierer_2008_Smad_Tgfb
#
# is http://identifiers.org/biomodels.db/MODEL0451870146
# is http://identifiers.org/biomodels.db/BIOMD0000000173
# isDescribedBy http://identifiers.org/pubmed/18443295
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = nucleus, name = Nuc, constant
par nucleus=1.0E-12

# Compartment: id = cytosol, name = Cyt, constant
par cytosol=2.27E-12

# Parameter:   id =  kin, name = kin (import rate for monomeric Smads), constant
par kin=5.93E-15

# Parameter:   id =  kex, name = kex (export rate for monomeric Smads), constant
par kex=1.26E-14

# Parameter:   id =  kphos, name = kphos (phosphorylation rate), constant
par kphos=4.037081673984E-4

# Parameter:   id =  kdephos, name = kdephos (dephosphorylation rate), constant
par kdephos=0.00656639

# Parameter:   id =  kin_CIF, name = kin*CIF (Complex import rate), constant
par kin_CIF=3.36347821E-14

# Parameter:   id =  kon, name = kon (Smad complex on-rate), constant
par kon=0.00183925592901392

# Parameter:   id =  koff, name = koff (Smad complex off-rate), constant
par koff=0.016

# Parameter:   id =  CIF, name = CIF (complex import factor), defined by a Rule

# Parameter:   id =  K_diss, name = Kdiss (dissociation constant of Smad complexes), defined by a Rule

# Parameter:   id =  kon_SB, name = kon_SB (on-rate of the SB/receptor interaction), constant
par kon_SB=0.146422317103884

# Parameter:   id =  koff_SB, name = koff_SB (off-rate of the SB/receptor interaction), constant
par koff_SB=100.0

# Parameter:   id =  k_TGFb, name = k_TGFb (rate of TGFb binding to receptors), constant
par k_TGFb=0.07423555020288

# Parameter:   id =  K_dissSB, name = Kdiss SB (dissociation constant of the SB/receptor interaction), defined by a Rule

# Parameter:   id =  ntoN, name = quantity to number factor, constant
par ntoN=6.0221415E14

# Parameter:   id =  SB_0, name = SB conc at start, constant
par SB_0=0.0

# Parameter:   id =  SB_add, name = SB conc after addition, constant
par SB_add=10000.0

# Parameter:   id =  t_SB, name = time of SB addition, constant
par t_SB=2700.0

# assignmentRule: variable = CIF
CIF=kin_CIF/kin
aux CIF=CIF

# assignmentRule: variable = K_diss
K_diss=koff/kon
aux K_diss=K_diss

# assignmentRule: variable = K_dissSB
K_dissSB=koff_SB/kon_SB
aux K_dissSB=K_dissSB

# assignmentRule: variable = SB
SB= piecew1 
aux SB=SB

# Reaction: id = reaction_1, name = Reaction  7 Shuttling S4

reaction_=kin*S4_c-kin*S4_n

# Reaction: id = reaction_2, name = Reaction  5A Shuttling S2

reactio_1=kin*S2_c-kex*S2_n

# Reaction: id = reaction_3, name = Reaction  6A Shuttling pS2

reactio_2=kin*pS2_c-kex*pS2_n

# Reaction: id = reaction_4, name = Reaction  2A Phosphorylation S2

reactio_3=cytosol*kphos*R_act*S2_c

# Reaction: id = reaction_5, name = Reaction  3A Formation S24_C

reactio_4=cytosol*(kon*pS2_c*S4_c-koff*S24_c)

# Reaction: id = reaction_6, name = Reaction  3B Formation S24_N

reactio_5=nucleus*(kon*pS2_n*S4_n-koff*S24_n)

# Reaction: id = reaction_7, name = Reaction  8A Import S24

reactio_6=kin_CIF*S24_c

# Reaction: id = reaction_8, name = Reaction  9A Import S22

reactio_7=kin_CIF*S22_c

# Reaction: id = reaction_9, name = Reaction  4A Formation S22_C

reactio_8=cytosol*(kon*pS2_c*pS2_c-koff*S22_c)

# Reaction: id = reaction_10, name = Reaction  4B Formation S22_N

reactio_9=nucleus*(kon*pS2_n*pS2_n-koff*S22_n)

# Reaction: id = reaction_11, name = Reaction 10A Dephos pS2 Nuc

reacti_10=nucleus*kdephos*pS2_n*PPase

# Reaction: id = reaction_12, name = Reaction  1 TGFb Binding

reacti_11=cytosol*k_TGFb*R*TGFb_c

# Reaction: id = reaction_13, name = Reaction 11 Receptor Inhibition

reacti_12=cytosol*(kon_SB*R_act*SB-koff_SB*R_inact)

# Reaction: id = reaction_14, name = Reaction  2B Phosphorylation GS2

reacti_13=cytosol*kphos*G_c*R_act

# Reaction: id = reaction_15, name = Reaction 10B Dephos pG Nuc

reacti_14=nucleus*kdephos*pG_n*PPase

# Reaction: id = reaction_16, name = Reaction  5B Shuttling G

reacti_15=kin*G_c-kex*G_n

# Reaction: id = reaction_17, name = Reaction  6B Shuttling pG

reacti_16=kin*pG_c-kex*pG_n

# Reaction: id = reaction_18, name = Reaction  4E Formation GG_C

reacti_17=cytosol*(kon*pG_c*pG_c-koff*GG_c)

# Reaction: id = reaction_19, name = Reaction  4F Formation GG_N

reacti_18=nucleus*(kon*pG_n*pG_n-koff*GG_n)

# Reaction: id = reaction_20, name = Reaction  4C Formation G2_C

reacti_19=cytosol*(kon*pS2_c*pG_c-koff*G2_c)

# Reaction: id = reaction_21, name = Reaction  4D Formation G2_N

reacti_20=nucleus*(kon*pS2_n*pG_n-koff*G2_n)

# Reaction: id = reaction_22, name = Reaction  3C Formation G4_C

reacti_21=cytosol*(kon*pG_c*S4_c-koff*G4_c)

# Reaction: id = reaction_23, name = Reaction  3D Formation G4_N

reacti_22=nucleus*(kon*pG_n*S4_n-koff*G4_n)

# Reaction: id = reaction_24, name = Reaction  9C Import GG

reacti_23=kin_CIF*GG_c

# Reaction: id = reaction_25, name = Reaction  9B Import G2

reacti_24=kin_CIF*G2_c

# Reaction: id = reaction_26, name = Reaction  8B Import G4

reacti_25=kin_CIF*G4_c

# Species:   id = PPase, name = PPase, constant
par PPase=1.0


# Species:   id = S2_n, name = Smad2_n, affected by kineticLaw

init S2_n=28.514773357617
dS2_n/dt=(1/(nucleus))*(( 1.0 * reactio_1) + ( 1.0 * reacti_10))

# Species:   id = pS2_n, name = pSmad2_n, affected by kineticLaw

init pS2_n=0.0
dpS2_n/dt=(1/(nucleus))*(( 1.0 * reactio_2) + (-1.0 * reactio_5) + (-2.0 * reactio_9) + (-1.0 * reacti_10) + (-1.0 * reacti_20))

# Species:   id = G_n, name = GFP-Smad2_n, affected by kineticLaw

init G_n=28.514773357617
dG_n/dt=(1/(nucleus))*(( 1.0 * reacti_14) + ( 1.0 * reacti_15))

# Species:   id = pG_n, name = pGFP-Smad2_n, affected by kineticLaw

init pG_n=0.0
dpG_n/dt=(1/(nucleus))*((-1.0 * reacti_14) + ( 1.0 * reacti_16) + (-2.0 * reacti_18) + (-1.0 * reacti_20) + (-1.0 * reacti_22))

# Species:   id = S22_n, name = pSmad2/pSmad2_n, affected by kineticLaw

init S22_n=0.0
dS22_n/dt=(1/(nucleus))*(( 1.0 * reactio_7) + ( 1.0 * reactio_9))

# Species:   id = S24_n, name = pSmad2/Smad4_n, affected by kineticLaw

init S24_n=0.0
dS24_n/dt=(1/(nucleus))*(( 1.0 * reactio_5) + ( 1.0 * reactio_6))

# Species:   id = S4_n, name = Smad4_n, affected by kineticLaw

init S4_n=50.78093897
dS4_n/dt=(1/(nucleus))*(( 1.0 * reaction_) + (-1.0 * reactio_5) + (-1.0 * reacti_22))

# Species:   id = G2_n, name = pGFP-Smad2/pSmad2_n, affected by kineticLaw

init G2_n=0.0
dG2_n/dt=(1/(nucleus))*(( 1.0 * reacti_20) + ( 1.0 * reacti_24))

# Species:   id = G4_n, name = pGFP-Smad2/Smad4_n, affected by kineticLaw

init G4_n=0.0
dG4_n/dt=(1/(nucleus))*(( 1.0 * reacti_22) + ( 1.0 * reacti_25))

# Species:   id = GG_n, name = pGFP-Smad2/pGFP_Smad2_n, affected by kineticLaw

init GG_n=0.0
dGG_n/dt=(1/(nucleus))*(( 1.0 * reacti_18) + ( 1.0 * reacti_23))

# Species:   id = S22_c, name = pSmad2/pSmad2_c, affected by kineticLaw

init S22_c=0.0
dS22_c/dt=(1/(cytosol))*((-1.0 * reactio_7) + ( 1.0 * reactio_8))

# Species:   id = S24_c, name = pSmad2/Smad4_c, affected by kineticLaw

init S24_c=0.0
dS24_c/dt=(1/(cytosol))*(( 1.0 * reactio_4) + (-1.0 * reactio_6))

# Species:   id = S4_c, name = Smad4_c, affected by kineticLaw

init S4_c=50.78103407
dS4_c/dt=(1/(cytosol))*((-1.0 * reaction_) + (-1.0 * reactio_4) + (-1.0 * reacti_21))

# Species:   id = S2_c, name = Smad2_c, affected by kineticLaw

init S2_c=60.5899176013587
dS2_c/dt=(1/(cytosol))*((-1.0 * reactio_1) + (-1.0 * reactio_3))

# Species:   id = pS2_c, name = pSmad2_c, affected by kineticLaw

init pS2_c=0.0
dpS2_c/dt=(1/(cytosol))*((-1.0 * reactio_2) + ( 1.0 * reactio_3) + (-1.0 * reactio_4) + (-2.0 * reactio_8) + (-1.0 * reacti_19))

# Species:   id = G_c, name = GFP-Smad2_c, affected by kineticLaw

init G_c=60.5899176013587
dG_c/dt=(1/(cytosol))*((-1.0 * reacti_13) + (-1.0 * reacti_15))

# Species:   id = pG_c, name = pGFP-Smad2_c, affected by kineticLaw

init pG_c=0.0
dpG_c/dt=(1/(cytosol))*(( 1.0 * reacti_13) + (-1.0 * reacti_16) + (-2.0 * reacti_17) + (-1.0 * reacti_19) + (-1.0 * reacti_21))

# Species:   id = G2_c, name = pGFP-Smad2/pSmad2_c, affected by kineticLaw

init G2_c=0.0
dG2_c/dt=(1/(cytosol))*(( 1.0 * reacti_19) + (-1.0 * reacti_24))

# Species:   id = G4_c, name = pGFP-Smad2/Smad4_c, affected by kineticLaw

init G4_c=0.0
dG4_c/dt=(1/(cytosol))*(( 1.0 * reacti_21) + (-1.0 * reacti_25))

# Species:   id = GG_c, name = pGFP-Smad2/pGFP-Smad2_c, affected by kineticLaw

init GG_c=0.0
dGG_c/dt=(1/(cytosol))*(( 1.0 * reacti_17) + (-1.0 * reacti_23))

# Species:   id = TGFb_c, name = TGFb_c, constant
par TGFb_c=0.0659999824780232


# Species:   id = R_act, name = R_act, affected by kineticLaw

init R_act=0.0
dR_act/dt=(1/(cytosol))*((-1.0 * reactio_3) + ( 1.0 * reactio_3) + ( 1.0 * reacti_11) + (-1.0 * reacti_12) + (-1.0 * reacti_13) + ( 1.0 * reacti_13))

# Species:   id = R, name = R, affected by kineticLaw

init R=1.0
dR/dt=(1/(cytosol))*((-1.0 * reacti_11))

# Species:   id = R_inact, name = R_inact, affected by kineticLaw

init R_inact=0.0
dR_inact/dt=(1/(cytosol))*(( 1.0 * reacti_12))

# Species:   id = SB, name = SB-431542, involved in a rule 


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (t  >  t_SB) then (SB_add) else (SB_0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

