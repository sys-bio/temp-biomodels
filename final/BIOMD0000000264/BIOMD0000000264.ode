
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Fujita2010_Akt_Signalling_EGFRinhib
#
# is http://identifiers.org/biomodels.db/MODEL1004060003
# is http://identifiers.org/biomodels.db/BIOMD0000000264
# isDescribedBy http://identifiers.org/pubmed/20664065
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Cell, name = Cell, constant
par Cell=1.0

# Parameter:   id =  pEGFR_total, name = pEGFR_total, defined by a Rule

# Parameter:   id =  pAkt_total, name = pAkt_total, defined by a Rule

# Parameter:   id =  pEGFR_scaleFactor, name = pEGFR_scaleFactor, constant
par pEGFR_sca=1.81735E-4

# Parameter:   id =  pAkt_scaleFactor, name = pAkt_scaleFactor, constant
par pAkt_scal=60.0588

# Parameter:   id =  pS6_scaleFactor, name = pS6_scaleFactor, constant
par pS6_scale=49886.2

# Parameter:   id =  pS6_total, name = pS6_total, defined by a Rule

# Parameter:   id =  EGF_conc_step, name = EGF_conc_step, constant
par EGF_conc_=30.0

# Parameter:   id =  EGF_conc_pulse, name = EGF_conc_pulse, constant
par EGF_con_1=0.0

# Parameter:   id =  EGF_conc_ramp, name = EGF_conc_ramp, constant
par EGF_con_2=0.0

# Parameter:   id =  EGFR_turnover, name = EGFR_turnover, constant
par EGFR_turn=1.06386E-4

# Parameter:   id =  EGF_binding_kf, name = EGF_binding_kf, constant
par EGF_bindi=0.00673816

# Parameter:   id =  EGF_binding_kb, name = EGF_binding_kb, constant
par EGF_bin_1=0.040749

# Parameter:   id =  inhibitor_binding_kf, name = inhibitor_binding_kf, constant
par inhibitor=2.43466029020655E-5

# Parameter:   id =  inhibitor_binding_kb, name = inhibitor_binding_kb, constant
par inhibit_1=5.25096686262403E-5

# Parameter:   id =  pulse_time, name = pulse_time, constant
par pulse_tim=60.0

# Parameter:   id =  ramp_time, name = ramp_time, constant
par ramp_time=3600.0

# assignmentRule: variable = pAkt_total
pAkt_tota=(pAkt+pAkt_S6)*pAkt_scal
aux pAkt_tota=pAkt_tota

# assignmentRule: variable = pEGFR_total
pEGFR_tot=(pEGFR+pEGFR_Akt)*pEGFR_sca
aux pEGFR_tot=pEGFR_tot

# assignmentRule: variable = EGF
# the operator EGF_conc_step is not supported by xpp
# the formula is : EGF_conc_step+ piecew1 +EGF_conc_ramp*time/ramp_time
# the operator EGF_conc_ramp is not supported by xpp
# the formula is : EGF_conc_step+ piecew1 +EGF_conc_ramp*time/ramp_time
#Rule ignored : there are some unsupported functions !!

# assignmentRule: variable = pS6_total
pS6_total=pS6*pS6_scale
aux pS6_total=pS6_total

# Reaction: id = reaction_1, name = EGF+EGFR

reaction_=Cell*(EGF_bindi*EGF*EGFR-EGF_bin_1*EGF_EGFR)

# Reaction: id = reaction_2, name = pEGFR+Akt
# Local Parameter:   id =  k1, name = k1
par k1=1.5543E-5

# Local Parameter:   id =  k2, name = k2
par k2=0.00517473


reactio_1=Cell*(k1*pEGFR*Akt-k2*pEGFR_Akt)

# Reaction: id = reaction_3, name = Akt_phosphorylation
# Local Parameter:   id =  k1, name = k1
par k1_1=0.0528141


reactio_2=Cell*k1_1*pEGFR_Akt

# Reaction: id = reaction_4, name = pEGFR_degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2=0.0997194


reactio_3=Cell*k1_1_2*pEGFR

# Reaction: id = reaction_5, name = pAkt+S6
# Local Parameter:   id =  k1, name = k1
par k1_1_2_3=2.10189E-6

# Local Parameter:   id =  k2, name = k2
par k2_1=5.1794E-15


reactio_4=Cell*(k1_1_2_3*pAkt*S6-k2_1*pAkt_S6)

# Reaction: id = reaction_6, name = S6_phosphorylation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__4=0.00121498


reactio_5=Cell*k1_1_2__4*pAkt_S6

# Reaction: id = reaction_7, name = pAkt_dephospho
# Local Parameter:   id =  k1, name = k1
par k1_1_2__5=0.0327962


reactio_6=Cell*k1_1_2__5*pAkt

# Reaction: id = reaction_8, name = pS6_dephospho
# Local Parameter:   id =  k1, name = k1
par k1_1_2__6=0.00113102


reactio_7=Cell*k1_1_2__6*pS6

# Reaction: id = reaction_9, name = EGFR_synthesis

reactio_8=Cell*EGFR_turn*pro_EGFR

# Reaction: id = reaction_10, name = EGFR_phosphorylation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__7=0.0192391


reactio_9=Cell*k1_1_2__7*EGF_EGFR

# Reaction: id = reaction_11, name = EGFR_degradation

reacti_10=Cell*EGFR_turn*EGFR

# Reaction: id = reaction_12, name = EGFR+i

reacti_11=Cell*(inhibitor*Inhibit_2*EGFR-inhibit_1*EGFR_i)

# Reaction: id = reaction_13, name = EGF_EGFR+i

reacti_12=Cell*(inhibitor*Inhibit_2*EGF_EGFR-inhibit_1*EGF_EGFR_)

# Reaction: id = reaction_14, name = EGF+EGFR_i

reacti_13=Cell*(EGF_bindi*EGF*EGFR_i-EGF_bin_1*EGF_EGFR_)

# Reaction: id = reaction_15, name = EGFR_i_degradation

reacti_14=Cell*EGFR_turn*EGFR_i

# Species:   id = EGF, name = EGF, involved in a rule 

# Species:   id = EGFR, name = EGFR, affected by kineticLaw

init EGFR=68190.2000000002
dEGFR/dt=(1/(Cell))*((-1.0 * reaction_) + ( 1.0 * reactio_8) + (-1.0 * reacti_10) + (-1.0 * reacti_11))

# Species:   id = pEGFR, name = pEGFR, affected by kineticLaw

init pEGFR=0.0
dpEGFR/dt=(1/(Cell))*((-1.0 * reactio_1) + ( 1.0 * reactio_2) + (-1.0 * reactio_3) + ( 1.0 * reactio_9))

# Species:   id = pEGFR_Akt, name = pEGFR_Akt, affected by kineticLaw

init pEGFR_Akt=0.0
dpEGFR_Akt/dt=(1/(Cell))*(( 1.0 * reactio_1) + (-1.0 * reactio_2))

# Species:   id = Akt, name = Akt, affected by kineticLaw

init Akt=0.043309
dAkt/dt=(1/(Cell))*((-1.0 * reactio_1) + ( 1.0 * reactio_6))

# Species:   id = pAkt, name = pAkt, affected by kineticLaw

init pAkt=0.0
dpAkt/dt=(1/(Cell))*(( 1.0 * reactio_2) + (-1.0 * reactio_4) + ( 1.0 * reactio_5) + (-1.0 * reactio_6))

# Species:   id = S6, name = S6, affected by kineticLaw

init S6=3.54317
dS6/dt=(1/(Cell))*((-1.0 * reactio_4) + ( 1.0 * reactio_7))

# Species:   id = pAkt_S6, name = pAkt_S6, affected by kineticLaw

init pAkt_S6=0.0
dpAkt_S6/dt=(1/(Cell))*(( 1.0 * reactio_4) + (-1.0 * reactio_5))

# Species:   id = pS6, name = pS6, affected by kineticLaw

init pS6=0.0
dpS6/dt=(1/(Cell))*(( 1.0 * reactio_5) + (-1.0 * reactio_7))

# Species:   id = pro_EGFR, name = pro_EGFR, constant
par pro_EGFR=68190.2000000002


# Species:   id = EGF_EGFR, name = EGF_EGFR, affected by kineticLaw

init EGF_EGFR=0.0
dEGF_EGFR/dt=(1/(Cell))*(( 1.0 * reaction_) + (-1.0 * reactio_9) + (-1.0 * reacti_12))

# Species:   id = EGFR_i, name = EGFR_i, affected by kineticLaw

init EGFR_i=0.0
dEGFR_i/dt=(1/(Cell))*(( 1.0 * reacti_11) + (-1.0 * reacti_13) + (-1.0 * reacti_14))

# Species:   id = EGF_EGFR_i, name = EGF_EGFR_i, affected by kineticLaw

par EGF_EGFR_=0.0
aux EGF_EGFR_=EGF_EGFR_
dEGF_EGFR_/dt=(1/(Cell))*(( 1.0 * reacti_12) + ( 1.0 * reacti_13))

# Species:   id = Inhibitor, name = Inhibitor, constant
par Inhibit_2=0.0



# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (t  <=  pulse_tim) then (EGF_con_1) else (0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

