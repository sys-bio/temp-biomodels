
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Goldbeter2007_Somitogenesis_Switch
#
# is http://identifiers.org/biomodels.db/MODEL1011170000
# is http://identifiers.org/biomodels.db/BIOMD0000000275
# isDescribedBy http://identifiers.org/pubmed/17497689
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = PSM, name = PSM, constant
par PSM=1.0

# Parameter:   id =  vs1, name = vs1, defined by a Rule

# Parameter:   id =  kd5, name = kd5, constant
par kd5=0.0

# Parameter:   id =  kd1, name = kd1, constant
par kd1=1.0

# Parameter:   id =  V0, name = V0, constant
par V0=0.365

# Parameter:   id =  Vsc, name = Vsc, constant
par Vsc=7.1

# Parameter:   id =  n, name = n, constant
par n=2.0

# Parameter:   id =  Ka, name = Ka, constant
par Ka=0.2

# Parameter:   id =  kd3, name = kd3, constant
par kd3=1.0

# Parameter:   id =  ks2, name = ks2, constant
par ks2=1.0

# Parameter:   id =  kd2, name = kd2, constant
par kd2=0.28

# Parameter:   id =  ks3, name = ks3, constant
par ks3=1.0

# Parameter:   id =  Ki, name = Ki, constant
par Ki=0.2

# Parameter:   id =  m, name = m, constant
par m=2.0

# Parameter:   id =  kd4, name = kd4, constant
par kd4=1.0

# Parameter:   id =  ks1, name = ks1, constant
par ks1=1.0

# Parameter:   id =  RALDH2_0, name = RALDH2_0, constant
par RALDH2_0=7.1

# Parameter:   id =  x, name = x, constant
par x=15.0

# Parameter:   id =  L, name = L, constant
par L=50.0

# Parameter:   id =  M_0, name = M_0, constant
par M_0=5.0

# Parameter:   id =  rho, name = rho, defined by a Rule

# Parameter:   id =  alpha2, name = alpha2, defined by a Rule

# Parameter:   id =  alpha1, name = alpha1, defined by a Rule

# Parameter:   id =  Kr1, name = Kr1, constant
par Kr1=1.0

# Parameter:   id =  Kr2, name = Kr2, constant
par Kr2=1.0

# assignmentRule: variable = M_F
M_F=M_0*x/L
aux M_F=M_F

# assignmentRule: variable = vs1
vs1=ks1*RALDH2_0*(1-x/L)
aux vs1=vs1

# assignmentRule: variable = rho
rho=alpha2/alpha1
aux rho=rho

# assignmentRule: variable = alpha2
alpha2=F/(F+Kr2)
aux alpha2=alpha2

# assignmentRule: variable = alpha1
alpha1=RA/(RA+Kr1)
aux alpha1=alpha1

# Reaction: id = RA_synthesis

RA_synthe=PSM*vs1

# Reaction: id = RA_decay

RA_decay=PSM*kd5*RA

# Reaction: id = RA_deg_by_Cyp26

RA_deg_by=PSM*kd1*RA*C

# Reaction: id = M_C_transcription

M_C_trans=PSM*(V0+Vsc*F^n/(Ka^n+F^n))

# Reaction: id = M_C_decay

M_C_decay=PSM*kd3*M_C

# Reaction: id = C_translation

C_transla=PSM*ks2*M_C

# Reaction: id = C_decay

C_decay=PSM*kd2*C

# Reaction: id = FGF_synthesis

FGF_synth=PSM*ks3*M_F*Ki^m/(Ki^m+RA^m)

# Reaction: id = FGF_decay

FGF_decay=PSM*kd4*F

# Species:   id = RA, name = RA, affected by kineticLaw

init RA=0.1
dRA/dt=(1/(PSM))*(( 1.0 * RA_synthe) + (-1.0 * RA_decay) + (-1.0 * RA_deg_by))

# Species:   id = M_C, name = cyp26_mRNA, affected by kineticLaw

init M_C=0.1
dM_C/dt=(1/(PSM))*(( 1.0 * M_C_trans) + (-1.0 * M_C_decay))

# Species:   id = C, name = CYP26, affected by kineticLaw

init C=0.1
dC/dt=(1/(PSM))*(( 1.0 * C_transla) + (-1.0 * C_decay))

# Species:   id = F, name = FGF, affected by kineticLaw

init F=1.0
dF/dt=(1/(PSM))*(( 1.0 * FGF_synth) + (-1.0 * FGF_decay))

# Species:   id = M_F, name = FGF_mRNA, defined in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

