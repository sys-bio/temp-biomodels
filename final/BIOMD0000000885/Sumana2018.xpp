
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Sumana2018 - Mathematical modeling of cancer-immune system, considering the role of antibodies.
#
# hasInstance http://identifiers.org/ncit/C15438
# hasInstance http://identifiers.org/ncit/C16295
# hasInstance http://identifiers.org/taxonomy/9606
# hasInstance http://identifiers.org/ncit/C19691
# isDescribedBy http://identifiers.org/ncit/C19691
# isDescribedBy http://identifiers.org/pubmed/29572780
# is http://identifiers.org/biomodels.db/MODEL1912090004
# is http://identifiers.org/biomodels.db/BIOMD0000000885
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_removal_of_plasma_cell_from_the_system, name = Function for removal of plasma cell from the system
Function_(mu_1,P)=(mu_1*P)


# FunctionDefinition id = Function_for_production_of_plasma_cell, name = Function for production of plasma cell
Functio_1(b,u,B)=(b*(1-u)*B)


# FunctionDefinition id = Function_for_formation_of_B_cell, name = Function for formation of B cell
Functio_2(a,u,B,k_1)=(a*u*B*(1-B/k_1))


# FunctionDefinition id = Function_for_Removal_of_B_cell, name = Function for Removal of B cell
Functio_3(b,u,B)=(b*(1-u)*B)


# FunctionDefinition id = Function_for_Production_of_antibody_against_tumor, name = Function for Production of antibody against tumor
Functio_4(r_1,B,r_2,P)=(r_1*B+r_2*P)


# FunctionDefinition id = Function_for_removal_of_antibody_from_the_system, name = Function for removal of antibody from the system
Functio_5(mu_2,A)=(mu_2*A)


# FunctionDefinition id = Function_of_removal_of_tumor_cell, name = Function of removal of tumor cell
Functio_6(beta_1,A,T)=(beta_1*A*T)


# FunctionDefinition id = Function_for_formation_of_tumor_cell, name = Function for formation of tumor cell
Functio_7(r,T,k_2)=(r*T*(1-T/k_2))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  a, name = a, constant
par a=0.1

# Parameter:   id =  b, name = b, constant
par b=0.01

# Parameter:   id =  mu_1, name = mu_1, constant
par mu_1=0.01

# Parameter:   id =  k_1, name = k_1, constant
par k_1=1000000.0

# Parameter:   id =  u, name = u, constant
par u=0.1

# Parameter:   id =  r_1, name = r_1, constant
par r_1=100.0

# Parameter:   id =  r_2, name = r_2, constant
par r_2=1000.0

# Parameter:   id =  mu_2, name = mu_2, constant
par mu_2=6.884

# Parameter:   id =  r, name = r, constant
par r=0.431

# Parameter:   id =  k_2, name = k_2, constant
par k_2=9.8E8

# Parameter:   id =  beta_1, name = beta_1, constant
par beta_1=3.0218E7

# Reaction: id = B_cell_formation, name = B cell formation

B_cell_fo=compartme*Functio_2(a, u, B_1, k_1)

# Reaction: id = Removal_of_B_cell, name = Removal of B cell

Removal_o=compartme*Functio_3(b, u, B_1)

# Reaction: id = Production_of_plasma_cell, name = Production of plasma cell

Productio=compartme*Functio_1(b, u, B_1)

# Reaction: id = Removal_of_plasma_cell_from_system, name = Removal of plasma cell from system

Removal_1=compartme*Function_(mu_1, P)

# Reaction: id = Production_of_antibody_against_tumor, name = Production of antibody against tumor

Product_1=compartme*Functio_4(r_1, B_1, r_2, P)

# Reaction: id = Removal_of_antibody_from_the_system, name = Removal of antibody from the system

Removal_2=compartme*Functio_5(mu_2, A_1)

# Reaction: id = Formation_of_tumor_cell, name = Formation of tumor cell

Formation=compartme*Functio_7(r, T_renamed, k_2)

# Reaction: id = Removal_of_tumor_cell_by_immune_cell, name = Removal of tumor cell by immune cell

Removal_3=compartme*Functio_6(beta_1, A_1, T_renamed)

# Species:   id = B, name = B, affected by kineticLaw

par B_1=90000.0
aux B_1=B_1
dB_1/dt=(1/(compartme))*(( 1.0 * B_cell_fo) + (-1.0 * Removal_o))

# Species:   id = P, name = P, affected by kineticLaw

init P=1000000.0
dP/dt=(1/(compartme))*(( 1.0 * Productio) + (-1.0 * Removal_1))

# Species:   id = A, name = A, affected by kineticLaw

par A_1=1.5E8
aux A_1=A_1
dA_1/dt=(1/(compartme))*(( 1.0 * Product_1) + (-1.0 * Removal_2))

# Species:   id = T, name = T, affected by kineticLaw

par T_renamed=1.0E8
aux T_renamed=T_renamed
dT_renamed/dt=(1/(compartme))*(( 1.0 * Formation) + (-1.0 * Removal_3))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

