
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Tabak2007_dopamine
#
# is http://identifiers.org/biomodels.db/MODEL6090663405
# is http://identifiers.org/biomodels.db/BIOMD0000000138
# isDescribedBy http://identifiers.org/pubmed/17058022
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Parameter:   id =  vca, name = reversal potential for Ca, constant
par vca=50.0

# Parameter:   id =  vk, name = reversal potential for K, constant
par vk=-75.0

# Parameter:   id =  Cm, name = membrane capacitance, constant
par Cm=10.0

# Parameter:   id =  gk, name = gk, constant
par gk=4.0

# Parameter:   id =  gcal, name = gcal, constant
par gcal=2.0

# Parameter:   id =  gsk, name = gsk, constant
par gsk=1.7

# Parameter:   id =  ga, name = ga, constant
par ga=0.0

# Parameter:   id =  gf, name = gf, constant
par gf=0.0

# Parameter:   id =  vn, name = vn, constant
par vn=-5.0

# Parameter:   id =  va, name = va, constant
par va=-20.0

# Parameter:   id =  vm, name = vm, constant
par vm=-20.0

# Parameter:   id =  vh, name = vh, constant
par vh=-60.0

# Parameter:   id =  vf, name = vf, constant
par vf=-20.0

# Parameter:   id =  sn, name = sn, constant
par sn=10.0

# Parameter:   id =  sa, name = sa, constant
par sa=10.0

# Parameter:   id =  sm, name = sm, constant
par sm=12.0

# Parameter:   id =  sh, name = sh, constant
par sh=5.0

# Parameter:   id =  sf, name = sf, constant
par sf=5.6

# Parameter:   id =  taun, name = taun, constant
par taun=30.0

# Parameter:   id =  tauh, name = tauh, constant
par tauh=20.0

# Parameter:   id =  lambda, name = lambda, constant
par lambda=0.7

# Parameter:   id =  kc, name = kc, constant
par kc=0.16

# Parameter:   id =  ks, name = ks, constant
par ks=0.5

# Parameter:   id =  ff, name = ff, constant
par ff=0.01

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.0015

# Parameter:   id =  phik, name = phik, defined by a Rule

# Parameter:   id =  phia, name = phia, defined by a Rule

# Parameter:   id =  phih, name = phih, defined by a Rule

# Parameter:   id =  phif, name = phif, defined by a Rule

# Parameter:   id =  phical, name = phical, defined by a Rule

# Parameter:   id =  cinf, name = cinf, defined by a Rule

# Parameter:   id =  ica, name = ica, defined by a Rule

# Parameter:   id =  isk, name = isk, defined by a Rule

# Parameter:   id =  ibk, name = ibk, defined by a Rule

# Parameter:   id =  ikdr, name = ikdr, defined by a Rule

# Parameter:   id =  ia, name = ia, defined by a Rule

# Parameter:   id =  ik, name = ik, defined by a Rule

# Parameter:   id =  n, name = n, defined by a Rule

# Parameter:   id =  h, name = h, defined by a Rule

# Parameter:   id =  V, name = V, defined by a Rule

# assignmentRule: variable = phik
phik=1/(1+exp((vn-V)/sn))
aux phik=phik

# assignmentRule: variable = phia
phia=1/(1+exp((va-V)/sa))
aux phia=phia

# assignmentRule: variable = phih
phih=1/(1+exp((V-vh)/sh))
aux phih=phih

# assignmentRule: variable = phif
phif=1/(1+exp((vf-V)/sf))
aux phif=phif

# assignmentRule: variable = phical
phical=1/(1+exp((vm-V)/sm))
aux phical=phical

# assignmentRule: variable = ica
ica=gcal*phical*(V-vca)
aux ica=ica

# assignmentRule: variable = cinf
cinf=c^2/(c^2+ks^2)
aux cinf=cinf

# assignmentRule: variable = isk
isk=gsk*cinf*(V-vk)
aux isk=isk

# assignmentRule: variable = ibk
ibk=gf*phif*(V-vk)
aux ibk=ibk

# assignmentRule: variable = ikdr
ikdr=gk*n*(V-vk)
aux ikdr=ikdr

# assignmentRule: variable = ia
ia=ga*phia*h*(V-vk)
aux ia=ia

# assignmentRule: variable = ik
ik=isk+ibk+ikdr+ia
aux ik=ik

# rateRule: variable = V
init V=-60.0
dV/dt=(-(ica+ik))/Cm

# rateRule: variable = n
init n=0.1
dn/dt=lambda*(phik-n)/taun

# rateRule: variable = h
init h=0.1
dh/dt=(phih-h)/tauh

# Reaction: id = reaction_0000004

reaction_=(-ff)*(alpha*ica+kc*c)*cell

# Species:   id = c, name = calcium concentration, affected by kineticLaw

init c=0.3
dc/dt=(1/(cell))*(( 1.0 * reaction_))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

