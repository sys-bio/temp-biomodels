
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Cookson2011_EnzymaticQueueingCoupling
#
# is http://identifiers.org/biomodels.db/MODEL1111150000
# is http://identifiers.org/biomodels.db/BIOMD0000000405
# isDescribedBy http://identifiers.org/pubmed/22186735
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_1, name = Constant flux (irreversible)
function_(v)=(v)


# Compartment: id = compartment_1, name = compartment, constant
par compartme=1.0

# Parameter:   id =  parameter_1, name = lambda1, constant
par parameter=500.0

# Parameter:   id =  parameter_2, name = lambda2, constant
par paramet_1=500.0

# Parameter:   id =  parameter_3, name = mu, constant
par paramet_2=10.0

# Parameter:   id =  parameter_4, name = Kp, constant
par paramet_3=1000.0

# Parameter:   id =  parameter_5, name = g, constant
par paramet_4=0.03465735902799

# Reaction: id = reaction_1, name = binding1

reaction_=compartme*paramet_3*species_1*species_5

# Reaction: id = reaction_2, name = binding2

reactio_1=compartme*paramet_3*species_2*species_5

# Reaction: id = reaction_3, name = production1

reactio_2=compartme*function_(parameter)

# Reaction: id = reaction_4, name = production2

reactio_3=compartme*function_(paramet_1)

# Reaction: id = reaction_5, name = degradation1

reactio_4=compartme*paramet_2*species_3

# Reaction: id = reaction_6, name = degradation2

reactio_5=compartme*paramet_2*species_4

# Reaction: id = reaction_7, name = dilution1

reactio_6=compartme*paramet_4*species_1

# Reaction: id = reaction_8, name = dilution2

reactio_7=compartme*paramet_4*species_2

# Species:   id = species_1, name = x1, affected by kineticLaw

init species_1=0.0
dspecies_1/dt=(1/(compartme))*((-1.0 * reaction_) + ( 1.0 * reactio_2) + (-1.0 * reactio_6))

# Species:   id = species_2, name = x2, affected by kineticLaw

init species_2=0.0
dspecies_2/dt=(1/(compartme))*((-1.0 * reactio_1) + ( 1.0 * reactio_3) + (-1.0 * reactio_7))

# Species:   id = species_3, name = E1, affected by kineticLaw

init species_3=0.0
dspecies_3/dt=(1/(compartme))*(( 1.0 * reaction_) + (-1.0 * reactio_4))

# Species:   id = species_4, name = E2, affected by kineticLaw

init species_4=0.0
dspecies_4/dt=(1/(compartme))*(( 1.0 * reactio_1) + (-1.0 * reactio_5))

# Species:   id = species_5, name = E, affected by kineticLaw

init species_5=100.0
dspecies_5/dt=(1/(compartme))*((-1.0 * reaction_) + (-1.0 * reactio_1) + ( 1.0 * reactio_4) + ( 1.0 * reactio_5))

# Species:   id = species_6, name = E+x1
# Warning species is not changed by either rules or reactions

par species_6=1.0
aux species_6=species_6

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

