
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ayati2010_BoneRemodelingDynamics_NormalCondition
#
# is http://identifiers.org/biomodels.db/MODEL1112060000
# is http://identifiers.org/biomodels.db/BIOMD0000000401
# isDescribedBy http://identifiers.org/pubmed/20406449
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000148
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000279
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Compartment, name = Compartment, constant
par Compartme=1.0

# Parameter:   id =  y1, name = maxC_Cbar, defined by a Rule

# Parameter:   id =  y2, name = maxB_Bbar, defined by a Rule

# Parameter:   id =  C_bar, name = C_bar, defined by a Rule

# Parameter:   id =  B_bar, name = B_bar, defined by a Rule

# Parameter:   id =  alpha1, name = alpha1, constant
par alpha1=3.0

# Parameter:   id =  beta1, name = beta1, constant
par beta1=0.2

# Parameter:   id =  alpha2, name = alpha2, constant
par alpha2=4.0

# Parameter:   id =  beta2, name = beta2, constant
par beta2=0.02

# Parameter:   id =  k1, name = k1, constant
par k1=0.24

# Parameter:   id =  k2, name = k2, constant
par k2=0.0017

# Parameter:   id =  g11, name = g11, constant
par g11=0.5

# Parameter:   id =  g21, name = g21, constant
par g21=-0.5

# Parameter:   id =  g12, name = g12, constant
par g12=1.0

# Parameter:   id =  g22, name = g22, constant
par g22=0.0

# Parameter:   id =  gamma, name = gamma, defined by a Rule

# rateRule: variable = C
init C=11.06
dC/dt=alpha1*C^g11*B^g21-beta1*C

# rateRule: variable = B
init B=212.13
dB/dt=alpha2*C^g12*B^g22-beta2*B

# rateRule: variable = z
init z=100.0
dz/dt=k2*y2-k1*y1

# assignmentRule: variable = y1
y1= piecew1 
aux y1=y1

# assignmentRule: variable = y2
y2= piecew2 
aux y2=y2

# assignmentRule: variable = C_bar
C_bar=(beta1/alpha1)^((1-g22)/gamma)*(beta2/alpha2)^(g21/gamma)
aux C_bar=C_bar

# assignmentRule: variable = B_bar
B_bar=(beta1/alpha1)^(g12/gamma)*(beta2/alpha2)^((1-g11)/gamma)
aux B_bar=B_bar

# assignmentRule: variable = gamma
gamma=g12*g21-(1-g11)*(1-g22)
aux gamma=gamma

# Species:   id = C, name = Osteoclasts, defined in a rule 

# Species:   id = B, name = Osteoblasts, defined in a rule 

# Species:   id = z, name = BoneMass, defined in a rule 


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (C  >  C_bar) then (C-C_bar) else (0)

piecew2=if (B  >  B_bar) then (B-B_bar) else (0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

