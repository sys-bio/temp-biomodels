
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Bunimovich-Mendrazitsky2007 - Mathematical model of BCG immunotherapy
#
# is http://identifiers.org/biomodels.db/MODEL2108190003
# is http://identifiers.org/biomodels.db/BIOMD0000001034
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Rate_Law_for_BCG_killing, name = Rate Law for BCG_killing
Rate_Law_(B,p_1,E)=(B*p_1*E+B)


# FunctionDefinition id = Rate_Law_for_Effector_cell_activation_recruitment, name = Rate Law for Effector_cell_activation/recruitment
Rate_La_1(E,p4,B,alpha,T_i)=(E*p4*B+alpha*T_i)


# FunctionDefinition id = Rate_Law_for_Infected_tumor_cell_death, name = Rate Law for Infected_tumor_cell_death
Rate_La_2(p3,E,T_i)=(p3*E*T_i)


# FunctionDefinition id = Rate_Law_for_Tumor_growth, name = Rate Law for Tumor_growth
Rate_La_3(T_u,r,beta)=(T_u*r*(1-beta*T_u))


# FunctionDefinition id = Rate_Law_for_Effector_cell_inactivation_death, name = Rate Law for Effector_cell_inactivation/death
Rate_La_4(E,mu,p5,T_i)=(E*mu+E*p5*T_i)


# Compartment: id = Bladder, name = Bladder, constant
par Bladder=1.0

# Parameter:   id =  mu1, name = mu1, constant
par mu1=1.0

# Parameter:   id =  mu2, name = mu2, constant
par mu2=0.41

# Parameter:   id =  p1, name = p1, constant
par p1=1.25

# Parameter:   id =  p2, name = p2, constant
par p2=0.285

# Parameter:   id =  p3, name = p3, constant
par p3=1.1

# Parameter:   id =  p4, name = p4, constant
par p4=0.085

# Parameter:   id =  p5, name = p5, constant
par p5=0.003

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.52

# Parameter:   id =  beta, name = beta, constant
par beta=0.0155

# Parameter:   id =  r, name = r, constant
par r=0.12

# Parameter:   id =  b, name = b, constant
par b=1.9

# Parameter:   id =  mu, name = mu, defined by a Rule

# assignmentRule: variable = mu
mu=mu2/mu1
aux mu=mu

# Reaction: id = BCG_production, name = BCG_production

BCG_produ=Bladder*Constant_(b)

# Reaction: id = Effector_cell_activation_recruitment, name = Effector_cell_activation/recruitment

Effecto_1=Bladder*Rate_La_1(Effector_, p4, BCG, alpha, Tumor_inf)

# Reaction: id = Effector_cell_inactivation_death, name = Effector_cell_inactivation/death

Effecto_2=Bladder*Rate_La_4(Effector_, mu, p5, Tumor_inf)

# Reaction: id = Tumor_growth, name = Tumor_growth

Tumor_gro=Bladder*Rate_La_3(Tumor_uni, r, beta)

# Reaction: id = Tumor_infection, name = Tumor_infection

Tumor_i_1=Bladder*p2*Tumor_uni*BCG

# Reaction: id = Infected_tumor_cell_death, name = Infected_tumor_cell_death

Infected_=Bladder*Rate_La_2(p3, Effector_, Tumor_inf)

# Reaction: id = BCG_killing, name = BCG_killing

BCG_killi=Bladder*Rate_Law_(BCG, p1, Effector_)

# Species:   id = BCG, name = BCG, affected by kineticLaw

init BCG=0.0
dBCG/dt=(1/(Bladder))*(( 1.0 * BCG_produ) + (-1.0 * Tumor_i_1) + (-1.0 * BCG_killi))

# Species:   id = Effector_cells, name = Effector_cells, affected by kineticLaw

par Effector_=0.05
aux Effector_=Effector_
dEffector_/dt=(1/(Bladder))*(( 1.0 * Effecto_1) + (-1.0 * Effecto_2))

# Species:   id = Tumor_infected_cells, name = Tumor_infected_cells, affected by kineticLaw

par Tumor_inf=0.0
aux Tumor_inf=Tumor_inf
dTumor_inf/dt=(1/(Bladder))*(( 1.0 * Tumor_i_1) + (-1.0 * Infected_))

# Species:   id = Tumor_uninfected_cells, name = Tumor_uninfected_cells, affected by kineticLaw

par Tumor_uni=0.55
aux Tumor_uni=Tumor_uni
dTumor_uni/dt=(1/(Bladder))*(( 1.0 * Tumor_gro) + (-1.0 * Tumor_i_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

