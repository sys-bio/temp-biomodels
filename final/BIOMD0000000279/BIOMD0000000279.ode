
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Komarova2005_PTHaction_OsteoclastOsteoblastCoupling
#
# is http://identifiers.org/biomodels.db/MODEL1011230000
# is http://identifiers.org/biomodels.db/BIOMD0000000279
# isDescribedBy http://identifiers.org/pubmed/15860557
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000148
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Compartment, name = Compartment, constant
par Compartme=1.0

# Parameter:   id =  y1, name = y1, defined by a Rule

# Parameter:   id =  y2, name = y2, defined by a Rule

# Parameter:   id =  x1_bar, name = x1_bar, defined by a Rule

# Parameter:   id =  x2_bar, name = x2_bar, defined by a Rule

# Parameter:   id =  alpha1, name = alpha1, constant
par alpha1=3.0

# Parameter:   id =  beta1, name = beta1, constant
par beta1=0.2

# Parameter:   id =  alpha2, name = alpha2, constant
par alpha2=4.0

# Parameter:   id =  beta2, name = beta2, constant
par beta2=0.02

# Parameter:   id =  k1, name = k1, constant
par k1=0.24

# Parameter:   id =  k2, name = k2, constant
par k2=0.0017

# Parameter:   id =  g11, name = g11, constant
par g11=0.5

# Parameter:   id =  g21, name = g21, constant
par g21=-0.5

# Parameter:   id =  g12, name = g12, constant
par g12=1.0

# Parameter:   id =  g22, name = g22, constant
par g22=0.0

# Parameter:   id =  gamma, name = gamma, defined by a Rule

# rateRule: variable = x1
init x1=1.06066
dx1/dt=alpha1*x1^g11*x2^g21-beta1*x1

# rateRule: variable = x2
init x2=212.132
dx2/dt=alpha2*x1^g12*x2^g22-beta2*x2

# rateRule: variable = z
init z=100.0
dz/dt=k2*y2-k1*y1

# assignmentRule: variable = y1
y1= piecew1 
aux y1=y1

# assignmentRule: variable = y2
y2= piecew2 
aux y2=y2

# assignmentRule: variable = x1_bar
x1_bar=(beta1/alpha1)^((1-g22)/gamma)*(beta2/alpha2)^(g21/gamma)
aux x1_bar=x1_bar

# assignmentRule: variable = x2_bar
x2_bar=(beta1/alpha1)^(g12/gamma)*(beta2/alpha2)^((1-g11)/gamma)
aux x2_bar=x2_bar

# assignmentRule: variable = gamma
gamma=g12*g21-(1-g11)*(1-g22)
aux gamma=gamma

# Species:   id = x1, name = Osteoclasts, defined in a rule 

# Species:   id = x2, name = Osteoblasts, defined in a rule 

# Species:   id = z, name = BoneMass, defined in a rule 


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (x1  >  x1_bar) then (x1-x1_bar) else (0)

piecew2=if (x2  >  x2_bar) then (x2-x2_bar) else (0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

