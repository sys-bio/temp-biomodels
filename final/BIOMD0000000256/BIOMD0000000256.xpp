
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Rehm2006_Caspase
#
# is http://identifiers.org/biomodels.db/MODEL5073396359
# is http://identifiers.org/biomodels.db/BIOMD0000000256
# isDescribedBy http://identifiers.org/pubmed/16932741
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Compartment: id = mito, name = mitochondrium, constant
par mito=1.0

# Parameter:   id =  k1, name = k1
par k1=4.68E-4

# Parameter:   id =  k1r, name = k1r
par k1r=0.0039

# Parameter:   id =  k2, name = k2
par k2=7.308E-4

# Parameter:   id =  k2r, name = k2r
par k2r=0.0116

# Parameter:   id =  k3, name = k3, constant
par k3=6.0

# Parameter:   id =  k4, name = k4, constant
par k4=12.0

# Parameter:   id =  k5, name = k5, constant
par k5=48.0

# Parameter:   id =  k6, name = k6, constant
par k6=2.4

# Parameter:   id =  k7, name = k7, constant
par k7=156.0

# Parameter:   id =  k7r, name = k7r, constant
par k7r=0.144

# Parameter:   id =  k8, name = k8, constant
par k8=156.0

# Parameter:   id =  k8r, name = k8r, constant
par k8r=0.144

# Parameter:   id =  k9, name = k9, constant
par k9=156.0

# Parameter:   id =  k9r, name = k9r, constant
par k9r=0.144

# Parameter:   id =  k10, name = k10, constant
par k10=156.0

# Parameter:   id =  k10r, name = k10r, constant
par k10r=0.144

# Parameter:   id =  k11, name = k11, constant
par k11=12.0

# Parameter:   id =  k12, name = k12, constant
par k12=12.0

# Parameter:   id =  k13, name = k13, constant
par k13=12.0

# Parameter:   id =  k14, name = k14, constant
par k14=12.0

# Parameter:   id =  k15, name = k15, constant
par k15=12.0

# Parameter:   id =  k16, name = k16, constant
par k16=12.0

# Parameter:   id =  k17, name = k17, constant
par k17=12.0

# Parameter:   id =  k18, name = k18, constant
par k18=12.0

# Parameter:   id =  k19, name = k19, constant
par k19=12.0

# Parameter:   id =  k20, name = k20, constant
par k20=12.0

# Parameter:   id =  k21, name = k21, constant
par k21=156.0

# Parameter:   id =  k21r, name = k21r, constant
par k21r=0.144

# Parameter:   id =  k22, name = k22, constant
par k22=156.0

# Parameter:   id =  k22r, name = k22r, constant
par k22r=0.144

# Parameter:   id =  k23, name = k23, constant
par k23=156.0

# Parameter:   id =  k23r, name = k23r, constant
par k23r=0.144

# Parameter:   id =  k24, name = k24, constant
par k24=0.0

# Parameter:   id =  k25, name = k25, constant
par k25=0.0

# Parameter:   id =  k26, name = k26, constant
par k26=420.0

# Parameter:   id =  k26r, name = k26r, constant
par k26r=0.133

# Parameter:   id =  k27, name = k27, constant
par k27=420.0

# Parameter:   id =  k27r, name = k27r, constant
par k27r=156.0

# Parameter:   id =  k28, name = k28, constant
par k28=420.0

# Parameter:   id =  k28r, name = k28r, constant
par k28r=156.0

# Parameter:   id =  k29, name = k29, constant
par k29=420.0

# Parameter:   id =  k29r, name = k29r, constant
par k29r=156.0

# Parameter:   id =  k30, name = k30, constant
par k30=4.45

# Parameter:   id =  k30r, name = k30r, constant
par k30r=31.9

# Parameter:   id =  k31, name = k31, constant
par k31=0.33

# Parameter:   id =  k31r, name = k31r, constant
par k31r=14.2

# Parameter:   id =  k32, name = k32, constant
par k32=4.45

# Parameter:   id =  k32r, name = k32r, constant
par k32r=156.0

# Parameter:   id =  k33, name = k33, constant
par k33=0.33

# Parameter:   id =  k33r, name = k33r, constant
par k33r=156.0

# Parameter:   id =  k34, name = k34, constant
par k34=420.0

# Parameter:   id =  k34r, name = k34r, constant
par k34r=156.0

# Parameter:   id =  k35, name = k35, constant
par k35=0.0058

# Parameter:   id =  k36, name = k36, constant
par k36=0.0058

# Parameter:   id =  k37, name = k37, constant
par k37=0.0058

# Parameter:   id =  k38, name = k38
par k38=0.0347

# Parameter:   id =  k39, name = k39
par k39=0.0347

# Parameter:   id =  k40, name = k40
par k40=0.0347

# Parameter:   id =  k41, name = k41, constant
par k41=0.0058

# Parameter:   id =  k42, name = k42, constant
par k42=0.0347

# Parameter:   id =  k43, name = k43
par k43=0.0347

# Parameter:   id =  k44, name = k44
par k44=0.0347

# Parameter:   id =  k45, name = k45, constant
par k45=0.0058

# Parameter:   id =  k46, name = k46
par k46=0.0347

# Parameter:   id =  k47, name = k47, constant
par k47=0.0058

# Parameter:   id =  k48, name = k48
par k48=0.0347

# Parameter:   id =  k49, name = k49, constant
par k49=0.0058

# Parameter:   id =  k50, name = k50
par k50=0.0058

# Parameter:   id =  k51, name = k51
par k51=0.0347

# Parameter:   id =  k52, name = k52, constant
par k52=0.0058

# Parameter:   id =  k53, name = k53, constant
par k53=12.0

# Parameter:   id =  th_SMAC, name = t_SMAC_0.5, constant
par th_SMAC=7.0

# Parameter:   id =  apo_lim, name = limiting factor for apoptosome formation, defined by a Rule

# Parameter:   id =  th_Apop, name = t_Apop_0.5, constant
par th_Apop=2.3

# Parameter:   id =  th_CytC, name = th_CytC, constant
par th_CytC=1.5

# Parameter:   id =  SMAC_norm, name = free SMAC per XIAP, defined by a Rule

# Parameter:   id =  XIAP_ini, name = initial XIAP conc
# Warning parameter XIAP_ini is not constant, it should be controled by a Rule and/or events
par XIAP_ini=NaN

# Parameter:   id =  XIAP_2SMAC_norm, name = XIAP2*SMAC per XIAP, defined by a Rule

# Parameter:   id =  C9norm, name = normalised Casp-9, defined by a Rule

# Parameter:   id =  C9_tot, name = Caspase9 tot
# Warning parameter C9_tot is not constant, it should be controled by a Rule and/or events
par C9_tot=NaN

# Parameter:   id =  C9Pnorm, name = normalised Casp9-P, defined by a Rule

# Parameter:   id =  C3norm, name = normalised Casp-3, defined by a Rule

# Parameter:   id =  C3_tot, name = Caspase3 tot
# Warning parameter C3_tot is not constant, it should be controled by a Rule and/or events
par C3_tot=NaN

# Parameter:   id =  PC3norm, name = normalised Procasp-3, defined by a Rule

# Parameter:   id =  SMAC_rel, name = percent SMAC release, defined by a Rule

# Parameter:   id =  SMAC_tot, name = total SMAC
# Warning parameter SMAC_tot is not constant, it should be controled by a Rule and/or events
par SMAC_tot=NaN

# Parameter:   id =  Apoform, name = percent Apoptosome formation, defined by a Rule

# Parameter:   id =  XIAP_norm, name = XIAP_norm, defined by a Rule

# Parameter:   id =  XIAP_C3_norm, name = XIAP_C3_norm, defined by a Rule

# Parameter:   id =  XIAP_C9_norm, name = XIAP_C9_norm, defined by a Rule

# Parameter:   id =  XIAP_p2frag_norm, name = XIAP_p2frag_norm, defined by a Rule

# Parameter:   id =  BIR12_norm, name = BIR12_norm, defined by a Rule

# Parameter:   id =  BIR3R_norm, name = BIR3R_norm, defined by a Rule

# Parameter:   id =  BIR12_C3_norm, name = BIR12_C3_norm, defined by a Rule

# Parameter:   id =  BIR3R_C9_norm, name = BIR3R_C9_norm, defined by a Rule

# Parameter:   id =  BIR3R_p2frag_norm, name = BIR3R_p2frag_norm, defined by a Rule

# Parameter:   id =  S_breakdown, name = S_breakdown, constant
par S_breakdo=0.01

# Parameter:   id =  CytC_tot, name = CytC_tot
# Warning parameter CytC_tot is not constant, it should be controled by a Rule and/or events
par CytC_tot=NaN

# Parameter:   id =  APAF1_tot, name = APAF1_tot
# Warning parameter APAF1_tot is not constant, it should be controled by a Rule and/or events
par APAF1_tot=NaN

# assignmentRule: variable = apo_lim
apo_lim= piecew1 
aux apo_lim=apo_lim

# assignmentRule: variable = SMAC_norm
SMAC_norm=SMAC/XIAP_ini
aux SMAC_norm=SMAC_norm

# assignmentRule: variable = XIAP_2SMAC_norm
XIAP_2SMA=XIAP_2S_1/XIAP_ini
aux XIAP_2SMA=XIAP_2SMA

# assignmentRule: variable = C9norm
C9norm=C9/C9_tot
aux C9norm=C9norm

# assignmentRule: variable = C9Pnorm
C9Pnorm=C9P/C9_tot
aux C9Pnorm=C9Pnorm

# assignmentRule: variable = C3norm
C3norm=C3/C3_tot
aux C3norm=C3norm

# assignmentRule: variable = PC3norm
PC3norm=PC3/C3_tot
aux PC3norm=PC3norm

# assignmentRule: variable = SMAC_rel
SMAC_rel=1-SMAC_mito/SMAC_tot
aux SMAC_rel=SMAC_rel

# assignmentRule: variable = Apoform
Apoform=1-PC9/C9_tot
aux Apoform=Apoform

# assignmentRule: variable = XIAP_norm
XIAP_norm=XIAP/XIAP_ini
aux XIAP_norm=XIAP_norm

# assignmentRule: variable = XIAP_C3_norm
XIAP_C3_n=(XIAP_C3+XIAP_C9_C)/XIAP_ini
aux XIAP_C3_n=XIAP_C3_n

# assignmentRule: variable = XIAP_C9_norm
XIAP_C9_n=(XIAP_C9+XIAP_C9_C)/XIAP_ini
aux XIAP_C9_n=XIAP_C9_n

# assignmentRule: variable = XIAP_p2frag_norm
XIAP_p2fr=(XIAP_p2_1+XIAP_p2_2)/XIAP_ini
aux XIAP_p2fr=XIAP_p2fr

# assignmentRule: variable = BIR12_norm
BIR12_nor=BIR12/XIAP_ini
aux BIR12_nor=BIR12_nor

# assignmentRule: variable = BIR3R_norm
BIR3R_nor=BIR3R/XIAP_ini
aux BIR3R_nor=BIR3R_nor

# assignmentRule: variable = BIR12_C3_norm
BIR12_C3_=BIR12_C3/XIAP_ini
aux BIR12_C3_=BIR12_C3_

# assignmentRule: variable = BIR3R_C9_norm
BIR3R_C9_=BIR3R_C9/XIAP_ini
aux BIR3R_C9_=BIR3R_C9_

# assignmentRule: variable = BIR3R_p2frag_norm
BIR3R_p2f=BIR3R_p_1/XIAP_ini
aux BIR3R_p2f=BIR3R_p2f

# Reaction: id = reaction1, name = ProCaspase3 Production

reaction1=cell*(k1-k1r*PC3)

# Reaction: id = reaction2, name = XIAP Production

reaction2=cell*(k2-k2r*XIAP)

# Reaction: id = reaction3

reaction3=cell*k3*C9*PC3

# Reaction: id = reaction4

reaction4=cell*k4*C9*C3

# Reaction: id = reaction5

reaction5=cell*k5*C9P*PC3

# Reaction: id = reaction6

reaction6=cell*k6*PC3*C3

# Reaction: id = reaction7

reaction7=cell*(k7*C3*XIAP-k7r*XIAP_C3)

# Reaction: id = reaction8

reaction8=cell*(k8*C3*XIAP_C9-k8r*XIAP_C9_C)

# Reaction: id = reaction9

reaction9=cell*(k9*C3*XIAP_p2_1-k9r*XIAP_p2_2)

# Reaction: id = reaction10

reactio_1=cell*(k10*C3*BIR12-k10r*BIR12_C3)

# Reaction: id = reaction11

reactio_2=cell*k11*C3*XIAP

# Reaction: id = reaction12

reactio_3=cell*k12*C3*XIAP_C9

# Reaction: id = reaction13

reactio_4=cell*k13*C3*XIAP_C3

# Reaction: id = reaction14

reactio_5=cell*k14*C3*XIAP_p2_1

# Reaction: id = reaction15

reactio_6=cell*k15*C3*XIAP_p2_2

# Reaction: id = reaction16

reactio_7=cell*k16*C3*XIAP_C9_C

# Reaction: id = reaction17

reactio_8=cell*k17*C3*XIAP_2S_1

# Reaction: id = reaction18

reactio_9=cell*k18*C3*XIAP_C9_C

# Reaction: id = reaction19

reacti_10=cell*k19*C3*XIAP_C9

# Reaction: id = reaction20

reacti_11=cell*k20*C3*BIR3R_C9

# Reaction: id = reaction21

reacti_12=cell*(k21*C9*XIAP-k21r*XIAP_C9)

# Reaction: id = reaction22

reacti_13=cell*(k22*C9*XIAP_C3-k22r*XIAP_C9_C)

# Reaction: id = reaction23

reacti_14=cell*(k23*C9*BIR3R-k23r*BIR3R_C9)

# Reaction: id = reaction24

reacti_15=cell*k24*BIR3R_p_1

# Reaction: id = reaction25

reacti_16=cell*k25*XIAP_p2_1

# Reaction: id = reaction26

reacti_17=cell*(k26*XIAP*SMAC*SMAC-k26r*XIAP_2S_1)

# Reaction: id = reaction27

reacti_18=cell*(k27*XIAP_C9*SMAC*SMAC-k27r*XIAP_2S_1*C9)

# Reaction: id = reaction28

reacti_19=cell*(k28*XIAP_C3*SMAC*SMAC-k28r*XIAP_2S_1*C3)

# Reaction: id = reaction29

reacti_20=cell*(k29*XIAP_C9_C*SMAC*SMAC-k29r*XIAP_2S_1*C3*C9)

# Reaction: id = reaction30

reacti_21=cell*(k30*BIR12*SMAC-k30r*BIR12_SMA)

# Reaction: id = reaction31

reacti_22=cell*(k31*BIR3R*SMAC-k31r*BIR3R_SMA)

# Reaction: id = reaction32

reacti_23=cell*(k32*BIR12_C3*SMAC-k32r*BIR12_SMA*C3)

# Reaction: id = reaction33

reacti_24=cell*(k33*BIR3R_C9*SMAC-k33r*BIR3R_SMA*C9)

# Reaction: id = reaction34

reacti_25=cell*(k34*XIAP_p2_1*SMAC*SMAC-k34r*XIAP_p2_3)

# Reaction: id = reaction35

reacti_26=cell*k35*C9P

# Reaction: id = reaction36

reacti_27=cell*k36*C9

# Reaction: id = reaction37

reacti_28=cell*k37*C3

# Reaction: id = reaction38

reacti_29=cell*k38*XIAP_C3

# Reaction: id = reaction39

reacti_30=cell*k39*XIAP_C9_C

# Reaction: id = reaction40

reacti_31=cell*k40*XIAP_C9

# Reaction: id = reaction41

reacti_32=cell*k41*XIAP_p2_1

# Reaction: id = reaction42

reacti_33=cell*k42*XIAP_p2_2

# Reaction: id = reaction43

reacti_34=cell*k43*XIAP_p2_3

# Reaction: id = reaction44

reacti_35=cell*k44*XIAP_2S_1

# Reaction: id = reaction45

reacti_36=cell*k45*BIR12

# Reaction: id = reaction46

reacti_37=cell*k46*BIR3R

# Reaction: id = reaction47

reacti_38=cell*k47*BIR12_SMA

# Reaction: id = reaction48

reacti_39=cell*k48*BIR3R_SMA

# Reaction: id = reaction49

reacti_40=cell*k49*BIR12_C3

# Reaction: id = reaction50

reacti_41=cell*k50*BIR3R_C9

# Reaction: id = reaction51

reacti_42=cell*k51*BIR3R_p_1

# Reaction: id = reaction52

reacti_43=cell*k52*SMAC

# Reaction: id = reaction53

reacti_44=cell*k53*C3*Substrate

# Reaction: id = SMAC_release

SMAC_rele=cell*SMAC_mito*log(2)/th_SMAC

# Reaction: id = Apo_formation

Apo_forma=cell*apo_lim*log(2)/th_Apop

# Reaction: id = CytC_release

CytC_rele=cell*CytC_mit*log(2)/th_CytC

# Species:   id = PC3, name = ProCasp3, affected by kineticLaw

init PC3=0.12
dPC3/dt=(1/(cell))*(( 1.0 * reaction1) + (-1.0 * reaction3) + (-1.0 * reaction5) + (-1.0 * reaction6))

# Species:   id = XIAP, name = XIAP, affected by kineticLaw

init XIAP=0.063
dXIAP/dt=(1/(cell))*(( 1.0 * reaction2) + (-1.0 * reaction7) + (-1.0 * reactio_2) + (-1.0 * reacti_12) + ( 1.0 * reacti_16) + (-1.0 * reacti_17))

# Species:   id = C9, name = Casp9(p35-p12), affected by kineticLaw

init C9=0.0
dC9/dt=(1/(cell))*((-1.0 * reaction3) + ( 1.0 * reaction3) + (-1.0 * reaction4) + (-1.0 * reacti_12) + (-1.0 * reacti_13) + (-1.0 * reacti_14) + ( 1.0 * reacti_18) + ( 1.0 * reacti_20) + ( 1.0 * reacti_24) + (-1.0 * reacti_27) + ( 1.0 * Apo_forma))

# Species:   id = PC9, name = ProCasp9, affected by kineticLaw

init PC9=0.03
dPC9/dt=(1/(cell))*((-1.0 * Apo_forma))

# Species:   id = C3, name = C3, affected by kineticLaw

init C3=0.0
dC3/dt=(1/(cell))*(( 1.0 * reaction3) + (-1.0 * reaction4) + ( 1.0 * reaction4) + ( 1.0 * reaction5) + (-1.0 * reaction6) + ( 2.0 * reaction6) + (-1.0 * reaction7) + (-1.0 * reaction8) + (-1.0 * reaction9) + (-1.0 * reactio_1) + (-1.0 * reactio_2) + ( 1.0 * reactio_2) + (-1.0 * reactio_3) + ( 1.0 * reactio_3) + (-1.0 * reactio_4) + ( 1.0 * reactio_4) + (-1.0 * reactio_5) + ( 1.0 * reactio_5) + (-1.0 * reactio_6) + ( 1.0 * reactio_6) + (-1.0 * reactio_7) + ( 1.0 * reactio_7) + (-1.0 * reactio_8) + ( 1.0 * reactio_8) + (-1.0 * reactio_9) + ( 1.0 * reactio_9) + (-1.0 * reacti_10) + ( 1.0 * reacti_10) + (-1.0 * reacti_11) + ( 1.0 * reacti_11) + ( 1.0 * reacti_19) + ( 1.0 * reacti_20) + ( 1.0 * reacti_23) + (-1.0 * reacti_28) + (-1.0 * reacti_44) + ( 1.0 * reacti_44))

# Species:   id = C9P, name = Casp9(p35-p10), affected by kineticLaw

init C9P=0.0
dC9P/dt=(1/(cell))*(( 1.0 * reaction4) + (-1.0 * reaction5) + ( 1.0 * reaction5) + ( 1.0 * reactio_9) + ( 1.0 * reacti_10) + ( 1.0 * reacti_11) + (-1.0 * reacti_26))

# Species:   id = XIAP_C3, name = XIAP-Casp3, affected by kineticLaw

init XIAP_C3=0.0
dXIAP_C3/dt=(1/(cell))*(( 1.0 * reaction7) + (-1.0 * reactio_4) + (-1.0 * reacti_13) + (-1.0 * reacti_19) + (-1.0 * reacti_29))

# Species:   id = XIAP_C9, name = XIAP-Casp9, affected by kineticLaw

init XIAP_C9=0.0
dXIAP_C9/dt=(1/(cell))*((-1.0 * reaction8) + (-1.0 * reactio_3) + (-1.0 * reacti_10) + ( 1.0 * reacti_12) + (-1.0 * reacti_18) + (-1.0 * reacti_31))

# Species:   id = XIAP_C9_C3, name = XIAP-Casp9-Casp3, affected by kineticLaw

par XIAP_C9_C=0.0
aux XIAP_C9_C=XIAP_C9_C
dXIAP_C9_C/dt=(1/(cell))*(( 1.0 * reaction8) + (-1.0 * reactio_7) + (-1.0 * reactio_9) + ( 1.0 * reacti_13) + (-1.0 * reacti_20) + (-1.0 * reacti_30))

# Species:   id = XIAP_p2frag, name = XIAP-p2 fragment, affected by kineticLaw

par XIAP_p2_1=0.0
aux XIAP_p2_1=XIAP_p2_1
dXIAP_p2_1/dt=(1/(cell))*((-1.0 * reaction9) + (-1.0 * reactio_5) + ( 1.0 * reacti_10) + (-1.0 * reacti_16) + (-1.0 * reacti_25) + (-1.0 * reacti_32))

# Species:   id = XIAP_p2frag_C3, name = XIAP-p2frag-Casp3, affected by kineticLaw

par XIAP_p2_2=0.0
aux XIAP_p2_2=XIAP_p2_2
dXIAP_p2_2/dt=(1/(cell))*(( 1.0 * reaction9) + (-1.0 * reactio_6) + ( 1.0 * reactio_9) + (-1.0 * reacti_33))

# Species:   id = BIR12, name = BIR12, affected by kineticLaw

init BIR12=0.0
dBIR12/dt=(1/(cell))*((-1.0 * reactio_1) + ( 1.0 * reactio_2) + ( 1.0 * reactio_3) + ( 1.0 * reactio_5) + (-1.0 * reacti_21) + (-1.0 * reacti_36))

# Species:   id = BIR12_C3, name = BIR12-Casp3, affected by kineticLaw

init BIR12_C3=0.0
dBIR12_C3/dt=(1/(cell))*(( 1.0 * reactio_1) + ( 1.0 * reactio_4) + ( 1.0 * reactio_6) + ( 1.0 * reactio_7) + (-1.0 * reacti_23) + (-1.0 * reacti_40))

# Species:   id = BIR3R, name = BIR3R, affected by kineticLaw

init BIR3R=0.0
dBIR3R/dt=(1/(cell))*(( 1.0 * reactio_2) + ( 1.0 * reactio_4) + (-1.0 * reacti_14) + ( 1.0 * reacti_15) + (-1.0 * reacti_22) + (-1.0 * reacti_37))

# Species:   id = BIR3R_C9, name = BIR3R-Casp9, affected by kineticLaw

init BIR3R_C9=0.0
dBIR3R_C9/dt=(1/(cell))*(( 1.0 * reactio_3) + ( 1.0 * reactio_7) + (-1.0 * reacti_11) + ( 1.0 * reacti_14) + (-1.0 * reacti_24) + (-1.0 * reacti_41))

# Species:   id = BIR3R_p2frag, name = BIR3R-p2frag, affected by kineticLaw

par BIR3R_p_1=0.0
aux BIR3R_p_1=BIR3R_p_1
dBIR3R_p_1/dt=(1/(cell))*(( 1.0 * reactio_5) + ( 1.0 * reactio_6) + ( 1.0 * reacti_11) + (-1.0 * reacti_15) + (-1.0 * reacti_42))

# Species:   id = XIAP_2SMAC, name = XIAP-2*SMAC, affected by kineticLaw

par XIAP_2S_1=0.0
aux XIAP_2S_1=XIAP_2S_1
dXIAP_2S_1/dt=(1/(cell))*((-1.0 * reactio_8) + ( 1.0 * reacti_17) + ( 1.0 * reacti_18) + ( 1.0 * reacti_19) + ( 1.0 * reacti_20) + (-1.0 * reacti_35))

# Species:   id = BIR12_SMAC, name = BIR12-SMAC, affected by kineticLaw

par BIR12_SMA=0.0
aux BIR12_SMA=BIR12_SMA
dBIR12_SMA/dt=(1/(cell))*(( 1.0 * reactio_8) + ( 1.0 * reacti_21) + ( 1.0 * reacti_23) + (-1.0 * reacti_38))

# Species:   id = BIR3R_SMAC, name = BIR3R-SMAC, affected by kineticLaw

par BIR3R_SMA=0.0
aux BIR3R_SMA=BIR3R_SMA
dBIR3R_SMA/dt=(1/(cell))*(( 1.0 * reactio_8) + ( 1.0 * reacti_22) + ( 1.0 * reacti_24) + (-1.0 * reacti_39))

# Species:   id = SMAC, name = SMAC, affected by kineticLaw

init SMAC=0.0
dSMAC/dt=(1/(cell))*((-2.0 * reacti_17) + (-2.0 * reacti_18) + (-2.0 * reacti_19) + (-2.0 * reacti_20) + (-1.0 * reacti_21) + (-1.0 * reacti_22) + (-1.0 * reacti_23) + (-1.0 * reacti_24) + (-2.0 * reacti_25) + (-1.0 * reacti_43) + ( 1.0 * SMAC_rele))

# Species:   id = APAF1, name = APAF1, affected by kineticLaw

init APAF1=3.372
dAPAF1/dt=(1/(cell))*((-1.0 * Apo_forma))

# Species:   id = XIAP_p2frag_2SMAC, name = XIAP-p2frag-2*SMAC, affected by kineticLaw

par XIAP_p2_3=0.0
aux XIAP_p2_3=XIAP_p2_3
dXIAP_p2_3/dt=(1/(cell))*(( 1.0 * reacti_25) + (-1.0 * reacti_34))

# Species:   id = Substrate, name = Casp3 Substrate, affected by kineticLaw

init Substrate=1.0
dSubstrate/dt=(1/(cell))*((-1.0 * reacti_44))

# Species:   id = ClvgPrds, name = Clevage Products, affected by kineticLaw

init ClvgPrds=0.0
dClvgPrds/dt=(1/(cell))*(( 1.0 * reacti_44))

# Species:   id = SMAC_mito, name = SMAC in mitochondrium, affected by kineticLaw

init SMAC_mito=0.126
dSMAC_mito/dt=(1/(mito))*((-1.0 * SMAC_rele))

# Species:   id = CytC_mit, name = Cytochrome C in mitochondrium, affected by kineticLaw

init CytC_mit=10.0
dCytC_mit/dt=(1/(mito))*((-1.0 * CytC_rele))

# Species:   id = CytC_cell, name = cytosolic Cytochrome C, affected by kineticLaw

init CytC_cell=0.0
dCytC_cell/dt=(1/(cell))*(( 1.0 * CytC_rele))

# event : Production_Breakdown
Productio=if (Substrate < S_breakdo) then (1.5) else (0.2)
global 1 {Productio - 1.1} {k51=0.0058;k50=0.0058;k48=0.0058;k46=0.0058;k44=0.0058;k43=0.0058;k40=0.0058;k39=0.0058;k38=0.0058;k2r=0;k2=0;k1r=0;k1=0}


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (PC9  <  APAF1) then (PC9) else (APAF1)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

