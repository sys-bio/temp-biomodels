
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Macnamara2015/1 - virotherapy full model
#
# isDescribedBy http://identifiers.org/pubmed/25882747
# is http://identifiers.org/biomodels.db/MODEL1907290002
# is http://identifiers.org/biomodels.db/BIOMD0000000766
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = inf, name = inf
inf(dv,V,U,hu)=(dv*V*U/(hu+U))


# FunctionDefinition id = tg, name = tg
tg(r,U,I,K)=(r*U*(1-(U+I)/K))


# FunctionDefinition id = exh, name = exh
exh(dt,U,E)=(dt*U*E)


# FunctionDefinition id = kill, name = kill
kill(du,x,E,he)=(du*x*E/(he+E))


# FunctionDefinition id = burst, name = burst
burst(d,b,I)=(d*b*I)


# FunctionDefinition id = mg, name = mg
mg(pm,V,M,m,hv)=(pm*V*M*(1-M/m)/(hv+V))


# FunctionDefinition id = eg, name = eg
eg(pe,M,U,V,hv)=(pe*M*(U+V)/(U+V+hv))


# Compartment: id = tme, name = tme, constant
par tme=1.0

# Parameter:   id =  r, name = r, constant
par r=0.927

# Parameter:   id =  K, name = K, constant
par K=1.8182E8

# Parameter:   id =  dv, name = dv, constant
par dv=0.0038

# Parameter:   id =  du, name = du, constant
par du=2.0

# Parameter:   id =  hu, name = hu, constant
par hu=1.0

# Parameter:   id =  he, name = he, constant
par he=1000.0

# Parameter:   id =  hv, name = hv, constant
par hv=10000.0

# Parameter:   id =  delta, name = delta, constant
par delta=1.0

# Parameter:   id =  pm, name = pm, constant
par pm=2.5

# Parameter:   id =  m, name = m, constant
par m=10000.0

# Parameter:   id =  pe, name = pe, constant
par pe=0.4

# Parameter:   id =  de, name = de, constant
par de=0.1

# Parameter:   id =  dt, name = dt, constant
par dt=5.0E-9

# Parameter:   id =  w, name = w, constant
par w=2.042

# Parameter:   id =  b, name = b, constant
par b=1000.0

# Reaction: id = tumor_growth, name = tumor growth

tumor_gro=tme*tg(r, U, I, K)

# Reaction: id = tumor_infection, name = tumor infection

tumor_inf=tme*inf(dv, V, U, hu)

# Reaction: id = tumor_killing, name = tumor killing

tumor_kil=tme*kill(du, U, E, he)

# Reaction: id = infected_tumor_death, name = infected tumor death

infected_=tme*delta*I

# Reaction: id = infected_tumor_killing, name = infected tumor killing

infecte_1=tme*kill(du, I, E, he)

# Reaction: id = memory_cell_growth, name = memory cell growth

memory_ce=tme*mg(pm, V, M_1, m, hv)

# Reaction: id = effector_growth, name = effector growth

effector_=tme*eg(pe, M_1, U, V, hv)

# Reaction: id = effector_death, name = effector death

effecto_1=tme*de*E

# Reaction: id = effector_exhaustion, name = effector exhaustion

effecto_2=tme*exh(dt, U, E)

# Reaction: id = virus_burst, name = virus burst

virus_bur=tme*burst(delta, b, I)

# Reaction: id = virus_clearance, name = virus clearance

virus_cle=tme*w*V

# Species:   id = U, name = U, affected by kineticLaw

init U=1000000.0
dU/dt=(1/(tme))*(( 1.0 * tumor_gro) + (-1.0 * tumor_inf) + (-1.0 * tumor_kil))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.0
dI/dt=(1/(tme))*(( 1.0 * tumor_inf) + (-1.0 * infected_) + (-1.0 * infecte_1))

# Species:   id = M, name = M, affected by kineticLaw

par M_1=1.0
aux M_1=M_1
dM_1/dt=(1/(tme))*(( 1.0 * memory_ce))

# Species:   id = E, name = E, affected by kineticLaw

init E=0.0
dE/dt=(1/(tme))*(( 1.0 * effector_) + (-1.0 * effecto_1) + (-1.0 * effecto_2))

# Species:   id = V, name = V, affected by kineticLaw

init V=1.0
dV/dt=(1/(tme))*(( 1.0 * virus_bur) + (-1.0 * virus_cle))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

