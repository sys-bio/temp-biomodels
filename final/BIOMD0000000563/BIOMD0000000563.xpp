
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Pritchard2014 - plant-microbe interaction
#
# is http://identifiers.org/biomodels.db/MODEL1408280000
# is http://identifiers.org/biomodels.db/BIOMD0000000563
# isDescribedBy http://identifiers.org/pubmed/25382065
# isDerivedFrom http://identifiers.org/pubmed/17108957
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Competitive_inhibition__irr, name = Competitive inhibition (irr)
Competiti(substrate,Inhibitor,Km,V,Ki)=(V*substrate/(Km+substrate+Km*Inhibitor/Ki))


# Compartment: id = Cell, name = Cell, constant
par Cell=1.0

# Compartment: id = Apoplast, name = Apoplast, constant
par Apoplast=1.0

# Reaction: id = PAMP_recognition, name = PAMP recognition
# Local Parameter:   id =  k1, name = k1
par k1=0.1

# Local Parameter:   id =  k2, name = k2
par k2=0.1


PAMP_reco=k1*PRR_0*PAMP-k2*PRR

# Reaction: id = Effector_recognition, name = Effector recognition
# Local Parameter:   id =  k1, name = k1
par k1_1=0.1

# Local Parameter:   id =  k2, name = k2
par k2_1=0.1


Effector_=Cell*(k1_1*R*E_int-k2_1*R_0)

# Reaction: id = Effector_removal, name = Effector removal
# Local Parameter:   id =  k1, name = k1
par k1_1_2=0.1


Effecto_1=Apoplast*k1_1_2*E

# Reaction: id = PAMP_removal, name = PAMP removal
# Local Parameter:   id =  k1, name = k1
par k1_1_2_3=0.1


PAMP_remo=Cell*k1_1_2_3*PAMP

# Reaction: id = Pathogen_arrival, name = Pathogen arrival
# Local Parameter:   id =  k1, name = k1
par k1_1_2__4=0.1


Pathogen_=Apoplast*k1_1_2__4*Path_bulk

# Reaction: id = Pathogen_removal, name = Pathogen removal
# Local Parameter:   id =  k1, name = k1
par k1_1_2__5=0.1


Pathoge_1=Apoplast*k1_1_2__5*Path

# Reaction: id = PAMP_production, name = PAMP production
# Local Parameter:   id =  k1, name = k1
par k1_1_2__6=0.1


PAMP_prod=k1_1_2__6*Path

# Reaction: id = Effector_production, name = Effector production
# Local Parameter:   id =  k1, name = k1
par k1_1_2__7=0.1


Effecto_2=Apoplast*k1_1_2__7*Path

# Reaction: id = E_int_removal, name = E_int removal
# Local Parameter:   id =  k1, name = k1
par k1_1_2__8=0.1


E_int_rem=Cell*k1_1_2__8*E_int

# Reaction: id = ETI, name = ETI
# Local Parameter:   id =  k1, name = k1
par k1_1_2__9=0.1


ETI=k1_1_2__9*Path*R_0

# Reaction: id = Effector_translocation, name = Effector translocation
# Local Parameter:   id =  Km, name = Km
par Km=0.1

# Local Parameter:   id =  V, name = V
par V=0.1

# Local Parameter:   id =  Ki, name = Ki
par Ki=0.1


Effecto_3=Competiti(E, Callose, Km, V, Ki)

# Reaction: id = Callose_production, name = Callose production
# Local Parameter:   id =  k1, name = k1
par k1_1_2_10=0.1


Callose_p=k1_1_2_10*PRR

# Reaction: id = Callose_removal, name = Callose removal
# Local Parameter:   id =  k1, name = k1
par k1_1_2_11=0.1


Callose_r=Cell*k1_1_2_11*Callose

# Reaction: id = PTI, name = PTI
# Local Parameter:   id =  k1, name = k1
par k1_1_2_12=0.1


PTI=k1_1_2_12*Path*Callose

# Reaction: id = Callose_suppression, name = Callose suppression
# Local Parameter:   id =  k1, name = k1
par k1_1_2_13=0.1


Callose_s=Cell*k1_1_2_13*Callose*E_int

# Species:   id = PAMP, name = PAMP, affected by kineticLaw

init PAMP=0.0
dPAMP/dt=(1/(Cell))*((-1.0 * PAMP_reco) + (-1.0 * PAMP_remo) + ( 1.0 * PAMP_prod))

# Species:   id = R, name = R, affected by kineticLaw

init R=1.0
dR/dt=(1/(Cell))*((-1.0 * Effector_))

# Species:   id = R_0, name = R*, affected by kineticLaw

init R_0=0.0
dR_0/dt=(1/(Cell))*(( 1.0 * Effector_) + (-1.0 * ETI) + ( 1.0 * ETI))

# Species:   id = E_int, name = E_int, affected by kineticLaw

init E_int=0.0
dE_int/dt=(1/(Cell))*((-1.0 * Effector_) + (-1.0 * E_int_rem) + ( 1.0 * Effecto_3) + (-1.0 * Callose_s) + ( 1.0 * Callose_s))

# Species:   id = Callose, name = Callose, affected by kineticLaw

init Callose=0.0
dCallose/dt=(1/(Cell))*(( 1.0 * Callose_p) + (-1.0 * Callose_r) + (-1.0 * PTI) + ( 1.0 * PTI) + (-1.0 * Callose_s))

# Species:   id = Path, name = Path, affected by kineticLaw

init Path=0.0
dPath/dt=(1/(Apoplast))*(( 1.0 * Pathogen_) + (-1.0 * Pathoge_1) + (-1.0 * PAMP_prod) + ( 1.0 * PAMP_prod) + (-1.0 * Effecto_2) + ( 1.0 * Effecto_2) + (-1.0 * ETI) + (-1.0 * PTI))

# Species:   id = Path_bulk, name = Path_bulk, affected by kineticLaw
# Species is changed by 1 event(s)
init Path_bulk=0.0
dPath_bulk/dt=(1/(Apoplast))*((-1.0 * Pathogen_) + ( 1.0 * Pathogen_))

# Species:   id = PRR, name = PRR*, affected by kineticLaw

init PRR=0.0
dPRR/dt=(1/(Apoplast))*(( 1.0 * PAMP_reco) + (-1.0 * Callose_p) + ( 1.0 * Callose_p))

# Species:   id = PRR_0, name = PRR, affected by kineticLaw

init PRR_0=1.0
dPRR_0/dt=(1/(Apoplast))*((-1.0 * PAMP_reco))

# Species:   id = E, name = E, affected by kineticLaw

init E=0.0
dE/dt=(1/(Apoplast))*((-1.0 * Effecto_1) + ( 1.0 * Effecto_2) + (-1.0 * Effecto_3))

# event : Pathogen_introduced
Pathoge_2=if (t > 10) then (1.5) else (0.2)
global 1 {Pathoge_2 - 1.1} {Path_bulk=1}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

