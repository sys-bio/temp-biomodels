
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Hatakeyama2003_MAPK
#
# is http://identifiers.org/biomodels.db/MODEL8256371999
# is http://identifiers.org/biomodels.db/BIOMD0000000146
# isDescribedBy http://identifiers.org/pubmed/12691603
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000019
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000048
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000010
# isDerivedFrom http://identifiers.org/pubmed/11772030
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment_0000001, name = cell, constant
par compartme=1.0

# Parameter:   id =  k1, name = k1, constant
par k1=0.0012

# Parameter:   id =  k2, name = k2, constant
par k2=0.01

# Parameter:   id =  k3, name = k3, constant
par k3=1.0

# Parameter:   id =  k5, name = k5, constant
par k5=0.1

# Parameter:   id =  k6, name = k6, constant
par k6=20.0

# Parameter:   id =  k7, name = k7, constant
par k7=60.0

# Parameter:   id =  k8, name = k8, constant
par k8=2040.0

# Parameter:   id =  k9, name = k9, constant
par k9=40.8

# Parameter:   id =  V10, name = V10, constant
par V10=0.0154

# Parameter:   id =  k11, name = k11, constant
par k11=0.222

# Parameter:   id =  V12, name = V12, constant
par V12=0.289

# Parameter:   id =  k13, name = k13, constant
par k13=1.53

# Parameter:   id =  k14, name = k14, constant
par k14=0.00673

# Parameter:   id =  k15, name = k15, constant
par k15=3.5

# Parameter:   id =  k16, name = k16, constant
par k16=0.058

# Parameter:   id =  k17, name = k17, constant
par k17=2.9

# Parameter:   id =  k20, name = k20, constant
par k20=0.3

# Parameter:   id =  k18, name = k18, constant
par k18=0.058

# Parameter:   id =  k19, name = k19, constant
par k19=9.5

# Parameter:   id =  k21, name = k21, constant
par k21=16.0

# Parameter:   id =  k22, name = k22, constant
par k22=0.27

# Parameter:   id =  k23, name = k23, constant
par k23=0.1

# Parameter:   id =  k24, name = k24, constant
par k24=9.85

# Parameter:   id =  k25, name = k25, constant
par k25=45.8

# Parameter:   id =  k27, name = k27, constant
par k27=16.9

# Parameter:   id =  V26, name = V26, constant
par V26=2620.0

# Parameter:   id =  V28, name = V28, constant
par V28=17000.0

# Parameter:   id =  k29, name = k29, constant
par k29=507.0

# Parameter:   id =  V30, name = V30, constant
par V30=20000.0

# Parameter:   id =  k31, name = k31, constant
par k31=0.107

# Parameter:   id =  V32, name = V32, constant
par V32=20000.0

# Parameter:   id =  k33, name = k33, constant
par k33=0.211

# Parameter:   id =  k34, name = k34, constant
par k34=0.001

# Parameter:   id =  k_1, name = k_1, constant
par k_1=7.6E-4

# Parameter:   id =  k_2, name = k_2, constant
par k_2=0.1

# Parameter:   id =  k_3, name = k_3, constant
par k_3=0.01

# Parameter:   id =  K4, name = K4, constant
par K4=50.0

# Parameter:   id =  k_5, name = k_5, constant
par k_5=1.0

# Parameter:   id =  k_6, name = k_6, constant
par k_6=5.0

# Parameter:   id =  k_7, name = k_7, constant
par k_7=546.0

# Parameter:   id =  k_8, name = k_8, constant
par k_8=15700.0

# Parameter:   id =  k_9, name = k_9, constant
par k_9=0.0

# Parameter:   id =  K10, name = K10, constant
par K10=340.0

# Parameter:   id =  K11, name = K11, constant
par K11_1=0.181

# Parameter:   id =  K12, name = K12, constant
par K12=0.0571

# Parameter:   id =  K13, name = K13, constant
par K13_1=11.7

# Parameter:   id =  K14, name = K14, constant
par K14_1=8.07

# Parameter:   id =  K15, name = K15, constant
par K15_1=317.0

# Parameter:   id =  K18, name = K18, constant
par K18_1=60.0

# Parameter:   id =  K19, name = K19, constant
par K19_1=146000.0

# Parameter:   id =  K20, name = K20, constant
par K20_1=160.0

# Parameter:   id =  K21, name = K21, constant
par K21_1=146000.0

# Parameter:   id =  K22, name = K22, constant
par K22_1=60.0

# Parameter:   id =  k_23, name = k_23, constant
par k_23=2.0

# Parameter:   id =  k_24, name = k_24, constant
par k_24=0.0985

# Parameter:   id =  k_25, name = k_25, constant
par k_25=0.047

# Parameter:   id =  K26, name = K26, constant
par K26=3680.0

# Parameter:   id =  K27, name = K27, constant
par K27_1=39.1

# Parameter:   id =  K28, name = K28, constant
par K28=9.02

# Parameter:   id =  K30, name = K30, constant
par K30=80000.0

# Parameter:   id =  K31, name = K31, constant
par K31_1=4.35

# Parameter:   id =  K32, name = K32, constant
par K32=80000.0

# Parameter:   id =  K33, name = K33, constant
par K33_1=12.0

# Parameter:   id =  k_34, name = k_34, constant
par k_34=0.0

# Parameter:   id =  V4, name = V4, constant
par V4=62.5

# Parameter:   id =  K17, name = K17, constant
par K17_1=317.0

# Parameter:   id =  K16, name = K16, constant
par K16_1=2200.0

# Parameter:   id =  k_29, name = k_29, constant
par k_29=234.0

# Parameter:   id =  RP_percent, name = RP_percent, defined by a Rule

# Parameter:   id =  AktPP_percent, name = AktPP_percent, defined by a Rule

# Parameter:   id =  MEKPP_percent, name = MEKPP_percent, defined by a Rule

# Parameter:   id =  ERKPP_percent, name = ERKPP_percent, defined by a Rule

# Parameter:   id =  Rafstar_percent, name = Rafstar_percent, defined by a Rule

# Parameter:   id =  ShP_percent, name = ShP_percent, defined by a Rule

# Parameter:   id =  PI3Kstar_percent, name = PI3Kstar_percent, defined by a Rule

# assignmentRule: variable = RP_percent
RP_percen=(RP+RPI3K+RPI3Kstar+RShGS+RShP+RShc)*200/80
aux RP_percen=RP_percen

# assignmentRule: variable = ERKPP_percent
ERKPP_per=ERKPP*100/1000
aux ERKPP_per=ERKPP_per

# assignmentRule: variable = AktPP_percent
AktPP_per=AktPIPP*100/10
aux AktPP_per=AktPP_per

# assignmentRule: variable = MEKPP_percent
MEKPP_per=MEKPP*100/120
aux MEKPP_per=MEKPP_per

# assignmentRule: variable = ShP_percent
ShP_perce=ShP*100/1000
aux ShP_perce=ShP_perce

# assignmentRule: variable = PI3Kstar_percent
PI3Kstar_=PI3Kstar*100/10
aux PI3Kstar_=PI3Kstar_

# assignmentRule: variable = Rafstar_percent
Rafstar_p=Rafstar*100/100
aux Rafstar_p=Rafstar_p

# Reaction: id = reaction_0000001

reaction_=compartme*(k1*R*HRG-k_1*RHRG)

# Reaction: id = reaction_0000002

reactio_1=compartme*(k2*RHRG^2-k_2*RHRG2)

# Reaction: id = reaction_0000003

reactio_2=compartme*(k3*RHRG2-k_3*RP)

# Reaction: id = reaction_0000004

reactio_3=compartme*V4*RP/(K4+RP)

# Reaction: id = reaction_0000005

reactio_4=compartme*(k5*RP*Shc-k_5*RShc)

# Reaction: id = reaction_0000006

reactio_5=compartme*(k6*RShc-k_6*RShP)

# Reaction: id = reaction_0000007

reactio_6=compartme*(k7*RShP*GS-k_7*RShGS)

# Reaction: id = reaction_0000008

reactio_7=compartme*(k8*RShGS-k_8*ShGS*RP)

# Reaction: id = reaction_0000009

reactio_8=compartme*(k9*ShGS-k_9*GS*ShP)

# Reaction: id = reaction_0000010

reactio_9=compartme*V10*ShP/(K10+ShP)

# Reaction: id = reaction_0000011

reacti_10=compartme*k11*ShGS*RasGDP/(K11_1+RasGDP)

# Reaction: id = reaction_0000012

reacti_11=compartme*V12*RasGTP/(K12+RasGTP)

# Reaction: id = reaction_0000013

reacti_12=compartme*k13*RasGTP*Raf/(K13_1+Raf)

# Reaction: id = reaction_0000014

reacti_13=compartme*k14*(AktPIPP+E)*Rafstar/(K14_1+Rafstar)

# Reaction: id = reaction_0000015

reacti_14=compartme*k15*Rafstar*MEK/(K15_1*(1+MEKP/K17_1)+MEK)

# Reaction: id = reaction_0000016

reacti_15=compartme*k16*PP2A*MEKP/(K16_1*(1+MEKPP/K18_1+AktPIP/K31_1+AktPIPP/K33_1)+MEKP)

# Reaction: id = reaction_0000017

reacti_16=compartme*k17*Rafstar*MEKP/(K17_1*(1+MEK/K15_1)+MEKP)

# Reaction: id = reaction_0000018

reacti_17=compartme*k18*PP2A*MEKPP/(K18_1*(1+MEKP/K16_1+AktPIPP/K31_1+AktPIPP/K33_1)+MEKPP)

# Reaction: id = reaction_0000019

reacti_18=compartme*k19*MEKPP*ERK/(K19_1*(1+ERKP/K21_1)+ERK)

# Reaction: id = reaction_0000020

reacti_19=compartme*k20*MKP3*ERKP/(K20_1*(1+ERKPP/K22_1)+ERKP)

# Reaction: id = reaction_0000021

reacti_20=compartme*k21*MEKPP*ERKP/(K21_1*(1+ERK/K19_1)+ERKP)

# Reaction: id = reaction_0000022

reacti_21=compartme*k22*MKP3*ERKPP/(K22_1*(1+ERKP/K20_1)+ERKPP)

# Reaction: id = reaction_0000023

reacti_22=compartme*(k23*RP*PI3K-k_23*RPI3K)

# Reaction: id = reaction_0000024

reacti_23=compartme*(k24*RPI3K-k_24*RPI3Kstar)

# Reaction: id = reaction_0000025

reacti_24=compartme*(k25*RPI3Kstar-k_25*RP*PI3Kstar)

# Reaction: id = reaction_0000026

reacti_25=compartme*V26*PI3Kstar/(K26+PI3Kstar)

# Reaction: id = reaction_0000029

reacti_26=compartme*(k29*PIP3*Akt-k_29*AktPIP3)

# Reaction: id = reaction_0000028

reacti_27=compartme*V28*PIP3/(K28+PIP3)

# Reaction: id = reaction_0000027

reacti_28=compartme*k27*PI3Kstar*P_I/(K27_1+P_I)

# Reaction: id = reaction_0000030

reacti_29=compartme*V30*AktPIP3/(K30*(1+AktPIP/K32)+AktPIP3)

# Reaction: id = reaction_0000031

reacti_30=compartme*k31*PP2A*AktPIP/(K31_1*(1+MEKP/K16_1+MEKPP/K18_1+AktPIPP/K33_1)+AktPIP)

# Reaction: id = reaction_0000032

reacti_31=compartme*V32*AktPIP/(K32*(1+AktPIP3/K30)+AktPIP)

# Reaction: id = reaction_0000033

reacti_32=compartme*k33*PP2A*AktPIPP/(K33_1*(1+MEKP/K16_1+MEKPP/K18_1+AktPIP/K31_1)+AktPIPP)

# Reaction: id = reaction_0000034

reacti_33=compartme*(k34*RP-k_34*internali)

# Species:   id = Akt, name = Akt, affected by kineticLaw

init Akt=10.0
dAkt/dt=(1/(compartme))*((-1.0 * reacti_26))

# Species:   id = AktPIP3, name = AktPIP3, affected by kineticLaw

init AktPIP3=0.0
dAktPIP3/dt=(1/(compartme))*(( 1.0 * reacti_26) + (-1.0 * reacti_29) + ( 1.0 * reacti_30))

# Species:   id = AktPIP, name = AktPIP, affected by kineticLaw

init AktPIP=0.0
dAktPIP/dt=(1/(compartme))*(( 1.0 * reacti_29) + (-1.0 * reacti_30) + (-1.0 * reacti_31) + ( 1.0 * reacti_32))

# Species:   id = AktPIPP, name = AktPIPP, affected by kineticLaw

init AktPIPP=0.0
dAktPIPP/dt=(1/(compartme))*(( 1.0 * reacti_31) + (-1.0 * reacti_32))

# Species:   id = ERK, name = ERK, affected by kineticLaw

init ERK=1000.0
dERK/dt=(1/(compartme))*((-1.0 * reacti_18) + ( 1.0 * reacti_19))

# Species:   id = ERKP, name = ERKP, affected by kineticLaw

init ERKP=0.0
dERKP/dt=(1/(compartme))*(( 1.0 * reacti_18) + (-1.0 * reacti_19) + (-1.0 * reacti_20) + ( 1.0 * reacti_21))

# Species:   id = ERKPP, name = ERKPP, affected by kineticLaw

init ERKPP=0.0
dERKPP/dt=(1/(compartme))*(( 1.0 * reacti_20) + (-1.0 * reacti_21))

# Species:   id = GS, name = GS, affected by kineticLaw

init GS=10.0
dGS/dt=(1/(compartme))*((-1.0 * reactio_6) + ( 1.0 * reactio_8))

# Species:   id = HRG, name = HRG, affected by kineticLaw

init HRG=330.0
dHRG/dt=(1/(compartme))*((-1.0 * reaction_))

# Species:   id = MEK, name = MEK, affected by kineticLaw

init MEK=120.0
dMEK/dt=(1/(compartme))*((-1.0 * reacti_14) + ( 1.0 * reacti_15))

# Species:   id = MEKP, name = MEKP, affected by kineticLaw

init MEKP=0.0
dMEKP/dt=(1/(compartme))*(( 1.0 * reacti_14) + (-1.0 * reacti_15) + (-1.0 * reacti_16) + ( 1.0 * reacti_17))

# Species:   id = MEKPP, name = MEKPP, affected by kineticLaw

init MEKPP=0.0
dMEKPP/dt=(1/(compartme))*(( 1.0 * reacti_16) + (-1.0 * reacti_17))

# Species:   id = PI3K, name = PI3K, affected by kineticLaw

init PI3K=10.0
dPI3K/dt=(1/(compartme))*((-1.0 * reacti_22) + ( 1.0 * reacti_25))

# Species:   id = PI3Kstar, name = PI3Kstar, affected by kineticLaw

init PI3Kstar=0.0
dPI3Kstar/dt=(1/(compartme))*(( 1.0 * reacti_24) + (-1.0 * reacti_25))

# Species:   id = PIP3, name = PIP3, affected by kineticLaw

init PIP3=0.0
dPIP3/dt=(1/(compartme))*((-1.0 * reacti_26) + (-1.0 * reacti_27) + ( 1.0 * reacti_28))

# Species:   id = R, name = R, affected by kineticLaw

init R=80.0
dR/dt=(1/(compartme))*((-1.0 * reaction_))

# Species:   id = RP, name = RP, affected by kineticLaw

init RP=0.0
dRP/dt=(1/(compartme))*(( 1.0 * reactio_2) + (-1.0 * reactio_3) + (-1.0 * reactio_4) + ( 1.0 * reactio_7) + (-1.0 * reacti_22) + ( 1.0 * reacti_24) + (-1.0 * reacti_33))

# Species:   id = RHRG, name = RHRG, affected by kineticLaw

init RHRG=0.0
dRHRG/dt=(1/(compartme))*(( 1.0 * reaction_) + (-2.0 * reactio_1))

# Species:   id = RHRG2, name = RHRG2, affected by kineticLaw

init RHRG2=0.0
dRHRG2/dt=(1/(compartme))*(( 1.0 * reactio_1) + (-1.0 * reactio_2) + ( 1.0 * reactio_3))

# Species:   id = RPI3K, name = RPI3K, affected by kineticLaw

init RPI3K=0.0
dRPI3K/dt=(1/(compartme))*(( 1.0 * reacti_22) + (-1.0 * reacti_23))

# Species:   id = RPI3Kstar, name = RPI3Kstar, affected by kineticLaw

init RPI3Kstar=0.0
dRPI3Kstar/dt=(1/(compartme))*(( 1.0 * reacti_23) + (-1.0 * reacti_24))

# Species:   id = RShGS, name = RShGS, affected by kineticLaw

init RShGS=0.0
dRShGS/dt=(1/(compartme))*(( 1.0 * reactio_6) + (-1.0 * reactio_7))

# Species:   id = RShP, name = RShP, affected by kineticLaw

init RShP=0.0
dRShP/dt=(1/(compartme))*(( 1.0 * reactio_5) + (-1.0 * reactio_6))

# Species:   id = RShc, name = RShc, affected by kineticLaw

init RShc=0.0
dRShc/dt=(1/(compartme))*(( 1.0 * reactio_4) + (-1.0 * reactio_5))

# Species:   id = Raf, name = Raf, affected by kineticLaw

init Raf=100.0
dRaf/dt=(1/(compartme))*((-1.0 * reacti_12) + ( 1.0 * reacti_13))

# Species:   id = Rafstar, name = Rafstar, affected by kineticLaw

init Rafstar=0.0
dRafstar/dt=(1/(compartme))*(( 1.0 * reacti_12) + (-1.0 * reacti_13))

# Species:   id = RasGDP, name = RasGDP, affected by kineticLaw

init RasGDP=120.0
dRasGDP/dt=(1/(compartme))*((-1.0 * reacti_10) + ( 1.0 * reacti_11))

# Species:   id = RasGTP, name = RasGTP, affected by kineticLaw

init RasGTP=0.0
dRasGTP/dt=(1/(compartme))*(( 1.0 * reacti_10) + (-1.0 * reacti_11))

# Species:   id = ShGS, name = ShGS, affected by kineticLaw

init ShGS=0.0
dShGS/dt=(1/(compartme))*(( 1.0 * reactio_7) + (-1.0 * reactio_8))

# Species:   id = ShP, name = ShP, affected by kineticLaw

init ShP=0.0
dShP/dt=(1/(compartme))*(( 1.0 * reactio_8) + (-1.0 * reactio_9))

# Species:   id = Shc, name = Shc, affected by kineticLaw

init Shc=1000.0
dShc/dt=(1/(compartme))*((-1.0 * reactio_4) + ( 1.0 * reactio_9))

# Species:   id = P_I, name = P_I, affected by kineticLaw

init P_I=800.0
dP_I/dt=(1/(compartme))*(( 1.0 * reacti_27) + (-1.0 * reacti_28))

# Species:   id = internalization, name = internalization, affected by kineticLaw

par internali=0.0
aux internali=internali
dinternali/dt=(1/(compartme))*(( 1.0 * reacti_33))

# Species:   id = E, name = E, constant
par E=7.0


# Species:   id = MKP3, name = MKP3, constant
par MKP3=2.4


# Species:   id = PP2A, name = PP2A, constant
par PP2A=11.4


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

