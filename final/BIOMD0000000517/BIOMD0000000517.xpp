
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Smallbone2013 - Colon Crypt cycle - Version 3
#
# is http://identifiers.org/biomodels.db/MODEL1306190003
# is http://identifiers.org/biomodels.db/BIOMD0000000517
# isDescribedBy http://identifiers.org/pubmed/24354351
# is http://identifiers.org/biomodels.db/MODEL1306190003
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000518
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = crypt, constant
par compartme=1.0

# Parameter:   id =  d0, name = d0, constant
par d0=0.02

# Parameter:   id =  d1, name = d1, constant
par d1=0.5480597115

# Parameter:   id =  d2, name = d2, constant
par d2=1.888676618

# Parameter:   id =  T, name = cellularity, defined by a Rule

# Parameter:   id =  K, name = capacity, constant
par K=106.090440772217

# Parameter:   id =  r0, name = r0, constant
par r0=1.998624424

# Parameter:   id =  f0, name = N0 division rate, defined by a Rule

# Parameter:   id =  p00, name = p00, defined by a Rule

# Parameter:   id =  p01, name = p01, constant
par p01=0.6313780928

# Parameter:   id =  r1, name = r1, constant
par r1=10.58581849

# Parameter:   id =  f1, name = N1 division rate, defined by a Rule

# Parameter:   id =  p11, name = p11, defined by a Rule

# Parameter:   id =  p12, name = p12, constant
par p12=0.8050459589

# Parameter:   id =  p03, name = p03, defined by a Rule

# Parameter:   id =  q03, name = q03, constant
par q03=0.9351494412

# Parameter:   id =  K03, name = K03, constant
par K03=0.783656669828271

# Parameter:   id =  d3, name = d3, constant
par d3=0.1677359306

# Parameter:   id =  K0X, name = K0X, constant
par K0X=0.153646265911768

# Parameter:   id =  K1X, name = K1X, constant
par K1X=15.3645644864404

# Parameter:   id =  K2X, name = K2X, constant
par K2X=2.70405837954268

# assignmentRule: variable = T
T_renamed=N0+N1+N2+N3
aux T_renamed=T_renamed

# assignmentRule: variable = f0
f0=r0*N0*(1-T_renamed/K)
aux f0=f0

# assignmentRule: variable = p00
p00=1-p01-p03
aux p00=p00

# assignmentRule: variable = f1
f1=r1*N1*(1-T_renamed/K)
aux f1=f1

# assignmentRule: variable = p11
p11=1-p12
aux p11=p11

# assignmentRule: variable = p03
p03=q03*K03/(N3+K03)
aux p03=p03

# Reaction: id = R0X, name = N0 death

R0X=d0*N0*K0X/(N3+K0X)

# Reaction: id = R01, name = N0 differentiation to N1

R01=p01*f0

# Reaction: id = R00, name = N0 renewal

R00=p00*f0

# Reaction: id = R1X, name = N1 death

R1X=d1*N1*K1X/(N3+K1X)

# Reaction: id = R12, name = N1 differentiation

R12=p12*f1

# Reaction: id = R11, name = N1 renewal

R11=p11*f1

# Reaction: id = R2X, name = N2 death

R2X=d2*N2*K2X/(N3+K2X)

# Reaction: id = R03, name = N0 differentiation to N3

R03=p03*f0

# Reaction: id = R3X, name = N3 death

R3X=d3*N3

# Species:   id = N0, name = N0, affected by kineticLaw

init N0=1.71589842441293
dN0/dt=(1/(compartme))*((-1.0 * R0X) + (-1.0 * R01) + ( 1.0 * R01) + (-1.0 * R00) + ( 2.0 * R00) + (-1.0 * R03) + ( 1.0 * R03))

# Species:   id = N1, name = N1, affected by kineticLaw

init N1=26.8036712557471
dN1/dt=(1/(compartme))*(( 1.0 * R01) + (-1.0 * R1X) + (-1.0 * R12) + ( 1.0 * R12) + (-1.0 * R11) + ( 2.0 * R11))

# Species:   id = N2, name = N2, affected by kineticLaw

init N2=44.6167755224769
dN2/dt=(1/(compartme))*(( 1.0 * R12) + (-1.0 * R2X))

# Species:   id = N3, name = N3, affected by kineticLaw

init N3=1.53646349229917
dN3/dt=(1/(compartme))*(( 1.0 * R03) + (-1.0 * R3X))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

