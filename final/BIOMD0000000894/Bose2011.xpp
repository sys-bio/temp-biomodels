
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Bose2011 - Noise-assisted interactions of tumor and immune cells
#
# hasInstance http://identifiers.org/mamo/MAMO_0000046
# hasInstance http://identifiers.org/taxonomy/9606
# hasInstance http://identifiers.org/ncit/C48686
# isDescribedBy http://identifiers.org/ncit/C48686
# isDescribedBy http://identifiers.org/pubmed/21929038
# isDerivedFrom http://identifiers.org/doi/10.1103/PhysRevE.79.051903
# is http://identifiers.org/biomodels.db/MODEL1912160003
# is http://identifiers.org/biomodels.db/BIOMD0000000894
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_formation_of_tumor_system, name = Function for formation of tumor system
Function_(R,Dx,tau,Dz,x,z)=((1+R*(1-Dx*tau)+0.5*Dx*Dz*tau)*x+Dx*(1+R*tau)*z)


# FunctionDefinition id = Function_for_Formation_of_effector_cell_against_tumor_cell, name = Function for Formation of effector cell against tumor cell
Functio_1(y,z)=(y*z)


# FunctionDefinition id = Function_for_removal_of_tumor_detecting_cell, name = Function for removal of tumor detecting cell
Functio_2(mu,R,Dx,tau,Dz,z)=((mu-(R*(1+Dx*tau)+Dx*(1+0.5*Dz*tau)))*z)


# FunctionDefinition id = Function_for_Removal_of_effector_cell_functioning_against_tumor_cell, name = Function for Removal of effector cell functioning against tumor cell
Functio_3(p,Dy,y)=((p-Dy)*y)


# FunctionDefinition id = Function_for_removal_of_tumor_system, name = Function for removal of tumor system
Functio_4(x,y)=(x*x+x*y)


# FunctionDefinition id = Function_for_formation_of_tumor_detecting_cell, name = Function for formation of tumor detecting cell
Functio_5(R,Dx,tau,Dz,x)=((R*(1-Dx*tau)+Dx*Dz*tau)*x)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  t, name = t, constant
par t_renamed=1.0

# Parameter:   id =  tau, name = tau, constant
par tau=0.3

# Parameter:   id =  R, name = R, constant
par R=1.0

# Parameter:   id =  Dx, name = Dx, constant
par Dx=2.1

# Parameter:   id =  Dy, name = Dy, constant
par Dy=0.01

# Parameter:   id =  Dz, name = Dz, constant
par Dz=1.2

# Parameter:   id =  p, name = p, constant
par p=0.06

# Parameter:   id =  mu, name = mu, constant
par mu=20.0

# Reaction: id = Formation_of_tumor_system, name = Formation of tumor system

Formation=compartme*Function_(R, Dx, tau, Dz, x, z)

# Reaction: id = Removal_of_tumor_system, name = Removal of tumor system

Removal_o=compartme*Functio_4(x, y)

# Reaction: id = Formation_of_effector_cell_against_tumor_cell, name = Formation of effector cell against tumor cell

Formati_1=compartme*Functio_1(y, z)

# Reaction: id = Removal_of_effector_cell_functioning_against_tumor_cell, name = Removal of effector cell functioning against tumor cell

Removal_1=compartme*Functio_3(p, Dy, y)

# Reaction: id = Formation_of_tumor_detecting_cell, name = Formation of tumor detecting cell

Formati_2=compartme*Functio_5(R, Dx, tau, Dz, x)

# Reaction: id = Removal_of_tumor_detecting_cell, name = Removal of tumor detecting cell

Removal_2=compartme*Functio_2(mu, R, Dx, tau, Dz, z)

# Species:   id = x, name = x, affected by kineticLaw

init x=1.0E-6
dx/dt=(1/(compartme))*(( 1.0 * Formation) + (-1.0 * Removal_o))

# Species:   id = y, name = y, affected by kineticLaw

init y=0.01
dy/dt=(1/(compartme))*(( 1.0 * Formati_1) + (-1.0 * Removal_1))

# Species:   id = z, name = z, affected by kineticLaw

init z=0.0
dz/dt=(1/(compartme))*(( 1.0 * Formati_2) + (-1.0 * Removal_2))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

