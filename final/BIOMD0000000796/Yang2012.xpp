
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Yang2012 - cancer growth with angiogenesis
#
# isDescribedBy http://identifiers.org/pubmed/22300422
# is http://identifiers.org/biomodels.db/MODEL1908140001
# is http://identifiers.org/biomodels.db/BIOMD0000000796
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = deplete, name = deplete
deplete(rate,mod,sub)=(rate*mod*sub)


# FunctionDefinition id = ang, name = ang
ang(e,T,A,k4)=(e*T*A*(1-A/k4))


# FunctionDefinition id = logistic, name = logistic
logistic(a,pro,k)=(a*pro*(1-pro/k))


# Compartment: id = tme, name = tme, constant
par tme=1.0

# Parameter:   id =  a1, name = a1, constant
par a1=0.1

# Parameter:   id =  a2, name = a2, constant
par a2=0.1

# Parameter:   id =  a3, name = a3, constant
par a3=0.2

# Parameter:   id =  e, name = e, constant
par e=0.01

# Parameter:   id =  u1, name = u1, constant
par u1=0.01

# Parameter:   id =  u2, name = u2, constant
par u2=0.05

# Parameter:   id =  u3, name = u3, constant
par u3=0.05

# Parameter:   id =  u4, name = u4, constant
par u4=0.01

# Parameter:   id =  u5, name = u5, constant
par u5=0.01

# Parameter:   id =  k1, name = k1, constant
par k1=10.0

# Parameter:   id =  k2, name = k2, constant
par k2=20.0

# Parameter:   id =  k3, name = k3, constant
par k3=5.0

# Parameter:   id =  k4, name = k4, constant
par k4=1.0

# Parameter:   id =  d, name = d, constant
par d=0.1

# Parameter:   id =  y, name = y, constant
par y=0.01

# Parameter:   id =  b1, name = b1, constant
par b1=0.01

# Parameter:   id =  b2, name = b2, constant
par b2=0.01

# Parameter:   id =  C_plot, name = C_plot, defined by a Rule

# Parameter:   id =  E_plot, name = E_plot, defined by a Rule

# Parameter:   id =  T_plot, name = T_plot, defined by a Rule

# Parameter:   id =  P_plot, name = P_plot, defined by a Rule

# Parameter:   id =  A_plot, name = A_plot, defined by a Rule

# Parameter:   id =  c1, name = c1, constant
par c1=10.0

# Parameter:   id =  c2, name = c2, constant
par c2=10.0

# Parameter:   id =  c3, name = c3, constant
par c3=1.0

# Parameter:   id =  c4, name = c4, constant
par c4=0.25

# Parameter:   id =  c5, name = c5, constant
par c5=1.0

# assignmentRule: variable = P_plot
P_plot=P/c4
aux P_plot=P_plot

# assignmentRule: variable = E_plot
E_plot=E_1/c2
aux E_plot=E_plot

# assignmentRule: variable = A_plot
A_plot=A
aux A_plot=A_plot

# assignmentRule: variable = C_plot
C_plot=C/c1
aux C_plot=C_plot

# assignmentRule: variable = T_plot
T_plot=T_renamed
aux T_plot=T_plot

# Reaction: id = normal_cell_growth, name = normal cell growth

normal_ce=tme*logistic(a1, C, k1)

# Reaction: id = normal_cell_death, name = normal cell death

normal__1=tme*u1*C

# Reaction: id = normal_cell_depletion, name = normal cell depletion

normal__2=tme*deplete(b1, T_renamed, C)

# Reaction: id = endothelial_growth, name = endothelial growth

endotheli=tme*logistic(a2, E_1, k2)

# Reaction: id = endothelial_death, name = endothelial death

endothe_1=tme*u2*E_1

# Reaction: id = pre_angiogenesis, name = pre-angiogenesis

pre_angio=tme*deplete(y, T_renamed, E_1)

# Reaction: id = tumor_growth, name = tumor growth

tumor_gro=tme*ang(a3, A, T_renamed, k3)

# Reaction: id = tumor_death, name = tumor death

tumor_dea=tme*u3*T_renamed

# Reaction: id = tumor_depletion, name = tumor depletion

tumor_dep=tme*deplete(b2, C, T_renamed)

# Reaction: id = pa_death, name = pa death

pa_death=tme*u4*P

# Reaction: id = pa_conversion, name = pa conversion

pa_conver=tme*d*P

# Reaction: id = angiogenesis, name = angiogenesis

angiogene=tme*ang(e, T_renamed, A, k4)

# Reaction: id = angiogenesis_cell_death, name = angiogenesis cell death

angioge_1=tme*u5*A

# Species:   id = C, name = C, affected by kineticLaw

init C=9.0
dC/dt=(1/(tme))*(( 1.0 * normal_ce) + (-1.0 * normal__1) + (-1.0 * normal__2))

# Species:   id = E, name = E, affected by kineticLaw

par E_1=10.0
aux E_1=E_1
dE_1/dt=(1/(tme))*(( 1.0 * endotheli) + (-1.0 * endothe_1) + (-1.0 * pre_angio))

# Species:   id = T, name = T, affected by kineticLaw

par T_renamed=1.023
aux T_renamed=T_renamed
dT_renamed/dt=(1/(tme))*(( 1.0 * tumor_gro) + (-1.0 * tumor_dea) + (-1.0 * tumor_dep))

# Species:   id = P, name = P, affected by kineticLaw

init P=0.0
dP/dt=(1/(tme))*(( 1.0 * pre_angio) + (-1.0 * pa_death) + (-1.0 * pa_conver))

# Species:   id = A, name = A, affected by kineticLaw

init A=0.0
dA/dt=(1/(tme))*(( 1.0 * pa_conver) + ( 1.0 * angiogene) + (-1.0 * angioge_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

