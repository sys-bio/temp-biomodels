
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Gardner2000 - genetic toggle switch in E.coli
#
# is http://identifiers.org/biomodels.db/MODEL1401190000
# is http://identifiers.org/biomodels.db/BIOMD0000000507
# isDescribedBy http://identifiers.org/pubmed/10659857
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_1, name = toggle repressor production
function_(alpha,X,n)=(alpha/(1+X^n))


# FunctionDefinition id = function_2, name = toggle repressor production with induction
functio_1(alpha,X,n)=(alpha/(1+X^n))


# Compartment: id = compartment_1, name = compartment, constant
par compartme=1.0

# Parameter:   id =  parameter_1, name = alpha1, constant
par parameter=156.25

# Parameter:   id =  parameter_2, name = alpha2, constant
par paramet_1=15.6

# Parameter:   id =  parameter_3, name = beta, constant
par paramet_2=2.5

# Parameter:   id =  parameter_4, name = gamma, constant
par paramet_3=1.0

# Parameter:   id =  parameter_5, name = K, constant
par paramet_4=2.9618E-5

# Parameter:   id =  parameter_6, name = nu, constant
par paramet_5=2.0015

# Parameter:   id =  parameter_7, name = Umodif, defined by a Rule

# Parameter:   id =  ModelValue_4, name = Initial for K, constant
par ModelValu=2.9618E-5

# Parameter:   id =  ModelValue_5, name = Initial for nu, constant
par ModelVa_1=2.0015

# assignmentRule: variable = parameter_7
paramet_6=species_1/(1+species_3/ModelValu)^ModelVa_1
aux paramet_6=paramet_6

# Reaction: id = reaction_1, name = production of U

reaction_=compartme*function_(parameter, species_2, paramet_2)

# Reaction: id = reaction_2, name = degradation of U
# Local Parameter:   id =  k1, name = k1
par k1=1.0


reactio_1=compartme*k1*species_1

# Reaction: id = reaction_3, name = production of V

reactio_2=compartme*functio_1(paramet_1, paramet_6, paramet_3)

# Reaction: id = reaction_4, name = degration of V
# Local Parameter:   id =  k1, name = k1
par k1_1=1.0


reactio_3=compartme*k1_1*species_2

# Species:   id = species_1, name = U, affected by kineticLaw

init species_1=0.0
dspecies_1/dt=(1/(compartme))*(( 1.0 * reaction_) + (-1.0 * reactio_1))

# Species:   id = species_2, name = V, affected by kineticLaw

init species_2=0.0
dspecies_2/dt=(1/(compartme))*(( 1.0 * reactio_2) + (-1.0 * reactio_3))

# Species:   id = species_3, name = IPTG
# Warning species is not changed by either rules or reactions

par species_3=0.0
aux species_3=species_3

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

