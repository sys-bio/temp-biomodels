
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ratushny2012_SPF_I
#
# is http://identifiers.org/biomodels.db/MODEL1203010004
# is http://identifiers.org/biomodels.db/BIOMD0000000419
# isDescribedBy http://identifiers.org/pubmed/22531117
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = univ, name = univ, constant
par univ=1.0

# Parameter:   id =  Kd, name = Kd, constant
par Kd=1.0E-5

# Parameter:   id =  Ksp, name = Ksp, constant
par Ksp=0.001

# Parameter:   id =  dsp1ksp, name = dsp1ksp, defined by a Rule

# Parameter:   id =  dsp1p2kd, name = dsp1p2kd, defined by a Rule

# Parameter:   id =  h, name = h, constant
par h=2.0

# Parameter:   id =  k0, name = k0, constant
par k0=0.1

# Parameter:   id =  ka, name = ka, constant
par ka=40.0

# Parameter:   id =  ks, name = ks, constant
par ks=10.0

# Parameter:   id =  ku, name = ku, constant
par ku=0.1

# Parameter:   id =  s, name = s, constant
par s=1000.0

# assignmentRule: variable = dsp1ksp
dsp1ksp=Ksp/2*(1+(s+P1*univ)/Ksp-((1+(s+P1*univ)/Ksp)^2-4*s*P1*univ/Ksp^2)^0.5)
aux dsp1ksp=dsp1ksp

# assignmentRule: variable = dsp1p2kd
dsp1p2kd=Kd/2*(1+(dsp1ksp+P2*univ)/Kd-((1+(dsp1ksp+P2*univ)/Kd)^2-4*dsp1ksp*P2*univ/Kd^2)^0.5)
aux dsp1p2kd=dsp1p2kd

# Reaction: id = ___r1

___r1=ks*(k0+(dsp1p2kd/ka)^h)/(1+(dsp1p2kd/ka)^h)

# Reaction: id = ___r2
# Local Parameter:   id =  __RATE__, name = __RATE__
par __RATE__=0.1


___r2=__RATE__*P1

# Reaction: id = ___r3

___r3=ks*(k0+(dsp1p2kd/ka)^h)/(1+(dsp1p2kd/ka)^h)

# Reaction: id = ___r4
# Local Parameter:   id =  __RATE__, name = __RATE__
par __RATE__1=0.1


___r4=__RATE__1*P2

# Reaction: id = ___r5

___r5=ks*(k0+(dsp1p2kd/ka)^h)/(1+(dsp1p2kd/ka)^h)

# Reaction: id = ___r6
# Local Parameter:   id =  __RATE__, name = __RATE__
par __RATE__2=0.1


___r6=__RATE__2*Target

# Species:   id = P1, name = P1, affected by kineticLaw

init P1=10.0
dP1/dt=(1/(univ))*(( 1.0 * ___r1) + (-1.0 * ___r2))

# Species:   id = P2, name = P2, affected by kineticLaw

init P2=10.0
dP2/dt=(1/(univ))*(( 1.0 * ___r3) + (-1.0 * ___r4))

# Species:   id = Target, name = Target, affected by kineticLaw

init Target=10.0
dTarget/dt=(1/(univ))*(( 1.0 * ___r5) + (-1.0 * ___r6))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

