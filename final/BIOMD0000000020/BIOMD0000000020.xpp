
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = hodgkin-huxley squid-axon 1952
#
# is http://identifiers.org/biomodels.db/MODEL6617668482
# is http://identifiers.org/biomodels.db/BIOMD0000000020
# isDescribedBy http://identifiers.org/pubmed/12991237
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = unit_compartment, name = unit_compartment, constant
par unit_comp=1.0

# Parameter:   id =  V, name = V, defined by a Rule

# Parameter:   id =  V_neg, name = V_neg, defined by a Rule

# Parameter:   id =  E, name = E, defined by a Rule

# Parameter:   id =  I, name = I, constant
par I=0.0

# Parameter:   id =  i_Na, name = i_Na, defined by a Rule

# Parameter:   id =  i_K, name = i_K, defined by a Rule

# Parameter:   id =  i_L, name = i_L, defined by a Rule

# Parameter:   id =  m, name = m, defined by a Rule

# Parameter:   id =  h, name = h, defined by a Rule

# Parameter:   id =  n, name = n, defined by a Rule

# Parameter:   id =  E_R, name = E_R, constant
par E_R=-75.0

# Parameter:   id =  Cm, name = Cm, constant
par Cm=1.0

# Parameter:   id =  g_Na, name = g_Na, constant
par g_Na=120.0

# Parameter:   id =  g_K, name = g_K, constant
par g_K=36.0

# Parameter:   id =  g_L, name = g_L, constant
par g_L=0.3

# Parameter:   id =  E_Na, name = E_Na, constant
par E_Na=-190.0

# Parameter:   id =  E_K, name = E_K, constant
par E_K=-63.0

# Parameter:   id =  E_L, name = E_L, constant
par E_L=-85.613

# Parameter:   id =  V_Na, name = V_Na, defined by a Rule

# Parameter:   id =  V_K, name = V_K, defined by a Rule

# Parameter:   id =  V_L, name = V_L, defined by a Rule

# Parameter:   id =  alpha_m, name = alpha_m, defined by a Rule

# Parameter:   id =  beta_m, name = beta_m, defined by a Rule

# Parameter:   id =  alpha_h, name = auxiliary alpha_h, defined by a Rule

# Parameter:   id =  beta_h, name = beta_h, defined by a Rule

# Parameter:   id =  alpha_n, name = alpha_n, defined by a Rule

# Parameter:   id =  beta_n, name = beta_n, defined by a Rule

# assignmentRule: variable = V_neg
V_neg=-V
aux V_neg=V_neg

# assignmentRule: variable = E
E=V+E_R
aux E=E

# assignmentRule: variable = V_L
V_L=E_L-E_R
aux V_L=V_L

# assignmentRule: variable = beta_n
beta_n=0.125*exp(V/80)
aux beta_n=beta_n

# assignmentRule: variable = alpha_h
alpha_h=0.07*exp(V/20)
aux alpha_h=alpha_h

# assignmentRule: variable = V_Na
V_Na=E_Na-E_R
aux V_Na=V_Na

# assignmentRule: variable = V_K
V_K=E_K-E_R
aux V_K=V_K

# assignmentRule: variable = i_K
i_K=g_K*n^4*(V-V_K)
aux i_K=i_K

# assignmentRule: variable = i_Na
i_Na=g_Na*m^3*h*(V-V_Na)
aux i_Na=i_Na

# assignmentRule: variable = i_L
i_L=g_L*(V-V_L)
aux i_L=i_L

# assignmentRule: variable = beta_m
beta_m=4*exp(V/18)
aux beta_m=beta_m

# assignmentRule: variable = alpha_n
alpha_n=0.01*(V+10)/(exp((V+10)/10)-1)
aux alpha_n=alpha_n

# assignmentRule: variable = alpha_m
alpha_m=0.1*(V+25)/(exp((V+25)/10)-1)
aux alpha_m=alpha_m

# assignmentRule: variable = beta_h
beta_h=1/(exp((V+30)/10)+1)
aux beta_h=beta_h

# rateRule: variable = V
init V=0.0
dV/dt=(I-(i_Na+i_K+i_L))/Cm

# rateRule: variable = m
init m=0.052932
dm/dt=alpha_m*(1-m)-beta_m*m

# rateRule: variable = h
init h=0.59612
dh/dt=alpha_h*(1-h)-beta_h*h

# rateRule: variable = n
init n=0.31768
dn/dt=alpha_n*(1-n)-beta_n*n

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

