
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Okuonghae2020 - SEAIR model of COVID-19 transmission in Lagos, Nigeria
#
# isDescribedBy http://identifiers.org/pubmed/32834593
# is http://identifiers.org/biomodels.db/MODEL2102180001
# is http://identifiers.org/biomodels.db/BIOMD0000000991
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_exposed_to_asymptopmatic, name = Rate Law for exposed_to_asymptopmatic
Rate_Law_(k1,k2,substrate)=(k1*k2*substrate)


# FunctionDefinition id = Rate_Law_for_exposed_to_symptomatic, name = Rate Law for exposed_to_symptomatic
Rate_La_1(k1,k2,substrate)=(k1*(1-k2)*substrate)


# Compartment: id = Lagos, name = Lagos, constant
par Lagos=1.0

# Parameter:   id =  transmission_rate_effective, name = transmission_rate_effective, constant
par transmiss=0.4236

# Parameter:   id =  gamma_a, name = gamma_a, constant
par gamma_a=0.13978

# Parameter:   id =  gamma_0, name = gamma_0, constant
par gamma_0=0.13978

# Parameter:   id =  gamma_i, name = gamma_i, constant
par gamma_i=0.0666666666666667

# Parameter:   id =  psi, name = psi, constant
par psi=0.0135

# Parameter:   id =  theta, name = theta, constant
par theta=1.8999E-12

# Parameter:   id =  d_0, name = d_0, constant
par d_0=0.015

# Parameter:   id =  d_D, name = d_D, constant
par d_D=0.015

# Parameter:   id =  sigma, name = sigma, constant
par sigma=0.192307692307692

# Parameter:   id =  nu, name = nu, constant
par nu=0.5

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.5

# Parameter:   id =  eps, name = eps, constant
par eps=0.0

# Parameter:   id =  delta, name = delta, constant
par delta=0.0

# Parameter:   id =  lam, name = lam, defined by a Rule

# Parameter:   id =  exposed_start, name = exposed_start, constant
par exposed_s=441.0

# Parameter:   id =  asymptomatic_start, name = asymptomatic_start, constant
par asymptoma=188.0

# Parameter:   id =  symptomatic_start, name = symptomatic_start, constant
par symptomat=212.0

# assignmentRule: variable = total_pop
total_pop=asympto_1+detected+exposed+recovered+susceptib+symptom_1
aux total_pop=total_pop

# assignmentRule: variable = lam
lam=transmiss*(1-eps)*(1-delta)*(alpha*asympto_1+symptom_1)/(total_pop-detected)
aux lam=lam

# Reaction: id = susceptible_to_exposed, name = susceptible_to_exposed

suscept_1=Lagos*lam*susceptib

# Reaction: id = exposed_to_symptomatic, name = exposed_to_symptomatic

exposed_t=Lagos*Rate_La_1(sigma, nu, exposed)

# Reaction: id = exposed_to_asymptopmatic, name = exposed_to_asymptopmatic

exposed_1=Lagos*Rate_Law_(sigma, nu, exposed)

# Reaction: id = symptomatic_to_detected, name = symptomatic_to_detected

symptom_2=Lagos*psi*symptom_1

# Reaction: id = asymptomatic_to_detected, name = asymptomatic_to_detected

asympto_2=Lagos*theta*asympto_1

# Reaction: id = symptomatic_to_recovered, name = symptomatic_to_recovered

symptom_3=Lagos*gamma_0*symptom_1

# Reaction: id = asymptomatic_to_recovered, name = asymptomatic_to_recovered

asympto_3=Lagos*gamma_a*asympto_1

# Reaction: id = detected_to_recovered, name = detected_to_recovered

detecte_1=Lagos*gamma_i*detected

# Reaction: id = symptomatic_to_deceased, name = symptomatic_to_deceased

symptom_4=Lagos*d_0*symptom_1

# Reaction: id = detected_to_deceased, name = detected_to_deceased

detecte_2=Lagos*d_D*detected

# Species:   id = susceptible, name = susceptible, affected by kineticLaw

par susceptib=1.4367982E7
aux susceptib=susceptib
dsusceptib/dt=(1/(Lagos))*((-1.0 * suscept_1))

# Species:   id = exposed, name = exposed, affected by kineticLaw

init exposed=441.0
dexposed/dt=(1/(Lagos))*(( 1.0 * suscept_1) + (-1.0 * exposed_t) + (-1.0 * exposed_1))

# Species:   id = asymptomatic, name = asymptomatic, affected by kineticLaw

par asympto_1=188.0
aux asympto_1=asympto_1
dasympto_1/dt=(1/(Lagos))*(( 1.0 * exposed_1) + (-1.0 * asympto_2) + (-1.0 * asympto_3))

# Species:   id = symptomatic, name = symptomatic, affected by kineticLaw

par symptom_1=212.0
aux symptom_1=symptom_1
dsymptom_1/dt=(1/(Lagos))*(( 1.0 * exposed_t) + (-1.0 * symptom_2) + (-1.0 * symptom_3) + (-1.0 * symptom_4))

# Species:   id = detected, name = detected, affected by kineticLaw

init detected=1.0
ddetected/dt=(1/(Lagos))*(( 1.0 * symptom_2) + ( 1.0 * asympto_2) + (-1.0 * detecte_1) + (-1.0 * detecte_2))

# Species:   id = recovered, name = recovered, affected by kineticLaw

init recovered=0.0
drecovered/dt=(1/(Lagos))*(( 1.0 * symptom_3) + ( 1.0 * asympto_3) + ( 1.0 * detecte_1))

# Species:   id = deceased, name = deceased, affected by kineticLaw

init deceased=0.0
ddeceased/dt=(1/(Lagos))*(( 1.0 * symptom_4) + ( 1.0 * detecte_2))

# Species:   id = total_pop, name = total_pop, involved in a rule 

# Species:   id = detected_cumulative, name = detected_cumulative, affected by kineticLaw

par detected_=1.0
aux detected_=detected_
ddetected_/dt=(1/(Lagos))*(( 1.0 * symptom_2) + ( 1.0 * asympto_2))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

