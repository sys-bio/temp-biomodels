
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ciliberto2003 - CyclinE / Cdk2 timer in the cell cycle of Xenopus laevis embryo
#
# is http://identifiers.org/biomodels.db/MODEL0913242281
# is http://identifiers.org/biomodels.db/BIOMD0000000697
# isDescribedBy http://identifiers.org/pubmed/12914904
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_removed_from_oscillatory_system_1, name = function removed from oscillatory system_1
function_(Cdk2_CycE,kon,phi)=(kon*phi*Cdk2_CycE)


# FunctionDefinition id = function_removed_from_oscillatory_system_2, name = function removed from oscillatory system_2
functio_1(PCdk2_CycE,kon,phi)=(kon*phi*PCdk2_CycE)


# FunctionDefinition id = Function_for_degradation_of_Xic_Cyc_Cdk_1, name = Function for degradation of Xic_Cyc_Cdk_1
Functio_2(Deg_a,Xic_PCdk2_CycErem,kedeg)=(kedeg*Xic_PCdk2_CycErem*Deg_a)


# FunctionDefinition id = Function_for_degradation_of_Xic_Cyc_Cdk_2, name = Function for degradation of Xic_Cyc_Cdk_2
Functio_3(Deg_a,Xic_Cdk2_CycErem,kedeg)=(kedeg*Xic_Cdk2_CycErem*Deg_a)


# FunctionDefinition id = function_Hill_Cdk2_CycE_removal_1, name = function Hill_Cdk2_CycE_removal_1
functio_4(Heav,kdact)=(kdact*Heav)


# FunctionDefinition id = Function_phosphorylation_with_Wee1_1, name = Function phosphorylation with Wee1_1
Functio_5(Wee1_a,Xic_Cdk2_CycE,kwee)=(kwee*Wee1_a*Xic_Cdk2_CycE)


# FunctionDefinition id = Function_phosphorylation_with_Wee1_2, name = Function phosphorylation with Wee1_2
Functio_6(Cdk2_CycE,Wee1_a,kwee)=(kwee*Wee1_a*Cdk2_CycE)


# FunctionDefinition id = Function_for_Kin_a_1, name = Function for Kin_a_1
Functio_7(Cdk2_CycE,Jiact,Jiinact,Kin_a,kiact,kiinact)=(kiact*(1-Kin_a)/(Jiact+1-Kin_a)-kiinact*Cdk2_CycE*Kin_a/(Jiinact+Kin_a))


# FunctionDefinition id = Function_for_degradation_of_Xic_Cyc_Cdk_3, name = Function for degradation of Xic_Cyc_Cdk_3
Functio_8(Cdk2_CycErem,Deg_a,kedeg)=(kedeg*Cdk2_CycErem*Deg_a)


# FunctionDefinition id = Function_for_degradation_of_Xic_Cyc_Cdk_4, name = Function for degradation of Xic_Cyc_Cdk_4
Functio_9(Deg_a,PCdk2_CycErem,kedeg)=(kedeg*PCdk2_CycErem*Deg_a)


# FunctionDefinition id = function_removed_from_oscillatory_system_3, name = function removed from oscillatory system_3
functi_10(Xic_PCdk2_CycE,kon,phi)=(kon*phi*Xic_PCdk2_CycE)


# FunctionDefinition id = function_removed_from_oscillatory_system_4, name = function removed from oscillatory system_4
functi_11(Xic_Cdk2_CycE,kon,phi)=(kon*phi*Xic_Cdk2_CycE)


# FunctionDefinition id = Function_for_Wee1_a_1, name = Function for Wee1_a_1
Functi_12(Jwact,Jwinact,Kin_a,Wee1_a,Wee1_total,kwact,kwinact)=(kwact*(Wee1_total-Wee1_a)/(Jwact+Wee1_total-Wee1_a)-kwinact*Kin_a*Wee1_a/(Jwinact+Wee1_a))


# Compartment: id = compartment, name = embryo, constant
par compartme=1.0

# Parameter:   id =  Jwact, name = Jwact, constant
par Jwact=0.01

# Parameter:   id =  Jwinact, name = Jwinact, constant
par Jwinact=0.01

# Parameter:   id =  kwact, name = kwact, constant
par kwact=0.75

# Parameter:   id =  kwinact, name = kwinact, constant
par kwinact=1.5

# Parameter:   id =  Jiact, name = Jiact, constant
par Jiact=0.01

# Parameter:   id =  Jiinact, name = Jiinact, constant
par Jiinact=0.01

# Parameter:   id =  kiact, name = kiact, constant
par kiact=0.15

# Parameter:   id =  kiinact, name = kiinact, constant
par kiinact=0.6

# Parameter:   id =  Heav, name = Heav, defined by a Rule

# Parameter:   id =  kdact, name = kdact, constant
par kdact=0.023

# Parameter:   id =  theta, name = theta, constant
par theta=0.3

# Parameter:   id =  kwee, name = kwee, constant
par kwee=1.5

# Parameter:   id =  k25A, name = k25A, constant
par k25A=0.1

# Parameter:   id =  kon, name = kon, constant
par kon=0.02

# Parameter:   id =  koff, name = koff, constant
par koff=1.0E-4

# Parameter:   id =  kassoc, name = kassoc, constant
par kassoc=0.1

# Parameter:   id =  kdissoc, name = kdissoc, constant
par kdissoc=0.001

# Parameter:   id =  kedeg, name = kedeg, constant
par kedeg=0.017

# Parameter:   id =  kxdeg, name = kxdeg, constant
par kxdeg=0.01

# Parameter:   id =  phi, name = phi, defined by a Rule

# Parameter:   id =  epsilon, name = epsilon, constant
par epsilon=0.001

# Parameter:   id =  pool, name = pool, defined by a Rule

# Parameter:   id =  n, name = n, constant
par n=4.0

# Parameter:   id =  L, name = L, constant
par L=0.4

# Parameter:   id =  x, name = x, defined by a Rule

# assignmentRule: variable = Cyc_total
Cyc_total=Xic_PCdk2+Xic_Cdk2_+Xic_PCd_1+Xic_Cdk_1+PCdk2_C_1+Cdk2_Cy_1+Cdk2_CycE+PCdk2_Cyc
aux Cyc_total=Cyc_total

# assignmentRule: variable = Xic_total
Xic_total=(Xic+Xic_PCdk2+Xic_Cdk2_+Xic_PCd_1+Xic_Cdk_1+Xicrem)/3
aux Xic_total=Xic_total

# assignmentRule: variable = pool
pool=Cdk2_Cy_1+PCdk2_C_1+Xic_Cdk_1+Xic_PCd_1
aux pool=pool

# assignmentRule: variable = phi
phi=(epsilon+pool^n)/(L^n+pool^n)
aux phi=phi

# assignmentRule: variable = x
x=Cdk2_Cy_1-theta
aux x=x

# assignmentRule: variable = Heav
Heav= piecew1 
aux Heav=Heav

# Reaction: id = Xic_Cdk2_CycE_association, name = Xic_Cdk2_CycE_association

Xic_Cdk_2=compartme*kassoc*Xic*Cdk2_CycE

# Reaction: id = Xic_Cdk2_CycErem_association, name = Xic_Cdk2_CycErem_association

Xic_Cdk_3=compartme*kassoc*Xic*Cdk2_Cy_1

# Reaction: id = Xic_Cdk2_CycE_dissociation, name = Xic_Cdk2_CycE_dissociation

Xic_Cdk_4=compartme*kdissoc*Xic_Cdk2_

# Reaction: id = Xic_Cdk2_CycErem_dissociation, name = Xic_Cdk2_CycErem_dissociation

Xic_Cdk_5=compartme*kdissoc*Xic_Cdk_1

# Reaction: id = Cdk2_CycErem_to_not_rem, name = Cdk2_CycErem_to_not_rem

Cdk2_Cy_2=compartme*koff*Cdk2_Cy_1

# Reaction: id = PCdk2_CycE_to_not_rem, name = PCdk2_CycE_to_not_rem

PCdk2_C_2=compartme*koff*PCdk2_C_1

# Reaction: id = Cdk2_CycE_to_rem, name = Cdk2_CycE_to_rem

Cdk2_Cy_3=compartme*function_(Cdk2_CycE, kon, phi)

# Reaction: id = PCdk2_CycE_to_rem, name = PCdk2_CycE_to_rem

PCdk2_C_3=compartme*functio_1(PCdk2_Cyc, kon, phi)

# Reaction: id = X_degadation, name = X_degadation

X_degadat=compartme*kxdeg*Xic_Cdk_1

# Reaction: id = X_degradation_phosphorylated_complex, name = X_degradation_phosphorylated_complex

X_degrada=compartme*kxdeg*Xic_PCd_1

# Reaction: id = Degradation_XicPCdk2_CycErem, name = Degradation_XicPCdk2_CycErem

Degradati=compartme*Functio_2(Deg_a, Xic_PCd_1, kedeg)

# Reaction: id = Degradation_XicCdk2_CycErem, name = Degradation_XicCdk2_CycErem

Degrada_1=compartme*Functio_3(Deg_a, Xic_Cdk_1, kedeg)

# Reaction: id = Dephos_Xic_PCdk2_CycE, name = Dephos_Xic_PCdk2_CycE

Dephos_Xi=compartme*k25A*Xic_PCdk2

# Reaction: id = Dephos_PCdk2_CycE, name = Dephos_PCdk2_CycE

Dephos_PC=compartme*k25A*PCdk2_Cyc

# Reaction: id = Degradation_increase, name = Degradation_increase

Degrada_2=compartme*functio_4(Heav, kdact)

# Reaction: id = Phos_Xic_PCdk2_CycE, name = Phos_Xic_PCdk2_CycE

Phos_Xic_=compartme*Functio_5(Wee1_a, Xic_Cdk2_, kwee)

# Reaction: id = Phos_PCdk2_CycE, name = Phos_PCdk2_CycE

Phos_PCdk=compartme*Functio_6(Cdk2_CycE, Wee1_a, kwee)

# Reaction: id = Kinase__regulation, name = Kinase _regulation

Kinase__r=compartme*Functio_7(Cdk2_CycE, Jiact, Jiinact, Kin_a, kiact, kiinact)

# Reaction: id = Xic_PCdk2_CycE_association, name = Xic_PCdk2_CycE_association

Xic_PCd_2=compartme*kassoc*Xic*PCdk2_Cyc

# Reaction: id = Xic_PCdk2_CycErem_association, name = Xic_PCdk2_CycErem_association

Xic_PCd_3=compartme*kassoc*Xic*PCdk2_C_1

# Reaction: id = Xic_PCdk2_CycE_dissociation, name = Xic_PCdk2_CycE_dissociation

Xic_PCd_4=compartme*kdissoc*Xic_PCdk2

# Reaction: id = Xic_PCdk2_CycErem_dissociation, name = Xic_PCdk2_CycErem_dissociation

Xic_PCd_5=compartme*kdissoc*Xic_PCd_1

# Reaction: id = Degradation_Cdk2_CycErem, name = Degradation_Cdk2_CycErem

Degrada_3=compartme*Functio_8(Cdk2_Cy_1, Deg_a, kedeg)

# Reaction: id = Degradation_PCdk2_CycErem, name = Degradation_PCdk2_CycErem

Degrada_4=compartme*Functio_9(Deg_a, PCdk2_C_1, kedeg)

# Reaction: id = Xicrem_degradation, name = Xicrem degradation

Xicrem_de=compartme*kxdeg*Xicrem

# Reaction: id = Xic_PCdk2_CycErem_to_not_rem, name = Xic_PCdk2_CycErem_to_not_rem

Xic_PCd_6=compartme*koff*Xic_PCd_1

# Reaction: id = Xic_Cdk2_CycErem_to_not_rem, name = Xic_Cdk2_CycErem_to_not_rem

Xic_Cdk_6=compartme*koff*Xic_Cdk_1

# Reaction: id = Xic_PCdk2_CycE_to_rem, name = Xic_PCdk2_CycE_to_rem

Xic_PCd_7=compartme*functi_10(Xic_PCdk2, kon, phi)

# Reaction: id = Xic_Cdk2_CycE_to_rem, name = Xic_Cdk2_CycE_to_rem

Xic_Cdk_7=compartme*functi_11(Xic_Cdk2_, kon, phi)

# Reaction: id = Wee1_regulation, name = Wee1_regulation

Wee1_regu=compartme*Functi_12(Jwact, Jwinact, Kin_a, Wee1_a, Wee1_tota, kwact, kwinact)

# Species:   id = PCdk2_CycE, name = PCdk2_CycE, affected by kineticLaw

par PCdk2_Cyc=0.94
aux PCdk2_Cyc=PCdk2_Cyc
dPCdk2_Cyc/dt=(1/(compartme))*(( 1.0 * PCdk2_C_2) + (-1.0 * PCdk2_C_3) + (-1.0 * Dephos_PC) + ( 1.0 * Phos_PCdk) + (-1.0 * Xic_PCd_2) + ( 1.0 * Xic_PCd_4))

# Species:   id = Cdk2_CycE, name = Cdk2_CycE, affected by kineticLaw

init Cdk2_CycE=0.0599999999999999
dCdk2_CycE/dt=(1/(compartme))*((-1.0 * Xic_Cdk_2) + ( 1.0 * Xic_Cdk_4) + ( 1.0 * Cdk2_Cy_2) + (-1.0 * Cdk2_Cy_3) + ( 1.0 * Dephos_PC) + (-1.0 * Phos_PCdk) + (-1.0 * Kinase__r) + ( 1.0 * Kinase__r))

# Species:   id = Wee1_a, name = Wee1_a, affected by kineticLaw

init Wee1_a=1.02
dWee1_a/dt=(1/(compartme))*(( 1.0 * Wee1_regu))

# Species:   id = Wee1_total, name = Wee1_total, constant
par Wee1_tota=7.99999999999998


# Species:   id = Cdk2_CycErem, name = Cdk2_CycErem, affected by kineticLaw

par Cdk2_Cy_1=0.0
aux Cdk2_Cy_1=Cdk2_Cy_1
dCdk2_Cy_1/dt=(1/(compartme))*((-1.0 * Xic_Cdk_3) + ( 1.0 * Xic_Cdk_5) + (-1.0 * Cdk2_Cy_2) + ( 1.0 * Cdk2_Cy_3) + ( 1.0 * X_degadat) + (-1.0 * Degrada_3))

# Species:   id = PCdk2_CycErem, name = PCdk2_CycErem, affected by kineticLaw

par PCdk2_C_1=0.0
aux PCdk2_C_1=PCdk2_C_1
dPCdk2_C_1/dt=(1/(compartme))*((-1.0 * PCdk2_C_2) + ( 1.0 * PCdk2_C_3) + ( 1.0 * X_degrada) + (-1.0 * Xic_PCd_3) + ( 1.0 * Xic_PCd_5) + (-1.0 * Degrada_4))

# Species:   id = Deg_a, name = Deg_CycE, affected by kineticLaw

init Deg_a=0.0
dDeg_a/dt=(1/(compartme))*(( 1.0 * Degrada_2))

# Species:   id = Xic, name = Xic, affected by kineticLaw

init Xic=2.99999999999998
dXic/dt=(1/(compartme))*((-1.0 * Xic_Cdk_2) + (-1.0 * Xic_Cdk_3) + ( 1.0 * Xic_Cdk_4) + ( 1.0 * Xic_Cdk_5) + (-1.0 * Xic_PCd_2) + (-1.0 * Xic_PCd_3) + ( 1.0 * Xic_PCd_4) + ( 1.0 * Xic_PCd_5))

# Species:   id = Xic_Cdk2_CycE, name = Xic_Cdk2_CycE, affected by kineticLaw

par Xic_Cdk2_=0.0
aux Xic_Cdk2_=Xic_Cdk2_
dXic_Cdk2_/dt=(1/(compartme))*(( 1.0 * Xic_Cdk_2) + (-1.0 * Xic_Cdk_4) + ( 1.0 * Dephos_Xi) + (-1.0 * Phos_Xic_) + ( 1.0 * Xic_Cdk_6) + (-1.0 * Xic_Cdk_7))

# Species:   id = Xic_PCdk2_CycE, name = Xic_PCdk2_CycE, affected by kineticLaw

par Xic_PCdk2=0.0
aux Xic_PCdk2=Xic_PCdk2
dXic_PCdk2/dt=(1/(compartme))*((-1.0 * Dephos_Xi) + ( 1.0 * Phos_Xic_) + ( 1.0 * Xic_PCd_2) + (-1.0 * Xic_PCd_4) + ( 1.0 * Xic_PCd_6) + (-1.0 * Xic_PCd_7))

# Species:   id = Xic_Cdk2_CycErem, name = Xic_Cdk2_CycErem, affected by kineticLaw

par Xic_Cdk_1=0.0
aux Xic_Cdk_1=Xic_Cdk_1
dXic_Cdk_1/dt=(1/(compartme))*(( 1.0 * Xic_Cdk_3) + (-1.0 * Xic_Cdk_5) + (-1.0 * X_degadat) + (-1.0 * Degrada_1) + (-1.0 * Xic_Cdk_6) + ( 1.0 * Xic_Cdk_7))

# Species:   id = Xic_PCdk2_CycErem, name = Xic_PCdk2_CycErem, affected by kineticLaw

par Xic_PCd_1=0.0
aux Xic_PCd_1=Xic_PCd_1
dXic_PCd_1/dt=(1/(compartme))*((-1.0 * X_degrada) + (-1.0 * Degradati) + ( 1.0 * Xic_PCd_3) + (-1.0 * Xic_PCd_5) + (-1.0 * Xic_PCd_6) + ( 1.0 * Xic_PCd_7))

# Species:   id = Xicrem, name = Xicrem, affected by kineticLaw

init Xicrem=0.0
dXicrem/dt=(1/(compartme))*(( 1.0 * Degradati) + ( 1.0 * Degrada_1) + (-1.0 * Xicrem_de))

# Species:   id = Cyc_total, name = Cyc_total, involved in a rule 

# Species:   id = Xic_total, name = Xic_total, involved in a rule 

# Species:   id = Kin_a, name = Kin_a, affected by kineticLaw

init Kin_a=0.6
dKin_a/dt=(1/(compartme))*(( 1.0 * Kinase__r))


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (x  <  0) then (0) else (1)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

