
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Gray2016 - The Akt switch model
#
# isDescribedBy http://identifiers.org/pubmed/26992575
# is http://identifiers.org/biomodels.db/MODEL1911130001
# is http://identifiers.org/biomodels.db/BIOMD0000000854
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_AktP_Translocation_Cytosol_PM_Insulin, name = Function_for_AktP_Translocation_Cytosol_PM_Insulin
Function_(alpha,kin,Pc)=(alpha*kin*Pc)


# FunctionDefinition id = Function_for_Akt_Translocation_Cytosol_PM_Insulin, name = Function_for_Akt_Translocation_Cytosol_PM_Insulin
Functio_1(alpha,kin,Ac)=(alpha*kin*Ac)


# FunctionDefinition id = Function_for_Akt_Phosphorylation_PM_Equilibrium, name = Function_for_Akt_Phosphorylation_PM_Equilibrium
Functio_2(beta,koff,Ap)=(beta*koff*Ap)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  kin, name = kin, constant
par kin=0.55

# Parameter:   id =  koff, name = koff, constant
par koff=0.35

# Parameter:   id =  alpha1, name = alpha1, constant
par alpha1=0.014

# Parameter:   id =  alpha100, name = alpha100, constant
par alpha100=0.023

# Parameter:   id =  beta1, name = beta1, constant
par beta1=2.2

# Parameter:   id =  P_Perc, name = P_Perc, defined by a Rule

# Parameter:   id =  Akt_Total, name = Akt_Total, defined by a Rule

# Parameter:   id =  Pp_Perc, name = Pp_Perc, defined by a Rule

# Parameter:   id =  Pc_Perc, name = Pc_Perc, defined by a Rule

# assignmentRule: variable = Akt_Total
Akt_Total=Ac+Ap+Pc+Pp
aux Akt_Total=Akt_Total

# assignmentRule: variable = Pc_Perc
Pc_Perc=100*Pc/Akt_Total
aux Pc_Perc=Pc_Perc

# assignmentRule: variable = Pp_Perc
Pp_Perc=100*Pp/Akt_Total
aux Pp_Perc=Pp_Perc

# assignmentRule: variable = P_Perc
P_Perc=100*(Pc+Pp)/Akt_Total
aux P_Perc=P_Perc

# Reaction: id = AktP_Dephosphorylation_Cytosol, name = AktP_Dephosphorylation_Cytosol

AktP_Deph=compartme*koff*Pc

# Reaction: id = Akt_Translocation_Cytosol_PM_Insulin, name = Akt_Translocation_Cytosol_PM_Insulin

Akt_Trans=compartme*Functio_1(alpha1, kin, Ac)

# Reaction: id = Akt_Translocation_PM_Cytosol, name = Akt_Translocation_PM_Cytosol

Akt_Tra_1=compartme*kin*Ap

# Reaction: id = AktP_Translocation_PM_Cytosol, name = AktP_Translocation_PM_Cytosol

AktP_Tran=compartme*kin*Pp

# Reaction: id = AktP_Translocation_Cytosol_PM_Insulin, name = AktP_Translocation_Cytosol_PM_Insulin

AktP_Tr_1=compartme*Function_(alpha1, kin, Pc)

# Reaction: id = AktP_Dephosphorylation_PM, name = AktP_Dephosphorylation_PM

AktP_De_1=compartme*koff*Pp

# Reaction: id = Akt_Phosphorylation_PM_Equilibrium, name = Akt_Phosphorylation_PM_Equilibrium

Akt_Phosp=compartme*Functio_2(beta1, koff, Ap)

# Species:   id = Ac, name = Ac, affected by kineticLaw

init Ac=0.95
dAc/dt=(1/(compartme))*(( 1.0 * AktP_Deph) + (-1.0 * Akt_Trans) + ( 1.0 * Akt_Tra_1))

# Species:   id = Pc, name = Pc, affected by kineticLaw

init Pc=0.0
dPc/dt=(1/(compartme))*((-1.0 * AktP_Deph) + ( 1.0 * AktP_Tran) + (-1.0 * AktP_Tr_1))

# Species:   id = Ap, name = Ap, affected by kineticLaw

init Ap=0.05
dAp/dt=(1/(compartme))*(( 1.0 * Akt_Trans) + (-1.0 * Akt_Tra_1) + ( 1.0 * AktP_De_1) + (-1.0 * Akt_Phosp))

# Species:   id = Pp, name = Pp, affected by kineticLaw

init Pp=0.0
dPp/dt=(1/(compartme))*((-1.0 * AktP_Tran) + ( 1.0 * AktP_Tr_1) + (-1.0 * AktP_De_1) + ( 1.0 * Akt_Phosp))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

