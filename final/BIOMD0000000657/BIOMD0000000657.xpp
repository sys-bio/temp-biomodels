
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Araujo2016 - Positive feedback in Cdk1 signalling keeps mitotic duration short and constant
#
# is http://identifiers.org/biomodels.db/MODEL1710040001
# is http://identifiers.org/biomodels.db/BIOMD0000000657
# isDescribedBy http://identifiers.org/pubmed/27768873
# unknownQualifier http://identifiers.org/mamo/MAMO_0000046
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = func1_Cdk1_activation, name = func1 Cdk1 activation
func1_Cdk(Ks,Adeg,Cdk1CycB,Bdeg,APC,napc,EC50apc,Acdc,Bcdc,ncdc,EC50cdc,CycB,Awee,Bwee,EC50wee,nwee)=(Ks-Adeg*Cdk1CycB-Bdeg*APC^napc*Cdk1CycB/(EC50apc^napc+APC^napc)+(Acdc+Bcdc*Cdk1CycB^ncdc/(EC50cdc^ncdc+Cdk1CycB^ncdc))*(CycB-Cdk1CycB)-(Awee+Bwee*EC50wee^nwee/(EC50wee^nwee+Cdk1CycB^nwee))*Cdk1CycB)


# FunctionDefinition id = func2_CycB_regulation, name = func2 CycB regulation
func2_Cyc(Ks,Adeg,CycB,Bdeg,APC,napc,EC50apc)=(Ks-Adeg*CycB-Bdeg*APC^napc*CycB/(EC50apc^napc+APC^napc))


# FunctionDefinition id = func3_APC_regulation, name = func3 APC regulation
func3_APC(AK,BK,Cdk1CycB,nK,EC50K,APC,AP,BP,EC50P,nP)=((AK+BK*(Cdk1CycB/200)^nK/((Cdk1CycB/200)^nK+EC50K^nK))*(1-APC)-(AP+BP*EC50P^nP/(APC^nP+EC50P^nP))*APC)


# Compartment: id = Cell, name = Cell, constant
par Cell=1.0

# Parameter:   id =  Ks, name = Ks, constant
par Ks=0.1

# Parameter:   id =  Adeg, name = Adeg, constant
par Adeg=0.001

# Parameter:   id =  Bdeg, name = Bdeg, constant
par Bdeg=0.02

# Parameter:   id =  Acdc, name = Acdc, constant
par Acdc=0.5

# Parameter:   id =  Bcdc, name = Bcdc, constant
par Bcdc=1.5

# Parameter:   id =  EC50cdc, name = EC50cdc, constant
par EC50cdc=30.0

# Parameter:   id =  n_cdc, name = n_cdc, constant
par n_cdc=10.0

# Parameter:   id =  Awee, name = Awee, constant
par Awee=0.5

# Parameter:   id =  Bwee, name = Bwee, constant
par Bwee=1.0

# Parameter:   id =  EC50wee, name = EC50wee, constant
par EC50wee=30.0

# Parameter:   id =  n_wee, name = n_wee, constant
par n_wee=10.0

# Parameter:   id =  EC50apc, name = EC50apc, constant
par EC50apc=0.5

# Parameter:   id =  n_apc, name = n_apc, constant
par n_apc=10.0

# Parameter:   id =  AK, name = AK, constant
par AK=0.0

# Parameter:   id =  BK, name = BK, constant
par BK=0.25

# Parameter:   id =  EC50K, name = EC50K, constant
par EC50K=0.18

# Parameter:   id =  n_K, name = n_K, constant
par n_K=5.0

# Parameter:   id =  AP, name = AP, constant
par AP=0.025

# Parameter:   id =  BP, name = BP, constant
par BP=0.5

# Parameter:   id =  EC50P, name = EC50P, constant
par EC50P=0.18

# Parameter:   id =  n_P, name = n_P, constant
par n_P=5.0

# Reaction: id = R1, name = R1

R1=Cell*func1_Cdk(Ks, Adeg, Cdk1CycB, Bdeg, APC, n_apc, EC50apc, Acdc, Bcdc, n_cdc, EC50cdc, CycB, Awee, Bwee, EC50wee, n_wee)

# Reaction: id = R2, name = R2

R2=Cell*func2_Cyc(Ks, Adeg, CycB, Bdeg, APC, n_apc, EC50apc)

# Reaction: id = R3, name = R3

R3=Cell*func3_APC(AK, BK, Cdk1CycB, n_K, EC50K, APC, AP, BP, EC50P, n_P)

# Species:   id = Cdk1CycB, name = Cdk1CycB, affected by kineticLaw

init Cdk1CycB=20.0
dCdk1CycB/dt=(1/(Cell))*(( 1.0 * R1))

# Species:   id = APC, name = APC, affected by kineticLaw

init APC=0.0
dAPC/dt=(1/(Cell))*(( 1.0 * R3))

# Species:   id = CycB, name = CycB, affected by kineticLaw

init CycB=59.9999999999999
dCycB/dt=(1/(Cell))*(( 1.0 * R2))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

