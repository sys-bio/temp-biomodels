
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Almuallem2020 - Virus-macrophage-tumour interactions in oncolytic viral therapies
#
# is http://identifiers.org/biomodels.db/MODEL2108190002
# is http://identifiers.org/biomodels.db/BIOMD0000001033
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_M1_polarisation, name = Rate Law for M1_polarisation
Rate_Law_(M1,r0_m1,r_m1_u,T_u,h_u,M2_u,r0_m2,r_m2_v,V,h_v)=(M1*(r0_m1+r_m1_u*T_u/(h_u+T_u))-M2_u*(r0_m2+r_m2_v*V/(h_v+V)))


# FunctionDefinition id = Rate_Law_for_M2_infection, name = Rate Law for M2_infection
Rate_La_1(beta_2,V,M2_u)=(beta_2*V*M2_u)


# FunctionDefinition id = Rate_Law_for_infected_tumour_lysis_elimination, name = Rate Law for infected_tumour_lysis/elimination
Rate_La_2(delta_i1,T_i,d_i,M1,h_m,M2_u)=(delta_i1*T_i+d_i*T_i*M1/(h_m+M2_u))


# FunctionDefinition id = Rate_Law_for_M1_activation_growth, name = Rate Law for M1_activation/growth
Rate_La_3(a1_v,V,a1_i,T_i,a1_u,T_u,p_m1,M1,M2_u,K2)=(a1_v*V+a1_i*T_i+a1_u*T_u+p_m1*M1*(1-(M1+M2_u)/K2))


# FunctionDefinition id = Rate_Law_for_tumour_elimination, name = Rate Law for tumour_elimination
Rate_La_4(d_u,T_u,M1,h_m,M2_u)=(d_u*T_u*M1/(h_m+M2_u))


# FunctionDefinition id = Rate_Law_for_tumour_infection, name = Rate Law for tumour_infection
Rate_La_5(beta,V,T_u)=(beta*V*T_u)


# FunctionDefinition id = Rate_Law_for_tumour_growth_production, name = Rate Law for tumour_growth/production
Rate_La_6(r,T_u,K1,d_m,M2_u,h_m)=(r*T_u*(1-T_u/K1)+d_m*T_u*M2_u/(h_m+M2_u))


# FunctionDefinition id = Rate_Law_for_virus_death_elimination, name = Rate Law for virus_death/elimination
Rate_La_7(omega,V,delta_v,M1,h_m,M2_u)=(omega*V+delta_v*V*M1/(h_m+M2_u))


# FunctionDefinition id = Rate_Law_for_virus_production, name = Rate Law for virus_production
Rate_La_8(b,delta_i1,T_i,c,delta_i2,M2_i)=(b*delta_i1*T_i+c*delta_i2*M2_i)


# FunctionDefinition id = Rate_Law_for_M2_activation_growth, name = Rate Law for M2_activation/growth
Rate_La_9(a2_u,T_u,p_m2,M2_u,M1,K2)=(a2_u*T_u+p_m2*M2_u*(1-(M1+M2_u)/K2))


# Compartment: id = Whole_organism, name = Whole_organism, constant
par Whole_org=1.0

# Parameter:   id =  r, name = r, constant
par r=0.62

# Parameter:   id =  K1, name = K1, constant
par K1=1.0

# Parameter:   id =  g1, name = g1, constant
par g1=0.0

# Parameter:   id =  beta1, name = beta1, constant
par beta1=10.0

# Parameter:   id =  d_u, name = d_u, constant
par d_u=1.0

# Parameter:   id =  d_m, name = d_m, constant
par d_m=0.2

# Parameter:   id =  delta_i1, name = delta_i1, constant
par delta_i1=0.4

# Parameter:   id =  d_i, name = d_i, constant
par d_i=2.0

# Parameter:   id =  a1_v, name = a1_v, constant
par a1_v=0.025

# Parameter:   id =  a1_i, name = a1_i, constant
par a1_i=2.5E-4

# Parameter:   id =  a1_u, name = a1_u, constant
par a1_u=1.25E-7

# Parameter:   id =  p_m1, name = p_m1, constant
par p_m1=0.57

# Parameter:   id =  r0_m1, name = r0_m1, constant
par r0_m1=0.001

# Parameter:   id =  r0_m2, name = r0_m2, constant
par r0_m2=0.001

# Parameter:   id =  r_u_m1, name = r_u_m1, constant
par r_u_m1=1.0

# Parameter:   id =  r_v_m2, name = r_v_m2, constant
par r_v_m2=0.0

# Parameter:   id =  d_e1, name = d_e1, constant
par d_e1=0.88

# Parameter:   id =  d_e2, name = d_e2, constant
par d_e2=0.12

# Parameter:   id =  p_m2, name = p_m2, constant
par p_m2=0.57

# Parameter:   id =  K2, name = K2, constant
par K2=1.0

# Parameter:   id =  g2, name = g2, constant
par g2=0.0

# Parameter:   id =  beta2, name = beta2, constant
par beta2=500.0

# Parameter:   id =  delta_i2, name = delta_i2, constant
par delta_i2=0.52

# Parameter:   id =  b, name = b, constant
par b=25.0

# Parameter:   id =  c, name = c, constant
par c=8.0

# Parameter:   id =  omega, name = omega, constant
par omega=2.0

# Parameter:   id =  delta_v, name = delta_v, constant
par delta_v=5.0E-5

# Parameter:   id =  h_u, name = h_u, constant
par h_u=1.0E-4

# Parameter:   id =  h_v, name = h_v, constant
par h_v=1.0E-6

# Parameter:   id =  h_m, name = h_m, constant
par h_m=2.5E-4

# Parameter:   id =  a2_u, name = a2_u, constant
par a2_u=2.5E-7

# Reaction: id = tumour_growth_production, name = tumour_growth/production

tumour_gr=Whole_org*Rate_La_6(r, Uninfecte, K1, d_m, Uninfec_1, h_m)

# Reaction: id = tumour_infection, name = tumour_infection

tumour_in=Whole_org*Rate_La_5(beta1, Oncolytic, Uninfecte)

# Reaction: id = tumour_elimination, name = tumour_elimination

tumour_el=Whole_org*Rate_La_4(d_u, Uninfecte, M1_macrop, h_m, Uninfec_1)

# Reaction: id = infected_tumour_lysis_elimination, name = infected_tumour_lysis/elimination

infecte_2=Whole_org*Rate_La_2(delta_i1, Infected_, d_i, M1_macrop, h_m, Uninfec_1)

# Reaction: id = M1_activation_growth, name = M1_activation/growth

M1_activa=Whole_org*Rate_La_3(a1_v, Oncolytic, a1_i, Infected_, a1_u, Uninfecte, p_m1, M1_macrop, Uninfec_1, K2)

# Reaction: id = M1_polarisation, name = M1_polarisation

M1_polari=Whole_org*Rate_Law_(M1_macrop, r0_m1, r_u_m1, Uninfecte, h_u, Uninfec_1, r0_m2, r_v_m2, Oncolytic, h_v)

# Reaction: id = M1_death, name = M1_death

M1_death=Whole_org*d_e1*M1_macrop

# Reaction: id = M2_activation_growth, name = M2_activation/growth

M2_activa=Whole_org*Rate_La_9(a2_u, Uninfecte, p_m2, Uninfec_1, M1_macrop, K2)

# Reaction: id = M2_infection, name = M2_infection

M2_infect=Whole_org*Rate_La_1(beta2, Oncolytic, Uninfec_1)

# Reaction: id = M2_death, name = M2_death

M2_death=Whole_org*d_e2*Uninfec_1

# Reaction: id = infected_M2_lysis, name = infected_M2_lysis

infecte_3=Whole_org*delta_i2*Infecte_1

# Reaction: id = virus_production, name = virus_production

virus_pro=Whole_org*Rate_La_8(b, delta_i1, Infected_, c, delta_i2, Infecte_1)

# Reaction: id = virus_death_elimination, name = virus_death/elimination

virus_dea=Whole_org*Rate_La_7(omega, Oncolytic, delta_v, M1_macrop, h_m, Uninfec_1)

# Species:   id = Uninfected_tumour_cells, name = Uninfected_tumour_cells, affected by kineticLaw

par Uninfecte=5.0E-4
aux Uninfecte=Uninfecte
dUninfecte/dt=(1/(Whole_org))*(( 1.0 * tumour_gr) + (-1.0 * tumour_in) + (-1.0 * tumour_el))

# Species:   id = Infected_tumour_cells, name = Infected tumour_cells, affected by kineticLaw

par Infected_=0.0
aux Infected_=Infected_
dInfected_/dt=(1/(Whole_org))*(( 1.0 * tumour_in) + (-1.0 * infecte_2))

# Species:   id = M1_macrophages, name = M1_macrophages, affected by kineticLaw

par M1_macrop=2.5E-6
aux M1_macrop=M1_macrop
dM1_macrop/dt=(1/(Whole_org))*(( 1.0 * M1_activa) + (-1.0 * M1_polari) + (-1.0 * M1_death))

# Species:   id = Uninfected_M2_macrophages, name = Uninfected_M2_macrophages, affected by kineticLaw

par Uninfec_1=2.5E-7
aux Uninfec_1=Uninfec_1
dUninfec_1/dt=(1/(Whole_org))*(( 1.0 * M1_polari) + ( 1.0 * M2_activa) + (-1.0 * M2_infect) + (-1.0 * M2_death))

# Species:   id = Infected_M2_macrophages, name = Infected_M2_macrophages, affected by kineticLaw

par Infecte_1=0.0
aux Infecte_1=Infecte_1
dInfecte_1/dt=(1/(Whole_org))*(( 1.0 * M2_infect) + (-1.0 * infecte_3))

# Species:   id = Oncolytic_viruses, name = Oncolytic_viruses, affected by kineticLaw

par Oncolytic=1.0E-5
aux Oncolytic=Oncolytic
dOncolytic/dt=(1/(Whole_org))*(( 1.0 * virus_pro) + (-1.0 * virus_dea))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

