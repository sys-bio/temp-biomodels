
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Lee2003 - Roles of APC and Axin in Wnt Pathway (without regulatory loop)
#
# is http://identifiers.org/biomodels.db/MODEL1708310000
# is http://identifiers.org/biomodels.db/BIOMD0000000658
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = function_for_v1, name = function for v1
function_(k1,x1,W)=(k1*x1*W)


# FunctionDefinition id = function_for_v3, name = function for v3
functio_1(k3,x2,x4)=(k3*x2*x4)


# Compartment: id = Cytoplasm, name = Cytoplasm, constant
par Cytoplasm=1.0

# Compartment: id = Nucleus, name = Nucleus, constant
par Nucleus=1.0

# Parameter:   id =  k1, name = k1, constant
par k1=0.182

# Parameter:   id =  k2, name = k2, constant
par k2=0.0182

# Parameter:   id =  k3, name = k3, constant
par k3=0.05

# Parameter:   id =  k4, name = k4, constant
par k4=0.267

# Parameter:   id =  k5, name = k5, constant
par k5=0.133

# Parameter:   id =  k6, name = k6, constant
par k6=0.0909

# Parameter:   id =  k_6, name = k_6, constant
par k_6=0.909

# Parameter:   id =  k7, name = k7, constant
par k7=500.0

# Parameter:   id =  k_7, name = k_7, defined by a Rule

# Parameter:   id =  k8, name = k8, constant
par k8=500.0

# Parameter:   id =  k_8, name = k_8, defined by a Rule

# Parameter:   id =  k9, name = k9, constant
par k9=206.0

# Parameter:   id =  k10, name = k10, constant
par k10=206.0

# Parameter:   id =  k11, name = k11, constant
par k11=0.417

# Parameter:   id =  k12, name = k12, constant
par k12=0.423

# Parameter:   id =  k13, name = k13, constant
par k13=2.57E-4

# Parameter:   id =  k14, name = k14, constant
par k14=8.22E-5

# Parameter:   id =  k15, name = k15, constant
par k15=0.167

# Parameter:   id =  k16, name = k16, constant
par k16=500.0

# Parameter:   id =  k_16, name = k_16, defined by a Rule

# Parameter:   id =  k17, name = k17, constant
par k17=500.0

# Parameter:   id =  k_17, name = k_17, defined by a Rule

# Parameter:   id =  K_7, name = K_7, constant
par K_7_1=50.0

# Parameter:   id =  K_8, name = K_8, constant
par K_8_1=120.0

# Parameter:   id =  K_16, name = K_16, constant
par K_16_1=30.0

# Parameter:   id =  K_17, name = K_17, constant
par K_17_1=1200.0

# Parameter:   id =  lambda, name = lambda, constant
par lambda=0.05

# Parameter:   id =  t0, name = t0, constant
par t0=40.0

# Parameter:   id =  Dsh0, name = Dsh0, constant
par Dsh0=100.0

# Parameter:   id =  Total_B_Catenin, name = Total_B_Catenin, defined by a Rule

# Parameter:   id =  Total_Axin, name = Total_Axin, defined by a Rule

# assignmentRule: variable = Total_B_Catenin
Total_B_C=B_catenin+B_caten_1+B_caten_2+B_caten_3+B_caten_4+B_caten_5
aux Total_B_C=Total_B_C

# assignmentRule: variable = Total_Axin
Total_Axi=APC__axin+APC_axin_+APC_axin+B_catenin+B_caten_1+Axin
aux Total_Axi=Total_Axi

# assignmentRule: variable = k_16
k_16=k16*K_16_1
aux k_16=k_16

# assignmentRule: variable = k_7
k_7=k7*K_7_1
aux k_7=k_7

# assignmentRule: variable = k_17
k_17=k17*K_17_1
aux k_17=k_17

# assignmentRule: variable = k_8
k_8=k8*K_8_1
aux k_8=k_8

# assignmentRule: variable = W
W= piecew1 
aux W=W

# Reaction: id = v1, name = v1

v1=Cytoplasm*function_(k1, Dsh_i, W)

# Reaction: id = v2, name = v2

v2=Cytoplasm*k2*Dsh_a

# Reaction: id = v3, name = v3

v3=Cytoplasm*functio_1(k3, Dsh_a, APC_axin_)

# Reaction: id = v4, name = v4

v4=Cytoplasm*k4*APC_axin_

# Reaction: id = v5, name = v5

v5=Cytoplasm*k5*APC__axin

# Reaction: id = v6, name = v6

v6=Cytoplasm*(k6*GSK3*APC_axin-k_6*APC_axin_)

# Reaction: id = v7, name = v7

v7=Cytoplasm*(k7*APC*Axin-k_7*APC_axin)

# Reaction: id = v8, name = v8

v8=k8*APC__axin*B_caten_3-k_8*B_catenin

# Reaction: id = v9, name = v9

v9=Cytoplasm*k9*B_catenin

# Reaction: id = v10, name = v10

v10=Cytoplasm*k10*B_caten_1

# Reaction: id = v11, name = v11

v11=Cytoplasm*k11*B_caten_2

# Reaction: id = v12, name = v12

v12=Nucleus*Constant_(k12)

# Reaction: id = v13, name = v13

v13=Nucleus*k13*B_caten_3

# Reaction: id = v14, name = v14

v14=Cytoplasm*Constant_(k14)

# Reaction: id = v15, name = v15

v15=Cytoplasm*k15*Axin

# Reaction: id = v16, name = v16

v16=Nucleus*(k16*B_caten_3*TCF-k_16*B_caten_4)

# Reaction: id = v17, name = v17

v17=k17*APC*B_caten_3-k_17*B_caten_5

# Species:   id = Dsh_i, name = Dsh_i, affected by kineticLaw

init Dsh_i=100.0
dDsh_i/dt=(1/(Cytoplasm))*((-1.0 * v1) + ( 1.0 * v2))

# Species:   id = Dsh_a, name = Dsh_a, affected by kineticLaw

init Dsh_a=0.0
dDsh_a/dt=(1/(Cytoplasm))*(( 1.0 * v1) + (-1.0 * v2))

# Species:   id = APC__axin__GSK3, name = APC*/axin*/GSK3, affected by kineticLaw

par APC__axin=0.00966
aux APC__axin=APC__axin
dAPC__axin/dt=(1/(Cytoplasm))*(( 1.0 * v4) + (-1.0 * v5) + (-1.0 * v8) + ( 1.0 * v10))

# Species:   id = APC_axin_GSK3, name = APC/axin/GSK3, affected by kineticLaw

par APC_axin_=0.00483
aux APC_axin_=APC_axin_
dAPC_axin_/dt=(1/(Cytoplasm))*((-1.0 * v3) + (-1.0 * v4) + ( 1.0 * v5) + ( 1.0 * v6))

# Species:   id = GSK3, name = GSK3, affected by kineticLaw

init GSK3=50.0
dGSK3/dt=(1/(Cytoplasm))*(( 1.0 * v3) + (-1.0 * v6))

# Species:   id = APC_axin, name = APC/axin, affected by kineticLaw

init APC_axin=9.8065E-4
dAPC_axin/dt=(1/(Cytoplasm))*(( 1.0 * v3) + (-1.0 * v6) + ( 1.0 * v7))

# Species:   id = APC, name = APC, affected by kineticLaw

init APC=98.0
dAPC/dt=(1/(Cytoplasm))*((-1.0 * v7) + (-1.0 * v17))

# Species:   id = B_catenin_APC__axin__GSK3, name = B_catenin/APC*/axin*/GSK3, affected by kineticLaw

init B_catenin=0.00202
dB_catenin/dt=(1/(Cytoplasm))*(( 1.0 * v8) + (-1.0 * v9))

# Species:   id = B_catenin__APC__axin__GSK3, name = B_catenin*/APC*/axin*/GSK3, affected by kineticLaw

par B_caten_1=0.00202
aux B_caten_1=B_caten_1
dB_caten_1/dt=(1/(Cytoplasm))*(( 1.0 * v9) + (-1.0 * v10))

# Species:   id = B_catenin, name = B_catenin*, affected by kineticLaw

par B_caten_2=1.0
aux B_caten_2=B_caten_2
dB_caten_2/dt=(1/(Cytoplasm))*(( 1.0 * v10) + (-1.0 * v11))

# Species:   id = B_catenin_0, name = B_catenin, affected by kineticLaw

par B_caten_3=25.1
aux B_caten_3=B_caten_3
dB_caten_3/dt=(1/(Nucleus))*((-1.0 * v8) + ( 1.0 * v12) + (-1.0 * v13) + (-1.0 * v16) + (-1.0 * v17))

# Species:   id = Axin, name = Axin, affected by kineticLaw

init Axin=4.93E-4
dAxin/dt=(1/(Cytoplasm))*((-1.0 * v7) + ( 1.0 * v14) + (-1.0 * v15))

# Species:   id = TCF, name = TCF, affected by kineticLaw

init TCF=8.17
dTCF/dt=(1/(Nucleus))*((-1.0 * v16))

# Species:   id = B_catenin_TCF, name = B_catenin/TCF, affected by kineticLaw

par B_caten_4=6.83
aux B_caten_4=B_caten_4
dB_caten_4/dt=(1/(Nucleus))*(( 1.0 * v16))

# Species:   id = B_catenin_APC, name = B_catenin/APC, affected by kineticLaw

par B_caten_5=2.05
aux B_caten_5=B_caten_5
dB_caten_5/dt=(1/(Cytoplasm))*(( 1.0 * v17))

# Species:   id = W, name = W, involved in a rule 


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (t  <  t0) then (0) else (exp((-1)*lambda*(t-t0)))


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

