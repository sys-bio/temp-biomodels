
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Chay1997_CalciumConcentration
#
# is http://identifiers.org/biomodels.db/MODEL0491199816
# is http://identifiers.org/biomodels.db/BIOMD0000000378
# isDescribedBy http://identifiers.org/pubmed/9284334
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Compartment, name = Compartment, constant
par Compartme=1.0

# Parameter:   id =  R, name = R, constant
par R=8314.0

# Parameter:   id =  T, name = T, constant
par T_renamed=310.0

# Parameter:   id =  F, name = F, constant
par F=96485.0

# Parameter:   id =  Cm, name = Cm, constant
par Cm=1.0

# Parameter:   id =  i_fast, name = i_fast, defined by a Rule

# Parameter:   id =  g_fast, name = g_fast, constant
par g_fast=600.0

# Parameter:   id =  V_fast, name = V_fast, constant
par V_fast=80.0

# Parameter:   id =  m_infinity, name = m_infinity, defined by a Rule

# Parameter:   id =  Vm, name = Vm, constant
par Vm=-25.0

# Parameter:   id =  Sm, name = Sm, constant
par Sm=9.0

# Parameter:   id =  lamda_h, name = lamda_h, constant
par lamda_h=12.5

# Parameter:   id =  tau_h, name = tau_h, defined by a Rule

# Parameter:   id =  h_infinity, name = h_infinity, defined by a Rule

# Parameter:   id =  Vh, name = Vh, constant
par Vh=-48.0

# Parameter:   id =  Sh, name = Sh, constant
par Sh=-7.0

# Parameter:   id =  i_Ca, name = i_Ca, defined by a Rule

# Parameter:   id =  K_Ca, name = K_Ca, constant
par K_Ca=1.0

# Parameter:   id =  P_Ca, name = P_Ca, constant
par P_Ca=2.0

# Parameter:   id =  Ca_o, name = Ca_o, constant
par Ca_o=2500.0

# Parameter:   id =  lamda_d, name = lamda_d, constant
par lamda_d=2.5

# Parameter:   id =  tau_d, name = tau_d, defined by a Rule

# Parameter:   id =  d_infinity, name = d_infinity, defined by a Rule

# Parameter:   id =  Vd, name = Vd, constant
par Vd=-10.0

# Parameter:   id =  Sd, name = Sd, constant
par Sd=5.0

# Parameter:   id =  f_infinity, name = f_infinity, defined by a Rule

# Parameter:   id =  Ca_i_calcium_current_f_gate, name = Ca_i, constant
par Ca_i_calc=1.0

# Parameter:   id =  i_NS, name = i_NS, defined by a Rule

# Parameter:   id =  g_NS, name = g_NS, constant
par g_NS=5.0

# Parameter:   id =  K_NS, name = K_NS, constant
par K_NS=50.0

# Parameter:   id =  VNS, name = VNS, constant
par VNS=-20.0

# Parameter:   id =  i_K_dr, name = i_K_dr, defined by a Rule

# Parameter:   id =  V_K, name = V_K, constant
par V_K=-75.0

# Parameter:   id =  g_K_dr, name = g_K_dr, constant
par g_K_dr=600.0

# Parameter:   id =  lamda_n, name = lamda_n, constant
par lamda_n=12.5

# Parameter:   id =  Vn, name = Vn, constant
par Vn=-18.0

# Parameter:   id =  Sn, name = Sn, constant
par Sn=14.0

# Parameter:   id =  n_infinity, name = n_infinity, defined by a Rule

# Parameter:   id =  tau_n, name = tau_n, defined by a Rule

# Parameter:   id =  i_K_Ca, name = i_K_Ca, defined by a Rule

# Parameter:   id =  g_K_Ca, name = g_K_Ca, constant
par g_K_Ca=5.0

# Parameter:   id =  i_K_ATP, name = i_K_ATP, defined by a Rule

# Parameter:   id =  g_K_ATP, name = g_K_ATP, constant
par g_K_ATP=2.0

# Parameter:   id =  i_NaL, name = i_NaL, defined by a Rule

# Parameter:   id =  g_NaL, name = g_NaL, constant
par g_NaL=0.3

# Parameter:   id =  V_Na, name = V_Na, constant
par V_Na=80.0

# Parameter:   id =  k_rel, name = k_rel, constant
par k_rel=0.2

# Parameter:   id =  k_Ca, name = k_Ca, constant
par k_Ca_1=7.0

# Parameter:   id =  k_pump, name = k_pump, constant
par k_pump=30.0

# Parameter:   id =  omega, name = omega, constant
par omega=0.2

# assignmentRule: variable = m_infinity
m_infinit=1/(1+exp((Vm-V_membran)/Sm))
aux m_infinit=m_infinit

# assignmentRule: variable = i_fast
i_fast=g_fast*m_infinit^3*h*(V_membran-V_fast)
aux i_fast=i_fast

# assignmentRule: variable = tau_h
tau_h=1/(lamda_h*(exp((Vh-V_membran)/(2*Sh))+exp((V_membran-Vh)/(2*Sh))))
aux tau_h=tau_h

# assignmentRule: variable = h_infinity
h_infinit=1/(1+exp((Vh-V_membran)/Sh))
aux h_infinit=h_infinit

# assignmentRule: variable = tau_d
tau_d=1/(lamda_d*(exp((Vd-V_membran)/(2*Sd))+exp((V_membran-Vd)/(2*Sd))))
aux tau_d=tau_d

# assignmentRule: variable = f_infinity
f_infinit=K_Ca/(K_Ca+Ca_i_calc)
aux f_infinit=f_infinit

# assignmentRule: variable = i_Ca
i_Ca=P_Ca*d*f_infinit*2*F*V_membran/(R*T_renamed)*(Ca_o-Ca_i_cyto*exp(2*F*V_membran/(R*T_renamed)))/(1-exp(2*F*V_membran/(R*T_renamed)))
aux i_Ca=i_Ca

# assignmentRule: variable = d_infinity
d_infinit=1/(1+exp((Vd-V_membran)/Sd))
aux d_infinit=d_infinit

# assignmentRule: variable = i_NS
i_NS=g_NS*K_NS^2/(K_NS^2+Ca_lum^2)*((V_membran-VNS)/(1-exp(0.1*(VNS-V_membran)))-10)
aux i_NS=i_NS

# assignmentRule: variable = i_K_dr
i_K_dr=g_K_dr*n^4*(V_membran-V_K)
aux i_K_dr=i_K_dr

# assignmentRule: variable = n_infinity
n_infinit=1/(1+exp((Vn-V_membran)/Sn))
aux n_infinit=n_infinit

# assignmentRule: variable = tau_n
tau_n=1/(lamda_n*(exp((Vn-V_membran)/(2*Sn))+exp((V_membran-Vn)/(2*Sn))))
aux tau_n=tau_n

# assignmentRule: variable = i_K_ATP
i_K_ATP=g_K_ATP*(V_membran-V_K)
aux i_K_ATP=i_K_ATP

# assignmentRule: variable = i_K_Ca
i_K_Ca=g_K_Ca*Ca_i_cyto^3/(K_Ca^3+Ca_i_cyto^3)*(V_membran-V_K)
aux i_K_Ca=i_K_Ca

# assignmentRule: variable = i_NaL
i_NaL=g_NaL*(V_membran-V_Na)
aux i_NaL=i_NaL

# rateRule: variable = V_membrane
init V_membran=-38.34146
dV_membran/dt=(-(i_K_dr+i_K_Ca+i_K_ATP+i_fast+i_Ca+i_NS+i_NaL))/Cm

# rateRule: variable = h
init h=0.214723
dh/dt=(h_infinit-h)/tau_h

# rateRule: variable = d
init d=0.0031711238
dd/dt=(d_infinit-d)/tau_d

# rateRule: variable = n
init n=0.1836403
dn/dt=(n_infinit-n)/tau_n

# rateRule: variable = Ca_i_cytosolic_calcium
init Ca_i_cyto=0.6959466
dCa_i_cyto/dt=k_rel*(Ca_lum-Ca_i_cyto)-(omega*i_Ca+k_Ca_1*Ca_i_cyto+k_pump*Ca_i_cyto)

# rateRule: variable = Ca_lum
init Ca_lum=102.686
dCa_lum/dt=(-k_rel)*(Ca_lum-Ca_i_cyto)+k_pump*Ca_i_cyto

# Species:   id = V_membrane, name = V_membrane, defined in a rule 

# Species:   id = h, name = h, defined in a rule 

# Species:   id = d, name = d, defined in a rule 

# Species:   id = n, name = n, defined in a rule 

# Species:   id = Ca_i_cytosolic_calcium, name = Ca_i_cytosolic_calcium, defined in a rule 

# Species:   id = Ca_lum, name = Ca_lum, defined in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

