
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Br?nnmark2013 - Insulin signalling in human adipocytes (normal condition)
#
# is http://identifiers.org/biomodels.db/MODEL1304190000
# is http://identifiers.org/biomodels.db/BIOMD0000000448
# isDescribedBy http://identifiers.org/pubmed/23400783
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000343
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cellvolume, name = cellvolume, constant
par cellvolum=1.0

# Parameter:   id =  diabetes, name = diabetes, constant
par diabetes=1.0

# Parameter:   id =  k1a, name = k1a, constant
par k1a=0.6331

# Parameter:   id =  k1basal, name = k1basal, constant
par k1basal=0.03683

# Parameter:   id =  k1c, name = k1c, constant
par k1c=0.8768

# Parameter:   id =  k1d, name = k1d, constant
par k1d=31.01

# Parameter:   id =  k1f, name = k1f, constant
par k1f=1840.0

# Parameter:   id =  k1g, name = k1g, constant
par k1g=1944.0

# Parameter:   id =  k1r, name = k1r, constant
par k1r=0.5471

# Parameter:   id =  k2a, name = k2a, constant
par k2a=3.227

# Parameter:   id =  k2c, name = k2c, constant
par k2c=5759.0

# Parameter:   id =  k2basal, name = k2basal, constant
par k2basal=0.04228

# Parameter:   id =  k2b, name = k2b, constant
par k2b=3424.0

# Parameter:   id =  k2d, name = k2d, constant
par k2d=280.8

# Parameter:   id =  k2f, name = k2f, constant
par k2f=2.913

# Parameter:   id =  k2g, name = k2g, constant
par k2g=0.2671

# Parameter:   id =  k3a, name = k3a, constant
par k3a=0.001377

# Parameter:   id =  k3b, name = k3b, constant
par k3b=0.09876

# Parameter:   id =  k4a, name = k4a, constant
par k4a=5790.0

# Parameter:   id =  k4b, name = k4b, constant
par k4b=34.8

# Parameter:   id =  k4c, name = k4c, constant
par k4c=4.456

# Parameter:   id =  k4e, name = k4e, constant
par k4e=42.84

# Parameter:   id =  k4f, name = k4f, constant
par k4f=143.6

# Parameter:   id =  k4h, name = k4h, constant
par k4h=0.5361

# Parameter:   id =  k5a1, name = k5a1, constant
par k5a1=1.842

# Parameter:   id =  k5a2, name = k5a2, constant
par k5a2=0.05506

# Parameter:   id =  k5b, name = k5b, constant
par k5b=24.83

# Parameter:   id =  k5d, name = k5d, constant
par k5d=1.06

# Parameter:   id =  km5, name = km5, constant
par km5=2.65

# Parameter:   id =  k5c, name = k5c, constant
par k5c=0.08575

# Parameter:   id =  k6f1, name = k6f1, constant
par k6f1=2.652

# Parameter:   id =  k6f2, name = k6f2, constant
par k6f2=36.93

# Parameter:   id =  km6, name = km6, constant
par km6=30.54

# Parameter:   id =  n6, name = n6, constant
par n6=2.137

# Parameter:   id =  k6b, name = k6b, constant
par k6b=65.18

# Parameter:   id =  k7f, name = k7f, constant
par k7f=50.98

# Parameter:   id =  k7b, name = k7b, constant
par k7b=2286.0

# Parameter:   id =  k8, name = k8, constant
par k8=724.2

# Parameter:   id =  glut1, name = glut1, constant
par glut1=7042.0

# Parameter:   id =  k9f1, name = k9f1, constant
par k9f1=0.1298

# Parameter:   id =  k9b1, name = k9b1, constant
par k9b1=0.04441

# Parameter:   id =  k9f2, name = k9f2, constant
par k9f2=3.329

# Parameter:   id =  k9b2, name = k9b2, constant
par k9b2=31.0

# Parameter:   id =  km9, name = km9, constant
par km9=5873.0

# Parameter:   id =  n9, name = n9, constant
par n9=0.9855

# Parameter:   id =  scaleIR, name = scaleIR, constant
par scaleIR=5.2022

# Parameter:   id =  scaleIRS1, name = scaleIRS1, constant
par scaleIRS1=0.37615

# Parameter:   id =  scaleIRS1ds, name = scaleIRS1ds, constant
par scaleIR_1=14.892

# Parameter:   id =  scaleIRS1307, name = scaleIRS1307, constant
par scaleIR_2=0.058663

# Parameter:   id =  scalePKB308, name = scalePKB308, constant
par scalePKB3=0.043564

# Parameter:   id =  scalePKB473, name = scalePKB473, constant
par scalePKB4=0.012996

# Parameter:   id =  scaleAS160, name = scaleAS160, constant
par scaleAS16=0.026656

# Parameter:   id =  scaleGLUCOSE, name = scaleGLUCOSE, constant
par scaleGLUC=0.040513

# Parameter:   id =  scaleS6K, name = scaleS6K, constant
par scaleS6K=0.74654

# Parameter:   id =  scaleS6, name = scaleS6, constant
par scaleS6=0.11494

# Parameter:   id =  gluc, name = gluc, constant
par gluc=0.05

# Parameter:   id =  insulin, name = insulin, constant
par insulin=10.0

# Parameter:   id =  measuredIRp, name = measuredIRp, defined by a Rule

# Parameter:   id =  measuredIRint, name = measuredIRint, defined by a Rule

# Parameter:   id =  measuredIRS1p, name = measuredIRS1p, defined by a Rule

# Parameter:   id =  measuredIRS1307, name = measuredIRS1307, defined by a Rule

# Parameter:   id =  measuredPKB308p, name = measuredPKB308p, defined by a Rule

# Parameter:   id =  measuredPKB473p, name = measuredPKB473p, defined by a Rule

# Parameter:   id =  measuredAS160p, name = measuredAS160p, defined by a Rule

# Parameter:   id =  measuredmTORC1a, name = measuredmTORC1a, defined by a Rule

# Parameter:   id =  measuredS6Kp, name = measuredS6Kp, defined by a Rule

# Parameter:   id =  measuredS6p, name = measuredS6p, defined by a Rule

# Parameter:   id =  measuredmTORC2a, name = measuredmTORC2a, defined by a Rule

# Parameter:   id =  glucoseuptake, name = glucoseuptake, defined by a Rule

# assignmentRule: variable = measuredIRp
measuredI=scaleIR*(IRp+IRip)
aux measuredI=measuredI

# assignmentRule: variable = measuredIRint
measure_1=IRi+IRip
aux measure_1=measure_1

# assignmentRule: variable = measuredIRS1p
measure_2=scaleIRS1*(IRS1p+IRS1p307)
aux measure_2=measure_2

# assignmentRule: variable = measuredIRS1307
measure_3=scaleIR_2*(IRS1p307+IRS1307)
aux measure_3=measure_3

# assignmentRule: variable = measuredPKB308p
measuredP=scalePKB3*(PKB308p+PKB308p47)
aux measuredP=measuredP

# assignmentRule: variable = measuredPKB473p
measure_4=scalePKB4*(PKB473p+PKB308p47)
aux measure_4=measure_4

# assignmentRule: variable = measuredAS160p
measuredA=scaleAS16*AS160p
aux measuredA=measuredA

# assignmentRule: variable = measuredmTORC1a
measuredm=mTORC1a
aux measuredm=measuredm

# assignmentRule: variable = measuredS6Kp
measuredS=scaleS6K*S6Kp
aux measuredS=measuredS

# assignmentRule: variable = measuredS6p
measure_5=scaleS6*S6p
aux measure_5=measure_5

# assignmentRule: variable = measuredmTORC2a
measure_6=mTORC2a
aux measure_6=measure_6

# assignmentRule: variable = glucoseuptake
glucoseup=k8*GLUT4m*gluc+glut1*gluc
aux glucoseup=glucoseup

# Reaction: id = v1a, name = v1a

v1a=IR*k1a*insulin

# Reaction: id = v1basal, name = v1basal

v1basal=k1basal*IR

# Reaction: id = v1c, name = v1c

v1c=IRins*k1c

# Reaction: id = v1d, name = v1d

v1d=IRp*k1d

# Reaction: id = v1e, name = v1e

v1e=IRip*k1f*Xp

# Reaction: id = v1g, name = v1g

v1g=IRp*k1g

# Reaction: id = v1r, name = v1r

v1r=IRi*k1r

# Reaction: id = v2a, name = v2a

v2a=IRS1*k2a*IRip

# Reaction: id = v2b, name = v2b

v2b=IRS1p*k2b

# Reaction: id = v2c, name = v2c

v2c=IRS1p*k2c*mTORC1a*diabetes

# Reaction: id = v2d, name = v2d

v2d=IRS1p307*k2d

# Reaction: id = v2f, name = v2f

v2f=IRS1p307*k2f

# Reaction: id = v2basal, name = v2basal

v2basal=IRS1*k2basal

# Reaction: id = v2g, name = v2g

v2g=IRS1307*k2g

# Reaction: id = v3a, name = v3a

v3a=X*k3a*IRS1p

# Reaction: id = v3b, name = v3b

v3b=Xp*k3b

# Reaction: id = v5a, name = v5a

v5a=mTORC1*(k5a1*PKB308p47+k5a2*PKB308p)

# Reaction: id = v5b, name = v5b

v5b=mTORC1a*k5b

# Reaction: id = v5c, name = v5c

v5c=mTORC2*k5c*IRip

# Reaction: id = v5d, name = v5d

v5d=k5d*mTORC2a

# Reaction: id = v4a, name = v4a

v4a=k4a*PKB*IRS1p

# Reaction: id = v4b, name = v4b

v4b=k4b*PKB308p

# Reaction: id = v4c, name = v4c

v4c=k4c*PKB308p*mTORC2a

# Reaction: id = v4e, name = v4e

v4e=k4e*PKB473p*IRS1p307

# Reaction: id = v4f, name = v4f

v4f=k4f*PKB308p47

# Reaction: id = v4h, name = v4h

v4h=k4h*PKB473p

# Reaction: id = v6f1, name = v6f1

v6f1=AS160*(k6f1*PKB308p47+k6f2*PKB473p^n6/(km6^n6+PKB473p^n6))

# Reaction: id = v6b1, name = v6b1

v6b1=AS160p*k6b

# Reaction: id = v7f, name = v7f

v7f=GLUT4*k7f*AS160p

# Reaction: id = v7b, name = v7b

v7b=GLUT4m*k7b

# Reaction: id = v9f1, name = v9f1

v9f1=S6K*k9f1*mTORC1a^n9/(km9^n9+mTORC1a^n9)

# Reaction: id = v9b1, name = v9b1

v9b1=S6Kp*k9b1

# Reaction: id = v9f2, name = v9f2

v9f2=S6*k9f2*S6Kp

# Reaction: id = v9b2, name = v9b2

v9b2=S6p*k9b2

# Species:   id = IR, name = IR, affected by kineticLaw

init IR=99.8737104842408
dIR/dt=(1/(cellvolum))*((-1.0 * v1a) + (-1.0 * v1basal) + ( 1.0 * v1g) + ( 1.0 * v1r))

# Species:   id = IRp, name = IRp, affected by kineticLaw

init IRp=0.00186253217635894
dIRp/dt=(1/(cellvolum))*(( 1.0 * v1basal) + ( 1.0 * v1c) + (-1.0 * v1d) + (-1.0 * v1g))

# Species:   id = IRins, name = IRins, affected by kineticLaw

init IRins=0.0
dIRins/dt=(1/(cellvolum))*(( 1.0 * v1a) + (-1.0 * v1c))

# Species:   id = IRip, name = IRip, affected by kineticLaw

init IRip=0.0188430465801578
dIRip/dt=(1/(cellvolum))*(( 1.0 * v1d) + (-1.0 * v1e))

# Species:   id = IRi, name = IRi, affected by kineticLaw

init IRi=0.105583925473107
dIRi/dt=(1/(cellvolum))*(( 1.0 * v1e) + (-1.0 * v1r))

# Species:   id = IRS1, name = IRS1, affected by kineticLaw

init IRS1=82.9671997523599
dIRS1/dt=(1/(cellvolum))*((-1.0 * v2a) + ( 1.0 * v2b) + (-1.0 * v2basal) + ( 1.0 * v2g))

# Species:   id = IRS1p, name = IRS1p, affected by kineticLaw

init IRS1p=0.00119481841136737
dIRS1p/dt=(1/(cellvolum))*(( 1.0 * v2a) + (-1.0 * v2b) + (-1.0 * v2c) + ( 1.0 * v2d))

# Species:   id = IRS1p307, name = IRS1p307, affected by kineticLaw

init IRS1p307=0.327454355438396
dIRS1p307/dt=(1/(cellvolum))*(( 1.0 * v2c) + (-1.0 * v2d) + (-1.0 * v2f))

# Species:   id = IRS1307, name = IRS1307, affected by kineticLaw

init IRS1307=16.7041510257561
dIRS1307/dt=(1/(cellvolum))*(( 1.0 * v2f) + ( 1.0 * v2basal) + (-1.0 * v2g))

# Species:   id = X, name = X, affected by kineticLaw

init X=99.9983336594667
dX/dt=(1/(cellvolum))*((-1.0 * v3a) + ( 1.0 * v3b))

# Species:   id = Xp, name = Xp, affected by kineticLaw

init Xp=0.00166634053318549
dXp/dt=(1/(cellvolum))*(( 1.0 * v3a) + (-1.0 * v3b))

# Species:   id = PKB, name = PKB, affected by kineticLaw

init PKB=68.1806649661901
dPKB/dt=(1/(cellvolum))*((-1.0 * v4a) + ( 1.0 * v4b) + ( 1.0 * v4h))

# Species:   id = PKB308p, name = PKB308p, affected by kineticLaw

init PKB308p=13.2964849666951
dPKB308p/dt=(1/(cellvolum))*(( 1.0 * v4a) + (-1.0 * v4b) + (-1.0 * v4c))

# Species:   id = PKB473p, name = PKB473p, affected by kineticLaw

init PKB473p=16.8171941560617
dPKB473p/dt=(1/(cellvolum))*((-1.0 * v4e) + ( 1.0 * v4f) + (-1.0 * v4h))

# Species:   id = PKB308p473p, name = PKB308p473p, affected by kineticLaw

par PKB308p47=1.70566051030056
aux PKB308p47=PKB308p47
dPKB308p47/dt=(1/(cellvolum))*(( 1.0 * v4c) + ( 1.0 * v4e) + (-1.0 * v4f))

# Species:   id = mTORC1, name = mTORC1, affected by kineticLaw

init mTORC1=86.5002472240273
dmTORC1/dt=(1/(cellvolum))*((-1.0 * v5a) + ( 1.0 * v5b))

# Species:   id = mTORC1a, name = mTORC1a, affected by kineticLaw

init mTORC1a=13.4997527759726
dmTORC1a/dt=(1/(cellvolum))*(( 1.0 * v5a) + (-1.0 * v5b))

# Species:   id = mTORC2, name = mTORC2, affected by kineticLaw

init mTORC2=99.8478148461591
dmTORC2/dt=(1/(cellvolum))*((-1.0 * v5c) + ( 1.0 * v5d))

# Species:   id = mTORC2a, name = mTORC2a, affected by kineticLaw

init mTORC2a=0.152185153840861
dmTORC2a/dt=(1/(cellvolum))*(( 1.0 * v5c) + (-1.0 * v5d))

# Species:   id = AS160, name = AS160, affected by kineticLaw

init AS160=83.8141018591099
dAS160/dt=(1/(cellvolum))*((-1.0 * v6f1) + ( 1.0 * v6b1))

# Species:   id = AS160p, name = AS160p, affected by kineticLaw

init AS160p=16.1858981408903
dAS160p/dt=(1/(cellvolum))*(( 1.0 * v6f1) + (-1.0 * v6b1))

# Species:   id = GLUT4m, name = GLUT4m, affected by kineticLaw

init GLUT4m=26.523878746229
dGLUT4m/dt=(1/(cellvolum))*(( 1.0 * v7f) + (-1.0 * v7b))

# Species:   id = GLUT4, name = GLUT4, affected by kineticLaw

init GLUT4=73.476121253771
dGLUT4/dt=(1/(cellvolum))*((-1.0 * v7f) + ( 1.0 * v7b))

# Species:   id = S6K, name = S6K, affected by kineticLaw

init S6K=99.2731987219547
dS6K/dt=(1/(cellvolum))*((-1.0 * v9f1) + ( 1.0 * v9b1))

# Species:   id = S6Kp, name = S6Kp, affected by kineticLaw

init S6Kp=0.72680127804522
dS6Kp/dt=(1/(cellvolum))*(( 1.0 * v9f1) + (-1.0 * v9b1))

# Species:   id = S6, name = S6, affected by kineticLaw

init S6=92.7596420796038
dS6/dt=(1/(cellvolum))*((-1.0 * v9f2) + ( 1.0 * v9b2))

# Species:   id = S6p, name = S6p, affected by kineticLaw

init S6p=7.24035792039603
dS6p/dt=(1/(cellvolum))*(( 1.0 * v9f2) + (-1.0 * v9b2))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

