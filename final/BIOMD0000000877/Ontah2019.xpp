
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ontah2019 - Dynamic analysis of a tumor treatment model using oncolytic virus and chemotherapy with saturated infection rate
#
# isDescribedBy http://identifiers.org/doi/10.1088/1757-899X/546/3/032025
# is http://identifiers.org/biomodels.db/MODEL1911270004
# is http://identifiers.org/biomodels.db/BIOMD0000000877
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_Tumor_Growth, name = Function_for_Tumor_Growth
Function_(r,U,I,K)=(r*U*(1-(U+I)/K))


# FunctionDefinition id = Function_for_Uninfected_Tumor_Lysis_Drug, name = Function_for_Uninfected_Tumor_Lysis_Drug
Functio_1(delta,U,C,K_c)=(delta*U*C/(K_c+C))


# FunctionDefinition id = Function_for_Tumor_Cell_Infection, name = Function_for_Tumor_Cell_Infection
Functio_2(beta,U,V,I,alpha)=(beta*U*V/(U+I+alpha))


# FunctionDefinition id = Function_for_Infected_Tumor_Lysis_Drug, name = Function_for_Infected_Tumor_Lysis_Drug
Functio_3(delta_I,I,C,K_c)=(delta_I*I*C/(K_c+C))


# FunctionDefinition id = Function_for_Virus_Production, name = Function_for_Virus_Production
Functio_4(b,delta,I)=(b*delta*I)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  r, name = r, constant
par r=0.1

# Parameter:   id =  K, name = K, constant
par K=2139.0

# Parameter:   id =  beta, name = beta, constant
par beta=0.01

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.5

# Parameter:   id =  delta_u, name = delta_u, constant
par delta_u=50.0

# Parameter:   id =  K_c, name = K_c, constant
par K_c=10000.0

# Parameter:   id =  delta, name = delta, constant
par delta=0.5

# Parameter:   id =  delta_i, name = delta_i, constant
par delta_i=60.0

# Parameter:   id =  b, name = b, constant
par b=0.5

# Parameter:   id =  gamma, name = gamma, constant
par gamma=0.1

# Parameter:   id =  mu, name = mu, constant
par mu=150.0

# Parameter:   id =  psi, name = psi, constant
par psi=4.17

# Reaction: id = Tumor_Growth, name = Tumor_Growth

Tumor_Gro=compartme*Function_(r, U, I, K)

# Reaction: id = Tumor_Cell_Infection, name = Tumor_Cell_Infection

Tumor_Cel=compartme*Functio_2(beta, U, V, I, alpha)

# Reaction: id = Uninfected_Tumor_Lysis_Drug, name = Uninfected_Tumor_Lysis_Drug

Uninfecte=compartme*Functio_1(delta_u, U, C, K_c)

# Reaction: id = Infected_Tumor_Lysis_Drug, name = Infected_Tumor_Lysis_Drug

Infected_=compartme*Functio_3(delta_i, I, C, K_c)

# Reaction: id = Infected_Tumor_Death, name = Infected_Tumor_Death

Infecte_1=compartme*delta*I

# Reaction: id = Virus_Production, name = Virus_Production

Virus_Pro=compartme*Functio_4(b, delta, I)

# Reaction: id = Virus_Decay, name = Virus_Decay

Virus_Dec=compartme*gamma*V

# Reaction: id = Drug_Injection, name = Drug_Injection

Drug_Inje=compartme*Constant_(mu)

# Reaction: id = Drug_Decay, name = Drug_Decay

Drug_Deca=compartme*psi*C

# Species:   id = U, name = U, affected by kineticLaw

init U=100.0
dU/dt=(1/(compartme))*(( 1.0 * Tumor_Gro) + (-1.0 * Tumor_Cel) + (-1.0 * Uninfecte))

# Species:   id = I, name = I, affected by kineticLaw

init I=10.0
dI/dt=(1/(compartme))*(( 1.0 * Tumor_Cel) + (-1.0 * Infected_) + (-1.0 * Infecte_1))

# Species:   id = V, name = V, affected by kineticLaw

init V=10.0
dV/dt=(1/(compartme))*((-1.0 * Tumor_Cel) + ( 1.0 * Virus_Pro) + (-1.0 * Virus_Dec))

# Species:   id = C, name = C, affected by kineticLaw

init C=30.0
dC/dt=(1/(compartme))*(( 1.0 * Drug_Inje) + (-1.0 * Drug_Deca))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

