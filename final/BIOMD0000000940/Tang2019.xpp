
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Tang2019 - Pharmacology modelling of AURKB and ZAK interaction in TNBC
#
# isDescribedBy http://identifiers.org/pubmed/31312514
# is http://identifiers.org/biomodels.db/MODEL2004230001
# is http://identifiers.org/biomodels.db/BIOMD0000000940
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Mass_action_modifier_1, name = Mass_action_modifier_1
Mass_acti(k1,substrate,modifier,const)=(k1*substrate*modifier*const)


# FunctionDefinition id = Mass_action_modifier, name = Mass_action_modifier
Mass_ac_1(k1,substrate,modifier)=(k1*substrate*modifier)


# FunctionDefinition id = Linear_modi, name = Linear_modi
Linear_mo(k,M)=(k*M)


# Compartment: id = Cell, name = Cell, constant
par Cell=1.0

# Parameter:   id =  k_pkn1, name = k_pkn1, constant
par k_pkn1=0.5

# Parameter:   id =  kd_pkn1, name = kd_pkn1, constant
par kd_pkn1=0.005

# Parameter:   id =  k_zak, name = k_zak, constant
par k_zak=0.1

# Parameter:   id =  kd_zak, name = kd_zak, constant
par kd_zak=0.5

# Parameter:   id =  k_map2k3, name = k_map2k3, constant
par k_map2k3=0.2

# Parameter:   id =  kd_map2k3, name = kd_map2k3, constant
par kd_map2k3=0.6

# Parameter:   id =  k_mapk14, name = k_mapk14, constant
par k_mapk14=2.0

# Parameter:   id =  kd_mapk14, name = kd_mapk14, constant
par kd_mapk14=5.0

# Parameter:   id =  k_map2k4, name = k_map2k4, constant
par k_map2k4=0.2

# Parameter:   id =  kd_map2k4, name = kd_map2k4, constant
par kd_map2k4=0.6

# Parameter:   id =  k_tp53, name = k_tp53, constant
par k_tp53=0.6

# Parameter:   id =  k_atm, name = k_atm, constant
par k_atm=0.1

# Parameter:   id =  kd_tp53, name = kd_tp53, constant
par kd_tp53=2.0

# Parameter:   id =  kd_atm, name = kd_atm, constant
par kd_atm=3.0

# Parameter:   id =  k_mapk13, name = k_mapk13, constant
par k_mapk13=2.0

# Parameter:   id =  kd_mapk13, name = kd_mapk13, constant
par kd_mapk13=1.4

# Parameter:   id =  k_prkaca, name = k_prkaca, constant
par k_prkaca=2.0

# Parameter:   id =  kd_prkaca, name = kd_prkaca, constant
par kd_prkaca=6.0

# Parameter:   id =  k_src, name = k_src, constant
par k_src=0.2

# Parameter:   id =  kd_src, name = kd_src, constant
par kd_src=1.0

# Parameter:   id =  k_bad, name = k_bad, constant
par k_bad=5.0

# Parameter:   id =  kd_bad, name = kd_bad, constant
par kd_bad=0.04

# Parameter:   id =  k_pik3r1, name = k_pik3r1, constant
par k_pik3r1=2.0

# Parameter:   id =  kd_pik3r1, name = kd_pik3r1, constant
par kd_pik3r1=10.0

# Parameter:   id =  k_csf1r, name = k_csf1r, constant
par k_csf1r=2.0

# Parameter:   id =  kd_csf1r, name = kd_csf1r, constant
par kd_csf1r=30.0

# Parameter:   id =  k_shc1, name = k_shc1, constant
par k_shc1=2.0

# Parameter:   id =  kd_shc1, name = kd_shc1, constant
par kd_shc1=0.06

# Parameter:   id =  k_pten, name = k_pten, constant
par k_pten=0.2

# Parameter:   id =  kd_pten, name = kd_pten, constant
par kd_pten=0.5

# Parameter:   id =  k_parp1, name = k_parp1, constant
par k_parp1=0.5

# Parameter:   id =  kd_parp1, name = kd_parp1, constant
par kd_parp1=0.005

# Parameter:   id =  k_aurkb, name = k_aurkb, constant
par k_aurkb=3.0

# Parameter:   id =  kd_aurkb, name = kd_aurkb, constant
par kd_aurkb=4.5

# Parameter:   id =  k_brca1, name = k_brca1, constant
par k_brca1=2.0

# Parameter:   id =  kd_brca1, name = kd_brca1, constant
par kd_brca1=20.0

# Parameter:   id =  k_ywhaz, name = k_ywhaz, constant
par k_ywhaz=0.9

# Parameter:   id =  kd_ywhaz, name = kd_ywhaz, constant
par kd_ywhaz=0.072

# Parameter:   id =  k_tgfbr1, name = k_tgfbr1, constant
par k_tgfbr1=0.5

# Parameter:   id =  kd_tgfbr1, name = kd_tgfbr1, constant
par kd_tgfbr1=0.45

# Reaction: id = PKN1_Prod, name = PKN1_Prod

PKN1_Prod=Cell*Constant_(k_pkn1)

# Reaction: id = PKN1_Degrad, name = PKN1_Degrad

PKN1_Degr=Cell*kd_pkn1*PKN1

# Reaction: id = ZAK_Prod, name = ZAK_Prod

ZAK_Prod=Cell*Linear_mo(k_zak, PKN1)

# Reaction: id = ZAK_Degrad, name = ZAK_Degrad

ZAK_Degra=Cell*kd_zak*ZAK

# Reaction: id = MAP2K3_Prod, name = MAP2K3_Prod

MAP2K3_Pr=Cell*Linear_mo(k_map2k3, PKN1)

# Reaction: id = MAP2K3_Degrad, name = MAP2K3_Degrad

MAP2K3_De=Cell*kd_map2k3*MAP2K3

# Reaction: id = MAPK14_Prod, name = MAPK14_Prod

MAPK14_Pr=Cell*Linear_mo(k_mapk14, MAP2K3)

# Reaction: id = MAPK14_Degrad, name = MAPK14_Degrad

MAPK14_De=Cell*kd_mapk14*MAPK14

# Reaction: id = MAP2K4_Prod, name = MAP2K4_Prod

MAP2K4_Pr=Cell*Linear_mo(k_map2k4, MAP2K3)

# Reaction: id = MAP2K4_Degrad, name = MAP2K4_Degrad

MAP2K4_De=Cell*kd_map2k4*MAP2K4

# Reaction: id = TP53_Prod, name = TP53_Prod

TP53_Prod=Cell*Linear_mo(k_tp53, MAPK14)

# Reaction: id = TP53_Degrad, name = TP53_Degrad

TP53_Degr=Cell*kd_tp53*TP53

# Reaction: id = ATM_Prod, name = ATM_Prod

ATM_Prod=Cell*Linear_mo(k_atm, MAPK14)

# Reaction: id = ATM_Degrad, name = ATM_Degrad

ATM_Degra=Cell*kd_atm*ATM

# Reaction: id = MAPK14_Prod2, name = MAPK14_Prod2

MAPK14__1=Cell*Linear_mo(k_mapk14, MAP2K4)

# Reaction: id = MAPK13_Prod, name = MAPK13_Prod

MAPK13_Pr=Cell*Linear_mo(k_mapk13, MAP2K4)

# Reaction: id = MAPK13_Degrad, name = MAPK13_Degrad

MAPK13_De=Cell*kd_mapk13*MAPK13

# Reaction: id = PRKACA_Prod, name = PRKACA_Prod

PRKACA_Pr=Cell*Linear_mo(k_prkaca, MAPK13)

# Reaction: id = PRKACA_Degrad, name = PRKACA_Degrad

PRKACA_De=Cell*kd_prkaca*PRKACA

# Reaction: id = SRC_Prod, name = SRC_Prod

SRC_Prod=Cell*Linear_mo(k_src, PRKACA)

# Reaction: id = SRC_Degrad, name = SRC_Degrad

SRC_Degra=Cell*kd_src*SRC

# Reaction: id = BAD_Prod, name = BAD_Prod

BAD_Prod=Cell*Constant_(k_bad)

# Reaction: id = BAD_Degrad, name = BAD_Degrad

BAD_Degra=Cell*kd_bad*BAD

# Reaction: id = TP53_Prod2, name = TP53_Prod2

TP53_Pr_1=Cell*Linear_mo(k_tp53, SRC)

# Reaction: id = TP53_Prod3, name = TP53_Prod3

TP53_Pr_2=Cell*Linear_mo(k_tp53, BAD)

# Reaction: id = PTEN_Prod, name = PTEN_Prod

PTEN_Prod=Cell*Linear_mo(k_pten, TP53)

# Reaction: id = PTEN_Degrad, name = PTEN_Degrad

PTEN_Degr=Cell*kd_pten*PTEN

# Reaction: id = SHC1_Prod, name = SHC1_Prod

SHC1_Prod=Cell*Linear_mo(k_shc1, TGFBR1)

# Reaction: id = SHC1_Degrad, name = SHC1_Degrad

SHC1_Degr=Cell*Mass_ac_1(kd_shc1, SHC1, PTEN)

# Reaction: id = PIK3R1_Degrad, name = PIK3R1_Degrad

PIK3R1_De=Cell*Mass_ac_1(kd_pik3r1, PIK3R1, PTEN)

# Reaction: id = PARP1_Prod, name = PARP1_Prod

PARP1_Pro=Cell*Constant_(k_parp1)

# Reaction: id = PARP1_Degrad, name = PARP1_Degrad

PARP1_Deg=Cell*kd_parp1*PARP1

# Reaction: id = AURKB_Prod, name = AURKB_Prod

AURKB_Pro=Cell*Linear_mo(k_aurkb, PARP1)

# Reaction: id = AURKB_Degrad, name = AURKB_Degrad

AURKB_Deg=Cell*kd_aurkb*AURKB

# Reaction: id = ATM_Prod2, name = ATM_Prod2

ATM_Prod2=Cell*Linear_mo(k_atm, PARP1)

# Reaction: id = TP53_Prod4, name = TP53_Prod4

TP53_Pr_3=Cell*Linear_mo(k_tp53, PARP1)

# Reaction: id = BRCA1_Prod, name = BRCA1_Prod

BRCA1_Pro=Cell*Linear_mo(k_brca1, PARP1)

# Reaction: id = BRCA1_Degrad, name = BRCA1_Degrad

BRCA1_Deg=Cell*kd_brca1*BRCA1

# Reaction: id = TP53_Prod5, name = TP53_Prod5

TP53_Pr_4=Cell*Linear_mo(k_tp53, ATM)

# Reaction: id = TP53_Prod6, name = TP53_Prod6

TP53_Pr_5=Cell*Linear_mo(k_tp53, BRCA1)

# Reaction: id = BRCA1_Prod2, name = BRCA1_Prod2

BRCA1_P_1=Cell*Linear_mo(k_brca1, ATM)

# Reaction: id = SRC_Prod2, name = SRC_Prod2

SRC_Prod2=Cell*Linear_mo(k_src, CSF1R)

# Reaction: id = YWHAZ_Prod, name = YWHAZ_Prod

YWHAZ_Pro=Cell*Linear_mo(k_ywhaz, ZAK)

# Reaction: id = YWHAZ_Degrad, name = YWHAZ_Degrad

YWHAZ_Deg=Cell*kd_ywhaz*YWHAZ

# Reaction: id = MAP2K3_Prod2, name = MAP2K3_Prod2

MAP2K3__1=Cell*Linear_mo(k_map2k3, ZAK)

# Reaction: id = MAP2K4_Prod2, name = MAP2K4_Prod2

MAP2K4__1=Cell*Linear_mo(k_map2k4, ZAK)

# Reaction: id = TGFBR1_Prod, name = TGFBR1_Prod

TGFBR1_Pr=Cell*Linear_mo(k_tgfbr1, ZAK)

# Reaction: id = TGFBR1_Degrad, name = TGFBR1_Degrad

TGFBR1_De=Cell*kd_tgfbr1*TGFBR1

# Reaction: id = BAD_Degrad2, name = BAD_Degrad2
# Local Parameter:   id =  const, name = const
par const=0.0133


BAD_Deg_1=Cell*Mass_acti(kd_bad, BAD, YWHAZ, const)

# Reaction: id = PIK3R1_Prod, name = PIK3R1_Prod

PIK3R1_Pr=Cell*Linear_mo(k_pik3r1, YWHAZ)

# Reaction: id = CSF1R_Prod, name = CSF1R_Prod

CSF1R_Pro=Cell*Linear_mo(k_csf1r, PIK3R1)

# Reaction: id = TGFBR1_Prod2, name = TGFBR1_Prod2

TGFBR1__1=Cell*Linear_mo(k_tgfbr1, PIK3R1)

# Reaction: id = MAPK14_Prod3, name = MAPK14_Prod3

MAPK14__2=Cell*Linear_mo(k_mapk14, TGFBR1)

# Reaction: id = MAPK14_Prod4, name = MAPK14_Prod4

MAPK14__3=Cell*Linear_mo(k_mapk14, SHC1)

# Reaction: id = PIK3R1_Prod2, name = PIK3R1_Prod2

PIK3R1__1=Cell*Linear_mo(k_pik3r1, SHC1)

# Reaction: id = CSF1R_Prod2, name = CSF1R_Prod2

CSF1R_P_1=Cell*Linear_mo(k_csf1r, SHC1)

# Reaction: id = CSF1R_Degrad, name = CSF1R_Degrad

CSF1R_Deg=Cell*kd_csf1r*CSF1R

# Reaction: id = ATM_Prod3, name = ATM_Prod3

ATM_Prod3=Cell*Linear_mo(k_atm, AURKB)

# Reaction: id = PRKACA_Prod2, name = PRKACA_Prod2

PRKACA__1=Cell*Linear_mo(k_prkaca, AURKB)

# Reaction: id = TP53_Degrad2, name = TP53_Degrad2
# Local Parameter:   id =  const, name = const
par const_1=0.0067


TP53_De_1=Cell*Mass_acti(kd_tp53, TP53, AURKB, const_1)

# Species:   id = PKN1, name = PKN1, affected by kineticLaw

init PKN1=0.0
dPKN1/dt=(1/(Cell))*(( 1.0 * PKN1_Prod) + (-1.0 * PKN1_Degr))

# Species:   id = ZAK, name = ZAK, affected by kineticLaw

init ZAK=0.0
dZAK/dt=(1/(Cell))*(( 1.0 * ZAK_Prod) + (-1.0 * ZAK_Degra))

# Species:   id = MAP2K3, name = MAP2K3, affected by kineticLaw

init MAP2K3=0.0
dMAP2K3/dt=(1/(Cell))*(( 1.0 * MAP2K3_Pr) + (-1.0 * MAP2K3_De) + ( 1.0 * MAP2K3__1))

# Species:   id = MAPK14, name = MAPK14, affected by kineticLaw

init MAPK14=0.0
dMAPK14/dt=(1/(Cell))*(( 1.0 * MAPK14_Pr) + (-1.0 * MAPK14_De) + ( 1.0 * MAPK14__1) + ( 1.0 * MAPK14__2) + ( 1.0 * MAPK14__3))

# Species:   id = MAP2K4, name = MAP2K4, affected by kineticLaw

init MAP2K4=0.0
dMAP2K4/dt=(1/(Cell))*(( 1.0 * MAP2K4_Pr) + (-1.0 * MAP2K4_De) + ( 1.0 * MAP2K4__1))

# Species:   id = TP53, name = TP53, affected by kineticLaw

init TP53=0.0
dTP53/dt=(1/(Cell))*(( 1.0 * TP53_Prod) + (-1.0 * TP53_Degr) + ( 1.0 * TP53_Pr_1) + ( 1.0 * TP53_Pr_2) + ( 1.0 * TP53_Pr_3) + ( 1.0 * TP53_Pr_4) + ( 1.0 * TP53_Pr_5) + (-1.0 * TP53_De_1))

# Species:   id = ATM, name = ATM, affected by kineticLaw

init ATM=1.0
dATM/dt=(1/(Cell))*(( 1.0 * ATM_Prod) + (-1.0 * ATM_Degra) + ( 1.0 * ATM_Prod2) + ( 1.0 * ATM_Prod3))

# Species:   id = MAPK13, name = MAPK13, affected by kineticLaw

init MAPK13=1.0
dMAPK13/dt=(1/(Cell))*(( 1.0 * MAPK13_Pr) + (-1.0 * MAPK13_De))

# Species:   id = PRKACA, name = PRKACA, affected by kineticLaw

init PRKACA=1.0
dPRKACA/dt=(1/(Cell))*(( 1.0 * PRKACA_Pr) + (-1.0 * PRKACA_De) + ( 1.0 * PRKACA__1))

# Species:   id = SRC, name = SRC, affected by kineticLaw

init SRC=1.0
dSRC/dt=(1/(Cell))*(( 1.0 * SRC_Prod) + (-1.0 * SRC_Degra) + ( 1.0 * SRC_Prod2))

# Species:   id = BAD, name = BAD, affected by kineticLaw

init BAD=1.0
dBAD/dt=(1/(Cell))*(( 1.0 * BAD_Prod) + (-1.0 * BAD_Degra) + (-1.0 * BAD_Deg_1))

# Species:   id = PTEN, name = PTEN, affected by kineticLaw

init PTEN=1.0
dPTEN/dt=(1/(Cell))*(( 1.0 * PTEN_Prod) + (-1.0 * PTEN_Degr))

# Species:   id = SHC1, name = SHC1, affected by kineticLaw

init SHC1=1.0
dSHC1/dt=(1/(Cell))*(( 1.0 * SHC1_Prod) + (-1.0 * SHC1_Degr))

# Species:   id = PIK3R1, name = PIK3R1, affected by kineticLaw

init PIK3R1=1.0
dPIK3R1/dt=(1/(Cell))*((-1.0 * PIK3R1_De) + ( 1.0 * PIK3R1_Pr) + ( 1.0 * PIK3R1__1))

# Species:   id = PARP1, name = PARP1, affected by kineticLaw

init PARP1=1.0
dPARP1/dt=(1/(Cell))*(( 1.0 * PARP1_Pro) + (-1.0 * PARP1_Deg))

# Species:   id = AURKB, name = AURKB, affected by kineticLaw

init AURKB=1.0
dAURKB/dt=(1/(Cell))*(( 1.0 * AURKB_Pro) + (-1.0 * AURKB_Deg))

# Species:   id = BRCA1, name = BRCA1, affected by kineticLaw

init BRCA1=1.0
dBRCA1/dt=(1/(Cell))*(( 1.0 * BRCA1_Pro) + (-1.0 * BRCA1_Deg) + ( 1.0 * BRCA1_P_1))

# Species:   id = YWHAZ, name = YWHAZ, affected by kineticLaw

init YWHAZ=1.0
dYWHAZ/dt=(1/(Cell))*(( 1.0 * YWHAZ_Pro) + (-1.0 * YWHAZ_Deg))

# Species:   id = TGFBR1, name = TGFBR1, affected by kineticLaw

init TGFBR1=1.0
dTGFBR1/dt=(1/(Cell))*(( 1.0 * TGFBR1_Pr) + (-1.0 * TGFBR1_De) + ( 1.0 * TGFBR1__1))

# Species:   id = CSF1R, name = CSF1R, affected by kineticLaw

init CSF1R=1.0
dCSF1R/dt=(1/(Cell))*(( 1.0 * CSF1R_Pro) + ( 1.0 * CSF1R_P_1) + (-1.0 * CSF1R_Deg))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

