
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = dePillis2008 - Optimal control of mixed immunotherapy and chemotherapy of tumors
#
# isDerivedFrom http://identifiers.org/mamo/MAMO_0000046
# isDerivedFrom http://identifiers.org/taxonomy/9606
# isDerivedFrom http://identifiers.org/biomodels.db/MODEL2001160001
# isDescribedBy http://identifiers.org/biomodels.db/MODEL2001160001
# isDescribedBy http://identifiers.org/doi/10.1142/S0218339008002435
# is http://identifiers.org/biomodels.db/MODEL2001200003
# is http://identifiers.org/biomodels.db/BIOMD0000000913
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_formation_of_tumor_cell_population, name = Function for formation of tumor cell population
Function_(a,T,b)=(a*T*(1-b*T))


# FunctionDefinition id = Function_for_removal_of_circulating_lymphocyte_population, name = Function for removal of circulating lymphocyte population
Functio_1(beta,C,K_C,M)=(beta*C+K_C*M*C)


# FunctionDefinition id = Function_for_increase_in_circulating_lymphocyte_population, name = Function for increase in circulating lymphocyte population
Functio_2(alpha_2)=(alpha_2)


# FunctionDefinition id = Function_for_elimunation_of_non_specific_effector_cell_population, name = Function for elimunation of non specific effector cell population
Functio_3(f,N,p,T,K_N,M)=(f*N+p*N*T+K_N*M*N)


# FunctionDefinition id = Function_for_elimination_of_tumor_cell, name = Function for elimination of tumor cell
Functio_4(c1,N,T,D,K_T,M)=(c1*N*T+D*T+K_T*M*T)


# FunctionDefinition id = Function_for_activation_and_transfer_of_CTL_at_site_of_tumor, name = Function for activation and transfer of CTL at site of tumor
Functio_5(r2,C,T,p_I,L,I,g_I,V_L)=(r2*C*T+p_I*L*I/(g_I+I)+V_L)


# FunctionDefinition id = Function_for_elimination_of_CTL, name = Function for elimination of CTL
Functio_6(m,L,q,T,u,K_L,M)=(m*L+q*L*T+u*L*L+K_L*M*L)


# FunctionDefinition id = Function_for_increase_in_chemotherapy_drug_in_the_blood, name = Function for increase in chemotherapy drug in the blood
Functio_7(V_M)=(V_M)


# FunctionDefinition id = Function_for_activation_of_non_specific_effector_cell_population, name = Function for activation of non specific effector cell population
Functio_8(alpha_1,g,T,eta,h,N)=(alpha_1+g*T^eta/(h+T^eta)*N)


# FunctionDefinition id = Function_for_increase_in_IL_2_population, name = Function for increase in IL-2 population
Functio_9(p_T,T,g_T,L,w,I,V_I)=(p_T*T/(g_T+T)*L+w*L*I+V_I)


# FunctionDefinition id = Function_for_decrease_in_IL2_production, name = Function for decrease in IL2 production
Functi_10(mu_I,I)=(mu_I*I)


# FunctionDefinition id = Function_for_decrease_in_chemotherapy_drug_in_the_blood, name = Function for decrease in chemotherapy drug in the blood
Functi_11(gamma,M)=(gamma*M)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  d, name = d, constant
par d=5.0

# Parameter:   id =  s, name = s, constant
par s=0.3

# Parameter:   id =  l, name = l, constant
par l=2.0

# Parameter:   id =  D, name = D, defined by a Rule

# Parameter:   id =  a, name = a, constant
par a=0.002

# Parameter:   id =  b, name = b, constant
par b=1.02E-9

# Parameter:   id =  c1, name = c1, constant
par c1=3.23E-7

# Parameter:   id =  f, name = f, constant
par f=0.0412

# Parameter:   id =  g, name = g, constant
par g=0.025

# Parameter:   id =  g_I, name = g_I, constant
par g_I=2.0E7

# Parameter:   id =  g_T, name = g_T, constant
par g_T=100000.0

# Parameter:   id =  h, name = h, constant
par h=600.0

# Parameter:   id =  K_C, name = K_C, constant
par K_C=0.6

# Parameter:   id =  K_L, name = K_L, constant
par K_L=0.6

# Parameter:   id =  K_N, name = K_N, constant
par K_N=0.6

# Parameter:   id =  K_T, name = K_T, constant
par K_T=0.8

# Parameter:   id =  m, name = m, constant
par m=0.02

# Parameter:   id =  p, name = p, constant
par p=1.0E-7

# Parameter:   id =  p_I, name = p_I, constant
par p_I=0.125

# Parameter:   id =  p_T, name = p_T, constant
par p_T=0.6

# Parameter:   id =  q, name = q, constant
par q=3.42E-10

# Parameter:   id =  r2, name = r2, constant
par r2=3.0E-11

# Parameter:   id =  s_1, name = s_1, constant
par s_1=0.3

# Parameter:   id =  u, name = u, constant
par u=3.0

# Parameter:   id =  w, name = w, constant
par w=2.0E-4

# Parameter:   id =  alpha_1, name = alpha_1, constant
par alpha_1=13000.0

# Parameter:   id =  alpha_2, name = alpha_2, constant
par alpha_2=5.0E8

# Parameter:   id =  beta, name = beta, constant
par beta=0.012

# Parameter:   id =  gamma, name = gamma, constant
par gamma=0.9

# Parameter:   id =  eta, name = eta, constant
par eta=1.0

# Parameter:   id =  mu_I, name = mu_I, constant
par mu_I=10.0

# Parameter:   id =  ModelValue_0, name = Initial for d, constant
par ModelValu=5.0

# Parameter:   id =  ModelValue_2, name = Initial for l, constant
par ModelVa_1=2.0

# Parameter:   id =  ModelValue_1, name = Initial for s, constant
par ModelVa_2=0.3

# assignmentRule: variable = D
D_1=ModelValu*(L_1/T_renamed)^ModelVa_1/(ModelVa_2+(L_1/T_renamed)^ModelVa_1)
aux D_1=D_1

# Reaction: id = Detection_and_induction_of_tumor_cell_population, name = Detection and induction of tumor cell population

Detection=compartme*Function_(a, T_renamed, b)

# Reaction: id = Elimination_of_tumor_by_the_action_of_immune_response, name = Elimination of tumor by the action of immune response

Eliminati=compartme*Functio_4(c1, N, T_renamed, D_1, K_T, M_1)

# Reaction: id = Activation_and_transfer_of_tumor_specific_CTL_at_the_site_of_tumor, name = Activation and transfer of tumor specific CTL at the site of tumor
# Local Parameter:   id =  V_L, name = V_L
par V_L=0.0


Activatio=compartme*Functio_5(r2, C, T_renamed, p_I, L_1, I, g_I, V_L)

# Reaction: id = Elimination_of_tumor_specific_CLT, name = Elimination of tumor specific CLT

Elimina_1=compartme*Functio_6(m, L_1, q, T_renamed, u, K_L, M_1)

# Reaction: id = Activation_of_nonspecific_effector_immune_cell_population, name = Activation of nonspecific effector immune cell population

Activat_1=compartme*Functio_8(alpha_1, g, T_renamed, eta, h, N)

# Reaction: id = Inactivation_and_elimination_of_non_specific_effector_immune_cell_population, name = Inactivation and elimination of non specific effector immune cell population

Inactivat=compartme*Functio_3(f, N, p, T_renamed, K_N, M_1)

# Reaction: id = Activation_and_increase_of_circulating_lymphocyte_population, name = Activation and increase of circulating lymphocyte population

Activat_2=compartme*Functio_2(alpha_2)

# Reaction: id = Removal_of_ciruclating_lymphocyte_population, name = Removal of ciruclating lymphocyte population

Removal_o=compartme*Functio_1(beta, C, K_C, M_1)

# Reaction: id = Increase_in_IL_2_concentration, name = Increase in IL-2 concentration
# Local Parameter:   id =  V_I, name = V_I
par V_I=0.0


Increase_=compartme*Functio_9(p_T, T_renamed, g_T, L_1, w, I, V_I)

# Reaction: id = Decrease_in_IL_2_production, name = Decrease in IL-2 production

Decrease_=compartme*Functi_10(mu_I, I)

# Reaction: id = Increase_of_chemotherapy_drug_in_the_blood, name = Increase of chemotherapy drug in the blood
# Local Parameter:   id =  V_M, name = V_M
par V_M=0.0


Increas_1=compartme*Functio_7(V_M)

# Reaction: id = Decrease_in_chemotherapy_Drug_in_the_blood, name = Decrease in chemotherapy Drug in the blood

Decreas_1=compartme*Functi_11(gamma, M_1)

# Species:   id = T, name = T, affected by kineticLaw

par T_renamed=1.0E7
aux T_renamed=T_renamed
dT_renamed/dt=(1/(compartme))*(( 1.0 * Detection) + (-1.0 * Eliminati))

# Species:   id = L, name = L, affected by kineticLaw

par L_1=2000.0
aux L_1=L_1
dL_1/dt=(1/(compartme))*(( 1.0 * Activatio) + (-1.0 * Elimina_1))

# Species:   id = N, name = N, affected by kineticLaw

init N=500000.0
dN/dt=(1/(compartme))*(( 1.0 * Activat_1) + (-1.0 * Inactivat))

# Species:   id = C, name = C, affected by kineticLaw

init C=4.17E10
dC/dt=(1/(compartme))*(( 1.0 * Activat_2) + (-1.0 * Removal_o))

# Species:   id = I, name = I, affected by kineticLaw

init I=2000.0
dI/dt=(1/(compartme))*(( 1.0 * Increase_) + (-1.0 * Decrease_))

# Species:   id = M, name = M, affected by kineticLaw

par M_1=0.0
aux M_1=M_1
dM_1/dt=(1/(compartme))*(( 1.0 * Increas_1) + (-1.0 * Decreas_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

