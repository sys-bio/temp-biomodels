
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Lipniacki2004 - Mathematical model of NFKB regulatory module
#
# isDescribedBy http://identifiers.org/pubmed/15094015
# is http://identifiers.org/biomodels.db/MODEL1908090003
# is http://identifiers.org/biomodels.db/BIOMD0000000786
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = function_for_R3, name = function for R3
function_(K3,X1,Substrate)=(K3*X1*Substrate)


# FunctionDefinition id = function_for_R26, name = function for R26
functio_1(k,X1,X2,S1)=(k*X1*X2*S1)


# FunctionDefinition id = function_for_substrateless_production, name = function for substrateless production
functio_2(k,X1)=(k*X1)


# FunctionDefinition id = function_for_transport, name = function for transport
functio_3(k,kv,S)=(k*kv*S)


# FunctionDefinition id = function_for_indirect_transport, name = function for indirect transport
functio_4(x,kv,S)=(x*kv*S)


# FunctionDefinition id = function_for_indirect_production, name = function for indirect production
functio_5(x,S)=(x*S)


# Compartment: id = Cytosol, name = Cytosol, constant
par Cytosol=1.0

# Compartment: id = Nucleus, name = Nucleus, constant
par Nucleus=1.0

# Parameter:   id =  NFKB_total, name = NFKB_total, defined by a Rule

# Parameter:   id =  Kv, name = Kv, constant
par Kv=5.0

# Parameter:   id =  a1, name = a1, constant
par a1=0.5

# Parameter:   id =  a2, name = a2, constant
par a2=0.2

# Parameter:   id =  t1, name = t1, constant
par t1=0.1

# Parameter:   id =  a3, name = a3, constant
par a3=1.0

# Parameter:   id =  t2, name = t2, constant
par t2=0.1

# Parameter:   id =  c1a, name = c1a, constant
par c1a=5.0E-7

# Parameter:   id =  c2a, name = c2a, constant
par c2a=0.0

# Parameter:   id =  c3a, name = c3a, constant
par c3a=4.0E-4

# Parameter:   id =  c4a, name = c4a, constant
par c4a=0.5

# Parameter:   id =  c5a, name = c5a, constant
par c5a=1.0E-4

# Parameter:   id =  c6a, name = c6a, constant
par c6a=2.0E-5

# Parameter:   id =  c1, name = c1, constant
par c1=5.0E-7

# Parameter:   id =  c2, name = c2, constant
par c2=0.0

# Parameter:   id =  c3, name = c3, constant
par c3=4.0E-4

# Parameter:   id =  c4, name = c4, constant
par c4=0.5

# Parameter:   id =  c5, name = c5, constant
par c5=3.0E-4

# Parameter:   id =  k1, name = k1, constant
par k1=0.0025

# Parameter:   id =  k2, name = k2, constant
par k2=0.1

# Parameter:   id =  k3, name = k3, constant
par k3=0.0015

# Parameter:   id =  Kprod, name = Kprod, constant
par Kprod=2.5E-5

# Parameter:   id =  Kdeg, name = Kdeg, constant
par Kdeg=1.25E-4

# Parameter:   id =  i1, name = i1, constant
par i1=0.0025

# Parameter:   id =  e2a, name = e2a, constant
par e2a=0.01

# Parameter:   id =  i1a, name = i1a, constant
par i1a=0.001

# Parameter:   id =  e1a, name = e1a, constant
par e1a=5.0E-4

# Parameter:   id =  c1c, name = c1c, constant
par c1c=5.0E-7

# Parameter:   id =  c2c, name = c2c, constant
par c2c=0.0

# Parameter:   id =  c3c, name = c3c, constant
par c3c=4.0E-4

# Parameter:   id =  TNF_R, name = TNF_R
par TNF_R=0.0

# Parameter:   id =  IkB_mRNA_amp, name = IkB_mRNA_amp, defined by a Rule

# Parameter:   id =  A20_mRNA_amp, name = A20_mRNA_amp, defined by a Rule

# Parameter:   id =  cgen_mRNA_amp, name = cgen_mRNA_amp, defined by a Rule

# Parameter:   id =  ModelValue_1, name = Initial for Kv, constant
par ModelValu=5.0

# assignmentRule: variable = NFKB_total
NFKB_tota=IKKacti_1+NFKB+IkB_NFKB+1/ModelValu*NFKB_nuc+1/ModelValu*IkB_NFKB_
aux NFKB_tota=NFKB_tota

# assignmentRule: variable = TNF
TNF=TNF_R
aux TNF=TNF

# assignmentRule: variable = IkB_mRNA_amp
IkB_mRNA_=IkB_mRNA*10000
aux IkB_mRNA_=IkB_mRNA_

# assignmentRule: variable = A20_mRNA_amp
A20_mRNA_=A20_mRNA*10000
aux A20_mRNA_=A20_mRNA_

# assignmentRule: variable = cgen_mRNA_amp
cgen_mRNA=cgen_mR_1*10000
aux cgen_mRNA=cgen_mRNA

# Reaction: id = IKKn_production, name = IKKn_production

IKKn_prod=Cytosol*Constant_(Kprod)

# Reaction: id = IKKn_degradation, name = IKKn_degradation

IKKn_degr=Cytosol*Kdeg*IKK_neutr

# Reaction: id = IKKn_activation, name = IKKn_activation

IKKn_acti=Cytosol*function_(k1, TNF, IKK_neutr)

# Reaction: id = NFKB_export, name = NFKB_export

NFKB_expo=Cytosol*i1*NFKB

# Reaction: id = IkBn_NFKBn_binding, name = IkBn_NFKBn_binding

IkBn_NFKB=Nucleus*a1*NFKB_nuc*IkB_nuc

# Reaction: id = IkB_NFKB_n_export, name = IkB_NFKB_n_export

IkB_NFK_1=Nucleus*functio_3(e2a, Kv, IkB_NFKB_)

# Reaction: id = IkB_NFKB_binding, name = IkB_NFKB_binding

IkB_NFK_2=Cytosol*a1*NFKB*IkB

# Reaction: id = IkB_degradation, name = IkB_degradation

IkB_degra=Cytosol*c6a*IkB_NFKB

# Reaction: id = IkBnuc_export, name = IkBnuc_export

IkBnuc_ex=Nucleus*functio_3(e1a, Kv, IkB_nuc)

# Reaction: id = IkB_export, name = IkB_export

IkB_expor=Cytosol*i1a*IkB

# Reaction: id = IkB_transcription, name = IkB_transcription

IkB_trans=Nucleus*functio_2(c1a, NFKB_nuc)

# Reaction: id = IKKa_spon_inactivation, name = IKKa_spon_inactivation

IKKa_spon=Cytosol*k3*IKK_activ

# Reaction: id = IKKinact_degradation, name = IKKinact_degradation

IKKinact_=Cytosol*Kdeg*IKK_inact

# Reaction: id = IKKa_degradation, name = IKKa_degradation

IKKa_degr=Cytosol*Kdeg*IKK_activ

# Reaction: id = IKKa_IkB_binding, name = IKKa_IkB_binding

IKKa_IkB_=Cytosol*a2*IKK_activ*IkB

# Reaction: id = IKKa_IkBNFKB_binding, name = IKKa_IkBNFKB_binding

IKKa_IkBN=Cytosol*a3*IKK_activ*IkB_NFKB

# Reaction: id = IkBmRNA_degradation, name = IkBmRNA_degradation

IkBmRNA_d=Nucleus*c3a*IkB_mRNA

# Reaction: id = IkB_translation, name = IkB_translation

IkB_tra_1=functio_2(c4a, IkB_mRNA)

# Reaction: id = IkB_con_degradation, name = IkB_con_degradation

IkB_con_d=Cytosol*c5a*IkB

# Reaction: id = A20_transcription, name = A20_transcription

A20_trans=Nucleus*functio_2(c1, NFKB_nuc)

# Reaction: id = A20mRNA_degradation, name = A20mRNA_degradation

A20mRNA_d=Nucleus*c3*A20_mRNA

# Reaction: id = A20_translation, name = A20_translation

A20_tra_1=functio_2(c4, A20_mRNA)

# Reaction: id = A20_degradation, name = A20_degradation

A20_degra=Cytosol*c5*A20

# Reaction: id = IKKa_inactivation_1, name = IKKa_inactivation_1

IKKa_inac=Cytosol*functio_1(k2, TNF, A20, IKK_activ)

# Reaction: id = cgen_transcription, name = cgen_transcription

cgen_tran=Nucleus*functio_2(c1c, NFKB_nuc)

# Reaction: id = cgen_mRNA_degradation, name = cgen_mRNA_degradation

cgen_mR_2=Nucleus*c3c*cgen_mR_1

# Reaction: id = IkB_degradation_1, name = IkB_degradation_1

IkB_deg_1=Cytosol*t2*IKKacti_1

# Reaction: id = IkB_degradation_2, name = IkB_degradation_2

IkB_deg_2=Cytosol*t1*IKKactive

# Reaction: id = NFKBc_induced_NFKBn_production, name = NFKBc_induced_NFKBn_production

NFKBc_ind=functio_4(i1, Kv, NFKB)

# Reaction: id = IkBn_induced_IkBc_production, name = IkBn_induced_IkBc_production

IkBn_indu=functio_5(e1a, IkB_nuc)

# Reaction: id = IkBc_induced_IkBn_production, name = IkBc_induced_IkBn_production

IkBc_indu=functio_4(i1a, Kv, IkB)

# Reaction: id = IkB_NFKB_n_induced_IkB_NFKBc_production, name = IkB_NFKB_n_induced_IkB_NFKBc_production

IkB_NFK_3=functio_5(e2a, IkB_NFKB_)

# Species:   id = IKK_neutral, name = IKK_neutral, affected by kineticLaw

par IKK_neutr=0.0
aux IKK_neutr=IKK_neutr
dIKK_neutr/dt=(1/(Cytosol))*(( 1.0 * IKKn_prod) + (-1.0 * IKKn_degr) + (-1.0 * IKKn_acti))

# Species:   id = IKK_active, name = IKK_active, affected by kineticLaw

par IKK_activ=0.0
aux IKK_activ=IKK_activ
dIKK_activ/dt=(1/(Cytosol))*(( 1.0 * IKKn_acti) + (-1.0 * IKKa_spon) + (-1.0 * IKKa_degr) + (-1.0 * IKKa_IkB_) + (-1.0 * IKKa_IkBN) + (-1.0 * IKKa_inac) + ( 1.0 * IkB_deg_1) + ( 1.0 * IkB_deg_2))

# Species:   id = IKK_inact, name = IKK_inact, affected by kineticLaw

init IKK_inact=0.0
dIKK_inact/dt=(1/(Cytosol))*(( 1.0 * IKKa_spon) + (-1.0 * IKKinact_) + ( 1.0 * IKKa_inac))

# Species:   id = IKKactive_IkB, name = IKKactive_IkB, affected by kineticLaw

par IKKactive=0.0
aux IKKactive=IKKactive
dIKKactive/dt=(1/(Cytosol))*(( 1.0 * IKKa_IkB_) + (-1.0 * IkB_deg_2))

# Species:   id = IkB, name = IkB, affected by kineticLaw

init IkB=0.0
dIkB/dt=(1/(Cytosol))*((-1.0 * IkB_NFK_2) + (-1.0 * IkB_expor) + (-1.0 * IKKa_IkB_) + ( 1.0 * IkB_tra_1) + (-1.0 * IkB_con_d) + ( 1.0 * IkBn_indu))

# Species:   id = IKKactive_IkB_NFKB, name = IKKactive_IkB_NFKB, affected by kineticLaw

par IKKacti_1=0.0
aux IKKacti_1=IKKacti_1
dIKKacti_1/dt=(1/(Cytosol))*(( 1.0 * IKKa_IkBN) + (-1.0 * IkB_deg_1))

# Species:   id = IkB_NFKB, name = IkB_NFKB, affected by kineticLaw

init IkB_NFKB=0.06
dIkB_NFKB/dt=(1/(Cytosol))*(( 1.0 * IkB_NFK_2) + (-1.0 * IkB_degra) + (-1.0 * IKKa_IkBN) + ( 1.0 * IkB_NFK_3))

# Species:   id = NFKB, name = NFKB, affected by kineticLaw

init NFKB=0.0
dNFKB/dt=(1/(Cytosol))*((-1.0 * NFKB_expo) + (-1.0 * IkB_NFK_2) + ( 1.0 * IkB_degra) + ( 1.0 * IkB_deg_1))

# Species:   id = NFKB_nuc, name = NFKB_nuc, affected by kineticLaw

init NFKB_nuc=0.0
dNFKB_nuc/dt=(1/(Nucleus))*((-1.0 * IkBn_NFKB) + ( 1.0 * NFKBc_ind))

# Species:   id = IkB_nuc, name = IkB_nuc, affected by kineticLaw

init IkB_nuc=0.0
dIkB_nuc/dt=(1/(Nucleus))*((-1.0 * IkBn_NFKB) + (-1.0 * IkBnuc_ex) + ( 1.0 * IkBc_indu))

# Species:   id = IkB_NFKB_nuc, name = IkB_NFKB_nuc, affected by kineticLaw

par IkB_NFKB_=0.0
aux IkB_NFKB_=IkB_NFKB_
dIkB_NFKB_/dt=(1/(Nucleus))*(( 1.0 * IkBn_NFKB) + (-1.0 * IkB_NFK_1))

# Species:   id = IkB_mRNA, name = IkB_mRNA, affected by kineticLaw

init IkB_mRNA=0.0
dIkB_mRNA/dt=(1/(Nucleus))*(( 1.0 * IkB_trans) + (-1.0 * IkBmRNA_d))

# Species:   id = A20_mRNA, name = A20_mRNA, affected by kineticLaw

init A20_mRNA=0.0
dA20_mRNA/dt=(1/(Nucleus))*(( 1.0 * A20_trans) + (-1.0 * A20mRNA_d))

# Species:   id = A20, name = A20, affected by kineticLaw

init A20=0.0
dA20/dt=(1/(Cytosol))*(( 1.0 * A20_tra_1) + (-1.0 * A20_degra))

# Species:   id = TNF, name = TNF, involved in a rule 

# Species:   id = cgen_mRNA, name = cgen_mRNA, affected by kineticLaw

par cgen_mR_1=0.0
aux cgen_mR_1=cgen_mR_1
dcgen_mR_1/dt=(1/(Nucleus))*(( 1.0 * cgen_tran) + (-1.0 * cgen_mR_2))

# event : TNF_stimulation
# unable to handle events with delays currently.
# event ignored.


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

