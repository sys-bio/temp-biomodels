
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Brown1997 - Plasma Melatonin Levels
#
# is http://identifiers.org/biomodels.db/MODEL1006230019
# is http://identifiers.org/biomodels.db/BIOMD0000000672
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = COMpartment, name = COMpartment, constant
par COMpartme=1.0

# Parameter:   id =  H1, name = H1, defined by a Rule

# Parameter:   id =  H2, name = H2, defined by a Rule

# Parameter:   id =  A, name = A, defined by a Rule

# Parameter:   id =  t_on, name = t_on, constant
par t_on=1316.0

# Parameter:   id =  t_off, name = t_off, constant
par t_off=1794.0

# Parameter:   id =  A_max, name = A_max, constant
par A_max=6.51

# Parameter:   id =  beta_I, name = beta_I, defined by a Rule

# Parameter:   id =  beta_C, name = beta_C, defined by a Rule

# Parameter:   id =  alpha, name = alpha, defined by a Rule

# Parameter:   id =  lamda, name = lamda, defined by a Rule

# Parameter:   id =  tau_I, name = tau_I, constant
par tau_I=2.82

# Parameter:   id =  tau_C, name = tau_C, constant
par tau_C=23.67

# Parameter:   id =  tau_alpha, name = tau_alpha, constant
par tau_alpha=25.92

# Parameter:   id =  tau_lamda, name = tau_lamda, constant
par tau_lamda=24.04

# assignmentRule: variable = beta_I
beta_I=ln(2)/tau_I
aux beta_I=beta_I

# assignmentRule: variable = beta_C
beta_C=ln(2)/tau_C
aux beta_C=beta_C

# assignmentRule: variable = alpha
alpha=ln(2)/tau_alpha
aux alpha=alpha

# assignmentRule: variable = lamda
lamda=ln(2)/tau_lamda
aux lamda=lamda

# assignmentRule: variable = A
A= piecew2 
aux A=A

# rateRule: variable = H1
init H1=0.05
dH1/dt=(-beta_I*H1)+A

# rateRule: variable = H2
init H2=1.0
dH2/dt=beta_I*H1-beta_C*H2


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (t  >=  t_off) then (A_max*exp((-alpha)*(t-t_off))) else (0)

piecew2=if ((t  <  t_off) && (t  >=  t_on)) then (A_max*(1-exp((-lamda)*(t-t_on)))/(1-exp((-lamda)*(t_off-t_on)))) else ( piecew1 )


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

