
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Fassoni2019 - Oncogenesis encompassing mutations and genetic instability
#
# is http://identifiers.org/biomodels.db/MODEL1909050003
# is http://identifiers.org/biomodels.db/BIOMD0000000807
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_for_normal_cell_growth_1, name = function for normal cell growth_1
function_(K,r_N)=(r_N/K)


# FunctionDefinition id = function_for_cancer_cell_death_tissue_repair_system_1, name = function for cancer cell death;tissue repair system_1
functio_1(K,beta_3,normalized_cancer_cell_a,normalized_normal_cell_n)=(beta_3*K*normalized_normal_cell_n*normalized_cancer_cell_a)


# FunctionDefinition id = function_for_negative_effect_on_G_A_1, name = function for negative effect on G;A_1
functio_2(beta_5,normalized_cancer_cell_a,normalized_pre_cancer_cell_g)=(beta_5*normalized_cancer_cell_a*normalized_pre_cancer_cell_g)


# FunctionDefinition id = function_for_transition_to_cancer_cell_1, name = function for transition to cancer cell_1
functio_3(K,delta,normalized_pre_cancer_cell_g,xi)=(delta*normalized_pre_cancer_cell_g^2/(xi/K+normalized_pre_cancer_cell_g))


# FunctionDefinition id = function_for_normal_cell_damage_A_1, name = function for normal cell damage;A_1
functio_4(K,beta_1,normalized_cancer_cell_a,normalized_normal_cell_n)=(beta_1*K*normalized_normal_cell_n*normalized_cancer_cell_a)


# FunctionDefinition id = function_for_negative_effect_on_A_G_1, name = function for negative effect on A;G_1
functio_5(beta_6,normalized_cancer_cell_a,normalized_pre_cancer_cell_g)=(beta_6*normalized_cancer_cell_a*normalized_pre_cancer_cell_g)


# FunctionDefinition id = function_for_normal_cell_damage_G_1, name = function for normal cell damage;G_1
functio_6(beta_4,normalized_normal_cell_n,normalized_pre_cancer_cell_g)=(beta_4*normalized_normal_cell_n*normalized_pre_cancer_cell_g)


# FunctionDefinition id = function_for_pre_cancer_cell_logistic_growth_1, name = function for pre-cancer cell logistic growth_1
functio_7(normalized_pre_cancer_cell_g,r_G)=(r_G*normalized_pre_cancer_cell_g)


# FunctionDefinition id = function_for_pre_cancer_cell_death_tissue_repair_system_1, name = function for pre-cancer cell death;tissue repair system_1
functio_8(K,beta_2,normalized_normal_cell_n,normalized_pre_cancer_cell_g)=(beta_2*K*normalized_normal_cell_n*normalized_pre_cancer_cell_g)


# FunctionDefinition id = function_for_cancer_cell_logistic_growth_1, name = function for cancer cell logistic growth_1
functio_9(K,K_A,normalized_cancer_cell_a,r_A)=(r_A*normalized_cancer_cell_a*(1-normalized_cancer_cell_a/K_A/K))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  r_N, name = r_N, constant
par r_N=1000000.0

# Parameter:   id =  mu_N, name = mu_N, constant
par mu_N=0.01

# Parameter:   id =  beta_1, name = beta_1, constant
par beta_1=3.5E-10

# Parameter:   id =  beta_4, name = beta_4, constant
par beta_4=0.0

# Parameter:   id =  r_G, name = r_G, constant
par r_G=0.05

# Parameter:   id =  mu_G, name = mu_G, constant
par mu_G=0.01

# Parameter:   id =  xi_G, name = xi_G, constant
par xi_G=0.01

# Parameter:   id =  beta_2, name = beta_2, constant
par beta_2=3.5E-10

# Parameter:   id =  beta_5, name = beta_5, constant
par beta_5=0.0

# Parameter:   id =  delta, name = delta, constant
par delta=1.0E-5

# Parameter:   id =  xi, name = xi, constant
par xi=1000.0

# Parameter:   id =  r_A, name = r_A, constant
par r_A=0.05

# Parameter:   id =  K_A, name = K_A, constant
par K_A=1.0E7

# Parameter:   id =  mu_A, name = mu_A, constant
par mu_A=0.01

# Parameter:   id =  xi_A, name = xi_A, constant
par xi_A=0.006

# Parameter:   id =  beta_3, name = beta_3, constant
par beta_3=3.5E-10

# Parameter:   id =  beta_6, name = beta_6, constant
par beta_6=0.0

# Parameter:   id =  K, name = K, constant
par K=1.0E8

# Parameter:   id =  A, name = A, defined by a Rule

# Parameter:   id =  G, name = G, defined by a Rule

# Parameter:   id =  N, name = N, defined by a Rule

# Parameter:   id =  G0, name = G0, constant
par G0=1.0

# Parameter:   id =  A0, name = A0, constant
par A0=0.0

# Parameter:   id =  N0, name = N0, defined by a Rule

# Parameter:   id =  n0, name = n0, defined by a Rule

# Parameter:   id =  a0, name = a0, defined by a Rule

# Parameter:   id =  g0, name = g0, defined by a Rule

# Parameter:   id =  a, name = a', defined by a Rule

# assignmentRule: variable = N0
N0=r_N/mu_N-1
aux N0=N0

# assignmentRule: variable = g0
g0_1=G0/K
aux g0_1=g0_1

# assignmentRule: variable = a
a_1=normali_2*10
aux a_1=a_1

# assignmentRule: variable = A
A=normali_2*K
aux A=A

# assignmentRule: variable = G
G=normali_1*K
aux G=G

# assignmentRule: variable = n0
n0_1=N0/K
aux n0_1=n0_1

# assignmentRule: variable = a0
a0_1=A0/K
aux a0_1=a0_1

# assignmentRule: variable = N
N=normalize*K
aux N=N

# Reaction: id = normal_cell_growth, name = normal cell growth

normal_ce=compartme*function_(K, r_N)

# Reaction: id = normal_cell_death, name = normal cell death

normal__1=compartme*mu_N*normalize

# Reaction: id = normal_cell_damage_A, name = normal cell damage;A

normal__2=compartme*functio_4(K, beta_1, normali_2, normalize)

# Reaction: id = normal_cell_damage_G, name = normal cell damage;G

normal__3=compartme*functio_6(beta_4, normalize, normali_1)

# Reaction: id = pre_cancer_cell_logistic_growth, name = pre-cancer cell logistic growth

pre_cance=compartme*functio_7(normali_1, r_G)

# Reaction: id = pre_cancer_cell_natural_death, name = pre-cancer cell natural death

pre_can_1=compartme*mu_G*normali_1

# Reaction: id = pre_cancer_cell_death_tissue_repair_system, name = pre-cancer cell death;tissue repair system

pre_can_2=compartme*functio_8(K, beta_2, normalize, normali_1)

# Reaction: id = pre_cancer_cell_death_apoptosis, name = pre-cancer cell death;apoptosis

pre_can_3=compartme*xi_G*normali_1

# Reaction: id = negative_effect_on_G_A, name = negative effect on G;A

negative_=compartme*functio_2(beta_5, normali_2, normali_1)

# Reaction: id = negative_effect_on_A_G, name = negative effect on A;G

negativ_1=compartme*functio_5(beta_6, normali_2, normali_1)

# Reaction: id = cancer_cell_natural_death, name = cancer cell natural death

cancer_ce=compartme*mu_A*normali_2

# Reaction: id = cancer_cell_logistic_growth, name = cancer cell logistic growth

cancer__1=compartme*functio_9(K, K_A, normali_2, r_A)

# Reaction: id = cancer_cell_death_tissue_repair_system, name = cancer cell death;tissue repair system

cancer__2=compartme*functio_1(K, beta_3, normali_2, normalize)

# Reaction: id = cancer_cell_death_apoptosis, name = cancer cell death;apoptosis

cancer__3=compartme*xi_A*normali_2

# Reaction: id = transition_to_cancer_cell, name = transition to cancer cell

transitio=compartme*functio_3(K, delta, normali_1, xi)

# Species:   id = normalized_normal_cell_n, name = normalized normal cell n, affected by kineticLaw

par normalize=0.99999999
aux normalize=normalize
dnormalize/dt=(1/(compartme))*(( 1.0 * normal_ce) + (-1.0 * normal__1) + (-1.0 * normal__2) + (-1.0 * normal__3))

# Species:   id = normalized_pre_cancer_cell_g, name = normalized pre-cancer cell g, affected by kineticLaw

par normali_1=1.0E-8
aux normali_1=normali_1
dnormali_1/dt=(1/(compartme))*(( 1.0 * pre_cance) + (-1.0 * pre_can_1) + (-1.0 * pre_can_2) + (-1.0 * pre_can_3) + (-1.0 * negative_) + (-1.0 * transitio))

# Species:   id = normalized_cancer_cell_a, name = normalized cancer cell a, affected by kineticLaw

par normali_2=0.0
aux normali_2=normali_2
dnormali_2/dt=(1/(compartme))*((-1.0 * negativ_1) + (-1.0 * cancer_ce) + ( 1.0 * cancer__1) + (-1.0 * cancer__2) + (-1.0 * cancer__3) + ( 1.0 * transitio))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

