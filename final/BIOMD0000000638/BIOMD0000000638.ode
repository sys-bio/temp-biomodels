
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Bush2016 - Extended Carrousel model of GPCR-RGS
#
# is http://identifiers.org/biomodels.db/MODEL1610220001
# is http://identifiers.org/biomodels.db/BIOMD0000000638
# isDescribedBy http://identifiers.org/pubmed/28034910
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = PM, name = PM, constant
par PM=3.92

# Compartment: id = cyt, name = cyt, constant
par cyt=36.4

# Parameter:   id =  L, name = L, constant
par L=0.0

# Parameter:   id =  K_d_L_R, name = K_d_L·R, constant
par K_d_L_R=5.6

# Parameter:   id =  lambda, name = lambda, constant
par lambda=1.0

# Parameter:   id =  lambda_t, name = lambda_t, constant
par lambda_t=1.0

# Parameter:   id =  lambda_d, name = lambda_d, constant
par lambda_d=1.0

# Parameter:   id =  K_d_R_G, name = K_d_R·G, constant
par K_d_R_G=36.0

# Parameter:   id =  eta, name = eta, constant
par eta=1.0

# Parameter:   id =  rho, name = rho, constant
par rho=1.0

# Parameter:   id =  k_Ef_G, name = k_Ef_G, defined by a Rule

# Parameter:   id =  k_Hf_Gt, name = k_Hf_Gt, constant
par k_Hf_Gt=0.002

# Parameter:   id =  k_Af_Gd, name = k_Af_Gd, defined by a Rule

# Parameter:   id =  k_Ef_RG, name = k_Ef_RG, constant
par k_Ef_RG=6.2E-4

# Parameter:   id =  k_Ef_LRG, name = k_Ef_LRG, constant
par k_Ef_LRG=1.5

# Parameter:   id =  k_Hf_LRGt, name = k_Hf_LRGt, defined by a Rule

# Parameter:   id =  k_Af_LRGd, name = k_Af_LRGd, defined by a Rule

# Parameter:   id =  k_Hf_RGt, name = k_Hf_RGt, constant
par k_Hf_RGt=0.002

# Parameter:   id =  k_Af_RGd, name = k_Af_RGd, defined by a Rule

# Parameter:   id =  Rtot, name = Rtot, constant
par Rtot=3308.0

# Parameter:   id =  Gtot, name = Gtot, constant
par Gtot=2042.0

# Parameter:   id =  k_on_L_R, name = k_on_L·R, defined by a Rule

# Parameter:   id =  k_off_L_R, name = k_off_L·R, constant
par k_off_L_R=0.001

# Parameter:   id =  k_on_L_RG, name = k_on_L·RG, defined by a Rule

# Parameter:   id =  k_off_L_RG, name = k_off_L·RG, defined by a Rule

# Parameter:   id =  k_on_L_RGt, name = k_on_L·RGt, defined by a Rule

# Parameter:   id =  k_off_L_RGt, name = k_off_L·RGt, defined by a Rule

# Parameter:   id =  k_on_L_RGd, name = k_on_L·RGd, defined by a Rule

# Parameter:   id =  k_off_L_RGd, name = k_off_L·RGd, defined by a Rule

# Parameter:   id =  k_on_R_G, name = k_on_R·G, defined by a Rule

# Parameter:   id =  k_off_R_G, name = k_off_R·G, constant
par k_off_R_G=0.09

# Parameter:   id =  k_on_LR_G, name = k_on_LR·G, defined by a Rule

# Parameter:   id =  k_off_LR_G, name = k_off_LR·G, defined by a Rule

# Parameter:   id =  k_on_R_Gt, name = k_on_R·Gt, defined by a Rule

# Parameter:   id =  k_off_R_Gt, name = k_off_R·Gt, defined by a Rule

# Parameter:   id =  k_on_LR_Gt, name = k_on_LR·Gt, defined by a Rule

# Parameter:   id =  k_off_LR_Gt, name = k_off_LR·Gt, defined by a Rule

# Parameter:   id =  k_on_R_Gd, name = k_on_R·Gd, defined by a Rule

# Parameter:   id =  k_off_R_Gd, name = k_off_R·Gd, defined by a Rule

# Parameter:   id =  k_on_LR_Gd, name = k_on_LR·Gd, defined by a Rule

# Parameter:   id =  k_off_LR_Gd, name = k_off_LR·Gd, defined by a Rule

# Parameter:   id =  k_Ar_Gd, name = k_Ar_Gd, defined by a Rule

# Parameter:   id =  k_Ar_RGd, name = k_Ar_RGd, defined by a Rule

# Parameter:   id =  k_Ar_LRGd, name = k_Ar_LRGd, defined by a Rule

# Parameter:   id =  tot_LR, name = tot_LR, defined by a Rule

# Parameter:   id =  tot_RG, name = tot_RG, defined by a Rule

# Parameter:   id =  tot_G, name = tot_G, defined by a Rule

# Parameter:   id =  tot_Gd, name = tot_Gd, defined by a Rule

# Parameter:   id =  tot_Gt, name = tot_Gt, defined by a Rule

# Parameter:   id =  k_Ef_Gd, name = k_Ef_Gd, constant
par k_Ef_Gd=6.2E-4

# Parameter:   id =  k_Ef_RGd, name = k_Ef_RGd, defined by a Rule

# Parameter:   id =  k_Ef_LRGd, name = k_Ef_LRGd, defined by a Rule

# Parameter:   id =  K_d_Gd_Gbg, name = K_d_Gd·Gbg, constant
par K_d_Gd_Gb=0.01

# Parameter:   id =  k_Hf_LRrgsGt, name = k_Hf_LRrgsGt, defined by a Rule

# Parameter:   id =  k_Hf_RrgsGt, name = k_Hf_RrgsGt, constant
par k_Hf_Rrgs=0.28

# Parameter:   id =  rgs_tot, name = rgs_tot, constant
par rgs_tot=6000.0

# Parameter:   id =  K_d_R_rgs, name = K_d_R·rgs, constant
par K_d_R_rgs=328.0

# Parameter:   id =  k_off_R_rgs, name = k_off_R·rgs, constant
par k_off_R_r=3.0

# Parameter:   id =  k_on_R_rgs, name = k_on_R.rgs, defined by a Rule

# Parameter:   id =  tot_Rrgs, name = tot_Rrgs, defined by a Rule

# Parameter:   id =  ModelValue_54, name = Initial for K_d_R·rgs, constant
par ModelValu=328.0

# Parameter:   id =  ModelValue_52, name = Initial for k_Hf_RrgsGt, constant
par ModelVa_1=0.28

# Parameter:   id =  ModelValue_55, name = Initial for k_off_R·rgs, constant
par ModelVa_2=3.0

# assignmentRule: variable = k_Ef_G
k_Ef_G=k_Ef_Gd
aux k_Ef_G=k_Ef_G

# assignmentRule: variable = k_off_LR_G
k_off_LR_=k_off_R_G
aux k_off_LR_=k_off_LR_

# assignmentRule: variable = tot_RG
tot_RG=RG+RGd+RGt+LRG+LRGd+LRGt+RrgsG+RrgsGd+RrgsGt+LRrgsG+LRrgsGd+LRrgsGt
aux tot_RG=tot_RG

# assignmentRule: variable = k_Af_Gd
k_Af_Gd=1.66*0.13
aux k_Af_Gd=k_Af_Gd

# assignmentRule: variable = k_Hf_LRGt
k_Hf_LRGt=k_Hf_RGt
aux k_Hf_LRGt=k_Hf_LRGt

# assignmentRule: variable = k_Af_LRGd
k_Af_LRGd=k_Af_Gd
aux k_Af_LRGd=k_Af_LRGd

# assignmentRule: variable = k_Af_RGd
k_Af_RGd=k_Af_Gd
aux k_Af_RGd=k_Af_RGd

# assignmentRule: variable = k_on_L_R
k_on_L_R=L*k_off_L_R/K_d_L_R
aux k_on_L_R=k_on_L_R

# assignmentRule: variable = k_off_L_RG
k_off_L_1=k_off_L_R
aux k_off_L_1=k_off_L_1

# assignmentRule: variable = k_on_L_RG
k_on_L_RG=L*k_off_L_1/(lambda*K_d_L_R)
aux k_on_L_RG=k_on_L_RG

# assignmentRule: variable = k_off_L_RGt
k_off_L_2=k_off_L_R
aux k_off_L_2=k_off_L_2

# assignmentRule: variable = k_on_L_RGt
k_on_L__1=L*k_off_L_2/(lambda_t*K_d_L_R)
aux k_on_L__1=k_on_L__1

# assignmentRule: variable = k_off_L_RGd
k_off_L_3=k_off_L_R
aux k_off_L_3=k_off_L_3

# assignmentRule: variable = k_on_L_RGd
k_on_L__2=L*k_off_L_3/(lambda_d*K_d_L_R)
aux k_on_L__2=k_on_L__2

# assignmentRule: variable = k_on_R_G
k_on_R_G=k_off_R_G/K_d_R_G/1.66
aux k_on_R_G=k_on_R_G

# assignmentRule: variable = k_on_LR_G
k_on_LR_G=k_off_LR_/(lambda*K_d_R_G/1.66)
aux k_on_LR_G=k_on_LR_G

# assignmentRule: variable = k_off_R_Gt
k_off_R_1=k_off_R_G
aux k_off_R_1=k_off_R_1

# assignmentRule: variable = k_on_R_Gt
k_on_R_Gt=k_off_R_1/(eta*K_d_R_G/1.66)
aux k_on_R_Gt=k_on_R_Gt

# assignmentRule: variable = k_off_LR_Gt
k_off_L_4=k_off_R_G
aux k_off_L_4=k_off_L_4

# assignmentRule: variable = k_on_LR_Gt
k_on_LR_1=k_off_L_4/(lambda_t*eta*K_d_R_G/1.66)
aux k_on_LR_1=k_on_LR_1

# assignmentRule: variable = k_off_R_Gd
k_off_R_2=k_off_R_G
aux k_off_R_2=k_off_R_2

# assignmentRule: variable = k_on_R_Gd
k_on_R_Gd=k_off_R_2/(rho*K_d_R_G/1.66)
aux k_on_R_Gd=k_on_R_Gd

# assignmentRule: variable = k_off_LR_Gd
k_off_L_5=k_off_R_G
aux k_off_L_5=k_off_L_5

# assignmentRule: variable = k_on_LR_Gd
k_on_LR_2=k_off_L_5/(lambda_d*rho*K_d_R_G/1.66)
aux k_on_LR_2=k_on_LR_2

# assignmentRule: variable = k_Ar_Gd
k_Ar_Gd=k_Af_Gd/1.66*K_d_Gd_Gb
aux k_Ar_Gd=k_Ar_Gd

# assignmentRule: variable = k_Ar_RGd
k_Ar_RGd=k_Af_RGd/1.66*K_d_Gd_Gb/rho
aux k_Ar_RGd=k_Ar_RGd

# assignmentRule: variable = k_Ar_LRGd
k_Ar_LRGd=lambda*k_Af_LRGd/1.66*K_d_Gd_Gb/(lambda_d*rho)
aux k_Ar_LRGd=k_Ar_LRGd

# assignmentRule: variable = tot_LR
tot_LR=LRG+LRGd+LRGt+LR+LRrgsG+LRrgsGd+LRrgsGt+LRrgs
aux tot_LR=tot_LR

# assignmentRule: variable = tot_G
tot_G=G+LRG+RG+LRrgsG+RrgsG
aux tot_G=tot_G

# assignmentRule: variable = tot_Gd
tot_Gd=Gd+LRGd+RGd+LRrgsGd+RrgsGd
aux tot_Gd=tot_Gd

# assignmentRule: variable = tot_Gt
tot_Gt=Gt+LRGt+RGt+RrgsGt+LRrgsGt
aux tot_Gt=tot_Gt

# assignmentRule: variable = k_Ef_RGd
k_Ef_RGd=k_Ef_RG
aux k_Ef_RGd=k_Ef_RGd

# assignmentRule: variable = k_Ef_LRGd
k_Ef_LRGd=k_Ef_LRG
aux k_Ef_LRGd=k_Ef_LRGd

# assignmentRule: variable = k_Hf_LRrgsGt
k_Hf_LRrg=ModelVa_1
aux k_Hf_LRrg=k_Hf_LRrg

# assignmentRule: variable = k_on_R_rgs
k_on_R_rg=ModelVa_2/ModelValu/1.66
aux k_on_R_rg=k_on_R_rg

# assignmentRule: variable = tot_Rrgs
tot_Rrgs=LRrgs+LRrgsG+LRrgsGd+LRrgsGt+Rrgs+RrgsG+RrgsGd+RrgsGt
aux tot_Rrgs=tot_Rrgs

# Reaction: id = binding_R_G, name = binding_R·G

binding_R=PM*(k_on_R_G*R*G-k_off_R_G*RG)

# Reaction: id = binding_L_R, name = binding_L·R

binding_L=PM*(k_on_L_R*R-k_off_L_R*LR)

# Reaction: id = binding_R_Gt, name = binding_R·Gt

binding_1=PM*(k_on_R_Gt*R*Gt-k_off_R_1*RGt)

# Reaction: id = binding_R_Gd, name = binding_R·Gd

binding_2=PM*(k_on_R_Gd*R*Gd-k_off_R_2*RGd)

# Reaction: id = binding_LR_G, name = binding_LR·G

binding_3=PM*(k_on_LR_G*LR*G-k_off_LR_*LRG)

# Reaction: id = binding_LR_Gt, name = binding_LR·Gt

binding_4=PM*(k_on_LR_1*LR*Gt-k_off_L_4*LRGt)

# Reaction: id = binding_LR_Gd, name = binding_LR·Gd

binding_5=PM*(k_on_LR_2*LR*Gd-k_off_L_5*LRGd)

# Reaction: id = binding_L_RG, name = binding_L·RG

binding_6=PM*(k_on_L_RG*RG-k_off_L_1*LRG)

# Reaction: id = binding_L_RGt, name = binding_L·RGt

binding_7=PM*(k_on_L__1*RGt-k_off_L_2*LRGt)

# Reaction: id = exchange_G, name = exchange_G

exchange_=PM*k_Ef_G*G

# Reaction: id = hydrolysis_Gt, name = hydrolysis_Gt

hydrolysi=PM*k_Hf_Gt*Gt

# Reaction: id = association_Gd, name = association_Gd

associati=PM*(k_Af_Gd*Gd*Gbg-k_Ar_Gd*G)

# Reaction: id = exchange_RG, name = exchange_RG

exchang_1=PM*k_Ef_RG*RG

# Reaction: id = exchange_LRG, name = exchange_LRG

exchang_2=PM*k_Ef_LRG*LRG

# Reaction: id = hydrolysis_RGt, name = hydrolysis_RGt

hydroly_1=PM*k_Hf_RGt*RGt

# Reaction: id = hydrolysis_LRGt, name = hydrolysis_LRGt

hydroly_2=PM*k_Hf_LRGt*LRGt

# Reaction: id = association_RGd, name = association_RGd

associa_1=PM*(k_Af_RGd*RGd*Gbg-k_Ar_RGd*RG)

# Reaction: id = association_LRGd, name = association_LRGd

associa_2=PM*(k_Af_LRGd*LRGd*Gbg-k_Ar_LRGd*LRG)

# Reaction: id = binding_L_RGd, name = binding_L·RGd

binding_8=PM*(k_on_L__2*RGd-k_off_L_3*LRGd)

# Reaction: id = exchange_Gd, name = exchange_Gd

exchang_3=PM*k_Ef_Gd*Gd

# Reaction: id = exchange_RGd, name = exchange_RGd

exchang_4=PM*k_Ef_RGd*RGd

# Reaction: id = exchange_LRGd, name = exchange_LRGd

exchang_5=PM*k_Ef_LRGd*LRGd

# Reaction: id = association_LRrgsGd, name = association_LRrgsGd

associa_3=PM*(k_Af_LRGd*LRrgsGd*Gbg-k_Ar_LRGd*LRrgsG)

# Reaction: id = association_RrgsGd, name = association_RrgsGd

associa_4=PM*(k_Af_RGd*RrgsGd*Gbg-k_Ar_RGd*RrgsG)

# Reaction: id = binding_LRrgs_G, name = binding_LRrgs·G

binding_9=PM*(k_on_LR_G*LRrgs*G-k_off_LR_*LRrgsG)

# Reaction: id = binding_LRrgs_Gd, name = binding_LRrgs·Gd

bindin_10=PM*(k_on_R_Gd*LRrgs*Gd-k_off_R_2*LRrgsGd)

# Reaction: id = binding_LRrgs_Gt, name = binding_LRrgs·Gt

bindin_11=PM*(k_on_LR_1*LRrgs*Gt-k_off_L_4*LRrgsGt)

# Reaction: id = binding_L_Rrgs, name = binding_L·Rrgs

bindin_12=PM*(k_on_L_R*Rrgs-k_off_L_R*LRrgs)

# Reaction: id = binding_L_RrgsG, name = binding_L·RrgsG

bindin_13=PM*(k_on_L_RG*RG-k_off_L_1*LRG)

# Reaction: id = binding_L_RrgsGd, name = binding_L·RrgsGd

bindin_14=PM*(k_on_L__2*RrgsGd-k_off_L_3*LRrgsGd)

# Reaction: id = binding_L_RrgsGt, name = binding_L·RrgsGt

bindin_15=PM*(k_on_L__1*RrgsGt-k_off_L_2*LRrgsGt)

# Reaction: id = binding_Rrgs_G, name = binding_Rrgs·G

bindin_16=PM*(k_on_R_G*Rrgs*G-k_off_R_G*RrgsG)

# Reaction: id = binding_Rrgs_Gd, name = binding_Rrgs·Gd

bindin_17=PM*(k_on_R_Gd*Rrgs*Gd-k_off_R_2*RrgsGd)

# Reaction: id = binding_Rrgs_Gt, name = binding_Rrgs·Gt

bindin_18=PM*(k_on_R_Gt*Rrgs*Gt-k_off_R_1*RrgsGt)

# Reaction: id = exchange_LRrgsG, name = exchange_LRrgsG

exchang_6=PM*k_Ef_LRG*LRrgsG

# Reaction: id = exchange_LRrgsGd, name = exchange_LRrgsGd

exchang_7=PM*k_Ef_LRGd*LRrgsGd

# Reaction: id = exchange_RrgsG, name = exchange_RrgsG

exchang_8=PM*k_Ef_RG*RrgsG

# Reaction: id = exchange_RrgsGd, name = exchange_RrgsGd

exchang_9=PM*k_Ef_RGd*RrgsGd

# Reaction: id = binding_R_rgs, name = binding_R·rgs

bindin_19=k_on_R_rg*R*rgs-k_off_R_r*Rrgs

# Reaction: id = binding_LR_rgs, name = binding_LR·rgs

bindin_20=k_on_R_rg*LR*rgs-k_off_R_r*LRrgs

# Reaction: id = binding_RG_rgs, name = binding_RG·rgs

bindin_21=k_on_R_rg*RG*rgs-k_off_R_r*RrgsG

# Reaction: id = binding_LRG_rgs, name = binding_LRG·rgs

bindin_22=k_on_R_rg*LRG*rgs-k_off_R_r*LRrgsG

# Reaction: id = binding_RGt_rgs, name = binding_RGt·rgs

bindin_23=k_on_R_rg*RGt*rgs-k_off_R_r*RrgsGt

# Reaction: id = binding_LRGt_rgs, name = binding_LRGt·rgs

bindin_24=k_on_R_rg*LRGt*rgs-k_off_R_r*LRrgsGt

# Reaction: id = binding_RGd_rgs, name = binding_RGd·rgs

bindin_25=k_on_R_rg*RGd*rgs-k_off_R_r*RrgsGd

# Reaction: id = binding_LRGd_rgs, name = binding_LRGd·rgs

bindin_26=k_on_R_rg*LRGd*rgs-k_off_R_r*LRrgsGd

# Reaction: id = hydrolysis_LRrgsGt, name = hydrolysis_LRrgsGt

hydroly_3=PM*k_Hf_LRrg*LRrgsGt

# Reaction: id = hydrolysis_RrgsGt, name = hydrolysis_RrgsGt

hydroly_4=PM*k_Hf_Rrgs*RrgsGt

# Species:   id = R, name = R, affected by kineticLaw

init R=843.877551020408
dR/dt=(1/(PM))*((-1.0 * binding_R) + (-1.0 * binding_L) + (-1.0 * binding_1) + (-1.0 * binding_2) + (-1.0 * bindin_19))

# Species:   id = LR, name = LR, affected by kineticLaw

init LR=0.0
dLR/dt=(1/(PM))*(( 1.0 * binding_L) + (-1.0 * binding_3) + (-1.0 * binding_4) + (-1.0 * binding_5) + (-1.0 * bindin_20))

# Species:   id = G, name = G, affected by kineticLaw

init G=520.918367346939
dG/dt=(1/(PM))*((-1.0 * binding_R) + (-1.0 * binding_3) + (-1.0 * exchange_) + ( 1.0 * associati) + (-1.0 * binding_9) + (-1.0 * bindin_16))

# Species:   id = Gt, name = Gt, affected by kineticLaw

init Gt=0.0
dGt/dt=(1/(PM))*((-1.0 * binding_1) + (-1.0 * binding_4) + ( 1.0 * exchange_) + (-1.0 * hydrolysi) + ( 1.0 * exchang_3) + (-1.0 * bindin_11) + (-1.0 * bindin_18))

# Species:   id = Gd, name = Gd, affected by kineticLaw

init Gd=0.0
dGd/dt=(1/(PM))*((-1.0 * binding_2) + (-1.0 * binding_5) + ( 1.0 * hydrolysi) + (-1.0 * associati) + (-1.0 * exchang_3) + (-1.0 * bindin_10) + (-1.0 * bindin_17))

# Species:   id = RG, name = RG, affected by kineticLaw

init RG=0.0
dRG/dt=(1/(PM))*(( 1.0 * binding_R) + (-1.0 * binding_6) + (-1.0 * exchang_1) + ( 1.0 * associa_1) + (-1.0 * bindin_13) + (-1.0 * bindin_21))

# Species:   id = Gbg, name = Gbg, affected by kineticLaw

init Gbg=0.0
dGbg/dt=(1/(PM))*(( 1.0 * exchange_) + (-1.0 * associati) + ( 1.0 * exchang_1) + ( 1.0 * exchang_2) + (-1.0 * associa_1) + (-1.0 * associa_2) + (-1.0 * associa_3) + (-1.0 * associa_4) + ( 1.0 * exchang_6) + ( 1.0 * exchang_8))

# Species:   id = LRG, name = LRG, affected by kineticLaw

init LRG=0.0
dLRG/dt=(1/(PM))*(( 1.0 * binding_3) + ( 1.0 * binding_6) + (-1.0 * exchang_2) + ( 1.0 * associa_2) + ( 1.0 * bindin_13) + (-1.0 * bindin_22))

# Species:   id = LRGt, name = LRGt, affected by kineticLaw

init LRGt=0.0
dLRGt/dt=(1/(PM))*(( 1.0 * binding_4) + ( 1.0 * binding_7) + ( 1.0 * exchang_2) + (-1.0 * hydroly_2) + ( 1.0 * exchang_5) + (-1.0 * bindin_24))

# Species:   id = RGd, name = RGd, affected by kineticLaw

init RGd=0.0
dRGd/dt=(1/(PM))*(( 1.0 * binding_2) + ( 1.0 * hydroly_1) + (-1.0 * associa_1) + (-1.0 * binding_8) + (-1.0 * exchang_4) + (-1.0 * bindin_25))

# Species:   id = RGt, name = RGt, affected by kineticLaw

init RGt=0.0
dRGt/dt=(1/(PM))*(( 1.0 * binding_1) + (-1.0 * binding_7) + ( 1.0 * exchang_1) + (-1.0 * hydroly_1) + ( 1.0 * exchang_4) + (-1.0 * bindin_23))

# Species:   id = LRGd, name = LRGd, affected by kineticLaw

init LRGd=0.0
dLRGd/dt=(1/(PM))*(( 1.0 * binding_5) + ( 1.0 * hydroly_2) + (-1.0 * associa_2) + ( 1.0 * binding_8) + (-1.0 * exchang_5) + (-1.0 * bindin_26))

# Species:   id = LRrgs, name = LRrgs, affected by kineticLaw

init LRrgs=0.0
dLRrgs/dt=(1/(PM))*((-1.0 * binding_9) + (-1.0 * bindin_10) + (-1.0 * bindin_11) + ( 1.0 * bindin_12) + ( 1.0 * bindin_20))

# Species:   id = LRrgsG, name = LRrgsG, affected by kineticLaw

init LRrgsG=0.0
dLRrgsG/dt=(1/(PM))*(( 1.0 * associa_3) + ( 1.0 * binding_9) + (-1.0 * exchang_6) + ( 1.0 * bindin_22))

# Species:   id = LRrgsGd, name = LRrgsGd, affected by kineticLaw

init LRrgsGd=0.0
dLRrgsGd/dt=(1/(PM))*((-1.0 * associa_3) + ( 1.0 * bindin_10) + ( 1.0 * bindin_14) + (-1.0 * exchang_7) + ( 1.0 * bindin_26) + ( 1.0 * hydroly_3))

# Species:   id = LRrgsGt, name = LRrgsGt, affected by kineticLaw

init LRrgsGt=0.0
dLRrgsGt/dt=(1/(PM))*(( 1.0 * bindin_11) + ( 1.0 * bindin_15) + ( 1.0 * exchang_6) + ( 1.0 * exchang_7) + ( 1.0 * bindin_24) + (-1.0 * hydroly_3))

# Species:   id = Rrgs, name = Rrgs, affected by kineticLaw

init Rrgs=0.0
dRrgs/dt=(1/(PM))*((-1.0 * bindin_12) + (-1.0 * bindin_16) + (-1.0 * bindin_17) + (-1.0 * bindin_18) + ( 1.0 * bindin_19))

# Species:   id = RrgsG, name = RrgsG, affected by kineticLaw

init RrgsG=0.0
dRrgsG/dt=(1/(PM))*(( 1.0 * associa_4) + ( 1.0 * bindin_16) + (-1.0 * exchang_8) + ( 1.0 * bindin_21))

# Species:   id = RrgsGd, name = RrgsGd, affected by kineticLaw

init RrgsGd=0.0
dRrgsGd/dt=(1/(PM))*((-1.0 * associa_4) + (-1.0 * bindin_14) + ( 1.0 * bindin_17) + (-1.0 * exchang_9) + ( 1.0 * bindin_25) + ( 1.0 * hydroly_4))

# Species:   id = RrgsGt, name = RrgsGt, affected by kineticLaw

init RrgsGt=0.0
dRrgsGt/dt=(1/(PM))*((-1.0 * bindin_15) + ( 1.0 * bindin_18) + ( 1.0 * exchang_8) + ( 1.0 * exchang_9) + ( 1.0 * bindin_23) + (-1.0 * hydroly_4))

# Species:   id = rgs, name = rgs, affected by kineticLaw

init rgs=164.835164835165
drgs/dt=(1/(cyt))*((-1.0 * bindin_19) + (-1.0 * bindin_20) + (-1.0 * bindin_21) + (-1.0 * bindin_22) + (-1.0 * bindin_23) + (-1.0 * bindin_24) + (-1.0 * bindin_25) + (-1.0 * bindin_26))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

