
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Bertram2004_PancreaticBetaCell_modelB
#
# is http://identifiers.org/biomodels.db/MODEL1006230042
# is http://identifiers.org/biomodels.db/BIOMD0000000373
# isDescribedBy http://identifiers.org/pubmed/15347584
# isDerivedFrom http://identifiers.org/pubmed/15294427
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = COMpartment, name = COMpartment, constant
par COMpartme=1.0

# Parameter:   id =  IK, name = IK, defined by a Rule

# Parameter:   id =  ICa, name = ICa, defined by a Rule

# Parameter:   id =  IKCa, name = IKCa, defined by a Rule

# Parameter:   id =  Cm, name = Cm, constant
par Cm=5300.0

# Parameter:   id =  gK, name = gK, constant
par gK=2700.0

# Parameter:   id =  gKCa, name = gKCa, constant
par gKCa=600.0

# Parameter:   id =  kd, name = kd, constant
par kd=0.5

# Parameter:   id =  gCa, name = gCa, constant
par gCa=1000.0

# Parameter:   id =  minf, name = minf, defined by a Rule

# Parameter:   id =  VCa, name = VCa, constant
par VCa=25.0

# Parameter:   id =  taun, name = taun, constant
par taun=20.0

# Parameter:   id =  ninf, name = ninf, defined by a Rule

# Parameter:   id =  fcyt, name = fcyt, constant
par fcyt=0.01

# Parameter:   id =  Jmem, name = Jmem, defined by a Rule

# Parameter:   id =  Jer, name = Jer, defined by a Rule

# Parameter:   id =  fer, name = fer, constant
par fer=0.01

# Parameter:   id =  sigmaV, name = sigmaV, constant
par sigmaV=31.0

# Parameter:   id =  pleak, name = pleak, constant
par pleak=2.0E-4

# Parameter:   id =  Kserca, name = Kserca, constant
par Kserca=0.4

# Parameter:   id =  lambdaer, name = lambdaer, constant
par lambdaer=1.0

# Parameter:   id =  epser, name = epser, constant
par epser=1.0

# Parameter:   id =  alpha, name = alpha, constant
par alpha=4.5E-6

# Parameter:   id =  kpmca, name = kpmca, constant
par kpmca=0.2

# Parameter:   id =  Jserca, name = Jserca, defined by a Rule

# Parameter:   id =  Jleak, name = Jleak, defined by a Rule

# Parameter:   id =  rgpdh, name = rgpdh, defined by a Rule

# Parameter:   id =  Rgk, name = Rgk, constant
par Rgk=0.2

# Parameter:   id =  atot, name = atot, constant
par atot=3000.0

# Parameter:   id =  pfkbas, name = pfkbas, constant
par pfkbas=0.06

# Parameter:   id =  f6p, name = f6p, defined by a Rule

# Parameter:   id =  lambda, name = lambda, constant
par lambda=0.005

# Parameter:   id =  pfk, name = pfk, defined by a Rule

# Parameter:   id =  bottom1, name = bottom1, constant
par bottom1=1.0

# Parameter:   id =  topa1, name = topa1, constant
par topa1=0.0

# Parameter:   id =  k1, name = k1, constant
par k1=30.0

# Parameter:   id =  k2, name = k2, constant
par k2=1.0

# Parameter:   id =  k3, name = k3, constant
par k3=50000.0

# Parameter:   id =  k4, name = k4, constant
par k4=1000.0

# Parameter:   id =  cat, name = cat, constant
par cat=2.0

# Parameter:   id =  weight2, name = weight2, defined by a Rule

# Parameter:   id =  topa2, name = topa2, defined by a Rule

# Parameter:   id =  bottom2, name = bottom2, defined by a Rule

# Parameter:   id =  topa3, name = topa3, defined by a Rule

# Parameter:   id =  weight3, name = weight3, defined by a Rule

# Parameter:   id =  bottom3, name = bottom3, defined by a Rule

# Parameter:   id =  famp, name = famp, constant
par famp=0.02

# Parameter:   id =  fatp, name = fatp, constant
par fatp=20.0

# Parameter:   id =  ffbp, name = ffbp, constant
par ffbp=0.2

# Parameter:   id =  fbt, name = fbt, constant
par fbt=20.0

# Parameter:   id =  fmt, name = fmt, constant
par fmt=20.0

# Parameter:   id =  weight4, name = weight4, defined by a Rule

# Parameter:   id =  topa4, name = topa4, defined by a Rule

# Parameter:   id =  bottom4, name = bottom4, defined by a Rule

# Parameter:   id =  weight5, name = weight5, defined by a Rule

# Parameter:   id =  topa5, name = topa5, defined by a Rule

# Parameter:   id =  bottom5, name = bottom5, defined by a Rule

# Parameter:   id =  weight6, name = weight6, defined by a Rule

# Parameter:   id =  topa6, name = topa6, defined by a Rule

# Parameter:   id =  bottom6, name = bottom6, defined by a Rule

# Parameter:   id =  weight7, name = weight7, defined by a Rule

# Parameter:   id =  topa7, name = topa7, defined by a Rule

# Parameter:   id =  bottom7, name = bottom7, defined by a Rule

# Parameter:   id =  weight8, name = weight8, defined by a Rule

# Parameter:   id =  topa8, name = topa8, defined by a Rule

# Parameter:   id =  bottom8, name = bottom8, defined by a Rule

# Parameter:   id =  weight9, name = weight9, defined by a Rule

# Parameter:   id =  topa9, name = topa9, defined by a Rule

# Parameter:   id =  bottom9, name = bottom9, defined by a Rule

# Parameter:   id =  weight10, name = weight10, defined by a Rule

# Parameter:   id =  topa10, name = topa10, defined by a Rule

# Parameter:   id =  bottom10, name = bottom10, defined by a Rule

# Parameter:   id =  weight11, name = weight11, defined by a Rule

# Parameter:   id =  topa11, name = topa11, defined by a Rule

# Parameter:   id =  bottom11, name = bottom11, defined by a Rule

# Parameter:   id =  weight12, name = weight12, defined by a Rule

# Parameter:   id =  topa12, name = topa12, defined by a Rule

# Parameter:   id =  bottom12, name = bottom12, defined by a Rule

# Parameter:   id =  weight13, name = weight13, defined by a Rule

# Parameter:   id =  topa13, name = topa13, defined by a Rule

# Parameter:   id =  bottom13, name = bottom13, defined by a Rule

# Parameter:   id =  weight14, name = weight14, defined by a Rule

# Parameter:   id =  topa14, name = topa14, defined by a Rule

# Parameter:   id =  bottom14, name = bottom14, defined by a Rule

# Parameter:   id =  weight15, name = weight15, defined by a Rule

# Parameter:   id =  topa15, name = topa15, defined by a Rule

# Parameter:   id =  bottom15, name = bottom15, defined by a Rule

# Parameter:   id =  weight16, name = weight16, defined by a Rule

# Parameter:   id =  topa16, name = topa16, defined by a Rule

# Parameter:   id =  bottom16, name = bottom16, defined by a Rule

# Parameter:   id =  topb, name = topb, defined by a Rule

# Parameter:   id =  mgadp, name = mgadp, defined by a Rule

# Parameter:   id =  adp3m, name = adp3m, defined by a Rule

# Parameter:   id =  atp4m, name = atp4m, defined by a Rule

# Parameter:   id =  topo, name = topo, defined by a Rule

# Parameter:   id =  bottomo, name = bottomo, defined by a Rule

# Parameter:   id =  katpo, name = katpo, defined by a Rule

# Parameter:   id =  IKATP, name = IKATP, defined by a Rule

# Parameter:   id =  VK, name = VK, constant
par VK=-75.0

# Parameter:   id =  gkatpbar, name = gkatpbar, constant
par gkatpbar=25000.0

# Parameter:   id =  kdd, name = kdd, constant
par kdd=17.0

# Parameter:   id =  ktd, name = ktd, constant
par ktd=26.0

# Parameter:   id =  ktt, name = ktt, constant
par ktt=1.0

# Parameter:   id =  atp, name = atp, defined by a Rule

# Parameter:   id =  fback, name = fback, defined by a Rule

# Parameter:   id =  taua, name = taua, constant
par taua=300000.0

# Parameter:   id =  r1, name = r1, constant
par r1=0.35

# Parameter:   id =  r, name = r, constant
par r=1.0

# Parameter:   id =  y, name = y, defined by a Rule

# Parameter:   id =  vg, name = vg, constant
par vg=2.2

# Parameter:   id =  kg, name = kg, constant
par kg=10.0

# Parameter:   id =  amp, name = amp, defined by a Rule

# Parameter:   id =  rad, name = rad, defined by a Rule

# Parameter:   id =  ratio, name = ratio, defined by a Rule

# assignmentRule: variable = IK
IK=gK*n*(V-VK)
aux IK=IK

# assignmentRule: variable = IKCa
IKCa=gKCa/(1+(kd/c)^2)*(V-VK)
aux IKCa=IKCa

# assignmentRule: variable = minf
minf=1/(1+exp((-(20+V/1))/12))
aux minf=minf

# assignmentRule: variable = ICa
ICa=gCa*minf*(V-VCa)
aux ICa=ICa

# assignmentRule: variable = ninf
ninf=1/(1+exp((-(16+V/1))/5))
aux ninf=ninf

# assignmentRule: variable = Jmem
Jmem=-(alpha*ICa+kpmca*c)
aux Jmem=Jmem

# assignmentRule: variable = Jserca
Jserca=Kserca*c
aux Jserca=Jserca

# assignmentRule: variable = Jleak
Jleak=pleak*(cer-c)
aux Jleak=Jleak

# assignmentRule: variable = Jer
Jer=epser*(Jleak-Jserca)/lambdaer
aux Jer=Jer

# assignmentRule: variable = rgpdh
rgpdh=0.2*(abs(fbp*1/1^2))^(1/2)
aux rgpdh=rgpdh

# assignmentRule: variable = f6p
f6p=0.3*g6p
aux f6p=f6p

# assignmentRule: variable = topa2
topa2=topa1
aux topa2=topa2

# assignmentRule: variable = weight3
weight3=f6p^2/(k3*1)
aux weight3=weight3

# assignmentRule: variable = topa3
topa3=topa2+weight3
aux topa3=topa3

# assignmentRule: variable = weight5
weight5=fbp/k2
aux weight5=weight5

# assignmentRule: variable = weight7
weight7=fbp*f6p^2/(k2*k3*ffbp*1)
aux weight7=weight7

# assignmentRule: variable = mgadp
mgadp=0.165*adp
aux mgadp=mgadp

# assignmentRule: variable = adp3m
adp3m=0.135*adp
aux adp3m=adp3m

# assignmentRule: variable = topo
topo=0.08*(1+2*mgadp/(kdd*1))+0.89*(mgadp/(kdd*1))^2
aux topo=topo

# assignmentRule: variable = y
y=vg*rgpdh/(kg+rgpdh)
aux y=y

# assignmentRule: variable = fback
fback=r+y
aux fback=fback

# assignmentRule: variable = rad
rad=(abs((adp-atot)^2-4*adp^2))^(1/2)/1
aux rad=rad

# assignmentRule: variable = atp
atp=0.5*(atot-adp+rad*1)
aux atp=atp

# assignmentRule: variable = weight2
weight2=atp^2/(k4*1)
aux weight2=weight2

# assignmentRule: variable = bottom2
bottom2=bottom1+weight2
aux bottom2=bottom2

# assignmentRule: variable = bottom3
bottom3=bottom2+weight3
aux bottom3=bottom3

# assignmentRule: variable = weight4
weight4=(f6p*atp)^2/(fatp*k3*k4*1^2)
aux weight4=weight4

# assignmentRule: variable = topa4
topa4=topa3+weight4
aux topa4=topa4

# assignmentRule: variable = bottom4
bottom4=bottom3+weight4
aux bottom4=bottom4

# assignmentRule: variable = topa5
topa5=topa4
aux topa5=topa5

# assignmentRule: variable = bottom5
bottom5=bottom4+weight5
aux bottom5=bottom5

# assignmentRule: variable = weight6
weight6=fbp*atp^2/(k2*k4*fbt*1)
aux weight6=weight6

# assignmentRule: variable = topa6
topa6=topa5
aux topa6=topa6

# assignmentRule: variable = bottom6
bottom6=bottom5+weight6
aux bottom6=bottom6

# assignmentRule: variable = topa7
topa7=topa6+weight7
aux topa7=topa7

# assignmentRule: variable = bottom7
bottom7=bottom6+weight7
aux bottom7=bottom7

# assignmentRule: variable = weight8
weight8=fbp*f6p^2*atp^2/(k2*k3*k4*ffbp*fbt*fatp*1^2)
aux weight8=weight8

# assignmentRule: variable = topa8
topa8=topa7+weight8
aux topa8=topa8

# assignmentRule: variable = topa9
topa9=topa8
aux topa9=topa9

# assignmentRule: variable = bottom8
bottom8=bottom7+weight8
aux bottom8=bottom8

# assignmentRule: variable = topa10
topa10=topa9
aux topa10=topa10

# assignmentRule: variable = atp4m
atp4m=0.05*atp
aux atp4m=atp4m

# assignmentRule: variable = bottomo
bottomo=(1+mgadp/(kdd*1))^2*(1+adp3m/(ktd*1)+atp4m/(ktt*1))
aux bottomo=bottomo

# assignmentRule: variable = katpo
katpo=topo/bottomo
aux katpo=katpo

# assignmentRule: variable = IKATP
IKATP=gkatpbar*katpo*(V-VK)
aux IKATP=IKATP

# assignmentRule: variable = amp
amp=adp*adp/atp
aux amp=amp

# assignmentRule: variable = weight9
weight9=amp/k1
aux weight9=weight9

# assignmentRule: variable = bottom9
bottom9=bottom8+weight9
aux bottom9=bottom9

# assignmentRule: variable = weight10
weight10=amp*atp^2/(k1*k4*fmt*1)
aux weight10=weight10

# assignmentRule: variable = bottom10
bottom10=bottom9+weight10
aux bottom10=bottom10

# assignmentRule: variable = weight11
weight11=amp*f6p^2/(k1*k3*famp*1)
aux weight11=weight11

# assignmentRule: variable = topa11
topa11=topa10+weight11
aux topa11=topa11

# assignmentRule: variable = bottom11
bottom11=bottom10+weight11
aux bottom11=bottom11

# assignmentRule: variable = weight12
weight12=amp*f6p^2*atp^2/(k1*k3*k4*famp*fmt*fatp*1^2)
aux weight12=weight12

# assignmentRule: variable = topa12
topa12=topa11+weight12
aux topa12=topa12

# assignmentRule: variable = bottom12
bottom12=bottom11+weight12
aux bottom12=bottom12

# assignmentRule: variable = weight13
weight13=amp*fbp/(k1*k2)
aux weight13=weight13

# assignmentRule: variable = topa13
topa13=topa12
aux topa13=topa13

# assignmentRule: variable = bottom13
bottom13=bottom12+weight13
aux bottom13=bottom13

# assignmentRule: variable = weight14
weight14=amp*fbp*atp^2/(k1*k2*k4*fbt*fmt*1)
aux weight14=weight14

# assignmentRule: variable = topa14
topa14=topa13
aux topa14=topa14

# assignmentRule: variable = bottom14
bottom14=bottom13+weight14
aux bottom14=bottom14

# assignmentRule: variable = weight15
weight15=amp*fbp*f6p^2/(k1*k2*k3*ffbp*famp*1)
aux weight15=weight15

# assignmentRule: variable = topa15
topa15=topa14
aux topa15=topa15

# assignmentRule: variable = bottom15
bottom15=bottom14+weight15
aux bottom15=bottom15

# assignmentRule: variable = weight16
weight16=amp*fbp*f6p^2*atp^2/(k1*k2*k3*k4*ffbp*famp*fbt*fmt*fatp*1^2)
aux weight16=weight16

# assignmentRule: variable = topa16
topa16=topa15+weight16
aux topa16=topa16

# assignmentRule: variable = bottom16
bottom16=bottom15+weight16
aux bottom16=bottom16

# assignmentRule: variable = topb
topb=weight15
aux topb=topb

# assignmentRule: variable = pfk
pfk=1*(pfkbas*cat*topa16+cat*topb)/bottom16
aux pfk=pfk

# assignmentRule: variable = ratio
ratio=atp/adp
aux ratio=ratio

# rateRule: variable = V
init V=-60.0
dV/dt=(-(IK+ICa+IKCa+IKATP))/Cm

# rateRule: variable = n
init n=0.025
dn/dt=(ninf-n)/taun

# rateRule: variable = c
init c=0.25
dc/dt=fcyt*(Jmem+Jer)

# rateRule: variable = cer
init cer=185.0
dcer/dt=(-fer)*sigmaV*Jer

# rateRule: variable = g6p
init g6p=200.0
dg6p/dt=lambda*(Rgk-pfk)

# rateRule: variable = fbp
init fbp=40.0
dfbp/dt=lambda*(pfk/1-0.5*rgpdh)

# rateRule: variable = adp
init adp=780.0
dadp/dt=(atp-adp*exp(fback*(1-c/r1)))/(taua*1)

# Species:   id = V, name = V, defined in a rule 

# Species:   id = n, name = n, defined in a rule 

# Species:   id = c, name = c, defined in a rule 

# Species:   id = cer, name = cer, defined in a rule 

# Species:   id = g6p, name = g6p, defined in a rule 

# Species:   id = fbp, name = fbp, defined in a rule 

# Species:   id = adp, name = adp, defined in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

