
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ciliberto2005 - Steady states and oscillations in the p53/Mdm2 network
#
# unknownQualifier http://identifiers.org/mamo/MAMO_0000046
# isDescribedBy http://identifiers.org/pubmed/15725723
# is http://identifiers.org/biomodels.db/MODEL2104140001
# is http://identifiers.org/biomodels.db/BIOMD0000001006
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = F11___translocation1, name = F11 - translocation1
F11___tra(Vratio,k,S)=(Vratio*k*S)


# FunctionDefinition id = F9__p53_ub_ub_deg, name = F9- p53 ub ub deg
F9__p53_u(k1,k2,s)=((k1+k2)*s)


# FunctionDefinition id = F7___indirect, name = F7 - indirect
F7___indi(k,M)=(k*M)


# FunctionDefinition id = F1___ubiquitination1, name = F1 - ubiquitination1
F1___ubiq(k,E,S)=(k*E*S)


# FunctionDefinition id = F2_Damage, name = F2-Damage
F2_Damage(k,M)=(k*M)


# FunctionDefinition id = F3_Repair, name = F3-Repair
F3_Repair(k,p53,S,Jdna)=(k*p53*S/(Jdna+S))


# FunctionDefinition id = F4___mdm2_phos, name = F4 - mdm2 phos
F4___mdm2(p53t,Jph,kph,S)=(kph/(Jph+p53t)*S)


# FunctionDefinition id = F8_ubiquitination2, name = F8-ubiquitination2
F8_ubiqui(k,M,S)=(k*M*S)


# FunctionDefinition id = F10___mdm2cyt_synthesis, name = F10 - mdm2cyt synthesis
F10___mdm(p1,p2,p53tot,m,Js)=(p1+p2*p53tot^m/(Js^m+p53tot^m))


# FunctionDefinition id = F12__translocation2, name = F12- translocation2
F12__tran(Vratio,k,M)=(Vratio*k*M)


# Compartment: id = Cyt, name = Cyt, constant
par Cyt=1.0

# Compartment: id = Nuc, name = Nuc, constant
par Nuc=1.0

# Parameter:   id =  Kf, name = Kf, constant
par Kf=8.8

# Parameter:   id =  Kr, name = Kr, constant
par Kr=2.5

# Parameter:   id =  ks53, name = ks53, constant
par ks53=0.055

# Parameter:   id =  kDNA, name = kDNA, constant
par kDNA=0.18

# Parameter:   id =  kdDNA, name = kdDNA, constant
par kdDNA=0.017

# Parameter:   id =  Jdna, name = Jdna, constant
par Jdna=1.0

# Parameter:   id =  vratio, name = vratio, constant
par vratio=15.0

# Parameter:   id =  kd53, name = kd53', constant
par kd53=0.0055

# Parameter:   id =  ks2, name = ks2', constant
par ks2=0.0015

# Parameter:   id =  ks2_0, name = ks2, constant
par ks2_0=0.006

# Parameter:   id =  kd2, name = kd2', constant
par kd2=0.01

# Parameter:   id =  kd2_, name = kd2'', constant
par kd2_=0.01

# Parameter:   id =  kph, name = kph, constant
par kph=0.05

# Parameter:   id =  kdeph, name = kdeph, constant
par kdeph=6.0

# Parameter:   id =  kin, name = kin, constant
par kin=14.0

# Parameter:   id =  kout, name = kout, constant
par kout=0.5

# Parameter:   id =  kd53_0, name = kd53, constant
par kd53_0=8.0

# Parameter:   id =  m, name = m, constant
par m=3.0

# Parameter:   id =  Js, name = Js, constant
par Js=1.2

# Parameter:   id =  Jdam, name = Jdam, constant
par Jdam=0.2

# Parameter:   id =  Jph, name = Jph, constant
par Jph=0.01

# Parameter:   id =  ampl, name = ampl, constant
par ampl=1.0

# Parameter:   id =  step, name = step
par step=0.0

# Parameter:   id =  t_on, name = t_on, constant
par t_on=10.0

# Parameter:   id =  t_off, name = t_off, constant
par t_off=20.0

# Parameter:   id =  kd2_0, name = kd2, defined by a Rule

# Parameter:   id =  ModelValue_6, name = Initial for vratio, constant
par ModelValu=15.0

# assignmentRule: variable = kd2_0
kd2_0=kd2+kd2_*DNA_damag/(Jdam+DNA_damag)
aux kd2_0=kd2_0

# assignmentRule: variable = IR
IR=ampl*step
aux IR=IR

# assignmentRule: variable = p53
p53=p53_total-p53_ub-p53_ub_ub
aux p53=p53

# assignmentRule: variable = MDM2_total
MDM2_tota=Mdm2_cyt+1/ModelValu*Mdm2_p_nu+Mdm2_p_cy
aux MDM2_tota=MDM2_tota

# Reaction: id = DNA_Damage, name = DNA Damage

DNA_Dam_1=Nuc*F2_Damage(kDNA, IR)

# Reaction: id = DNA_Repair, name = DNA Repair

DNA_Repai=Nuc*F3_Repair(kdDNA, p53_total, DNA_damag, Jdna)

# Reaction: id = p53_total_production, name = p53 total production

p53_tot_1=Nuc*Constant_(ks53)

# Reaction: id = p53_total_degradation, name = p53 total degradation

p53_tot_2=Nuc*kd53*p53_total

# Reaction: id = p53_ubiquitination_1, name = p53 ubiquitination 1

p53_ubiqu=Nuc*F1___ubiq(Kf, Mdm2_p_nu, p53)

# Reaction: id = p53_ubiquitination_2, name = p53 ubiquitination 2

p53_ubi_1=Nuc*F8_ubiqui(Kf, Mdm2_p_nu, p53_ub)

# Reaction: id = p53_ub_degradation, name = p53_ub degradation

p53_ub_de=Nuc*kd53*p53_ub

# Reaction: id = p53_ub_ub_degradation, name = p53_ub_ub degradation

p53_ub__1=Nuc*F9__p53_u(kd53, kd53_0, p53_ub_ub)

# Reaction: id = p53_deubiquitination_1, name = p53 deubiquitination 1

p53_deubi=Nuc*Kr*p53_ub

# Reaction: id = p53_deubiquitination_2, name = p53 deubiquitination 2

p53_deu_1=Nuc*Kr*p53_ub_ub

# Reaction: id = Mdm2_cyt_production, name = Mdm2_cyt production

Mdm2_cyt_=F10___mdm(ks2, ks2_0, p53_total, m, Js)

# Reaction: id = Mdm2_cyt_phosphorylation, name = Mdm2_cyt phosphorylation

Mdm2_cy_1=F4___mdm2(p53_total, Jph, kph, Mdm2_cyt)

# Reaction: id = Mdm2_cyt_degradation, name = Mdm2_cyt degradation

Mdm2_cy_2=Cyt*kd2*Mdm2_cyt

# Reaction: id = Mdm2_p_cyt_degradation, name = Mdm2_p_cyt degradation

Mdm2_p__1=Cyt*kd2*Mdm2_p_cy

# Reaction: id = Mdm2_p_nuc_translocation_out, name = Mdm2_p_nuc translocation out

Mdm2_p__2=Nuc*F11___tra(vratio, kout, Mdm2_p_nu)

# Reaction: id = Mdm2_p_cyt_dephosphorylation, name = Mdm2_p_cyt dephosphorylation

Mdm2_p__3=Cyt*kdeph*Mdm2_p_cy

# Reaction: id = Mdm2_p_cyt_translocation_out, name = Mdm2_p_cyt translocation out

Mdm2_p__4=Cyt*kin*Mdm2_p_cy

# Reaction: id = Mdm2_p_nuc_degradation, name = Mdm2_p_nuc degradation

Mdm2_p__5=Nuc*kd2_0*Mdm2_p_nu

# Reaction: id = p53_total_degradation_2, name = p53 total degradation 2

p53_tot_3=Nuc*F7___indi(kd53_0, p53_ub_ub)

# Reaction: id = Mdm2_p_cyt_translocation_in, name = Mdm2_p_cyt translocation in

Mdm2_p__6=F2_Damage(kout, Mdm2_p_nu)

# Reaction: id = Mdm2_p_nuc_translocation_in, name = Mdm2_p_nuc translocation in

Mdm2_p__7=F12__tran(vratio, kin, Mdm2_p_cy)

# Species:   id = DNA_damage, name = DNA_damage, affected by kineticLaw

par DNA_damag=0.0
aux DNA_damag=DNA_damag
dDNA_damag/dt=(1/(Nuc))*(( 1.0 * DNA_Dam_1) + (-1.0 * DNA_Repai))

# Species:   id = IR, name = IR, involved in a rule 

# Species:   id = p53_total, name = p53_total, affected by kineticLaw

init p53_total=0.07118
dp53_total/dt=(1/(Nuc))*(( 1.0 * p53_tot_1) + (-1.0 * p53_tot_2) + (-1.0 * p53_tot_3))

# Species:   id = p53_ub, name = p53_ub, affected by kineticLaw

init p53_ub=0.02456
dp53_ub/dt=(1/(Nuc))*(( 1.0 * p53_ubiqu) + (-1.0 * p53_ubi_1) + (-1.0 * p53_ub_de) + (-1.0 * p53_deubi) + ( 1.0 * p53_deu_1))

# Species:   id = p53_ub_ub, name = p53_ub_ub, affected by kineticLaw

init p53_ub_ub=0.006826
dp53_ub_ub/dt=(1/(Nuc))*(( 1.0 * p53_ubi_1) + (-1.0 * p53_ub__1) + (-1.0 * p53_deu_1))

# Species:   id = Mdm2_cyt, name = Mdm2_cyt, affected by kineticLaw

init Mdm2_cyt=0.1161
dMdm2_cyt/dt=(1/(Cyt))*(( 1.0 * Mdm2_cyt_) + (-1.0 * Mdm2_cy_1) + (-1.0 * Mdm2_cy_2) + ( 1.0 * Mdm2_p__3))

# Species:   id = Mdm2_p_cyt, name = Mdm2_p_cyt, affected by kineticLaw

par Mdm2_p_cy=0.01187
aux Mdm2_p_cy=Mdm2_p_cy
dMdm2_p_cy/dt=(1/(Cyt))*(( 1.0 * Mdm2_cy_1) + (-1.0 * Mdm2_p__1) + (-1.0 * Mdm2_p__3) + (-1.0 * Mdm2_p__4) + ( 1.0 * Mdm2_p__6))

# Species:   id = Mdm2_p_nuc, name = Mdm2_p_nuc, affected by kineticLaw

par Mdm2_p_nu=0.331800000000002
aux Mdm2_p_nu=Mdm2_p_nu
dMdm2_p_nu/dt=(1/(Nuc))*((-1.0 * Mdm2_p__2) + (-1.0 * Mdm2_p__5) + ( 1.0 * Mdm2_p__7))

# Species:   id = p53, name = p53, involved in a rule 

# Species:   id = MDM2_total, name = MDM2_total, involved in a rule 

# event : event
# unable to handle events with delays currently.
# event ignored.


# event : event_1
event_1=if (t > 20) then (1.5) else (0.2)
global 1 {event_1 - 1.1} {step=0}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

