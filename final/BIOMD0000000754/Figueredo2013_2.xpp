
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Figueredo2013/2 - immunointeraction model with IL2
#
# isDescribedBy http://identifiers.org/pubmed/23734575
# is http://identifiers.org/biomodels.db/MODEL1907180002
# is http://identifiers.org/biomodels.db/BIOMD0000000754
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = is_il2, name = is-il2
is_il2(p1,E,I,g1)=(p1*E*I/(g1+I))


# FunctionDefinition id = IL2, name = IL2
IL2(p2,E,T,g3)=(p2*E*T/(g3+T))


# FunctionDefinition id = kill, name = kill
kill(aa,E,T,g2)=(aa*E*T/(g2+T))


# FunctionDefinition id = is_tumor, name = is-tumor
is_tumor(c,T)=(c*T)


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = t_d, name = t-d
t_d(a,b,T)=(a*b*T*T)


# FunctionDefinition id = growth, name = growth
growth(a,T)=(a*T)


# Compartment: id = tumor_microenvironment, name = tumor microenvironment, constant
par tumor_mic=1.0

# Parameter:   id =  a, name = a, constant
par a=0.18

# Parameter:   id =  b, name = b, constant
par b=1.0E-9

# Parameter:   id =  c, name = c, constant
par c=0.05

# Parameter:   id =  aa, name = aa, constant
par aa=1.0

# Parameter:   id =  g2, name = g2, constant
par g2=100000.0

# Parameter:   id =  s1, name = s1, constant
par s1=0.0

# Parameter:   id =  s2, name = s2, constant
par s2=0.0

# Parameter:   id =  u2, name = u2, constant
par u2=0.03

# Parameter:   id =  p1, name = p1, constant
par p1=0.1245

# Parameter:   id =  g1, name = g1, constant
par g1=2.0E7

# Parameter:   id =  p2, name = p2, constant
par p2=5.0

# Parameter:   id =  g3, name = g3, constant
par g3=1000.0

# Parameter:   id =  u3, name = u3, constant
par u3=10.0

# Reaction: id = tumor_growth, name = tumor growth

tumor_gro=tumor_mic*growth(a, T_renamed)

# Reaction: id = tumor_death, name = tumor death

tumor_dea=tumor_mic*t_d(a, b, T_renamed)

# Reaction: id = tumor_killing, name = tumor killing

tumor_kil=tumor_mic*kill(aa, E, T_renamed, g2)

# Reaction: id = immune_death, name = immune death

immune_de=tumor_mic*u2*E

# Reaction: id = immune_stimulation_tumor, name = immune stimulation-tumor

immune_st=tumor_mic*is_tumor(c, T_renamed)

# Reaction: id = immune_stimulation_IL2, name = immune stimulation-IL2

immune__1=tumor_mic*is_il2(p1, E, I, g1)

# Reaction: id = immune_injection, name = immune injection

immune_in=tumor_mic*Constant_(s1)

# Reaction: id = IL2_injection, name = IL2 injection

IL2_injec=tumor_mic*Constant_(s2)

# Reaction: id = IL2_loss, name = IL2 loss

IL2_loss=tumor_mic*u3*I

# Reaction: id = IL2_production, name = IL2 production

IL2_produ=tumor_mic*IL2(p2, E, T_renamed, g3)

# Species:   id = T, name = T, affected by kineticLaw

par T_renamed=50.0
aux T_renamed=T_renamed
dT_renamed/dt=(1/(tumor_mic))*(( 1.0 * tumor_gro) + (-1.0 * tumor_dea) + (-1.0 * tumor_kil))

# Species:   id = E, name = E, affected by kineticLaw

init E=10.0
dE/dt=(1/(tumor_mic))*((-1.0 * immune_de) + ( 1.0 * immune_st) + ( 1.0 * immune__1) + ( 1.0 * immune_in))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.0
dI/dt=(1/(tumor_mic))*(( 1.0 * IL2_injec) + (-1.0 * IL2_loss) + ( 1.0 * IL2_produ))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

