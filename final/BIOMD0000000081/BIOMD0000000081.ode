
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Suh2004_KCNQ_Regulation
#
# is http://identifiers.org/biomodels.db/MODEL4662889298
# is http://identifiers.org/biomodels.db/BIOMD0000000081
# isDescribedBy http://identifiers.org/pubmed/15173220
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = EX, name = Extracellular, constant
par EX=1.0

# Compartment: id = M, name = Membrane, constant
par M=1.0

# Compartment: id = Cytoplasm, name = Cytoplasm, constant
par Cytoplasm=1.0

# Parameter:   id =  MgSat20, name = MgSat20, defined by a Rule

# Parameter:   id =  ATPSat300, name = ATPSat300, defined by a Rule

# Parameter:   id =  MgSat10, name = MgSat10, defined by a Rule

# Parameter:   id =  OxoSat, name = OxoSat, defined by a Rule

# Parameter:   id =  Gactive, name = Gactive, defined by a Rule

# Parameter:   id =  ATPSat1000, name = ATPSat1000, defined by a Rule

# Parameter:   id =  KMgGTPase, name = KMgGTPase, constant
par KMgGTPase=10.0

# Parameter:   id =  Koxom, name = Koxom, constant
par Koxom=8.0

# Parameter:   id =  I_KCNQ, name = I_KCNQ, defined by a Rule

# Parameter:   id =  nHill, name = nHill, constant
par nHill=1.8

# Parameter:   id =  fGactive, name = fGactive, defined by a Rule

# Parameter:   id =  NA_micro, name = NA(micro), constant
par NA_micro=6.022E17

# assignmentRule: variable = MgSat20
MgSat20=1*1/(1+20*1/Mg2_C)
aux MgSat20=MgSat20

# assignmentRule: variable = ATPSat1000
ATPSat100=1*1/(1+1000*1/(0.5+ATP_C))
aux ATPSat100=ATPSat100

# assignmentRule: variable = MgSat10
MgSat10=0.2+0.8*1*1/(1+KMgGTPase*1/Mg2_C)
aux MgSat10=MgSat10

# assignmentRule: variable = OxoSat
OxoSat=1*1/(1+Koxom*1/(1E-5+oxoM_EX))
aux OxoSat=OxoSat

# assignmentRule: variable = fGactive
fGactive=(GGTPMg_M+GGTPgSMg_+GGDPAlF4M)/200
aux fGactive=fGactive

# assignmentRule: variable = Gactive
Gactive=GGTPMg_M+GGTPgSMg_+GGDPAlF4M
aux Gactive=Gactive

# assignmentRule: variable = ATPSat300
ATPSat300=1*1/(1+300*1/(0.5+ATP_C))
aux ATPSat300=ATPSat300

# assignmentRule: variable = I_KCNQ
I_KCNQ=1.33*(0.025*PIP2xKCNQ)^nHill
aux I_KCNQ=I_KCNQ

# assignmentRule: variable = GTP_C
GTP_C=100-50*exp(-0.00833333333333333*(290+t))
aux GTP_C=GTP_C

# Reaction: id = PIP5kinase, name = PIP5kinase
# Local Parameter:   id =  kPIP5Kinase, name = kPIP5Kinase
par kPIP5Kina=0.06


PIP5kinas=(0.2+0.8*MgSat20)*kPIP5Kina*PIP_M*ATPSat300

# Reaction: id = IP3Phosphatase, name = IP3Phosphatase
# Local Parameter:   id =  kIP3ase, name = kIP3ase
par kIP3ase=0.3


IP3Phosph=ip3_C*kIP3ase*Cytoplasm*NA_micro

# Reaction: id = PIP2binding, name = PIP2binding
# Local Parameter:   id =  kPIP2on, name = kPIP2on
par kPIP2on=2.5E-4

# Local Parameter:   id =  kPIP2off, name = kPIP2off
par kPIP2off=0.25


PIP2bindi=(kPIP2on*KCNQsites*PIP2_M+(-kPIP2off*PIP2xKCNQ))*M

# Reaction: id = MgonGGTPgS, name = MgonGGTPgS
# Local Parameter:   id =  kMg2onGTPgS, name = kMg2onGTPgS
par kMg2onGTP=0.002


MgonGGTPg=kMg2onGTP*GGTPgS_M*Mg2_C*M

# Reaction: id = GGTPase, name = GGTPase
# Local Parameter:   id =  kGGTPase, name = kGGTPase
par kGGTPase=1.8


GGTPase=kGGTPase*MgSat10*GGTPMg_M*M

# Reaction: id = GTPon, name = GTPon
# Local Parameter:   id =  kGTPon, name = kGTPon
par kGTPon=0.45

# Local Parameter:   id =  kGTPoff, name = kGTPoff
par kGTPoff=0.08


GTPon=(kGTPon*G_M*GTP_C+(-kGTPoff*GGTP_M))*M

# Reaction: id = GTPgSon, name = GTPgSon
# Local Parameter:   id =  kGTPgSon, name = kGTPgSon
par kGTPgSon=0.006

# Local Parameter:   id =  kGTPgSoff, name = kGTPgSoff
par kGTPgSoff=0.005


GTPgSon=(kGTPgSon*G_M*GTPgS_C+(-kGTPgSoff*GGTPgS_M))*M

# Reaction: id = GDPbSon, name = GDPbSon
# Local Parameter:   id =  kGDPbSon, name = kGDPbSon
par kGDPbSon=0.28

# Local Parameter:   id =  kGGDPbSoff, name = kGGDPbSoff
par kGGDPbSof=0.1


GDPbSon=(kGDPbSon*G_M*GDPbS_C+(-kGGDPbSof*(1+20*OxoSat)*GGDPbS_M))*M

# Reaction: id = MgGTPon, name = MgGTPon
# Local Parameter:   id =  kMg2onGTP, name = kMg2onGTP
par kMg2onG_1=0.003


MgGTPon=kMg2onG_1*GGTP_M*Mg2_C*M

# Reaction: id = GDPdissoc, name = GDPdissoc
# Local Parameter:   id =  kGDPoff, name = kGDPoff
par kGDPoff=0.5

# Local Parameter:   id =  TonicAct, name = TonicAct
par TonicAct=0.002

# Local Parameter:   id =  kGDPon, name = kGDPon
par kGDPon=0.003


GDPdissoc=(kGDPoff*GGDP_M*(OxoSat+TonicAct)+(-kGDPon*GDP_C*G_M))*M

# Reaction: id = PIP2_5Pase, name = PIP2_5Pase
# Local Parameter:   id =  kPIP2Pase, name = kPIP2Pase
par kPIP2Pase=0.005


PIP2_5Pas=MgSat20*kPIP2Pase*PIP2_M*M

# Reaction: id = PLC, name = PLC
# Local Parameter:   id =  kPLC, name = kPLC
par kPLC=4.8

# Local Parameter:   id =  PLCspont, name = PLCspont
par PLCspont=7.5E-4


PLC=kPLC*(fGactive+PLCspont)*PIP2_M*M

# Reaction: id = AlF4on, name = AIF4on
# Local Parameter:   id =  kAlF4on, name = kAlF4on
par kAlF4on=7.0E-6

# Local Parameter:   id =  kAlF4off, name = kAlF4off
par kAlF4off=0.005


AlF4on=(kAlF4on*AlF4_C*GGDP_M+(-kAlF4off*GGDPAlF4_))*M

# Reaction: id = PI4Kinase, name = PI4Kinase
# Local Parameter:   id =  kPI4Kinase, name = kPI4Kinase
par kPI4Kinas=1.0E-4


PI4Kinase=(0.2+0.8*MgSat20)*kPI4Kinas*PI_M*ATPSat100*M

# Reaction: id = MgonGDPAlF4, name = MgonGDPAIF4
# Local Parameter:   id =  kMgonAlF4, name = kMgonAlF4
par kMgonAlF4=0.002


MgonGDPAl=kMgonAlF4*GGDPAlF4_*Mg2_C*M

# Species:   id = GTPgS_C, name = GTPgS_C, affected by kineticLaw

init GTPgS_C=0.0
dGTPgS_C/dt=(1/(Cytoplasm))*((-9.967E-4 * GTPgSon))

# Species:   id = KCNQsites_M, name = KCNQsites_M, affected by kineticLaw

par KCNQsites=6.7
aux KCNQsites=KCNQsites
dKCNQsites/dt=(1/(M))*((-1.0 * PIP2bindi))

# Species:   id = PIP2_M, name = PIP2_M, affected by kineticLaw

init PIP2_M=5000.0
dPIP2_M/dt=(1/(M))*(( 1.0 * PIP5kinas) + (-1.0 * PIP2bindi) + (-1.0 * PIP2_5Pas) + (-1.0 * PLC))

# Species:   id = GGDPbS_M, name = GGDPbS_M, affected by kineticLaw

init GGDPbS_M=0.0
dGGDPbS_M/dt=(1/(M))*(( 1.0 * GDPbSon))

# Species:   id = Mg2_C, name = Mg2_C
par Mg2_C=2100.0
aux Mg2_C=Mg2_C
#WARNING speciesID: Mg2_C, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = ATP_C, name = ATP_C, affected by kineticLaw

init ATP_C=3000.0
dATP_C/dt=(1/(Cytoplasm))*((-9.967E-4 * PIP5kinas) + (-9.967E-4 * PI4Kinase))

# Species:   id = oxoM_EX, name = oxoM_EX
# Warning species is not changed by either rules or reactions
# Species is changed by 2 event(s)
par oxoM_EX=0.0
aux oxoM_EX=oxoM_EX

# Species:   id = GDPbS_C, name = GDPbS_C, affected by kineticLaw

init GDPbS_C=0.0
dGDPbS_C/dt=(1/(Cytoplasm))*((-9.967E-4 * GDPbSon))

# Species:   id = GGTPMg_M, name = GGTPMg_M, affected by kineticLaw

init GGTPMg_M=0.1
dGGTPMg_M/dt=(1/(M))*((-1.0 * GGTPase) + ( 1.0 * MgGTPon))

# Species:   id = GDP_C, name = GDP_C, affected by kineticLaw

init GDP_C=0.0
dGDP_C/dt=(1/(Cytoplasm))*(( 9.967E-4 * GDPdissoc))

# Species:   id = GTP_C, name = GTP_C, defined in a rule 

# Species:   id = GGDPAlF4Mg_M, name = GGDPAIF4Mg_M, affected by kineticLaw

par GGDPAlF4M=0.0
aux GGDPAlF4M=GGDPAlF4M
dGGDPAlF4M/dt=(1/(M))*(( 1.0 * MgonGDPAl))

# Species:   id = ip3_C, name = IP3_C, affected by kineticLaw

init ip3_C=0.48
dip3_C/dt=(1/(Cytoplasm))*((-1.666111296E-18 * IP3Phosph) + ( 9.967E-4 * PLC))

# Species:   id = AlF4_C, name = AIF4_C, affected by kineticLaw

init AlF4_C=0.0
dAlF4_C/dt=(1/(Cytoplasm))*((-9.967E-4 * AlF4on))

# Species:   id = G_M, name = G_M, affected by kineticLaw

init G_M=0.065
dG_M/dt=(1/(M))*((-1.0 * GTPon) + (-1.0 * GTPgSon) + (-1.0 * GDPbSon) + ( 1.0 * GDPdissoc))

# Species:   id = GGTP_M, name = GGTP_M, affected by kineticLaw

init GGTP_M=0.048
dGGTP_M/dt=(1/(M))*(( 1.0 * GTPon) + (-1.0 * MgGTPon))

# Species:   id = GGDPAlF4_M, name = GGDPAIF4_M, affected by kineticLaw

par GGDPAlF4_=0.0
aux GGDPAlF4_=GGDPAlF4_
dGGDPAlF4_/dt=(1/(M))*(( 1.0 * AlF4on) + (-1.0 * MgonGDPAl))

# Species:   id = GGTPgS_M, name = GGTPgS_M, affected by kineticLaw

init GGTPgS_M=0.0
dGGTPgS_M/dt=(1/(M))*((-1.0 * MgonGGTPg) + ( 1.0 * GTPgSon))

# Species:   id = PI_M, name = PI_M, affected by kineticLaw

init PI_M=200000.0
dPI_M/dt=(1/(M))*((-1.0 * PI4Kinase))

# Species:   id = PIP_M, name = PIP_M, affected by kineticLaw

init PIP_M=1150.0
dPIP_M/dt=(1/(M))*((-1.0 * PIP5kinas) + ( 1.0 * PIP2_5Pas) + ( 1.0 * PI4Kinase))

# Species:   id = PIP2xKCNQ_M, name = PIP2xKCNQ_M, affected by kineticLaw

par PIP2xKCNQ=33.3
aux PIP2xKCNQ=PIP2xKCNQ
dPIP2xKCNQ/dt=(1/(M))*(( 1.0 * PIP2bindi))

# Species:   id = GGTPgSMg_M, name = GGTPgSMg_M, affected by kineticLaw

par GGTPgSMg_=0.0
aux GGTPgSMg_=GGTPgSMg_
dGGTPgSMg_/dt=(1/(M))*(( 1.0 * MgonGGTPg))

# Species:   id = GGDP_M, name = GGDP_M, affected by kineticLaw

init GGDP_M=200.0
dGGDP_M/dt=(1/(M))*(( 1.0 * GGTPase) + (-1.0 * GDPdissoc) + (-1.0 * AlF4on))

# event : event_0000001
event_000=if (t >= 3) then (1.5) else (0.2)
global 1 {event_000 - 1.1} {oxoM_EX=10}

# event : event_0000002
event_0_1=if (t >= 8) then (1.5) else (0.2)
global 1 {event_0_1 - 1.1} {oxoM_EX=0}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

