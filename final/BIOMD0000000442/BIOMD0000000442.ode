
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Sarma2012 - Oscillations in MAPK cascade (S2), inclusion of external signalling module
#
# is http://identifiers.org/biomodels.db/MODEL1112190005
# is http://identifiers.org/biomodels.db/BIOMD0000000442
# isDescribedBy http://identifiers.org/pubmed/22694947
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000441
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_4_1_1, name = function_4_1_1
function_(A,K1,Ka,V1,species_0,species_7)=(V1*species_0/K1/(1+species_0/K1)*(1+A*species_7/Ka)/(1+species_7/Ka))


# FunctionDefinition id = function_4_3_1, name = function_4_3_1
functio_1(K3,KI,k3,species_1,species_2,species_3,species_7)=(k3*species_1*species_2/K3/((1+species_2/K3+species_3/K3)*(1+species_7/KI)))


# FunctionDefinition id = function_4_4_1, name = function_4_4_1
functio_2(K4,KI,k4,species_1,species_2,species_3,species_7)=(k4*species_1*species_3/K4/((1+species_2/K4+species_3/K4)*(1+species_7/KI)))


# FunctionDefinition id = function_4_7_1, name = function_4_7_1
functio_3(K7,k7,species_4,species_5,species_6)=(k7*species_4*species_5/K7/(1+species_5/K7+species_6/K7))


# FunctionDefinition id = function_4_8_1, name = function_4_8_1
functio_4(K8,k8,species_4,species_5,species_6)=(k8*species_4*species_6/K8/(1+species_5/K8+species_6/K8))


# FunctionDefinition id = function_4_2_1, name = function_4_2_1
functio_5(K2,k2,species_1,species_8)=(k2*species_8*species_1/K2/(1+species_1/K2))


# FunctionDefinition id = function_4_5_1, name = function_4_5_1
functio_6(K5,k5,species_3,species_4,species_9)=(k5*species_9*species_4/K5/(1+species_4/K5+species_3/K5))


# FunctionDefinition id = function_4_6_1, name = function_4_6_1
functio_7(K6,k6,species_3,species_4,species_9)=(k6*species_9*species_3/K6/(1+species_4/K6+species_3/K6))


# FunctionDefinition id = function_4_9_1, name = function_4_9_1
functio_8(K9,k9,species_10,species_6,species_7)=(k9*species_10*species_7/K9/(1+species_7/K9+species_6/K9))


# FunctionDefinition id = function_4_10_1, name = function_4_10_1
functio_9(K10,k10,species_10,species_6,species_7)=(k10*species_10*species_6/K10/(1+species_7/K10+species_6/K10))


# FunctionDefinition id = function_1, name =  11
functi_10(V11,X,K11,A,species_7,Ka)=(V11*X/K11/(1+X/K11)*(1+A*species_7/Ka)/(1+species_7/Ka))


# FunctionDefinition id = function_2, name = 12
functi_11(V12,X_P,K12)=(V12*X_P/(K12+X_P))


# Compartment: id = compartment_0, name = compartment, constant
par compartme=1.0

# Reaction: id = reaction_0, name = 1
# Local Parameter:   id =  A, name = A
par A=100.0

# Local Parameter:   id =  K1, name = K1
par K1=15.0

# Local Parameter:   id =  Ka, name = Ka
par Ka=500.0

# Local Parameter:   id =  V1, name = V1
par V1=6.0


reaction_=compartme*function_(A, K1, Ka, V1, species_0, species_7)

# Reaction: id = reaction_1, name = 3
# Local Parameter:   id =  K3, name = K3
par K3=20.0

# Local Parameter:   id =  KI, name = KI
par KI=9.0

# Local Parameter:   id =  k3, name = k3
par k3_1=0.1


reactio_1=compartme*functio_1(K3, KI, k3_1, species_1, species_2, species_3, species_7)

# Reaction: id = reaction_2, name = 4
# Local Parameter:   id =  K4, name = K4
par K4=20.0

# Local Parameter:   id =  KI, name = KI
par KI_1=9.0

# Local Parameter:   id =  k4, name = k4
par k4_1=0.1


reactio_2=compartme*functio_2(K4, KI_1, k4_1, species_1, species_2, species_3, species_7)

# Reaction: id = reaction_3, name = 7
# Local Parameter:   id =  K7, name = K7
par K7=20.0

# Local Parameter:   id =  k7, name = k7
par k7_1=0.1


reactio_3=compartme*functio_3(K7, k7_1, species_4, species_5, species_6)

# Reaction: id = reaction_4, name = 8
# Local Parameter:   id =  K8, name = K8
par K8=20.0

# Local Parameter:   id =  k8, name = k8
par k8_1=0.1


reactio_4=compartme*functio_4(K8, k8_1, species_4, species_5, species_6)

# Reaction: id = reaction_5, name = 2
# Local Parameter:   id =  K2, name = K2
par K2=100.0

# Local Parameter:   id =  k2, name = k2
par k2_1=0.1


reactio_5=compartme*functio_5(K2, k2_1, species_1, species_8)

# Reaction: id = reaction_6, name = 5
# Local Parameter:   id =  K5, name = K5
par K5=20.0

# Local Parameter:   id =  k5, name = k5
par k5_1=0.02


reactio_6=compartme*functio_6(K5, k5_1, species_3, species_4, species_9)

# Reaction: id = reaction_7, name = 6
# Local Parameter:   id =  K6, name = K6
par K6=20.0

# Local Parameter:   id =  k6, name = k6
par k6_1=0.02


reactio_7=compartme*functio_7(K6, k6_1, species_3, species_4, species_9)

# Reaction: id = reaction_8, name = 9
# Local Parameter:   id =  K9, name = K9
par K9=20.0

# Local Parameter:   id =  k9, name = k9
par k9_1=0.02


reactio_8=compartme*functio_8(K9, k9_1, specie_10, species_6, species_7)

# Reaction: id = reaction_9, name = 10
# Local Parameter:   id =  K10, name = K10
par K10=20.0

# Local Parameter:   id =  k10, name = k10
par k10_1=0.02


reactio_9=compartme*functio_9(K10, k10_1, specie_10, species_6, species_7)

# Reaction: id = reaction_10, name = 11
# Local Parameter:   id =  V11, name = V11
par V11=0.1

# Local Parameter:   id =  K11, name = K11
par K11=50.0

# Local Parameter:   id =  A, name = A
par A_1=100.0

# Local Parameter:   id =  Ka, name = Ka
par Ka_1=500.0


reacti_10=compartme*functi_10(V11, specie_11, K11, A_1, species_7, Ka_1)

# Reaction: id = reaction_11, name = 12
# Local Parameter:   id =  V12, name = V12
par V12=0.5

# Local Parameter:   id =  K12, name = K12
par K12=50.0


reacti_11=compartme*functi_11(V12, specie_12, K12)

# Species:   id = species_0, name = MKKK, affected by kineticLaw

init species_0=999.999903688753
dspecies_0/dt=(1/(compartme))*((-1.0 * reaction_) + ( 1.0 * reactio_5))

# Species:   id = species_1, name = MKKK_P, affected by kineticLaw

init species_1=0.0
dspecies_1/dt=(1/(compartme))*(( 1.0 * reaction_) + (-1.0 * reactio_5))

# Species:   id = species_2, name = MKK, affected by kineticLaw

init species_2=3999.99961475501
dspecies_2/dt=(1/(compartme))*((-1.0 * reactio_1) + ( 1.0 * reactio_7))

# Species:   id = species_3, name = MKK_P, affected by kineticLaw

init species_3=0.0
dspecies_3/dt=(1/(compartme))*(( 1.0 * reactio_1) + (-1.0 * reactio_2) + ( 1.0 * reactio_6) + (-1.0 * reactio_7))

# Species:   id = species_4, name = MKK_PP, affected by kineticLaw

init species_4=0.0
dspecies_4/dt=(1/(compartme))*(( 1.0 * reactio_2) + (-1.0 * reactio_6))

# Species:   id = species_5, name = M, affected by kineticLaw

init species_5=999.999903688753
dspecies_5/dt=(1/(compartme))*((-1.0 * reactio_3) + ( 1.0 * reactio_9))

# Species:   id = species_6, name = M_P, affected by kineticLaw

init species_6=0.0
dspecies_6/dt=(1/(compartme))*(( 1.0 * reactio_3) + (-1.0 * reactio_4) + ( 1.0 * reactio_8) + (-1.0 * reactio_9))

# Species:   id = species_7, name = M_PP, affected by kineticLaw

init species_7=0.0
dspecies_7/dt=(1/(compartme))*(( 1.0 * reactio_4) + (-1.0 * reactio_8))

# Species:   id = species_8, name = P1
# Warning species is not changed by either rules or reactions

par species_8=99.9999903688752
aux species_8=species_8

# Species:   id = species_9, name = P2
# Warning species is not changed by either rules or reactions

par species_9=499.999951844377
aux species_9=species_9

# Species:   id = species_10, name = P3
# Warning species is not changed by either rules or reactions

par specie_10=499.999951844377
aux specie_10=specie_10

# Species:   id = species_11, name = X, affected by kineticLaw

par specie_11=99.9999903688752
aux specie_11=specie_11
dspecie_11/dt=(1/(compartme))*((-1.0 * reacti_10) + ( 1.0 * reacti_11))

# Species:   id = species_12, name = X_P, affected by kineticLaw

par specie_12=0.0
aux specie_12=specie_12
dspecie_12/dt=(1/(compartme))*(( 1.0 * reacti_10) + (-1.0 * reacti_11))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

