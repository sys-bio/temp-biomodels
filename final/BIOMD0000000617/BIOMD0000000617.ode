
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Walsh2014 - Inhibition kinetics of DAPT on APP Cleavage
#
# is http://identifiers.org/biomodels.db/MODEL1609120000
# is http://identifiers.org/biomodels.db/BIOMD0000000617
# isDescribedBy http://identifiers.org/pubmed/25374788
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_R3, name = Function for R3
Function_(Compartment_,H1,K2s,S,V1s)=(Compartment_*V1s*S^H1/(S^H1+K2s^H1))


# FunctionDefinition id = Function_for_R4, name = Function for R4
Functio_1(Compartment_,H2,K3s,S,V2s)=(Compartment_*V2s*S^H2/(S^H2+K3s^H2))


# FunctionDefinition id = Function_for_R1, name = Function for R1
Functio_2(Compartment_,K1s,S,V1s)=(Compartment_*V1s*S/(S+K1s))


# FunctionDefinition id = Function_for_R2, name = Function for R2
Functio_3(Compartment_,H1,K2s,S,V2s)=(Compartment_*V2s*S^H1/(S^H1+K2s^H1))


# Compartment: id = default_compartment, name = default_compartment, constant
par default_c=1.0

# Compartment: id = Compartment_, name = Compartment_, constant
par Compartme=1.0

# Parameter:   id =  V1s, name = V1s, defined by a Rule

# Parameter:   id =  S, name = S, constant
par S=61.0

# Parameter:   id =  K1s, name = K1s, defined by a Rule

# Parameter:   id =  V2s, name = V2s, defined by a Rule

# Parameter:   id =  H1, name = H1, constant
par H1=1.71

# Parameter:   id =  K2s, name = K2s, defined by a Rule

# Parameter:   id =  H2, name = H2, constant
par H2=2.69

# Parameter:   id =  K3s, name = K3s, constant
par K3s=605.01

# Parameter:   id =  V2, name = V2, constant
par V2=443.68

# Parameter:   id =  V2i, name = V2i, constant
par V2i=0.0

# Parameter:   id =  Ii, name = Ii, constant
par Ii=1000.0

# Parameter:   id =  Hxx, name = Hxx, constant
par Hxx=0.96

# Parameter:   id =  Kxx1, name = Kxx1, constant
par Kxx1=70.93

# Parameter:   id =  K2, name = K2, constant
par K2=225.49

# Parameter:   id =  K2i, name = K2i, constant
par K2i=118.41

# Parameter:   id =  V1, name = V1, constant
par V1=20.06

# Parameter:   id =  V1is, name = V1is, constant
par V1is=451.78

# Parameter:   id =  Hx1, name = Hx1, constant
par Hx1=1.02

# Parameter:   id =  Kx1, name = Kx1, constant
par Kx1=30.18

# Parameter:   id =  Hx2, name = Hx2, constant
par Hx2=2.69

# Parameter:   id =  Kx2, name = Kx2, constant
par Kx2=553.64

# Parameter:   id =  V1ii, name = V1ii, constant
par V1ii=0.0

# Parameter:   id =  K1, name = K1, constant
par K1=177.76

# Parameter:   id =  K1is, name = K1is, constant
par K1is=29.52

# Parameter:   id =  K1ii, name = K1ii, constant
par K1ii=34.05

# Parameter:   id =  V3, name = V3, constant
par V3=0.0

# assignmentRule: variable = K2s
K2s=K2-(K2-K2i)*Ii^Hxx/(Ii^Hxx+Kxx1^Hxx)
aux K2s=K2s

# assignmentRule: variable = V1s
V1s=V1-(V1-V1is)*Ii^Hx1/(Ii^Hx1+Kx1^Hx1)+(V1-V1is)*Ii^Hx2/(Ii^Hx2+Kx2^Hx2)-(V1-V1ii)*Ii^Hx2/(Ii^Hx2+Kx2^Hx2)
aux V1s=V1s

# assignmentRule: variable = K1s
K1s=K1-(K1-K1is)*Ii^Hx1/(Ii^Hx1+Kx1^Hx1)+(K1-K1is)*Ii^Hx2/(Ii^Hx2+Kx2^Hx2)-(K1-K1ii)*Ii^Hx2/(Ii^Hx2+Kx2^Hx2)
aux K1s=K1s

# assignmentRule: variable = V2s
V2s=V2-(V2-V2i)*Ii^Hxx/(Ii^Hxx+Kxx1^Hxx)
aux V2s=V2s

# Reaction: id = R1, name = R1

R1=default_c*Functio_2(Compartme, K1s, S, V1s)

# Reaction: id = R2, name = R2

R2=default_c*Functio_3(Compartme, H1, K2s, S, V2s)

# Reaction: id = R3, name = R3

R3=default_c*Function_(Compartme, H1, K2s, S, V1s)

# Reaction: id = R4, name = R4

R4=default_c*Functio_1(Compartme, H2, K3s, S, V2s)

# Species:   id = v, name = v, affected by kineticLaw

init v=1.0
dv/dt=(1/(default_c))*(( 1.0 * R1) + ( 1.0 * R2) + (-1.0 * R3) + (-1.0 * R4))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

