
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Dhawan2019 - Endogenous miRNA sponges mediate the generation of oscillatory dynamics for a non-coding RNA network
#
# is http://identifiers.org/biomodels.db/MODEL1911010001
# is http://identifiers.org/biomodels.db/BIOMD0000000841
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_miRNA_Activation_Transcription_Factor, name = Function_for_miRNA_Activation_Transcription_Factor
Function_(beta_FM,gamma_FM,P,n)=(beta_FM/((gamma_FM/P)^n+1))


# FunctionDefinition id = Function_for_TF_Protein_Translation, name = Function_for_TF_Protein_Translation
Functio_1(k_P,F)=(k_P*F)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  alpha_C, name = alpha_C, constant
par alpha_C=1.0

# Parameter:   id =  delta_C, name = delta_C, constant
par delta_C=0.01

# Parameter:   id =  alpha_F, name = alpha_F, constant
par alpha_F=1.0

# Parameter:   id =  delta_F, name = delta_F, constant
par delta_F=0.1

# Parameter:   id =  alpha_M, name = alpha_M, constant
par alpha_M=1.0

# Parameter:   id =  delta_M, name = delta_M, constant
par delta_M=1.0

# Parameter:   id =  k_P, name = k_P, constant
par k_P=10.0

# Parameter:   id =  delta_P, name = delta_P, constant
par delta_P=0.1

# Parameter:   id =  k_CM, name = k_CM, constant
par k_CM=10.0

# Parameter:   id =  k_MF, name = k_MF, constant
par k_MF=0.1

# Parameter:   id =  beta_FM, name = beta_FM, constant
par beta_FM=200.0

# Parameter:   id =  gamma_FM, name = gamma_FM, constant
par gamma_FM=100.0

# Parameter:   id =  n, name = n, constant
par n=8.0

# Parameter:   id =  tau1, name = tau1, constant
par tau1=0.5

# Parameter:   id =  tau2, name = tau2, constant
par tau2=0.5

# Reaction: id = Sponge_Production_Basal, name = Sponge_Production_Basal

Sponge_Pr=compartme*Constant_(alpha_C)

# Reaction: id = miRNA_Production_Basal, name = miRNA_Production_Basal

miRNA_Pro=compartme*Constant_(alpha_M)

# Reaction: id = TF_mRNA_Production_Basal, name = TF_mRNA_Production_Basal

TF_mRNA_P=compartme*Constant_(alpha_F)

# Reaction: id = Sponge_Degradation, name = Sponge_Degradation

Sponge_De=compartme*delta_C*C

# Reaction: id = miRNA_Degradation, name = miRNA_Degradation

miRNA_Deg=compartme*delta_M*M

# Reaction: id = TF_mRNA_Degradation, name = TF_mRNA_Degradation

TF_mRNA_D=compartme*delta_F*F

# Reaction: id = Sponge_Inhibition_miRNA, name = Sponge_Inhibition_miRNA

Sponge_In=compartme*k_CM*M*C

# Reaction: id = TF_mRNA_Inhibition_miRNA, name = TF_mRNA_Inhibition_miRNA

TF_mRNA_I=compartme*k_MF*M*F

# Reaction: id = miRNA_Activation_Transcription_Factor, name = miRNA_Activation_Transcription_Factor

miRNA_Act=compartme*Function_(beta_FM, gamma_FM, delay(P, tau1), n)

# Reaction: id = TF_Protein_Degradation, name = TF_Protein_Degradation

TF_Protei=compartme*delta_P*P

# Reaction: id = TF_Protein_Translation, name = TF_Protein_Translation

TF_Prot_1=compartme*Functio_1(k_P, delay(F, tau2))

# Species:   id = C, name = C, affected by kineticLaw

init C=0.0
dC/dt=(1/(compartme))*(( 1.0 * Sponge_Pr) + (-1.0 * Sponge_De) + (-1.0 * Sponge_In))

# Species:   id = M, name = M, affected by kineticLaw

init M=0.0
dM/dt=(1/(compartme))*(( 1.0 * miRNA_Pro) + (-1.0 * miRNA_Deg) + (-1.0 * Sponge_In) + (-1.0 * TF_mRNA_I) + ( 1.0 * miRNA_Act))

# Species:   id = F, name = F, affected by kineticLaw

init F=0.0
dF/dt=(1/(compartme))*(( 1.0 * TF_mRNA_P) + (-1.0 * TF_mRNA_D) + (-1.0 * TF_mRNA_I))

# Species:   id = P, name = P, affected by kineticLaw

init P=0.0
dP/dt=(1/(compartme))*((-1.0 * TF_Protei) + ( 1.0 * TF_Prot_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

