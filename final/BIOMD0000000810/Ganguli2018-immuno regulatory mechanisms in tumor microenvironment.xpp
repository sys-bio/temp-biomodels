
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ganguli2018-immuno regulatory mechanisms in tumor microenvironment
#
# is http://identifiers.org/biomodels.db/MODEL1909110001
# is http://identifiers.org/biomodels.db/BIOMD0000000810
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_Growth_of_S, name = Function for Growth of S
Function_(gamma_S,p_1,p_2,S)=(gamma_S*(1-p_1-p_2)*S)


# FunctionDefinition id = Function_for_natural_death_of_S, name = Function for natural death of S
Functio_1(delta_S,S)=(delta_S*S)


# FunctionDefinition id = Function_for_mutation_of_S, name = Function for mutation of S
Functio_2(gamma_S,m_S,p_1,p2,S)=(gamma_S*m_S*(1-p_1/2-p2)*S)


# FunctionDefinition id = Function_for_asymmetric_differentiation_of_S, name = Function for asymmetric differentiation of S
Functio_3(gamma_S,p_1,S)=(gamma_S*p_1*S)


# FunctionDefinition id = Function_for_symmetric_differentiation_of_S, name = Function for symmetric differentiation of S
Functio_4(p_2,gamma_S,S)=(p_2*gamma_S*S)


# FunctionDefinition id = Function_for_growth_of_SR, name = Function for growth of SR
Functio_5(gamma_S,p_1,p_2,S_R)=(gamma_S*(1-p_1-p_2)*S_R)


# FunctionDefinition id = Function_for_natural_death_of_SR, name = Function for natural death of SR
Functio_6(delta_S,S_R)=(delta_S*S_R)


# FunctionDefinition id = Function_for_asymmetric_differentiation_of_SR, name = Function for asymmetric differentiation of SR
Functio_7(p_1,gamma_S,S_R)=(p_1*gamma_S*S_R)


# FunctionDefinition id = Function_for_symmetric_differentiation_of_SR, name = Function for symmetric differentiation of SR
Functio_8(p_2,gamma_S,S_R)=(p_2*gamma_S*S_R)


# FunctionDefinition id = Function_for_Gompertzian_growth_of_C, name = Function for Gompertzian growth of C
Functio_9(gamma_C,m_C,K_tumor,C,r_1)=(gamma_C*(1-m_C)*log(0.5*K_tumor/(C+r_1)))


# FunctionDefinition id = Function_for_natural_death_of_C, name = Function for natural death of C
Functi_10(delta_C,C)=(delta_C*C)


# FunctionDefinition id = Function_of_mutation_of_C, name = Function of mutation of C
Functi_11(m_C,gamma_C,C)=(m_C*gamma_C*C)


# FunctionDefinition id = Function_of_Gompertzian_growth_of_CR, name = Function of Gompertzian growth of CR
Functi_12(gamma_C,C_R,K_tumor,r_2)=(gamma_C*C_R*log(0.5*K_tumor/(C_R+r_2)))


# FunctionDefinition id = Function_of_natural_death_of_CR, name = Function of natural death of CR
Functi_13(delta_CR,C_R)=(delta_CR*C_R)


# FunctionDefinition id = Function_of_activation_of_M1, name = Function of activation of M1
Functi_14(gamma_M1,M_1,C,C_R,lambda_M1)=(gamma_M1*M_1*(C+C_R)/(M_1+lambda_M1))


# FunctionDefinition id = Function_of_activation_of_M2, name = Function of activation of M2
Functi_15(gamma_M2,M_2,C,C_R,lambda_M2)=(gamma_M2*M_2*(C+C_R)/(M_2+lambda_M2))


# FunctionDefinition id = Function_of_activation_of_T_H1, name = Function of activation of T_H1
Functi_16(lambda_TH1,T_H1,M_1,gamma_TH1)=(gamma_TH1*T_H1*M_1/(lambda_TH1+T_H1))


# FunctionDefinition id = Function_of_activation_of_T_H2, name = Function of activation of T_H2
Functi_17(lambda_TH2,T_H2,M_2,gamma_TH2)=(gamma_TH2*T_H2*M_2/(lambda_TH2+T_H2))


# FunctionDefinition id = Function_of_natural_death_of_M1, name = Function of natural death of M1
Functi_18(delta_M1,M_1)=(delta_M1*M_1)


# FunctionDefinition id = Function_of_natural_death_of_M2, name = Function of natural death of M2
Functi_19(delta_M2,M_2)=(delta_M2*M_2)


# FunctionDefinition id = Function_of_natural_death_of_T_H1, name = Function of natural death of T_H1
Functi_20(delta_TH1,T_H1)=(delta_TH1*T_H1)


# FunctionDefinition id = Function_of_natural_death_of_T_H2, name = Function of natural death of T_H2
Functi_21(delta_TH2,T_H2)=(delta_TH2*T_H2)


# FunctionDefinition id = Function_of_Activation_of_T_C_Cancer, name = Function of Activation of T_C;Cancer
Functi_22(gamma_Tc,T_C,C,C_R,lambda_Tc1)=(gamma_Tc*T_C*(C+C_R)/(T_C+lambda_Tc1))


# FunctionDefinition id = Function_of_Acitvation_of_T_C__T_H1, name = Function of Acitvation of T_C; T_H1
Functi_23(gamma_Tc,T_C,T_H1,lambda_Tc4)=(gamma_Tc*T_C*T_H1/(T_C+lambda_Tc4))


# FunctionDefinition id = Function_of_Elimination_of_T_C_by_T_reg, name = Function of Elimination of T_C by T_reg
Functi_24(myu_TcTreg,T_C,T_reg,lambda_Tc3)=(myu_TcTreg*T_C*T_reg/(lambda_Tc3+T_reg))


# FunctionDefinition id = Function_of_inhibition_of_T_C, name = Function of inhibition of T_C
Functi_25(myu_TcS,T_C,S,S_R,lambda_Tc2)=(myu_TcS*T_C*(S+S_R)/(T_C+lambda_Tc2))


# FunctionDefinition id = Function_of_natural_death_of_T_C, name = Function of natural death of T_C
Functi_26(delta_Tc,T_C)=(delta_Tc*T_C)


# FunctionDefinition id = Function_of_Activation_of_T_reg, name = Function of Activation of T_reg
Functi_27(gamma_Treg,T_reg,M_2,lambda_Treg2)=(gamma_Treg*T_reg*M_2/(T_reg+lambda_Treg2))


# FunctionDefinition id = Function_of_natural_death_of_T_reg, name = Function of natural death of T_reg
Functi_28(delta_Treg,T_reg)=(delta_Treg*T_reg)


# FunctionDefinition id = Function_of_Production_of_IL2, name = Function of Production of IL2
Functi_29(beta_ThiCK3,T_H1)=(beta_ThiCK3*T_H1)


# FunctionDefinition id = Function_of_Degradation_of_IL2, name = Function of Degradation of IL2
Functi_30(delta_Ck3,IL2)=(delta_Ck3*IL2)


# FunctionDefinition id = Function_of_Positive_Feedback_from_IL2_to_TH1, name = Function of Positive Feedback from IL2 to TH1
Functi_31(myu_Th1Ck3,IL2,T_H1,k9)=(myu_Th1Ck3*IL2*T_H1/(IL2+k9))


# FunctionDefinition id = Function_of_Production_of_IFN_gamma__T_C, name = Function of Production of IFN_gamma; T_C
Functi_32(beta_Tc,T_C)=(beta_Tc*T_C)


# FunctionDefinition id = Function_of_Production_of_IFN_gamma__T_H1, name = Function of Production of IFN_gamma; T_H1
Functi_33(beta_Th1CK2,T_H1)=(beta_Th1CK2*T_H1)


# FunctionDefinition id = Function_of_Degradation_of_IFN_gamma, name = Function of Degradation of IFN_gamma
Functi_34(delta_Ck2,IFN_gamma)=(delta_Ck2*IFN_gamma)


# FunctionDefinition id = Function_of_Activation_of_M1__IFN_gamma, name = Function of Activation of M1; IFN_gamma
Functi_35(myu_M1Ck2,M_1,IFN_gamma,k7)=(myu_M1Ck2*M_1*IFN_gamma/(IFN_gamma+k7))


# FunctionDefinition id = Function_of_Negative_feedback_on_C__IFN_gamma, name = Function of Negative feedback on C; IFN_gamma
Functi_36(myu_C2,C,IFN_gamma,k4)=(myu_C2*C*IFN_gamma/(IFN_gamma+k4))


# FunctionDefinition id = Function_of_Negative_feedback_on_CR__IFN_gamma, name = Function of Negative feedback on CR; IFN_gamma
Functi_37(myu_C2,C_R,IFN_gamma,k6)=(myu_C2*C_R*IFN_gamma/(IFN_gamma+k6))


# FunctionDefinition id = Function_of_Negative_feedback_on_S__IFN_gamma, name = Function of Negative feedback on S; IFN_gamma
Functi_38(myu_S,S,IFN_gamma,k1)=(myu_S*S*IFN_gamma/(IFN_gamma+k1))


# FunctionDefinition id = Function_of_Negative_feedback_on_SR__IFN_gamma, name = Function of Negative feedback on SR; IFN_gamma
Functi_39(myu_SR,S_R,IFN_gamma,k2)=(myu_SR*S_R*IFN_gamma/(IFN_gamma+k2))


# FunctionDefinition id = Function_of_Production_of_IL10__M2, name = Function of Production of IL10; M2
Functi_40(beta_M2,M_2)=(beta_M2*M_2)


# FunctionDefinition id = Function_of_Production_of_IL10__Treg, name = Function of Production of IL10; Treg
Functi_41(beta_Treg,T_reg)=(beta_Treg*T_reg)


# FunctionDefinition id = Function_of_Production_of_IL10__T_H2, name = Function of Production of IL10; T_H2
Functi_42(beta_Th2,T_H2)=(beta_Th2*T_H2)


# FunctionDefinition id = Function_of_Degradation_of_IL10, name = Function of Degradation of IL10
Functi_43(delta_Ck1,IL10)=(delta_Ck1*IL10)


# FunctionDefinition id = Function_of_Proliferation_on_C__IL10, name = Function of Proliferation on C; IL10
Functi_44(myu_C1,C,IL10,k3)=(myu_C1*C*IL10/(IL10+k3))


# FunctionDefinition id = Function_of_Proliferation_CR__IL10, name = Function of Proliferation CR; IL10
Functi_45(myu_C1,C_R,IL10,k5)=(myu_C1*C_R*IL10/(IL10+k5))


# FunctionDefinition id = Function_of_Positive_feedback_on_M2__IL10, name = Function of Positive feedback on M2; IL10
Functi_46(myu_M2Ck1,M2,IL10,k10)=(myu_M2Ck1*M2*IL10/(IL10+k10))


# FunctionDefinition id = Function_of_Positive_feedback_on_Treg__IL10, name = Function of Positive feedback on Treg; IL10
Functi_47(IL10,myu_TregCk1,T_reg,k11)=(myu_TregCk1*IL10*T_reg/(T_reg+k11))


# FunctionDefinition id = Function_for_inhibition_on_T_H1__IL10, name = Function for inhibition on T_H1; IL10
Functi_48(myu_Th1Ck1,IL10,T_H1,k8)=(myu_Th1Ck1*IL10*T_H1/(IL10+k8))


# FunctionDefinition id = Function_of_Elimination_of_Cancer_Stem_Cells_S, name = Function of Elimination of Cancer Stem Cells S
Functi_49(tck,S,T_C,ktc1)=(tck*S*T_C/(ktc1+T_C))


# FunctionDefinition id = Function_of_Elimination_of_Cancer_Cells_C, name = Function of Elimination of Cancer Cells C
Functi_50(tck,C,T_C,ktc3)=(tck*C*T_C/(ktc3+T_C))


# FunctionDefinition id = Function_of_Elimination_of_Resistant_Cancer_Cells_CR, name = Function of Elimination of Resistant Cancer Cells CR
Functi_51(tck,C_R,T_C,ktc4)=(tck*C_R*T_C/(ktc4+T_C))


# FunctionDefinition id = Function_of_Elimination_of_Resistant_Stem_Cells_SR, name = Function of Elimination of Resistant Stem Cells SR
Functi_52(tck,S_R,T_C,ktc2)=(tck*S_R*T_C/(ktc2+T_C))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  gamma_C, name = gamma_C, constant
par gamma_C=0.1282

# Parameter:   id =  gamma_CR, name = gamma_CR, constant
par gamma_CR=0.1282

# Parameter:   id =  gamma_M1, name = gamma_M1, constant
par gamma_M1=0.7

# Parameter:   id =  gamma_M2, name = gamma_M2, constant
par gamma_M2=0.01

# Parameter:   id =  gamma_S, name = gamma_S, constant
par gamma_S=0.15

# Parameter:   id =  gamma_Th1, name = gamma_Th1, constant
par gamma_Th1=2.0

# Parameter:   id =  gamma_Th2, name = gamma_Th2, constant
par gamma_Th2=2.0

# Parameter:   id =  gamma_Tc, name = gamma_Tc, constant
par gamma_Tc=1.0

# Parameter:   id =  gamma_Treg, name = gamma_Treg, constant
par gamma_Tre=0.3

# Parameter:   id =  delta_C, name = delta_C, constant
par delta_C=0.8055

# Parameter:   id =  delta_CR, name = delta_CR, constant
par delta_CR=5.37E-5

# Parameter:   id =  delta_M1, name = delta_M1, constant
par delta_M1=1.02

# Parameter:   id =  delta_M2, name = delta_M2, constant
par delta_M2=0.05

# Parameter:   id =  delta_S, name = delta_S, constant
par delta_S=2.0E-7

# Parameter:   id =  delta_Tc, name = delta_Tc, constant
par delta_Tc=5.2939

# Parameter:   id =  delta_Th1, name = delta_Th1, constant
par delta_Th1=2.0

# Parameter:   id =  delta_Th2, name = delta_Th2, constant
par delta_Th2=2.0

# Parameter:   id =  delta_Treg, name = delta_Treg, constant
par delta_Tre=1.0

# Parameter:   id =  m_C, name = m_C, constant
par m_C=0.01

# Parameter:   id =  m_S, name = m_S, constant
par m_S=4.0E-7

# Parameter:   id =  p_1, name = p_1, constant
par p_1=0.2

# Parameter:   id =  p_2, name = p_2, constant
par p_2=0.05

# Parameter:   id =  r_1, name = r_1, constant
par r_1=1.0E-4

# Parameter:   id =  r_2, name = r_2, constant
par r_2=1.0E-5

# Parameter:   id =  K_tumor, name = K_tumor, constant
par K_tumor=2.0E10

# Parameter:   id =  lambda_M1, name = lambda_M1, constant
par lambda_M1=1.0E8

# Parameter:   id =  lambda_M2, name = lambda_M2, constant
par lambda_M2=1000000.0

# Parameter:   id =  lambda_Th1, name = lambda_Th1, constant
par lambda_Th=100000.0

# Parameter:   id =  lambda_Th2, name = lambda_Th2, constant
par lambda__1=100000.0

# Parameter:   id =  lambda_Tc1, name = lambda_Tc1, constant
par lambda_Tc=100000.0

# Parameter:   id =  lambda_Tc2, name = lambda_Tc2, constant
par lambda__2=500000.0

# Parameter:   id =  lambda_Tc3, name = lambda_Tc3, constant
par lambda__3=5.0E10

# Parameter:   id =  lambda_Tc4, name = lambda_Tc4, constant
par lambda__4=100000.0

# Parameter:   id =  lambda_Treg2, name = lambda_Treg2, constant
par lambda_Tr=1.0E7

# Parameter:   id =  myu_TcS, name = myu_TcS, constant
par myu_TcS=1.0E-10

# Parameter:   id =  myu_TcTreg, name = myu_TcTreg, constant
par myu_TcTre=1.5E-5

# Parameter:   id =  myu_Th1Ck3, name = myu_Th1Ck3, constant
par myu_Th1Ck=0.1245

# Parameter:   id =  k9, name = k9, constant
par k9=0.001

# Parameter:   id =  beta_Th1CK3, name = beta_Th1CK3, constant
par beta_Th1C=1.0E-8

# Parameter:   id =  delta_Ck3, name = delta_Ck3, constant
par delta_Ck3=8.664339

# Parameter:   id =  myu_S, name = myu_S, constant
par myu_S=0.17

# Parameter:   id =  myu_SR, name = myu_SR, constant
par myu_SR=0.18

# Parameter:   id =  myu_C2, name = myu_C2, constant
par myu_C2=0.9

# Parameter:   id =  myu_M1Ck2, name = myu_M1Ck2, constant
par myu_M1Ck2=0.01

# Parameter:   id =  beta_Th1CK2, name = beta_Th1CK2, constant
par beta_Th_1=1.0E-7

# Parameter:   id =  beta_Tc, name = beta_Tc, constant
par beta_Tc=1.0E-8

# Parameter:   id =  delta_Ck2, name = delta_Ck2, constant
par delta_Ck2=6.1212

# Parameter:   id =  k1, name = k1, constant
par k1=10.0

# Parameter:   id =  k2, name = k2, constant
par k2=10.0

# Parameter:   id =  k3, name = k3, constant
par k3=2.0531

# Parameter:   id =  k4, name = k4, constant
par k4=3.02

# Parameter:   id =  k5, name = k5, constant
par k5=6.7979

# Parameter:   id =  k6, name = k6, constant
par k6=6.9937

# Parameter:   id =  k7, name = k7, constant
par k7=0.2

# Parameter:   id =  k8, name = k8, constant
par k8=0.01

# Parameter:   id =  k10, name = k10, constant
par k10=0.01

# Parameter:   id =  k11, name = k11, constant
par k11=0.001

# Parameter:   id =  beta_M2, name = beta_M2, constant
par beta_M2=1.0E-15

# Parameter:   id =  beta_Treg, name = beta_Treg, constant
par beta_Treg=1.0E-10

# Parameter:   id =  beta_Th2, name = beta_Th2, constant
par beta_Th2=1.0E-9

# Parameter:   id =  delta_Ck1, name = delta_Ck1, constant
par delta_Ck1=19.757

# Parameter:   id =  myu_TregCk1, name = myu_TregCk1, constant
par myu_TregC=1.0E-7

# Parameter:   id =  myu_Th1Ck1, name = myu_Th1Ck1, constant
par myu_Th1_1=1.0E-9

# Parameter:   id =  myu_M2Ck1, name = myu_M2Ck1, constant
par myu_M2Ck1=0.01

# Parameter:   id =  myu_C1, name = myu_C1, constant
par myu_C1=0.75

# Parameter:   id =  ktc1, name = ktc1, constant
par ktc1=1.0E9

# Parameter:   id =  ktc2, name = ktc2, constant
par ktc2=1.0E8

# Parameter:   id =  ktc3, name = ktc3, constant
par ktc3=1.0E9

# Parameter:   id =  ktc4, name = ktc4, constant
par ktc4=1.0E9

# Parameter:   id =  tck, name = tck, constant
par tck=0.1

# assignmentRule: variable = _100000_SR
_100000_S=100000*Resistant
aux _100000_S=_100000_S

# Reaction: id = growth_of_Cancer_Stem_Cells_S, name = growth of Cancer Stem Cells S

growth_of=compartme*Function_(gamma_S, p_1, p_2, Cancer_St)

# Reaction: id = natural_death_of_Cancer_Stem_Cells_S, name = natural death of Cancer Stem Cells S

natural_d=compartme*Functio_1(delta_S, Cancer_St)

# Reaction: id = mutation_of_Cancer_Stem_Cells_S, name = mutation of Cancer Stem Cells S

mutation_=compartme*Functio_2(gamma_S, m_S, p_1, p_2, Cancer_St)

# Reaction: id = asymmetric_differentiation_of_Cancer_Stem_Cells_S, name = asymmetric differentiation of Cancer Stem Cells S

asymmetri=compartme*Functio_3(gamma_S, p_1, Cancer_St)

# Reaction: id = symmetric_differentiation_of_Cancer_Stem_Cells_S, name = symmetric differentiation of Cancer Stem Cells S

symmetric=compartme*Functio_4(p_2, gamma_S, Cancer_St)

# Reaction: id = growth_of_Resistant_Stem_Cells_SR, name = growth of Resistant Stem Cells SR

growth__1=compartme*Functio_5(gamma_S, p_1, p_2, Resistant)

# Reaction: id = natural_death_of_Resistant_Stem_Cells_SR, name = natural death of Resistant Stem Cells SR

natural_1=compartme*Functio_6(delta_S, Resistant)

# Reaction: id = asymmetric_differentiation_of_Resistant_Stem_Cells_SR, name = asymmetric differentiation of Resistant Stem Cells SR

asymmet_1=compartme*Functio_7(p_1, gamma_S, Resistant)

# Reaction: id = symmetric_differentiation_of_Resistant_Stem_Cells_SR, name = symmetric differentiation of Resistant Stem Cells SR

symmetr_1=compartme*Functio_8(p_2, gamma_S, Resistant)

# Reaction: id = Gompertzian_growth_of_Cancer_Cells_C, name = Gompertzian growth of Cancer Cells C

Gompertzi=compartme*Functio_9(gamma_C, m_C, K_tumor, Cancer_Ce, r_1)

# Reaction: id = natural_death_of_Cancer_Cells_C, name = natural death of Cancer Cells C

natural_2=compartme*Functi_10(delta_C, Cancer_Ce)

# Reaction: id = mutation_of_Cancer_Cells_C, name = mutation of Cancer Cells C

mutatio_1=compartme*Functi_11(m_C, gamma_C, Cancer_Ce)

# Reaction: id = Gompertzian_growth_of_Resistant_Cancer_Cells_CR, name = Gompertzian growth of Resistant Cancer Cells CR

Gompert_1=compartme*Functi_12(gamma_C, Resista_1, K_tumor, r_2)

# Reaction: id = natural_death_of_Resistant_Cancer_Cells_CR, name = natural death of Resistant Cancer Cells CR

natural_3=compartme*Functi_13(delta_CR, Resista_1)

# Reaction: id = Activation_of_M1, name = Activation of M1

Activatio=compartme*Functi_14(gamma_M1, M1_Tumor_, Cancer_Ce, Resista_1, lambda_M1)

# Reaction: id = Activation_of_M2, name = Activation of M2

Activat_1=compartme*Functi_15(gamma_M2, M2_Tumor_, Cancer_Ce, Resista_1, lambda_M2)

# Reaction: id = natural_death_of_M1, name = natural death of M1

natural_4=compartme*Functi_18(delta_M1, M1_Tumor_)

# Reaction: id = natural_death_of_M2, name = natural death of M2

natural_5=compartme*Functi_19(delta_M2, M2_Tumor_)

# Reaction: id = Activation_of_T_H1, name = Activation of T_H1

Activat_2=compartme*Functi_16(lambda_Th, Type_I_T_, M1_Tumor_, gamma_Th1)

# Reaction: id = Activation_of_T_H2, name = Activation of T_H2

Activat_3=compartme*Functi_17(lambda__1, Type_II_T, M2_Tumor_, gamma_Th2)

# Reaction: id = natural_death_of_T_H1, name = natural death of T_H1

natural_6=compartme*Functi_20(delta_Th1, Type_I_T_)

# Reaction: id = natural_death_of_T_H2, name = natural death of T_H2

natural_7=compartme*Functi_21(delta_Th2, Type_II_T)

# Reaction: id = Activation_of_T_C__Cancer, name = Activation of T_C; Cancer

Activat_4=compartme*Functi_22(gamma_Tc, Cytotoxic, Cancer_Ce, Resista_1, lambda_Tc)

# Reaction: id = Activation_of_T_C__T_H1, name = Activation of T_C; T_H1

Activat_5=compartme*Functi_23(gamma_Tc, Cytotoxic, Type_I_T_, lambda__4)

# Reaction: id = Inhibition_of_T_C, name = Inhibition of T_C

Inhibitio=compartme*Functi_25(myu_TcS, Cytotoxic, Cancer_St, Resistant, lambda__2)

# Reaction: id = natural_death_of_T_C, name = natural death of T_C

natural_8=compartme*Functi_26(delta_Tc, Cytotoxic)

# Reaction: id = Elimination_of_T_C_by_T_reg, name = Elimination of T_C by T_reg

Eliminati=compartme*Functi_24(myu_TcTre, Cytotoxic, Regulator, lambda__3)

# Reaction: id = Activation_of_T_reg, name = Activation of T_reg

Activat_6=compartme*Functi_27(gamma_Tre, Regulator, M2_Tumor_, lambda_Tr)

# Reaction: id = natural_death_of_T_reg, name = natural death of T_reg

natural_9=compartme*Functi_28(delta_Tre, Regulator)

# Reaction: id = Production_of_IL2__T_H1, name = Production of IL2; T_H1

Productio=compartme*Functi_29(beta_Th1C, Type_I_T_)

# Reaction: id = Degradation_of_IL2, name = Degradation of IL2

Degradati=compartme*Functi_30(delta_Ck3, Cytokin_1)

# Reaction: id = Positive_feedback_from_IL2_to_T_H1, name = Positive feedback from IL2 to T_H1

Positive_=compartme*Functi_31(myu_Th1Ck, Cytokin_1, Type_I_T_, k9)

# Reaction: id = Production_of_IFN_gamma__T_H1, name = Production of IFN_gamma; T_H1

Product_1=compartme*Functi_33(beta_Th_1, Type_I_T_)

# Reaction: id = Production_of_IFN_gamma__T_C, name = Production of IFN_gamma; T_C

Product_2=compartme*Functi_32(beta_Tc, Cytotoxic)

# Reaction: id = Degradation_of_IFN_gamma, name = Degradation of IFN_gamma

Degrada_1=compartme*Functi_34(delta_Ck2, Interfero)

# Reaction: id = Activation_of_M1__IFN_gamma, name = Activation of M1; IFN_gamma

Activat_7=compartme*Functi_35(myu_M1Ck2, M1_Tumor_, Interfero, k7)

# Reaction: id = Negative_feedback_on_S__IFN_gamma, name = Negative feedback on S; IFN_gamma

Negative_=compartme*Functi_38(myu_S, Cancer_St, Interfero, k1)

# Reaction: id = Negative_feedback_on_SR__IFN_gamma, name = Negative feedback on SR; IFN_gamma

Negativ_1=compartme*Functi_39(myu_SR, Resistant, Interfero, k2)

# Reaction: id = Negative_feedback_on_C__IFN_gamma, name = Negative feedback on C; IFN_gamma

Negativ_2=compartme*Functi_36(myu_C2, Cancer_Ce, Interfero, k4)

# Reaction: id = Negative_feedback_on_CR__IFN_gamma, name = Negative feedback on CR; IFN_gamma

Negativ_3=compartme*Functi_37(myu_C2, Resista_1, Interfero, k6)

# Reaction: id = Production_of_IL10__M2, name = Production of IL10; M2

Product_3=compartme*Functi_40(beta_M2, M2_Tumor_)

# Reaction: id = Production_of_IL10__Treg, name = Production of IL10; Treg

Product_4=compartme*Functi_41(beta_Treg, Regulator)

# Reaction: id = Production_of_IL10__T_H2, name = Production of IL10; T_H2

Product_5=compartme*Functi_42(beta_Th2, Type_II_T)

# Reaction: id = Degradation_of_IL10, name = Degradation of IL10

Degrada_2=compartme*Functi_43(delta_Ck1, Cytokine_)

# Reaction: id = Positive_feedback_on_Treg__IL10, name = Positive feedback on Treg; IL10

Positiv_1=compartme*Functi_47(Cytokine_, myu_TregC, Regulator, k11)

# Reaction: id = Inhibition_on_T_H1__IL10, name = Inhibition on T_H1; IL10

Inhibit_1=compartme*Functi_48(myu_Th1_1, Cytokine_, Type_I_T_, k8)

# Reaction: id = Positive_feedback_on_M2__IL10, name = Positive feedback on M2; IL10

Positiv_2=compartme*Functi_46(myu_M2Ck1, M2_Tumor_, Cytokine_, k10)

# Reaction: id = Proliferation_on_Cancer_Cells_C__IL10, name = Proliferation on Cancer Cells C; IL10

Prolifera=compartme*Functi_44(myu_C1, Cancer_Ce, Cytokine_, k3)

# Reaction: id = Proliferation_on_Resistant_Cancer_Cells_CR__IL10, name = Proliferation on Resistant Cancer Cells CR; IL10

Prolife_1=compartme*Functi_45(myu_C1, Resista_1, Cytokine_, k5)

# Reaction: id = Elimination_of_Cancer_Stem_Cells_S, name = Elimination of Cancer Stem Cells S

Elimina_1=compartme*Functi_49(tck, Cancer_St, Cytotoxic, ktc1)

# Reaction: id = Elimination_of_Resistant_Stem_Cells_SR, name = Elimination of Resistant Stem Cells SR

Elimina_2=compartme*Functi_52(tck, Resistant, Cytotoxic, ktc2)

# Reaction: id = Elimination_of_Cancer_Cells_C, name = Elimination of Cancer Cells C

Elimina_3=compartme*Functi_50(tck, Cancer_Ce, Cytotoxic, ktc3)

# Reaction: id = Elimination_of_Resistant_Cancer_Cells_CR, name = Elimination of Resistant Cancer Cells CR

Elimina_4=compartme*Functi_51(tck, Resista_1, Cytotoxic, ktc4)

# Species:   id = Cancer_Stem_Cells_S, name = Cancer Stem Cells S, affected by kineticLaw

par Cancer_St=1.0
aux Cancer_St=Cancer_St
dCancer_St/dt=(1/(compartme))*(( 1.0 * growth_of) + (-1.0 * natural_d) + (-1.0 * mutation_) + (-1.0 * asymmetri) + ( 1.0 * asymmetri) + (-1.0 * symmetric) + (-1.0 * Negative_) + (-1.0 * Elimina_1))

# Species:   id = Cancer_Cells_C, name = Cancer Cells C, affected by kineticLaw

par Cancer_Ce=0.0
aux Cancer_Ce=Cancer_Ce
dCancer_Ce/dt=(1/(compartme))*(( 1.0 * asymmetri) + ( 1.0 * symmetric) + ( 1.0 * Gompertzi) + (-1.0 * natural_2) + (-1.0 * mutatio_1) + (-1.0 * Negativ_2) + ( 1.0 * Prolifera) + (-1.0 * Elimina_3))

# Species:   id = Resistant_Stem_Cells_S_R, name = Resistant Stem Cells S_R, affected by kineticLaw

par Resistant=0.0
aux Resistant=Resistant
dResistant/dt=(1/(compartme))*(( 1.0 * mutation_) + ( 1.0 * growth__1) + (-1.0 * natural_1) + (-1.0 * asymmet_1) + ( 1.0 * asymmet_1) + (-1.0 * symmetr_1) + (-1.0 * Negativ_1) + (-1.0 * Elimina_2))

# Species:   id = Resistant_Cancer_Cells_C_R, name = Resistant Cancer Cells C_R, affected by kineticLaw

par Resista_1=0.0
aux Resista_1=Resista_1
dResista_1/dt=(1/(compartme))*(( 1.0 * asymmet_1) + ( 1.0 * symmetr_1) + ( 1.0 * mutatio_1) + ( 1.0 * Gompert_1) + (-1.0 * natural_3) + (-1.0 * Negativ_3) + ( 1.0 * Prolife_1) + (-1.0 * Elimina_4))

# Species:   id = M1_Tumor_Associated_Macrophages, name = M1-Tumor Associated Macrophages, affected by kineticLaw

par M1_Tumor_=85000.0
aux M1_Tumor_=M1_Tumor_
dM1_Tumor_/dt=(1/(compartme))*(( 1.0 * Activatio) + (-1.0 * natural_4) + ( 1.0 * Activat_7))

# Species:   id = M2_Tumor_Associated_Macrophages, name = M2-Tumor Associated Macrophages, affected by kineticLaw

par M2_Tumor_=15000.0
aux M2_Tumor_=M2_Tumor_
dM2_Tumor_/dt=(1/(compartme))*(( 1.0 * Activat_1) + (-1.0 * natural_5) + ( 1.0 * Positiv_2))

# Species:   id = Type_I_T_helper_Cell_T_H1, name = Type I T-helper Cell T_H1, affected by kineticLaw

par Type_I_T_=71000.0
aux Type_I_T_=Type_I_T_
dType_I_T_/dt=(1/(compartme))*(( 1.0 * Activat_2) + (-1.0 * natural_6) + ( 1.0 * Positive_) + (-1.0 * Inhibit_1))

# Species:   id = Type_II_T_helper_cells_T_H2, name = Type II T-helper cells T_H2, affected by kineticLaw

par Type_II_T=12000.0
aux Type_II_T=Type_II_T
dType_II_T/dt=(1/(compartme))*(( 1.0 * Activat_3) + (-1.0 * natural_7))

# Species:   id = Cytotoxic_T_Cells_T_C, name = Cytotoxic T-Cells T_C, affected by kineticLaw

par Cytotoxic=56000.0
aux Cytotoxic=Cytotoxic
dCytotoxic/dt=(1/(compartme))*(( 1.0 * Activat_4) + ( 1.0 * Activat_5) + (-1.0 * Inhibitio) + (-1.0 * natural_8) + (-1.0 * Eliminati))

# Species:   id = Regulatory_T_Cells_T_reg, name = Regulatory T-Cells T_reg, affected by kineticLaw

par Regulator=8000.0
aux Regulator=Regulator
dRegulator/dt=(1/(compartme))*(( 1.0 * Activat_6) + (-1.0 * natural_9) + ( 1.0 * Positiv_1))

# Species:   id = Interferon_gamma, name = Interferon_gamma, affected by kineticLaw

par Interfero=0.12
aux Interfero=Interfero
dInterfero/dt=(1/(compartme))*(( 1.0 * Product_1) + ( 1.0 * Product_2) + (-1.0 * Degrada_1))

# Species:   id = Cytokine_IL10, name = Cytokine IL10, affected by kineticLaw

par Cytokine_=0.0085
aux Cytokine_=Cytokine_
dCytokine_/dt=(1/(compartme))*(( 1.0 * Product_3) + ( 1.0 * Product_4) + ( 1.0 * Product_5) + (-1.0 * Degrada_2))

# Species:   id = Cytokine_IL2, name = Cytokine IL2, affected by kineticLaw

par Cytokin_1=0.0094
aux Cytokin_1=Cytokin_1
dCytokin_1/dt=(1/(compartme))*(( 1.0 * Productio) + (-1.0 * Degradati))

# Species:   id = _100000_SR, name = 100000*SR, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

