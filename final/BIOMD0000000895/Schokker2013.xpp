
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Schokker2013 - A mathematical model representing cellular immune development and response to Salmonella of chicken intestinal tissue
#
# isDescribedBy http://identifiers.org/pubmed/23603730
# is http://identifiers.org/biomodels.db/MODEL1912160004
# is http://identifiers.org/biomodels.db/BIOMD0000000895
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_Si_Proliferation, name = Function_for_Si_Proliferation
Function_(pSi,Si,N,Mi)=(pSi*Si*(1-Si/(Si+N*Mi)))


# FunctionDefinition id = Function_for_Mi_Lysis_Si, name = Function_for_Mi_Lysis_Si
Functio_1(lMi,CD4,CD8,Mi,cCD4CD8)=(lMi*(CD4+CD8/Mi)/(CD4+CD8/Mi+cCD4CD8))


# FunctionDefinition id = Function_for_CD8_Growth_Boost, name = Function_for_CD8_Growth_Boost
Functio_2(gbCD8,CD8,cc1CD8,k2CD8)=(gbCD8*CD8*(1-CD8/cc1CD8)*CD8/(CD8+k2CD8))


# FunctionDefinition id = Function_for_Mi_Lysis, name = Function_for_Mi_Lysis
Functio_3(lMi,CD4,CD8,Mi,cCD4CD8,apop,Si,N)=((1-apop*Si/(Si+N+Mi))*lMi*(CD4+CD8/Mi)/(CD4+CD8/Mi+cCD4CD8))


# FunctionDefinition id = Function_for_Mr_Infection_Si, name = Function_for_Mr_Infection_Si
Functio_4(iMr,Mr,Se,cSeMr)=(iMr*Mr*Se/(Se+cSeMr))


# FunctionDefinition id = Function_for_CD4_Interaction_Naive_Se, name = Function_for_CD4_Interaction_Naive_Se
Functio_5(CD4n,CD4,Se,ndCD4,kSedCD4)=(CD4n*CD4*Se^ndCD4/(Se^ndCD4+kSedCD4^ndCD4))


# FunctionDefinition id = Function_for_CD8_Competition, name = Function_for_CD8_Competition
Functio_6(compCD8,CD8,Se,w1,CD4,ncompcd8,kcompCD4)=(compCD8*CD8*Se/(Se+w1)*CD4^ncompcd8/(CD4^ncompcd8+kcompCD4^ncompcd8))


# FunctionDefinition id = Function_for_Mi_Bursting, name = Function_for_Mi_Bursting
Functio_7(bMi,Mi,Si,mMi,N)=(bMi*Mi*Si^mMi/(Si^mMi+(N*Mi)^mMi))


# FunctionDefinition id = Function_for_CD4_Recruitment, name = Function_for_CD4_Recruitment
Functio_8(CD4rec,vrecCD4,Se,kmrecCD4)=(CD4rec*vrecCD4*Se/(Se+kmrecCD4))


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_Mr_Recruitment, name = Function_for_Mr_Recruitment
Functio_9(Mrrec,vrecMr,Se,kmrecMr)=(Mrrec*vrecMr*Se/(Se+kmrecMr))


# FunctionDefinition id = Function_for_Mr_Infection, name = Function_for_Mr_Infection
Functi_10(iMr,Mr,Se,cSeMri)=(iMr*Mr*Se/(Se+cSeMri))


# FunctionDefinition id = Function_for_Mr_Growth_Boost, name = Function_for_Mr_Growth_Boost
Functi_11(Mr,ccMr,p1,gbMr)=(gbMr*Mr*(1-Mr/(ccMr-ccMr*p1)))


# FunctionDefinition id = Function_for_Mr_Activation, name = Function_for_Mr_Activation
Functi_12(aMr,Mr,Se,cSeMr)=(aMr*Mr*Se/(Se+cSeMr))


# FunctionDefinition id = Function_for_CD4_Growth_Boost, name = Function_for_CD4_Growth_Boost
Functi_13(gbCD4,CD4,cc1CD4,ngbCD4,k2CD4)=(gbCD4*CD4*(1-CD4/cc1CD4)*CD4^ngbCD4/(CD4^ngbCD4+k2CD4^ngbCD4))


# FunctionDefinition id = Function_for_Se_Proliferation, name = Function_for_Se_Proliferation
Functi_14(pSe,Se,ccSe)=(pSe*Se*(1-Se/ccSe))


# FunctionDefinition id = Function_for_Ma_Deactivation, name = Function_for_Ma_Deactivation
Functi_15(daMa,Ma,CD4,cdaMA)=(daMa*Ma*CD4/(CD4+cdaMA))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  sMr, name = sMr, constant
par sMr=300000.0

# Parameter:   id =  drMr, name = drMr, constant
par drMr=0.011

# Parameter:   id =  aMr, name = aMr, constant
par aMr=100.0

# Parameter:   id =  cSeMr, name = cSeMr, constant
par cSeMr=1.0

# Parameter:   id =  iMr, name = iMr, constant
par iMr=0.1

# Parameter:   id =  cSeMri, name = cSeMri, constant
par cSeMri=600000.0

# Parameter:   id =  kSeMr, name = kSeMr, constant
par kSeMr=5.0E-8

# Parameter:   id =  gbMr, name = gbMr, constant
par gbMr=1.2

# Parameter:   id =  ccMr, name = ccMr, constant
par ccMr=2.5E7

# Parameter:   id =  p1, name = p1, constant
par p1=0.65

# Parameter:   id =  vrecMr, name = vrecMr, constant
par vrecMr=1.0

# Parameter:   id =  kmrecMr, name = kmrecMr, constant
par kmrecMr=1000.0

# Parameter:   id =  drMa, name = drMa, constant
par drMa=0.08

# Parameter:   id =  kSeMa, name = kSeMa, constant
par kSeMa=2.6E-7

# Parameter:   id =  daMa, name = daMa, constant
par daMa=40.0

# Parameter:   id =  cdaMa, name = cdaMa, constant
par cdaMa=3.0E7

# Parameter:   id =  N, name = N, constant
par N=30.0

# Parameter:   id =  bMi, name = bMi, constant
par bMi=0.4

# Parameter:   id =  mMi, name = mMi, constant
par mMi=2.0

# Parameter:   id =  lMi, name = lMi, constant
par lMi=0.8

# Parameter:   id =  cCD4CD8, name = cCD4CD8, constant
par cCD4CD8=10.0

# Parameter:   id =  apop, name = apop, constant
par apop=0.7

# Parameter:   id =  drMi, name = drMi, constant
par drMi=0.011

# Parameter:   id =  sCD4, name = sCD4, constant
par sCD4=490000.0

# Parameter:   id =  drCD4, name = drCD4, constant
par drCD4=0.016

# Parameter:   id =  gbCD4, name = gbCD4, constant
par gbCD4=0.19

# Parameter:   id =  cc1CD4, name = cc1CD4, constant
par cc1CD4=8.2E7

# Parameter:   id =  ngbCD4, name = ngbCD4, constant
par ngbCD4=2.0

# Parameter:   id =  k2CD4, name = k2CD4, constant
par k2CD4=8700000.0

# Parameter:   id =  kmrecCD4, name = kmrecCD4, constant
par kmrecCD4=1.0

# Parameter:   id =  vrecCD4, name = vrecCD4, constant
par vrecCD4=100.0

# Parameter:   id =  CD4n, name = CD4n, constant
par CD4n=0.4

# Parameter:   id =  ndCD4, name = ndCD4, constant
par ndCD4=8.0

# Parameter:   id =  kSedCD4, name = kSedCD4, constant
par kSedCD4=4200.0

# Parameter:   id =  kSeCD4, name = kSeCD4, constant
par kSeCD4=1.0E-9

# Parameter:   id =  drCD8, name = drCD8, constant
par drCD8=0.001

# Parameter:   id =  sCD8, name = sCD8, constant
par sCD8=430000.0

# Parameter:   id =  gbCD8, name = gbCD8, constant
par gbCD8=1.44

# Parameter:   id =  cc1CD8, name = cc1CD8, constant
par cc1CD8=1.3E7

# Parameter:   id =  k2CD8, name = k2CD8, constant
par k2CD8=4.7E7

# Parameter:   id =  ncompCD4, name = ncompCD4, constant
par ncompCD4=0.5

# Parameter:   id =  kcompCD4, name = kcompCD4, constant
par kcompCD4=3.4E7

# Parameter:   id =  compCD8, name = compCD8, constant
par compCD8=0.85

# Parameter:   id =  w1, name = w1, constant
par w1=1.0E-25

# Parameter:   id =  drSe, name = drSe, constant
par drSe=27.8

# Parameter:   id =  pSe, name = pSe, constant
par pSe=35.0

# Parameter:   id =  ccSe, name = ccSe, constant
par ccSe=500000.0

# Parameter:   id =  drSi, name = drSi, constant
par drSi=0.05

# Parameter:   id =  pSi, name = pSi, constant
par pSi=4.1

# Reaction: id = Mr_Source, name = Mr_Source

Mr_Source=compartme*Constant_(sMr)

# Reaction: id = Mr_Growth_Boost, name = Mr_Growth_Boost

Mr_Growth=compartme*Functi_11(Mr, ccMr, p1, gbMr)

# Reaction: id = Mr_Recruitment, name = Mr_Recruitment

Mr_Recrui=compartme*Functio_9(Mrrec, vrecMr, Se, kmrecMr)

# Reaction: id = Ma_Deactivation, name = Ma_Deactivation

Ma_Deacti=compartme*Functi_15(daMa, Ma, CD4, cdaMa)

# Reaction: id = Mr_Infection, name = Mr_Infection

Mr_Infect=compartme*Functi_10(iMr, Mr, Se, cSeMri)

# Reaction: id = Mr_Activation, name = Mr_Activation

Mr_Activa=compartme*Functi_12(aMr, Mr, Se, cSeMr)

# Reaction: id = Se_Killing_Mr, name = Se_Killing_Mr

Se_Killin=compartme*kSeMr*Mr*Se

# Reaction: id = Mr_Death, name = Mr_Death

Mr_Death=compartme*drMr*Mr

# Reaction: id = CD4_Source, name = CD4_Source

CD4_Sourc=compartme*Constant_(sCD4)

# Reaction: id = CD4_Growth_Boost, name = CD4_Growth_Boost

CD4_Growt=compartme*Functi_13(gbCD4, CD4, cc1CD4, ngbCD4, k2CD4)

# Reaction: id = CD4_Recruitment, name = CD4_Recruitment

CD4_Recru=compartme*Functio_8(CD4rec, vrecCD4, Se, kmrecCD4)

# Reaction: id = Se_Killing_CD4, name = Se_Killing_CD4

Se_Kill_1=compartme*kSeCD4*CD4*Se

# Reaction: id = CD4_Interaction_Naive_Se, name = CD4_Interaction_Naive_Se

CD4_Inter=compartme*Functio_5(CD4n, CD4, Se, ndCD4, kSedCD4)

# Reaction: id = CD4_Death, name = CD4_Death

CD4_Death=compartme*drCD4*CD4

# Reaction: id = CD8_Source, name = CD8_Source

CD8_Sourc=compartme*Constant_(sCD8)

# Reaction: id = CD8_Growth_Boost, name = CD8_Growth_Boost

CD8_Growt=compartme*Functio_2(gbCD8, CD8, cc1CD8, k2CD8)

# Reaction: id = CD8_Competition, name = CD8_Competition

CD8_Compe=compartme*Functio_6(compCD8, CD8, Se, w1, CD4, ncompCD4, kcompCD4)

# Reaction: id = CD8_Death, name = CD8_Death

CD8_Death=compartme*drCD8*CD8

# Reaction: id = Ma_Death, name = Ma_Death

Ma_Death=compartme*drMa*Ma

# Reaction: id = Se_Killing_Ma, name = Se_Killing_Ma

Se_Kill_2=compartme*kSeMa*Ma*Se

# Reaction: id = Mi_Bursting, name = Mi_Bursting

Mi_Bursti=compartme*Functio_7(bMi, Mi, Si, mMi, N)

# Reaction: id = Mi_Lysis, name = Mi_Lysis

Mi_Lysis=compartme*Functio_3(lMi, CD4, CD8, Mi, cCD4CD8, apop, Si, N)

# Reaction: id = Mi_Death, name = Mi_Death

Mi_Death=compartme*drMi*Mi

# Reaction: id = Se_Proliferation, name = Se_Proliferation

Se_Prolif=compartme*Functi_14(pSe, Se, ccSe)

# Reaction: id = Se_Death, name = Se_Death

Se_Death=compartme*drSe*Se

# Reaction: id = Si_Death, name = Si_Death

Si_Death=compartme*drSi*Si

# Reaction: id = Si_Proliferation, name = Si_Proliferation

Si_Prolif=compartme*Function_(pSi, Si, N, Mi)

# Reaction: id = Mr_Infection_Si, name = Mr_Infection_Si

Mr_Infe_1=compartme*Functio_4(iMr, Mr, Si, cSeMr)

# Reaction: id = Mi_Lysis_Si, name = Mi_Lysis_Si

Mi_Lysis_=compartme*Functio_1(lMi, CD4, CD8, Mi, cCD4CD8)

# Species:   id = CD4, name = CD4, affected by kineticLaw

init CD4=9000000.0
dCD4/dt=(1/(compartme))*(( 1.0 * CD4_Sourc) + ( 1.0 * CD4_Growt) + ( 1.0 * CD4_Recru) + (-1.0 * Se_Kill_1) + (-1.0 * CD4_Inter) + (-1.0 * CD4_Death))

# Species:   id = CD8, name = CD8, affected by kineticLaw

init CD8=7000000.0
dCD8/dt=(1/(compartme))*(( 1.0 * CD8_Sourc) + ( 1.0 * CD8_Growt) + (-1.0 * CD8_Compe) + (-1.0 * CD8_Death))

# Species:   id = Mr, name = Mr, affected by kineticLaw

init Mr=9000000.0
dMr/dt=(1/(compartme))*(( 1.0 * Mr_Source) + ( 1.0 * Mr_Growth) + ( 1.0 * Mr_Recrui) + ( 1.0 * Ma_Deacti) + (-1.0 * Mr_Infect) + (-1.0 * Mr_Activa) + (-1.0 * Se_Killin) + (-1.0 * Mr_Death))

# Species:   id = Ma, name = Ma, affected by kineticLaw

init Ma=0.0
dMa/dt=(1/(compartme))*((-1.0 * Ma_Deacti) + ( 1.0 * Mr_Activa) + (-1.0 * Ma_Death) + (-1.0 * Se_Kill_2))

# Species:   id = Mi, name = Mi, affected by kineticLaw

init Mi=100.0
dMi/dt=(1/(compartme))*(( 1.0 * Mr_Infect) + (-1.0 * Mi_Bursti) + (-1.0 * Mi_Lysis) + (-1.0 * Mi_Death))

# Species:   id = Se, name = Se, affected by kineticLaw

init Se=200.0
dSe/dt=(1/(compartme))*((-1.0 * Mr_Infect) + (-1.0 * Se_Killin) + (-1.0 * Se_Kill_1) + (-1.0 * Se_Kill_2) + ( 1.0 * Mi_Bursti) + ( 1.0 * Se_Prolif) + (-1.0 * Se_Death))

# Species:   id = Si, name = Si, affected by kineticLaw

init Si=100.0
dSi/dt=(1/(compartme))*((-1.0 * Mi_Bursti) + (-1.0 * Si_Death) + ( 1.0 * Si_Prolif) + ( 1.0 * Mr_Infe_1) + (-1.0 * Mi_Lysis_))

# Species:   id = CD4rec, name = CD4rec, affected by kineticLaw

init CD4rec=2.7E7
dCD4rec/dt=(1/(compartme))*((-1.0 * CD4_Recru))

# Species:   id = Mrrec, name = Mrrec, affected by kineticLaw

init Mrrec=2.0E7
dMrrec/dt=(1/(compartme))*((-1.0 * Mr_Recrui))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

