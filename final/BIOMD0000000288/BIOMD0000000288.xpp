
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Wang2009 - PI3K Ras Crosstalk
#
# is http://identifiers.org/biomodels.db/MODEL0910130003
# is http://identifiers.org/biomodels.db/BIOMD0000000288
# isDescribedBy http://identifiers.org/pubmed/19225459
# isDerivedFrom http://identifiers.org/pubmed/12871957
# isDerivedFrom http://identifiers.org/pubmed/16314431
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Parameter:   id =  L, name = L, constant
par L=1.0

# Parameter:   id =  KDL, name = KDL, constant
par KDL=1.5

# Parameter:   id =  kxR0, name = kxR0, constant
par kxR0=0.3

# Parameter:   id =  kminusx, name = kminusx, constant
par kminusx=0.007

# Parameter:   id =  ke, name = ke, constant
par ke=0.2

# Parameter:   id =  kt, name = kt, constant
par kt=0.005

# Parameter:   id =  alphaPI3K, name = alphaPI3K, constant
par alphaPI3K=80.0

# Parameter:   id =  kappaPI3K, name = kappaPI3K, constant
par kappaPI3K=0.3

# Parameter:   id =  k3PI, name = k3PI, constant
par k3PI=1.0

# Parameter:   id =  KGR, name = KGR, constant
par KGR=495.0

# Parameter:   id =  KGP, name = KGP, constant
par KGP=5.09

# Parameter:   id =  kRas, name = kRas, constant
par kRas=1.0

# Parameter:   id =  Gamma, name = Gamma, constant
par Gamma=0.1

# Parameter:   id =  kdx1, name = kdx1, constant
par kdx1=0.745

# Parameter:   id =  kdx2, name = kdx2, constant
par kdx2=2.85

# Parameter:   id =  Kx2, name = Kx2, constant
par Kx2=6.77

# Parameter:   id =  VmaxOVERKMx11, name = VmaxOVERKMx11, constant
par VmaxOVERK=1.18

# Parameter:   id =  KMx11, name = KMx11, constant
par KMx11=30.3

# Parameter:   id =  VmaxOVERKMx21, name = VmaxOVERKMx21, constant
par VmaxOVE_1=0.405

# Parameter:   id =  KMx21, name = KMx21, constant
par KMx21=13.7

# Parameter:   id =  VmaxOVERKMyph1, name = VmaxOVERKMyph1, constant
par VmaxOVE_2=1.65

# Parameter:   id =  KMyph1, name = KMyph1, constant
par KMyph1=23.0

# Parameter:   id =  VmaxOVERKMx12, name = VmaxOVERKMx12, constant
par VmaxOVE_3=3.45

# Parameter:   id =  KMx12, name = KMx12, constant
par KMx12=18.6

# Parameter:   id =  VmaxOVERKMx22, name = VmaxOVERKMx22, constant
par VmaxOVE_4=1.09

# Parameter:   id =  KMx22, name = KMx22, constant
par KMx22=9.59

# Parameter:   id =  VmaxOVERKMyph2, name = VmaxOVERKMyph2, constant
par VmaxOVE_5=4.2

# Parameter:   id =  KMyph2, name = KMyph2, constant
par KMyph2=7.99

# Parameter:   id =  VmaxOVERKMy1, name = VmaxOVERKMy1, constant
par VmaxOVE_6=6.57

# Parameter:   id =  KMy1, name = KMy1, constant
par KMy1=9.91

# Parameter:   id =  VmaxOVERKMzph1, name = VmaxOVERKMzph1, constant
par VmaxOVE_7=0.167

# Parameter:   id =  KMzph1, name = KMzph1, constant
par KMzph1=8.27

# Parameter:   id =  VmaxOVERKMy2, name = VmaxOVERKMy2, constant
par VmaxOVE_8=31.9

# Parameter:   id =  KMy2, name = KMy2, constant
par KMy2=8.81

# Parameter:   id =  VmaxOVERKMzph2, name = VmaxOVERKMzph2, constant
par VmaxOVE_9=0.228

# Parameter:   id =  KMzph2, name = KMzph2, constant
par KMzph2=31.5

# Parameter:   id =  kFBf, name = kFBf, constant
par kFBf=0.976

# Parameter:   id =  Zf, name = Zf, constant
par Zf=0.272

# Parameter:   id =  n, name = n, constant
par n=1.03

# Parameter:   id =  Kf, name = Kf, constant
par Kf=3.76

# Parameter:   id =  kdw, name = kdw, constant
par kdw=0.0333

# Parameter:   id =  kFBph, name = kFBph, constant
par kFBph=2.34

# Parameter:   id =  Wph, name = Wph, constant
par Wph=0.385

# Parameter:   id =  p, name = p, constant
par p=1.98

# Parameter:   id =  Kph, name = Kph, constant
par Kph=4.64

# assignmentRule: variable = r
r=KDL*sumrc1/(KDL+L)
aux r=r

# assignmentRule: variable = c1
c1=L*sumrc1/(KDL+L)
aux c1=c1

# assignmentRule: variable = ePI3K
ePI3K=(1+kappaPI3K+2*alphaPI3K*c2-((1+kappaPI3K+2*alphaPI3K*c2)^2-8*alphaPI3K*c2)^0.5)/2
aux ePI3K=ePI3K

# assignmentRule: variable = eGEF
eGEF=(KGR*c2+KGP*m3PI)/(1+KGR*c2+KGP*m3PI)*fGEF
aux eGEF=eGEF

# assignmentRule: variable = yp
yp=1-y-ypp
aux yp=yp

# assignmentRule: variable = zp
zp=1-z-zpp
aux zp=zp

# Reaction: id = sumrc1ODE

sumrc1ODE=kt*(1-sumrc1)+2*(kminusx*c2-kxR0*c1^2)

# Reaction: id = c2ODE

c2ODE=kxR0*c1^2-(kminusx+ke)*c2

# Reaction: id = m3PIODE

m3PIODE=k3PI*(ePI3K-m3PI)

# Reaction: id = mRasODE

mRasODE=kRas*((1+Gamma)*eGEF-(1+Gamma*eGEF)*mRas)

# Reaction: id = x1ODE

x1ODE=kdx1*(mRas-x1/(1+y/KMx11+yp/KMx12))

# Reaction: id = x2ODE

x2ODE=kdx2*((1+Kx2)*m3PI/(1+Kx2*m3PI)-x2/(1+y/KMx21+yp/KMx22))

# Reaction: id = yODE

yODE=VmaxOVE_2*yp/(1+yp/KMyph1+ypp/KMyph2)-VmaxOVERK*x1*y/(1+y/KMx11+yp/KMx12)-VmaxOVE_1*x2*y/(1+y/KMx21+yp/KMx22)

# Reaction: id = yppODE

yppODE=VmaxOVE_3*x1*yp/(1+y/KMx11+yp/KMx12)+VmaxOVE_4*x2*yp/(1+y/KMx21+yp/KMx22)-VmaxOVE_5*ypp/((1+z/KMy1+zp/KMy2)*(1+yp/KMyph1)+ypp/KMyph2)

# Reaction: id = zODE

zODE=VmaxOVE_7*eph*zp/(1+zp/KMzph1+zpp/KMzph2)-VmaxOVE_6*ypp*z/(1+z/KMy1+zp/KMy2)

# Reaction: id = zppODE

zppODE=VmaxOVE_8*ypp*zp/(1+z/KMy1+zp/KMy2)-VmaxOVE_9*eph*zpp/(1+zp/KMzph1+zpp/KMzph2)

# Reaction: id = fGEFODE

fGEFODE=kFBf*((1-fGEF)/Kf-zpp^n/(Zf^n+zpp^n)*fGEF)

# Reaction: id = wODE

wODE=kdw*(zpp-w)

# Reaction: id = ephODE

ephODE=kFBph*(w^p/(Wph^p+w^p)-(eph-1)/Kph)

# Species:   id = sumrc1, name = sumrc1, affected by kineticLaw

init sumrc1=1.0
dsumrc1/dt=(1/(cell))*(( 1.0 * sumrc1ODE))

# Species:   id = r, name = r, defined in a rule 

# Species:   id = c1, name = c1, defined in a rule 

# Species:   id = c2, name = c2, affected by kineticLaw

init c2=0.0
dc2/dt=(1/(cell))*(( 1.0 * c2ODE))

# Species:   id = ePI3K, name = ePI3K, defined in a rule 

# Species:   id = m3PI, name = m3PI, affected by kineticLaw

init m3PI=0.0
dm3PI/dt=(1/(cell))*(( 1.0 * m3PIODE))

# Species:   id = eGEF, name = eGEF, defined in a rule 

# Species:   id = mRas, name = mRas, affected by kineticLaw

init mRas=0.0
dmRas/dt=(1/(cell))*(( 1.0 * mRasODE))

# Species:   id = x1, name = x1, affected by kineticLaw

init x1=0.0
dx1/dt=(1/(cell))*(( 1.0 * x1ODE))

# Species:   id = x2, name = x2, affected by kineticLaw

init x2=0.0
dx2/dt=(1/(cell))*(( 1.0 * x2ODE))

# Species:   id = y, name = y, affected by kineticLaw

init y=1.0
dy/dt=(1/(cell))*(( 1.0 * yODE))

# Species:   id = yp, name = yp, defined in a rule 

# Species:   id = ypp, name = ypp, affected by kineticLaw

init ypp=0.0
dypp/dt=(1/(cell))*(( 1.0 * yppODE))

# Species:   id = z, name = z, affected by kineticLaw

init z=1.0
dz/dt=(1/(cell))*(( 1.0 * zODE))

# Species:   id = zp, name = zp, defined in a rule 

# Species:   id = zpp, name = zpp, affected by kineticLaw

init zpp=0.0
dzpp/dt=(1/(cell))*(( 1.0 * zppODE))

# Species:   id = fGEF, name = fGEF, affected by kineticLaw

init fGEF=1.0
dfGEF/dt=(1/(cell))*(( 1.0 * fGEFODE))

# Species:   id = w, name = w, affected by kineticLaw

init w=0.0
dw/dt=(1/(cell))*(( 1.0 * wODE))

# Species:   id = eph, name = eph, affected by kineticLaw

init eph=1.0
deph/dt=(1/(cell))*(( 1.0 * ephODE))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

