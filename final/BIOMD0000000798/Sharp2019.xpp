
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Sharp2019 - AML
#
# isDescribedBy http://identifiers.org/pubmed/30853393
# is http://identifiers.org/biomodels.db/MODEL1908190001
# is http://identifiers.org/biomodels.db/BIOMD0000000798
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = growth, name = growth
growth(p,pro,k,z)=(p*pro*(k-z))


# FunctionDefinition id = immune, name = immune
immune(a,L,y)=(a*L/(y+L))


# Compartment: id = bone_marrow, name = bone marrow, constant
par bone_marr=1.0

# Parameter:   id =  Z1, name = Z1, defined by a Rule

# Parameter:   id =  Z2, name = Z2, defined by a Rule

# Parameter:   id =  ps, name = ps, constant
par ps=0.5

# Parameter:   id =  pa, name = pa, constant
par pa=0.43

# Parameter:   id =  pl, name = pl, constant
par pl=0.27

# Parameter:   id =  ds, name = ds, constant
par ds=0.14

# Parameter:   id =  da, name = da, constant
par da=0.44

# Parameter:   id =  dl, name = dl, constant
par dl=0.05

# Parameter:   id =  ud, name = ud, constant
par ud=0.275

# Parameter:   id =  ut, name = ut, constant
par ut=0.3

# Parameter:   id =  k1, name = k1, constant
par k1=1.0

# Parameter:   id =  k2, name = k2, constant
par k2=1.0

# Parameter:   id =  a, name = a, constant
par a=0.015

# Parameter:   id =  y, name = y, constant
par y=0.01

# assignmentRule: variable = Z2
Z2=A_1+L
aux Z2=Z2

# assignmentRule: variable = Z1
Z1=S
aux Z1=Z1

# Reaction: id = HSC_growth, name = HSC growth

HSC_growt=bone_marr*growth(ps, S, k1, Z1)

# Reaction: id = HSC_differentiation, name = HSC differentiation

HSC_diffe=bone_marr*ds*S

# Reaction: id = progenitor_growth, name = progenitor growth

progenito=bone_marr*growth(pa, A_1, k2, Z2)

# Reaction: id = progenitor_differentiation, name = progenitor differentiation

progeni_1=bone_marr*da*A_1

# Reaction: id = normal_cell_efflux, name = normal cell efflux

normal_ce=bone_marr*ud*D

# Reaction: id = LSC_growth, name = LSC growth

LSC_growt=bone_marr*growth(pl, L, k2, Z2)

# Reaction: id = LSC_differentiation, name = LSC differentiation

LSC_diffe=bone_marr*dl*L

# Reaction: id = leukaemia_cell_efflux, name = leukaemia cell efflux

leukaemia=bone_marr*ut*T_renamed

# Reaction: id = immune_control, name = immune control

immune_co=bone_marr*immune(a, L, y)

# Species:   id = S, name = S, affected by kineticLaw

init S=0.1
dS/dt=(1/(bone_marr))*(( 1.0 * HSC_growt) + (-1.0 * HSC_diffe))

# Species:   id = A, name = A, affected by kineticLaw

par A_1=0.0
aux A_1=A_1
dA_1/dt=(1/(bone_marr))*(( 1.0 * HSC_diffe) + ( 1.0 * progenito) + (-1.0 * progeni_1))

# Species:   id = D, name = D, affected by kineticLaw

init D=0.0
dD/dt=(1/(bone_marr))*(( 1.0 * progeni_1) + (-1.0 * normal_ce))

# Species:   id = L, name = L, affected by kineticLaw

init L=0.1
dL/dt=(1/(bone_marr))*(( 1.0 * LSC_growt) + (-1.0 * LSC_diffe) + (-1.0 * immune_co))

# Species:   id = T, name = T, affected by kineticLaw

par T_renamed=0.0
aux T_renamed=T_renamed
dT_renamed/dt=(1/(bone_marr))*(( 1.0 * LSC_diffe) + (-1.0 * leukaemia))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

