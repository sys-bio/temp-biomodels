
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ray2013 - Meiotic initiation in S. cerevisiae
#
# is http://identifiers.org/biomodels.db/MODEL1303060000
# is http://identifiers.org/biomodels.db/BIOMD0000000626
# isDescribedBy http://identifiers.org/pubmed/23631506
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = ODE_pIme1_1_1__1, name = ODE pIme1_1_1 [1]
ODE_pIme1(Ime1,Rim11,dpime_1,pIme1,pime_1)=(pime_1*Ime1*Rim11-dpime_1*pIme1)


# FunctionDefinition id = ODE_pUme6_1_1__1, name = ODE pUme6_1_1 [1]
ODE_pUme6(Rim11,pUme6,pume_6,uume_6)=((1-pUme6)*pume_6*Rim11-uume_6*pUme6)


# FunctionDefinition id = ODE_Ime2_1_1_1__1, name = ODE Ime2_1_1_1 [1]
ODE_Ime2_(Ime2,c_2,c_3,dime_2,pIme1,pUme6,sime_2,sprimeime_2)=(sime_2*pUme6*pIme1+sprimeime_2*Ime2^5/(c_2^5+Ime2^5)-dime_2*Ime2/(c_3+Ime2))


# FunctionDefinition id = ODE_pSok2_1_1__1, name = ODE pSok2_1_1 [1]
ODE_pSok2(Ime1,csok_2,pSok2,psok_2,usok_2)=(csok_2/(csok_2+Ime1)*(1-pSok2)*psok_2-usok_2*pSok2)


# FunctionDefinition id = ODE_Ime1_1_1__1, name = ODE Ime1_1_1 [1]
ODE_Ime1_(Ime1,Ime2,Rim11,c_1,cime_1,dime_1,dprimeime_1,pSok2,pime_1,sime_1)=(cime_1/(cime_1+pSok2)*sime_1-(pime_1*Ime1*Rim11+dime_1*Ime1+dprimeime_1*Ime2*Ime1/(c_1+Ime1)))


# FunctionDefinition id = ODE_Rim11_1_1, name = ODE Rim11_1_1
ODE_Rim11(Rim11,prim_11,urim_11)=(urim_11*(1-Rim11)-prim_11*Rim11)


# Compartment: id = V, name = Cell, constant
par V=1.0

# Reaction: id = rim11_1, name = Rim11 Dephosphorylation
# Local Parameter:   id =  prim_11, name = prim_11
par prim_11=0.01

# Local Parameter:   id =  urim_11, name = urim_11
par urim_11=0.1


rim11_1=V*ODE_Rim11(Rim11, prim_11, urim_11)

# Reaction: id = pume6_1, name = Ume6 Phosphorylation
# Local Parameter:   id =  pume_6, name = pume_6
par pume_6=0.3

# Local Parameter:   id =  uume_6, name = uume_6
par uume_6=0.01


pume6_1=V*ODE_pUme6(Rim11, pUme6, pume_6, uume_6)

# Reaction: id = sok2_1, name = Production of Phosphorylated Sok2
# Local Parameter:   id =  csok_2, name = csok_2
par csok_2=0.05

# Local Parameter:   id =  psok_2, name = psok_2
par psok_2=0.7

# Local Parameter:   id =  usok_2, name = usok_2
par usok_2=1.0


sok2_1=V*ODE_pSok2(Ime1, csok_2, pSok2, psok_2, usok_2)

# Reaction: id = ime1_1, name = Ime1 Protein Production
# Local Parameter:   id =  c_1, name = c_1
par c_1=0.01

# Local Parameter:   id =  cime_1, name = cime_1
par cime_1=0.01

# Local Parameter:   id =  dime_1, name = dime_1
par dime_1=1.0

# Local Parameter:   id =  dprimeime_1, name = dprimeime_1
par dprimeime=1.0

# Local Parameter:   id =  pime_1, name = pime_1
par pime_1=2.0

# Local Parameter:   id =  sime_1, name = sime_1
par sime_1=10.0


ime1_1=V*ODE_Ime1_(Ime1, Ime2, Rim11, c_1, cime_1, dime_1, dprimeime, pSok2, pime_1, sime_1)

# Reaction: id = pime1_1, name = Phosphorylation of Ime1
# Local Parameter:   id =  dpime_1, name = dpime_1
par dpime_1=1.0

# Local Parameter:   id =  pime_1, name = pime_1
par pime_1_1=2.0


pime1_1=V*ODE_pIme1(Ime1, Rim11, dpime_1, pIme1, pime_1_1)

# Reaction: id = ime2_1, name = Ime2 Protein Production
# Local Parameter:   id =  c_2, name = c_2
par c_2=1.4

# Local Parameter:   id =  c_3, name = c_3
par c_3=2.0

# Local Parameter:   id =  dime_2, name = dime_2
par dime_2=8.0

# Local Parameter:   id =  sime_2, name = sime_2
par sime_2=10.0

# Local Parameter:   id =  sprimeime_2, name = sprimeime_2
par sprimeime=3.0


ime2_1=V*ODE_Ime2_(Ime2, c_2, c_3, dime_2, pIme1, pUme6, sime_2, sprimeime)

# Species:   id = Rim11, name = Rim11, affected by kineticLaw

init Rim11=0.0
dRim11/dt=(1/(V))*(( 1.0 * rim11_1))

# Species:   id = pUme6, name = pUme6, affected by kineticLaw

init pUme6=0.0
dpUme6/dt=(1/(V))*(( 1.0 * pume6_1))

# Species:   id = pSok2, name = pSok2, affected by kineticLaw

init pSok2=0.999999999999971
dpSok2/dt=(1/(V))*(( 1.0 * sok2_1))

# Species:   id = Ime1, name = Ime1, affected by kineticLaw

init Ime1=0.0
dIme1/dt=(1/(V))*(( 1.0 * ime1_1))

# Species:   id = pIme1, name = pIme1, affected by kineticLaw

init pIme1=0.0
dpIme1/dt=(1/(V))*(( 1.0 * pime1_1))

# Species:   id = Ime2, name = Ime2, affected by kineticLaw

init Ime2=0.0
dIme2/dt=(1/(V))*(( 1.0 * ime2_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

