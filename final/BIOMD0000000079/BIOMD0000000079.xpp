
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Goldbeter2006_weightCycling
#
# is http://identifiers.org/biomodels.db/MODEL4644593552
# is http://identifiers.org/biomodels.db/BIOMD0000000079
# isDescribedBy http://identifiers.org/pubmed/16595882
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_4
function_(P,V3,R,k3)=(P*V3*(1-R)/(k3+(1-R)))


# FunctionDefinition id = function_3
functio_1(V2,R,Q,K2)=(V2*R*Q/(K2+Q))


# FunctionDefinition id = function_2
functio_2(V1,Q,K1)=(V1*(1-Q)/(K1+(1-Q)))


# FunctionDefinition id = function_1
functio_3(V,substrate,Km)=(V*substrate/(Km+substrate))


# FunctionDefinition id = function_0
functio_4(a,Q)=(a*Q)


# Compartment: id = body, name = body, constant
par body=1.0

# Reaction: id = reaction_0, name = Increase of  P
# Local Parameter:   id =  a, name = a
par a=0.1


reaction_=body*functio_4(a, Q)

# Reaction: id = reaction_1, name = Decrease of P
# Local Parameter:   id =  V, name = V
par V=0.1

# Local Parameter:   id =  Km, name = Km
par Km=0.2


reactio_1=functio_3(V, P, Km)

# Reaction: id = reaction_2, name = Increase of Q
# Local Parameter:   id =  V1, name = V1
par V1=1.0

# Local Parameter:   id =  K1, name = K1
par K1=0.01


reactio_2=functio_2(V1, Q, K1)

# Reaction: id = reaction_3, name = Decrease of Q
# Local Parameter:   id =  V2, name = V2
par V2=1.5

# Local Parameter:   id =  K2, name = K2
par K2=0.01


reactio_3=functio_1(V2, R, Q, K2)

# Reaction: id = reaction_4, name = Increase of R
# Local Parameter:   id =  V3, name = V3
par V3=6.0

# Local Parameter:   id =  k3, name = k3
par k3=0.01


reactio_4=function_(P, V3, R, k3)

# Reaction: id = reaction_5, name = Decrease of R
# Local Parameter:   id =  V, name = V
par V_1=2.5

# Local Parameter:   id =  Km, name = Km
par Km_1=0.01


reactio_5=functio_3(V_1, R, Km_1)

# Species:   id = P, name = P, affected by kineticLaw

init P=0.43
dP/dt=( 1.0 * reaction_) + (-1.0 * reactio_1)

# Species:   id = Q, name = Q, affected by kineticLaw

init Q=0.8
dQ/dt=( 1.0 * reactio_2) + (-1.0 * reactio_3)

# Species:   id = R, name = R, affected by kineticLaw

init R=0.55
dR/dt=( 1.0 * reactio_4) + (-1.0 * reactio_5)

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

