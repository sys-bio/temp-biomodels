
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Schropp2019 - Target-Mediated Drug Disposition Model for Bispecific Antibodies
#
# isDescribedBy http://identifiers.org/pubmed/30480383
# is http://identifiers.org/biomodels.db/MODEL1907240003
# is http://identifiers.org/biomodels.db/BIOMD0000000788
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_Disassociation_RC_AB_3_1, name = Function for Disassociation_RC_AB_3_1
Function_(RC_AB,k_off_3)=(k_off_3*RC_AB)


# FunctionDefinition id = Function_for_C_Peripheral_Distribution_1, name = Function for C Peripheral Distribution_1
Functio_1(AP,V,k_21)=(k_21*AP/V)


# FunctionDefinition id = Function_for_Distribution_AP_Central_1, name = Function for Distribution_AP_Central_1
Functio_2(C_free,V,k_12)=(k_12*C_free*V)


# FunctionDefinition id = Function_for_Internalisation_RC_A_1, name = Function for Internalisation_RC_A_1
Functio_3(RC_A,k_int_A,k_off_1)=((k_off_1+k_int_A)*RC_A)


# FunctionDefinition id = Function_for_Disassociation_RC_AB_4_1, name = Function for Disassociation_RC_AB_4_1
Functio_4(RC_AB,k_off_4)=(k_off_4*RC_AB)


# FunctionDefinition id = Function_for_Disassociation_RC_A_1_1, name = Function for Disassociation_RC_A_1_1
Functio_5(RC_B,k_off_2)=(k_off_2*RC_B)


# FunctionDefinition id = Function_for_Internalisation_RC_B_1, name = Function for Internalisation_RC_B_1
Functio_6(RC_B,k_int_B,k_off_2)=((k_off_2+k_int_B)*RC_B)


# FunctionDefinition id = Function_for_Internalisation_RC_AB_1, name = Function for Internalisation_RC_AB_1
Functio_7(RC_AB,k_int_AB,k_off_3,k_off_4)=((k_off_3+k_off_4+k_int_AB)*RC_AB)


# FunctionDefinition id = Function_for_Distribution_AP_Central_2, name = Function for Distribution_AP_Central_2
Functio_8(AD,V,k_a)=(k_a*AD*V)


# FunctionDefinition id = Function_for_Disassociation_RC_A_1, name = Function for Disassociation_RC_A_1
Functio_9(RC_A,k_off_1)=(k_off_1*RC_A)


# Compartment: id = Central, name = Central, constant
par Central=1.0

# Compartment: id = Peripheral, name = Peripheral, constant
par Periphera=1.0

# Parameter:   id =  V, name = V, constant
par V=3.0

# Parameter:   id =  k_a, name = k_a, constant
par k_a=0.2

# Parameter:   id =  F, name = F, constant
par F=0.75

# Parameter:   id =  k_el, name = k_el, constant
par k_el=0.1

# Parameter:   id =  k_12, name = k_12, constant
par k_12=0.1

# Parameter:   id =  k_21, name = k_21, constant
par k_21=0.03

# Parameter:   id =  k_on_1, name = k_on_1, constant
par k_on_1=10.0

# Parameter:   id =  k_off_1, name = k_off_1, constant
par k_off_1=0.01

# Parameter:   id =  k_on_2, name = k_on_2, constant
par k_on_2=1.0

# Parameter:   id =  k_off_2, name = k_off_2, constant
par k_off_2=0.01

# Parameter:   id =  k_syn_A, name = k_syn_A, constant
par k_syn_A=1.0

# Parameter:   id =  k_deg_A, name = k_deg_A, constant
par k_deg_A=0.1

# Parameter:   id =  k_syn_B, name = k_syn_B, constant
par k_syn_B=10.0

# Parameter:   id =  k_deg_B, name = k_deg_B, constant
par k_deg_B=0.1

# Parameter:   id =  k_int_A, name = k_int_A, constant
par k_int_A=0.05

# Parameter:   id =  k_int_B, name = k_int_B, constant
par k_int_B=0.05

# Parameter:   id =  k_int_AB, name = k_int_AB, constant
par k_int_AB=0.1

# Parameter:   id =  k_off_3, name = k_off_3, constant
par k_off_3=0.01

# Parameter:   id =  k_off_4, name = k_off_4, constant
par k_off_4=0.01

# Parameter:   id =  k_on_3, name = k_on_3, constant
par k_on_3=1.0

# Parameter:   id =  k_on_4, name = k_on_4, constant
par k_on_4=10.0

# Reaction: id = Binding_C_R_A, name = Binding_C_R_A

Binding_C=Central*k_on_1*C_free*R_A

# Reaction: id = Binding_C_R_B, name = Binding_C_R_B

Binding_1=Central*k_on_2*C_free*R_B

# Reaction: id = Binding_RC_A_R_B, name = Binding_RC_A_R_B

Binding_R=Central*k_on_3*RC_A*R_B

# Reaction: id = Binding_RC_B_R_A, name = Binding_RC_B_R_A

Binding_2=Central*k_on_4*RC_B*R_A

# Reaction: id = Disassociation_RC_A, name = Disassociation_RC_A

Disassoci=Central*Functio_9(RC_A, k_off_1)

# Reaction: id = Disassociation_RC_B, name = Disassociation_RC_B

Disasso_1=Central*Functio_5(RC_B, k_off_2)

# Reaction: id = Disassociation_RC_AB_3, name = Disassociation_RC_AB_3

Disasso_2=Central*Function_(RC_AB, k_off_3)

# Reaction: id = Disassociation_RC_AB_4, name = Disassociation_RC_AB_4

Disasso_3=Central*Functio_4(RC_AB, k_off_4)

# Reaction: id = Elimination_C, name = Elimination_C

Eliminati=Central*k_el*C_free

# Reaction: id = Distribution_C_Central, name = Distribution_C_Central

Distribut=Central*k_12*C_free

# Reaction: id = Distribution_C_Peripheral, name = Distribution_C_Peripheral

Distrib_1=Functio_1(AP, V, k_21)

# Reaction: id = Distribution_AP_Central, name = Distribution_AP_Central

Distrib_2=Functio_2(C_free, V, k_12)

# Reaction: id = Distribution_AP_Peripheral, name = Distribution_AP_Peripheral

Distrib_3=Periphera*k_21*AP

# Reaction: id = Association_AD, name = Association_AD

Associati=Periphera*k_a*AD

# Reaction: id = Association_AD_C, name = Association_AD_C

Associa_1=Functio_8(AD, V, k_a)

# Reaction: id = Synthesis_R_A, name = Synthesis_R_A

Synthesis=Central*Constant_(k_syn_A)

# Reaction: id = Synthesis_R_B, name = Synthesis_R_B

Synthes_1=Central*Constant_(k_syn_B)

# Reaction: id = Degradation_R_A, name = Degradation_R_A

Degradati=Central*k_deg_A*R_A

# Reaction: id = Degradation_R_B, name = Degradation_R_B

Degrada_1=Central*k_deg_B*R_B

# Reaction: id = Internalisation_RC_A, name = Internalisation_RC_A

Internali=Central*Functio_3(RC_A, k_int_A, k_off_1)

# Reaction: id = Internalisation_RC_B, name = Internalisation_RC_B

Interna_1=Central*Functio_6(RC_B, k_int_B, k_off_2)

# Reaction: id = Internalisation_RC_AB, name = Internalisation_RC_AB

Interna_2=Central*Functio_7(RC_AB, k_int_AB, k_off_3, k_off_4)

# Species:   id = C_free, name = C_free, affected by kineticLaw

init C_free=50.0
dC_free/dt=(1/(Central))*((-1.0 * Binding_C) + (-1.0 * Binding_1) + ( 1.0 * Disassoci) + ( 1.0 * Disasso_1) + (-1.0 * Eliminati) + (-1.0 * Distribut) + ( 1.0 * Distrib_1) + ( 1.0 * Associa_1))

# Species:   id = R_A, name = R_A, affected by kineticLaw

init R_A=10.0
dR_A/dt=(1/(Central))*((-1.0 * Binding_C) + (-1.0 * Binding_2) + ( 1.0 * Disassoci) + ( 1.0 * Disasso_3) + ( 1.0 * Synthesis) + (-1.0 * Degradati))

# Species:   id = R_B, name = R_B, affected by kineticLaw

init R_B=100.0
dR_B/dt=(1/(Central))*((-1.0 * Binding_1) + (-1.0 * Binding_R) + ( 1.0 * Disasso_1) + ( 1.0 * Disasso_2) + ( 1.0 * Synthes_1) + (-1.0 * Degrada_1))

# Species:   id = RC_A, name = RC_A, affected by kineticLaw

init RC_A=0.0
dRC_A/dt=(1/(Central))*(( 1.0 * Binding_C) + (-1.0 * Binding_R) + ( 1.0 * Disasso_3) + (-1.0 * Internali))

# Species:   id = RC_B, name = RC_B, affected by kineticLaw

init RC_B=0.0
dRC_B/dt=(1/(Central))*(( 1.0 * Binding_1) + (-1.0 * Binding_2) + ( 1.0 * Disasso_2) + (-1.0 * Interna_1))

# Species:   id = RC_AB, name = RC_AB, affected by kineticLaw

init RC_AB=0.0
dRC_AB/dt=(1/(Central))*(( 1.0 * Binding_R) + ( 1.0 * Binding_2) + (-1.0 * Interna_2))

# Species:   id = AP, name = AP, affected by kineticLaw

init AP=0.0
dAP/dt=(1/(Periphera))*(( 1.0 * Distrib_2) + (-1.0 * Distrib_3))

# Species:   id = AD, name = AD, affected by kineticLaw

init AD=0.0
dAD/dt=(1/(Periphera))*((-1.0 * Associati))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

