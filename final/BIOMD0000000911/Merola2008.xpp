
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Merola2008 - An insight into tumor dormancy equilibrium via the analysis of its domain of attraction
#
# isDescribedBy http://identifiers.org/doi/10.1016/j.bspc.2008.02.001
# isDerivedFrom http://identifiers.org/doi/10.1016/j.mbs.2005.04.001
# is http://identifiers.org/biomodels.db/MODEL2001150001
# is http://identifiers.org/biomodels.db/BIOMD0000000911
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_removal_of_tumor_cell, name = Function for removal of tumor cell
Function_(alpha,M,N)=(alpha*M*N)


# FunctionDefinition id = Function_for_formation_of_resting_predator_cell, name = Function for formation of resting predator cell
Functio_1(s,Z,k2)=(s*Z*(1-Z/k2))


# FunctionDefinition id = Function_for_removal_hunting_predator_cell, name = Function for removal hunting predator cell
Functio_2(d1,N)=(d1*N)


# FunctionDefinition id = Function_for_removal_of_resting_predator_cells, name = Function for removal of resting predator cells
Functio_3(beta,N,Z,d2)=(beta*N*Z+d2*Z)


# FunctionDefinition id = Function_for_increase_in_the_density_of_tumor_cell, name = Function for increase in the density of tumor cell
Functio_4(q,r,M,k1)=(q+r*M*(1-M/k1))


# FunctionDefinition id = Function_for_actiation_and_tranfer_of_hunting_predator_cells, name = Function for actiation and tranfer of hunting predator cells
Functio_5(beta,N,Z)=(beta*N*Z)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  q, name = q, constant
par q=10.0

# Parameter:   id =  r, name = r, constant
par r=0.9

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.3

# Parameter:   id =  k1, name = k1, constant
par k1=0.8

# Parameter:   id =  beta, name = beta, constant
par beta=0.1

# Parameter:   id =  d1, name = d1, constant
par d1=0.02

# Parameter:   id =  s, name = s, constant
par s=0.8

# Parameter:   id =  k2, name = k2, constant
par k2=0.7

# Parameter:   id =  d2, name = d2, constant
par d2=0.03

# Reaction: id = Increase_in_the_density_of_tumor_cel, name = Increase in the density of tumor cel

Increase_=compartme*Functio_4(q, r, M, k1)

# Reaction: id = Removal_of_tumor_cell_from_the_system, name = Removal of tumor cell from the system

Removal_o=compartme*Function_(alpha, M, N)

# Reaction: id = Activation_and_transfer_of_predator_cells_like_CTL_NK_and_macrophage, name = Activation and transfer of predator cells like CTL NK and macrophage

Activatio=compartme*Functio_5(beta, N, Z)

# Reaction: id = Removal_of_hunting_predator_cell, name = Removal of hunting predator cell

Removal_1=compartme*Functio_2(d1, N)

# Reaction: id = Converstion_of_hunting_to_resting_predator_cell, name = Converstion of hunting to resting predator cell

Conversti=compartme*Functio_1(s, Z, k2)

# Reaction: id = Removal_of_resting_predator_cells, name = Removal of resting predator cells

Removal_2=compartme*Functio_3(beta, N, Z, d2)

# Species:   id = M, name = M, affected by kineticLaw

init M=2.5
dM/dt=(1/(compartme))*(( 1.0 * Increase_) + (-1.0 * Removal_o))

# Species:   id = N, name = N, affected by kineticLaw

init N=1.5
dN/dt=(1/(compartme))*(( 1.0 * Activatio) + (-1.0 * Removal_1))

# Species:   id = Z, name = Z, affected by kineticLaw

init Z=0.5
dZ/dt=(1/(compartme))*(( 1.0 * Conversti) + (-1.0 * Removal_2))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

