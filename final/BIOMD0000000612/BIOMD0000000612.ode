
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Proctor2016 - Circadian rhythm of PTH and the dynamics of signaling molecules on bone remodeling
#
# isDescribedBy http://journal.frontiersin.org/article/10.3389/fendo.2016.00061/abstract
# is http://identifiers.org/biomodels.db/MODEL1602290000
# is http://identifiers.org/biomodels.db/BIOMD0000000612
# isDescribedBy http://identifiers.org/pubmed/27379013
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = bone, name = bone, constant
par bone=1.0

# Compartment: id = ecm, name = ecm, constant
par ecm=1.0

# Compartment: id = osteoblast, name = osteoblast, constant
par osteoblas=1.0

# Parameter:   id =  kactCreb, name = kactCreb, constant
par kactCreb=0.009

# Parameter:   id =  kactOcy, name = kactOcy, constant
par kactOcy=0.004

# Parameter:   id =  kactOcyPth, name = kactOcyPth, constant
par kactOcyPt=0.08

# Parameter:   id =  kactTgfb, name = kactTgfb, constant
par kactTgfb=2.0E-7

# Parameter:   id =  kactWnt, name = kactWnt, constant
par kactWnt=0.03

# Parameter:   id =  kactWntPth, name = kactWntPth, constant
par kactWntPt=0.001

# Parameter:   id =  kbinBaxBcl2, name = kbinBaxBcl2, constant
par kbinBaxBc=0.01

# Parameter:   id =  kbinCrebRunx2, name = kbinCrebRunx2, constant
par kbinCrebR=0.01

# Parameter:   id =  kbinObmPTH, name = kbinObmPTH, constant
par kbinObmPT=0.02

# Parameter:   id =  kbinObpPTH, name = kbinObpPTH, constant
par kbinObpPT=3.0E-4

# Parameter:   id =  kbinObpTgfb, name = kbinObpTgfb, constant
par kbinObpTg=2.0E-4

# Parameter:   id =  kbinOclpRANKL, name = kbinOclpRANKL, constant
par kbinOclpR=0.001

# Parameter:   id =  kbinOcyPTH, name = kbinOcyPTH, constant
par kbinOcyPT=0.008

# Parameter:   id =  kdeathOb, name = kdeathOb, constant
par kdeathOb=2.4E-4

# Parameter:   id =  kdeathOcl, name = kdeathOcl, constant
par kdeathOcl=6.5E-5

# Parameter:   id =  kdeathOclp, name = kdeathOclp, constant
par kdeathO_1=1.0E-5

# Parameter:   id =  kdeathOcy, name = kdeathOcy, constant
par kdeathOcy=1.0E-8

# Parameter:   id =  kdegBcl2, name = kdegBcl2, constant
par kdegBcl2=0.0025

# Parameter:   id =  kdegBone, name = kdegBone, constant
par kdegBone=6.5E-9

# Parameter:   id =  kdegMCSF, name = kdegMCSF, constant
par kdegMCSF=1.0E-4

# Parameter:   id =  kdegOPG, name = kdegOPG, constant
par kdegOPG=4.0E-6

# Parameter:   id =  kdegOPGRANKL, name = kdegOPGRANKL, constant
par kdegOPGRA=1.0E-5

# Parameter:   id =  kdegPTH, name = kdegPTH, constant
par kdegPTH=0.002

# Parameter:   id =  kdegRANKL, name = kdegRANKL, constant
par kdegRANKL=3.0E-5

# Parameter:   id =  kdegRunx2, name = kdegRunx2, constant
par kdegRunx2=1.0E-4

# Parameter:   id =  kdegRunx2PTH, name = kdegRunx2PTH, constant
par kdegRun_1=0.003

# Parameter:   id =  kdegSost, name = kdegSost, constant
par kdegSost=0.004

# Parameter:   id =  kdegTgfb, name = kdegTgfb, constant
par kdegTgfb=5.0E-5

# Parameter:   id =  kdegTgfbPTH, name = kdegTgfbPTH, constant
par kdegTgfbP=1.7E-5

# Parameter:   id =  kdiffHSC, name = kdiffHSC, constant
par kdiffHSC=5.5E-5

# Parameter:   id =  kdiffMSC, name = kdiffMSC, constant
par kdiffMSC=6.5E-4

# Parameter:   id =  kdiffObP, name = kdiffObP, constant
par kdiffObP=1.0E-4

# Parameter:   id =  kdiffObproTgfb, name = kdiffObproTgfb, constant
par kdiffObpr=0.05

# Parameter:   id =  kdiffOclP, name = kdiffOclP, constant
par kdiffOclP=8.0E-5

# Parameter:   id =  kformBone, name = kformBone, constant
par kformBone=3.07E-6

# Parameter:   id =  kinactCreb, name = kinactCreb, constant
par kinactCre=1.0E-4

# Parameter:   id =  kinactOcy, name = kinactOcy, constant
par kinactOcy=2.0E-5

# Parameter:   id =  kinactWnt, name = kinactWnt, constant
par kinactWnt=0.8

# Parameter:   id =  kinhibRANKL, name = kinhibRANKL, constant
par kinhibRAN=0.001

# Parameter:   id =  kmatOb, name = kmatOb, constant
par kmatOb=2.0E-9

# Parameter:   id =  kmatObTgfb, name = kmatObTgfb, constant
par kmatObTgf=1.0E-8

# Parameter:   id =  krelBaxBcl2, name = krelBaxBcl2, constant
par krelBaxBc=0.5

# Parameter:   id =  krelCrebRunx2, name = krelCrebRunx2, constant
par krelCrebR=0.01

# Parameter:   id =  krelObmPTH, name = krelObmPTH, constant
par krelObmPT=0.005

# Parameter:   id =  krelObpPTH, name = krelObpPTH, constant
par krelObpPT=0.005

# Parameter:   id =  krelObpTgfb, name = krelObpTgfb, constant
par krelObpTg=0.01

# Parameter:   id =  krelOclpRANKL, name = krelOclpRANKL, constant
par krelOclpR=0.001

# Parameter:   id =  krelOcyPTH, name = krelOcyPTH, constant
par krelOcyPT=0.005

# Parameter:   id =  krelRANKL, name = krelRANKL, constant
par krelRANKL=0.001

# Parameter:   id =  ksecMCSFbyMSC, name = ksecMCSFbyMSC, constant
par ksecMCSFb=1.0E-5

# Parameter:   id =  ksecMCSFbyObm, name = ksecMCSFbyObm, constant
par ksecMCS_1=1.0E-5

# Parameter:   id =  ksecMCSFbyObp, name = ksecMCSFbyObp, constant
par ksecMCS_2=1.0E-5

# Parameter:   id =  ksecMCSFbyObpro, name = ksecMCSFbyObpro, constant
par ksecMCS_3=1.0E-5

# Parameter:   id =  ksecOPGbyObm, name = ksecOPGbyObm, constant
par ksecOPGby=1.0E-5

# Parameter:   id =  ksecOPGbyObp, name = ksecOPGbyObp, constant
par ksecOPG_1=2.0E-6

# Parameter:   id =  ksecOPGbyObpPTH, name = ksecOPGbyObpPTH, constant
par ksecOPG_2=1.0E-6

# Parameter:   id =  ksecRANKLbyMSC, name = ksecRANKLbyMSC, constant
par ksecRANKL=1.0E-6

# Parameter:   id =  ksecRANKLbyObm, name = ksecRANKLbyObm, constant
par ksecRAN_1=1.0E-7

# Parameter:   id =  ksecRANKLbyObmPTH, name = ksecRANKLbyObmPTH, constant
par ksecRAN_2=1.0E-6

# Parameter:   id =  ksecRANKLbyObp, name = ksecRANKLbyObp, constant
par ksecRAN_3=3.0E-6

# Parameter:   id =  ksecRANKLbyObpPTH, name = ksecRANKLbyObpPTH, constant
par ksecRAN_4=2.0E-5

# Parameter:   id =  ksecRANKLbyObpro, name = ksecRANKLbyObpro, constant
par ksecRAN_5=7.0E-6

# Parameter:   id =  ksecRANKLbyObpTgfb, name = ksecRANKLbyObpTgfb, constant
par ksecRAN_6=4.0E-6

# Parameter:   id =  ksecRANKLbyOcy, name = ksecRANKLbyOcy, constant
par ksecRAN_7=1.0E-6

# Parameter:   id =  ksecRANKLbyOcyI, name = ksecRANKLbyOcyI, constant
par ksecRAN_8=1.0E-7

# Parameter:   id =  ksecSost, name = ksecSost, constant
par ksecSost=7.5E-4

# Parameter:   id =  ksecTgfb, name = ksecTgfb, constant
par ksecTgfb=5.0E-5

# Parameter:   id =  ksynBcl2, name = ksynBcl2, constant
par ksynBcl2=0.005

# Parameter:   id =  ksynPTH, name = ksynPTH, constant
par ksynPTH=0.02

# Parameter:   id =  ksynRunx2, name = ksynRunx2, constant
par ksynRunx2=0.005

# Parameter:   id =  ksynX, name = ksynX, constant
par ksynX=0.01157

# Parameter:   id =  kunload, name = kunload, constant
par kunload=3.5E-4

# Reaction: id = Unloading

Unloading=kunload*LOAD

# Reaction: id = Osteocyte_activation

Osteocyte=kactOcy*Ocy_I*LOAD

# Reaction: id = Osteocyte_activation_by_PTH

Osteocy_1=kactOcyPt*Ocy_I_PTH

# Reaction: id = Osteocyte_inactivation

Osteocy_2=kinactOcy*Ocy_A

# Reaction: id = Ocy_I_bound_by_PTH

Ocy_I_bou=kbinOcyPT*Ocy_I*PTH^2/(100^2+PTH^2)

# Reaction: id = Ocy_I_PTH_release

Ocy_I_P_1=krelOcyPT*Ocy_I_PTH

# Reaction: id = Ocy_apoptosis

Ocy_apopt=kdeathOcy*Ocy_I

# Reaction: id = Sost_secretion

Sost_secr=ksecSost*Ocy_I

# Reaction: id = Sost_degradation

Sost_degr=kdegSost*Sost

# Reaction: id = Wnt_activation

Wnt_activ=kactWnt*Wnt_I

# Reaction: id = Wnt_activation_by_PTH

Wnt_act_1=kactWntPt*Wnt_I*Ob_m_PTH

# Reaction: id = Inactivation_of_Wnt_by_Sost

Inactivat=kinactWnt*Wnt_A*Sost^2/(50^2+Sost^2)

# Reaction: id = MSC_differentiation_to_Ob_pro

MSC_diffe=kdiffMSC*MSC*Wnt_A^2/(50^2+Wnt_A^2)

# Reaction: id = Osteoblast_progenitor_differentiation_by_Tgfb

Osteobl_1=kdiffObpr*Ob_pro*Tgfb_A^2/(50^2+Tgfb_A^2)

# Reaction: id = Ob_precursor_differentiation

Ob_precur=kdiffObP*Ob_p

# Reaction: id = Ob_p_binding_by_PTH

Ob_p_bind=kbinObpPT*Ob_p*PTH^2/(100^2+PTH^2)

# Reaction: id = Ob_p_PTH_release

Ob_p_PTH_=krelObpPT*Ob_p_PTH

# Reaction: id = Ob_p_Tgfb_binding

Ob_p_Tg_1=kbinObpTg*Ob_p*Tgfb_A

# Reaction: id = Ob_p_Tgfb_release

Ob_p_Tg_2=krelObpTg*Ob_p_Tgfb

# Reaction: id = Ob_maturation_to_Ocy

Ob_matura=kmatOb*Ob_m

# Reaction: id = Ob_maturation_to_Ocy_by_Tgfb

Ob_matu_1=kmatObTgf*Ob_m*Tgfb_A^2/(50^2+Tgfb_A^2)

# Reaction: id = Ob_m_bound_by_PTH

Ob_m_boun=kbinObmPT*Ob_m*PTH^2/(100^2+PTH^2)

# Reaction: id = Ob_m_PTH_release

Ob_m_PTH_=krelObmPT*Ob_m_PTH

# Reaction: id = Ob_m_apoptosis

Ob_m_apop=kdeathOb*Ob_m*Bax^2/(50^2+Bax^2)

# Reaction: id = Ob_m_PTH_apoptosis

Ob_m_PT_1=kdeathOb*Ob_m_PTH*Bax^2/(50^2+Bax^2)

# Reaction: id = HSC_differentiation_to_Ocl_p

HSC_diffe=kdiffHSC*HSC*MCSF^2/(50^2+MCSF^2)

# Reaction: id = Ocl_p_apoptosis

Ocl_p_apo=kdeathO_1*Ocl_p

# Reaction: id = Ocl_p_RANKL_binding

Ocl_p_R_1=kbinOclpR*Ocl_p*RANKL

# Reaction: id = Ocl_p_RANKL_release

Ocl_p_R_2=krelOclpR*Ocl_p_RAN

# Reaction: id = Osteoclast_precursor_differentiation

Osteoclas=kdiffOclP*Ocl_p_RAN

# Reaction: id = RANKL_inhibition

RANKL_inh=kinhibRAN*OPG*RANKL

# Reaction: id = OPG_RANKL_dissociation

OPG_RAN_1=krelRANKL*OPG_RANKL

# Reaction: id = OPG_RANKL_degradation

OPG_RAN_2=kdegOPGRA*OPG_RANKL

# Reaction: id = Osteoclast_apoptosis

Osteocl_1=kdeathOcl*Ocl_m

# Reaction: id = RANKL_degradation

RANKL_deg=kdegRANKL*RANKL

# Reaction: id = OPG_degradation

OPG_degra=kdegOPG*OPG

# Reaction: id = MCSF_secretion_by_MSC

MCSF_secr=ksecMCSFb*MSC

# Reaction: id = MCSF_secretion_by_Ob_pro

MCSF_se_1=ksecMCS_3*Ob_pro

# Reaction: id = MCSF_secretion_by_Ob_p

MCSF_se_2=ksecMCS_2*Ob_p

# Reaction: id = MCSF_secretion_by_Ob_p_PTH

MCSF_se_3=ksecMCS_2*Ob_p_PTH

# Reaction: id = MCSF_secretion_by_Ob_m

MCSF_se_4=ksecMCS_1*Ob_m

# Reaction: id = MCSF_secretion_by_Ob_m_PTH

MCSF_se_5=ksecMCS_1*Ob_m_PTH

# Reaction: id = MCSF_degradation

MCSF_degr=kdegMCSF*MCSF

# Reaction: id = OPG_secretion_by_Ob_p

OPG_secre=ksecOPG_1*Ob_p

# Reaction: id = OPG_secretion_by_Ob_p_PTH

OPG_sec_1=ksecOPG_2*Ob_p_PTH

# Reaction: id = OPG_secretion_by_Ob_m

OPG_sec_2=ksecOPGby*Ob_m

# Reaction: id = RANKL_secretion_by_Ocy_A

RANKL_sec=ksecRAN_7*Ocy_A

# Reaction: id = RANKL_secretion_by_Ocy_I

RANKL_s_1=ksecRAN_8*Ocy_I

# Reaction: id = RANKL_secretion_by_MSCs

RANKL_s_2=ksecRANKL*MSC

# Reaction: id = RANKL_secretion_by_Ob_p

RANKL_s_3=ksecRAN_3*Ob_p

# Reaction: id = RANKL_secretion_by_Ob_p_Tgfb_A

RANKL_s_4=ksecRAN_6*Ob_p_Tgfb

# Reaction: id = RANKL_secretion_by_Ob_p_PTH

RANKL_s_5=ksecRAN_4*Ob_p_PTH

# Reaction: id = RANKL_secretion_by_Ob_pro

RANKL_s_6=ksecRAN_5*Ob_pro

# Reaction: id = RANKL_secretion_by_Ob_m

RANKL_s_7=ksecRAN_1*Ob_m

# Reaction: id = RANKL_secretion_by_Ob_m_PTH_enhanced

RANKL_s_8=ksecRAN_2*Ob_m_PTH

# Reaction: id = Tgfb_secretion_by_Obm

Tgfb_secr=ksecTgfb*Ob_m

# Reaction: id = Tgfb_activation

Tgfb_acti=kactTgfb*Tgfb_I*Ocl_m

# Reaction: id = Tgfb_degradation

Tgfb_degr=kdegTgfb*Tgfb_A

# Reaction: id = Tgfb_degradation_by_PTH

Tgfb_de_1=kdegTgfbP*Tgfb_A*Ob_m_PTH

# Reaction: id = PTH_production

PTH_produ=ksynPTH*Source

# Reaction: id = PTH_degradation

PTH_degra=kdegPTH*PTH

# Reaction: id = CREB_activation

CREB_acti=kactCreb*CREB*Ob_m_PTH^2/(100^2+Ob_m_PTH^2)

# Reaction: id = CREB_inactivation

CREB_inac=kinactCre*CREB_P

# Reaction: id = CREB_Runx2_binding

CREB_Ru_1=kbinCrebR*CREB_P*Runx2

# Reaction: id = CREB_Runx2_release

CREB_Ru_2=krelCrebR*CREB_Runx

# Reaction: id = Bcl2_synthesis

Bcl2_synt=ksynBcl2*CREB_Runx

# Reaction: id = Bcl2_degradation

Bcl2_degr=kdegBcl2*Bcl2

# Reaction: id = Bax_Bcl2_binding

Bax_Bcl2_=kbinBaxBc*Bax*Bcl2

# Reaction: id = Bax_Bcl2_release

Bax_Bcl_1=krelBaxBc*Bax_Bcl2

# Reaction: id = Runx2_synthesis

Runx2_syn=ksynRunx2*Source

# Reaction: id = Runx2_degradation_via_PTH

Runx2_deg=kdegRun_1*Runx2*Ob_m_PTH

# Reaction: id = Runx2_degradation

Runx2_d_1=kdegRunx2*Runx2

# Reaction: id = Bone_formation

Bone_form=kformBone*Ob_m

# Reaction: id = Bone_formation_Obm_PTH

Bone_fo_1=kformBone*Ob_m_PTH

# Reaction: id = Bone_degradation

Bone_degr=kdegBone*Ocl_m*Bone_1

# Reaction: id = Xsynthesis

Xsynthesi=ksynX*Source

# Species:   id = Bone, name = Bone, affected by kineticLaw

par Bone_1=2000.0
aux Bone_1=Bone_1
dBone_1/dt=( 1.0 * Bone_form) + ( 1.0 * Bone_fo_1) + (-1.0 * Bone_degr)

# Species:   id = HSC, name = HSC, affected by kineticLaw

init HSC=100.0
dHSC/dt=(-1.0 * HSC_diffe) + ( 1.0 * HSC_diffe)

# Species:   id = Ob_m, name = Ob_m, affected by kineticLaw

init Ob_m=0.0
dOb_m/dt=( 1.0 * Ob_precur) + (-1.0 * Ob_matura) + (-1.0 * Ob_matu_1) + (-1.0 * Ob_m_boun) + ( 1.0 * Ob_m_PTH_) + (-1.0 * Ob_m_apop) + (-1.0 * MCSF_se_4) + ( 1.0 * MCSF_se_4) + (-1.0 * OPG_sec_2) + ( 1.0 * OPG_sec_2) + (-1.0 * RANKL_s_7) + ( 1.0 * RANKL_s_7) + (-1.0 * Tgfb_secr) + ( 1.0 * Tgfb_secr) + (-1.0 * Bone_form) + ( 1.0 * Bone_form)

# Species:   id = Ob_p, name = Ob_p, affected by kineticLaw

init Ob_p=0.0
dOb_p/dt=( 1.0 * Osteobl_1) + (-1.0 * Ob_precur) + (-1.0 * Ob_p_bind) + ( 1.0 * Ob_p_PTH_) + (-1.0 * Ob_p_Tg_1) + ( 1.0 * Ob_p_Tg_2) + (-1.0 * MCSF_se_2) + ( 1.0 * MCSF_se_2) + (-1.0 * OPG_secre) + ( 1.0 * OPG_secre) + (-1.0 * RANKL_s_3) + ( 1.0 * RANKL_s_3)

# Species:   id = Ob_p_Tgfb_A, name = Ob_p_Tgfb_A, affected by kineticLaw

par Ob_p_Tgfb=0.0
aux Ob_p_Tgfb=Ob_p_Tgfb
dOb_p_Tgfb/dt=( 1.0 * Ob_p_Tg_1) + (-1.0 * Ob_p_Tg_2) + (-1.0 * RANKL_s_4) + ( 1.0 * RANKL_s_4)

# Species:   id = Ob_pro, name = Ob_pro, affected by kineticLaw

init Ob_pro=0.0
dOb_pro/dt=( 1.0 * MSC_diffe) + (-1.0 * Osteobl_1) + (-1.0 * MCSF_se_1) + ( 1.0 * MCSF_se_1) + (-1.0 * RANKL_s_6) + ( 1.0 * RANKL_s_6)

# Species:   id = Ocl_m, name = Ocl_m, affected by kineticLaw

init Ocl_m=0.0
dOcl_m/dt=( 1.0 * Osteoclas) + (-1.0 * Osteocl_1) + (-1.0 * Tgfb_acti) + ( 1.0 * Tgfb_acti) + (-1.0 * Bone_degr) + ( 1.0 * Bone_degr)

# Species:   id = Ocl_p, name = Ocl_p, affected by kineticLaw

init Ocl_p=0.0
dOcl_p/dt=( 1.0 * HSC_diffe) + (-1.0 * Ocl_p_apo) + (-1.0 * Ocl_p_R_1) + ( 1.0 * Ocl_p_R_2)

# Species:   id = Ocl_p_RANKL, name = Ocl_p_RANKL, affected by kineticLaw

par Ocl_p_RAN=0.0
aux Ocl_p_RAN=Ocl_p_RAN
dOcl_p_RAN/dt=( 1.0 * Ocl_p_R_1) + (-1.0 * Ocl_p_R_2) + (-1.0 * Osteoclas)

# Species:   id = Ocy_A, name = Ocy_A, affected by kineticLaw

init Ocy_A=0.0
dOcy_A/dt=( 1.0 * Osteocyte) + ( 1.0 * Osteocy_1) + (-1.0 * Osteocy_2) + (-1.0 * RANKL_sec) + ( 1.0 * RANKL_sec)

# Species:   id = Ocy_I, name = Ocy_I, affected by kineticLaw

init Ocy_I=1800.0
dOcy_I/dt=(-1.0 * Osteocyte) + ( 1.0 * Osteocy_2) + (-1.0 * Ocy_I_bou) + ( 1.0 * Ocy_I_P_1) + (-1.0 * Ocy_apopt) + (-1.0 * Sost_secr) + ( 1.0 * Sost_secr) + ( 1.0 * Ob_matura) + ( 1.0 * Ob_matu_1) + (-1.0 * RANKL_s_1) + ( 1.0 * RANKL_s_1)

# Species:   id = Ocy_I_PTH, name = Ocy_I_PTH, affected by kineticLaw

init Ocy_I_PTH=0.0
dOcy_I_PTH/dt=(-1.0 * Osteocy_1) + ( 1.0 * Ocy_I_bou) + (-1.0 * Ocy_I_P_1)

# Species:   id = MSC, name = MSC, affected by kineticLaw

init MSC=100.0
dMSC/dt=(-1.0 * MSC_diffe) + ( 1.0 * MSC_diffe) + (-1.0 * MCSF_secr) + ( 1.0 * MCSF_secr) + (-1.0 * RANKL_s_2) + ( 1.0 * RANKL_s_2)

# Species:   id = LOAD, name = LOAD, affected by kineticLaw
# Species is changed by 2 event(s)
init LOAD=0.0
dLOAD/dt=(-1.0 * Unloading) + (-1.0 * Osteocyte) + ( 1.0 * Osteocyte)

# Species:   id = MCSF, name = MCSF, affected by kineticLaw

init MCSF=5.0
dMCSF/dt=(-1.0 * HSC_diffe) + ( 1.0 * HSC_diffe) + ( 1.0 * MCSF_secr) + ( 1.0 * MCSF_se_1) + ( 1.0 * MCSF_se_2) + ( 1.0 * MCSF_se_3) + ( 1.0 * MCSF_se_4) + ( 1.0 * MCSF_se_5) + (-1.0 * MCSF_degr)

# Species:   id = Ob_m_PTH, name = Ob_m_PTH, affected by kineticLaw

init Ob_m_PTH=0.0
dOb_m_PTH/dt=(-1.0 * Wnt_act_1) + ( 1.0 * Wnt_act_1) + ( 1.0 * Ob_m_boun) + (-1.0 * Ob_m_PTH_) + (-1.0 * Ob_m_PT_1) + (-1.0 * MCSF_se_5) + ( 1.0 * MCSF_se_5) + (-1.0 * RANKL_s_8) + ( 1.0 * RANKL_s_8) + (-1.0 * Tgfb_de_1) + ( 1.0 * Tgfb_de_1) + (-1.0 * CREB_acti) + ( 1.0 * CREB_acti) + (-1.0 * Runx2_deg) + ( 1.0 * Runx2_deg) + (-1.0 * Bone_fo_1) + ( 1.0 * Bone_fo_1)

# Species:   id = Ob_p_PTH, name = Ob_p_PTH, affected by kineticLaw

init Ob_p_PTH=0.0
dOb_p_PTH/dt=( 1.0 * Ob_p_bind) + (-1.0 * Ob_p_PTH_) + (-1.0 * MCSF_se_3) + ( 1.0 * MCSF_se_3) + (-1.0 * OPG_sec_1) + ( 1.0 * OPG_sec_1) + (-1.0 * RANKL_s_5) + ( 1.0 * RANKL_s_5)

# Species:   id = OPG, name = OPG, affected by kineticLaw

init OPG=0.0
dOPG/dt=(-1.0 * RANKL_inh) + ( 1.0 * OPG_RAN_1) + (-1.0 * OPG_degra) + ( 1.0 * OPG_secre) + ( 1.0 * OPG_sec_1) + ( 1.0 * OPG_sec_2)

# Species:   id = OPG_RANKL, name = OPG_RANKL, affected by kineticLaw

init OPG_RANKL=0.0
dOPG_RANKL/dt=( 1.0 * RANKL_inh) + (-1.0 * OPG_RAN_1) + (-1.0 * OPG_RAN_2)

# Species:   id = PTH, name = PTH, affected by kineticLaw
# Species is changed by 2 event(s)
init PTH=170.0
dPTH/dt=( 1.0 * Osteocy_1) + (-1.0 * Ocy_I_bou) + ( 1.0 * Ocy_I_P_1) + (-1.0 * Ob_p_bind) + ( 1.0 * Ob_p_PTH_) + (-1.0 * Ob_m_boun) + ( 1.0 * Ob_m_PTH_) + ( 1.0 * Ob_m_PT_1) + ( 1.0 * PTH_produ) + (-1.0 * PTH_degra)

# Species:   id = RANKL, name = RANKL, affected by kineticLaw

init RANKL=0.0
dRANKL/dt=(-1.0 * Ocl_p_R_1) + ( 1.0 * Ocl_p_R_2) + (-1.0 * RANKL_inh) + ( 1.0 * OPG_RAN_1) + (-1.0 * RANKL_deg) + ( 1.0 * RANKL_sec) + ( 1.0 * RANKL_s_1) + ( 1.0 * RANKL_s_2) + ( 1.0 * RANKL_s_3) + ( 1.0 * RANKL_s_4) + ( 1.0 * RANKL_s_5) + ( 1.0 * RANKL_s_6) + ( 1.0 * RANKL_s_7) + ( 1.0 * RANKL_s_8)

# Species:   id = Sost, name = Sost, affected by kineticLaw

init Sost=0.0
dSost/dt=( 1.0 * Sost_secr) + (-1.0 * Sost_degr) + (-1.0 * Inactivat) + ( 1.0 * Inactivat)

# Species:   id = Tgfb_A, name = Tgfb_A, affected by kineticLaw

init Tgfb_A=5.0
dTgfb_A/dt=(-1.0 * Osteobl_1) + ( 1.0 * Osteobl_1) + (-1.0 * Ob_p_Tg_1) + ( 1.0 * Ob_p_Tg_2) + (-1.0 * Ob_matu_1) + ( 1.0 * Ob_matu_1) + ( 1.0 * Tgfb_acti) + (-1.0 * Tgfb_degr) + (-1.0 * Tgfb_de_1)

# Species:   id = Tgfb_I, name = Tgfb_I, affected by kineticLaw

init Tgfb_I=500.0
dTgfb_I/dt=( 1.0 * Tgfb_secr) + (-1.0 * Tgfb_acti)

# Species:   id = Wnt_A, name = Wnt_A, affected by kineticLaw

init Wnt_A=0.0
dWnt_A/dt=( 1.0 * Wnt_activ) + ( 1.0 * Wnt_act_1) + (-1.0 * Inactivat) + (-1.0 * MSC_diffe) + ( 1.0 * MSC_diffe)

# Species:   id = Wnt_I, name = Wnt_I, affected by kineticLaw

init Wnt_I=200.0
dWnt_I/dt=(-1.0 * Wnt_activ) + (-1.0 * Wnt_act_1) + ( 1.0 * Inactivat)

# Species:   id = Source, name = Source, constant
par Source=1.0


# Species:   id = Sink, name = Sink, constant
par Sink=1.0


# Species:   id = X, name = X, affected by kineticLaw
# Species is changed by 1 event(s)
init X=0.0
dX/dt=( 1.0 * Xsynthesi)

# Species:   id = newbone, name = newbone, affected by kineticLaw

init newbone=0.0
dnewbone/dt=( 1.0 * Bone_form) + ( 1.0 * Bone_fo_1)

# Species:   id = Bax, name = Bax, affected by kineticLaw

init Bax=100.0
dBax/dt=(-1.0 * Ob_m_apop) + ( 1.0 * Ob_m_apop) + (-1.0 * Ob_m_PT_1) + ( 1.0 * Ob_m_PT_1) + (-1.0 * Bax_Bcl2_) + ( 1.0 * Bax_Bcl_1)

# Species:   id = Bax_Bcl2, name = Bax_Bcl2, affected by kineticLaw

init Bax_Bcl2=0.0
dBax_Bcl2/dt=( 1.0 * Bax_Bcl2_) + (-1.0 * Bax_Bcl_1)

# Species:   id = Bcl2, name = Bcl2, affected by kineticLaw

init Bcl2=0.0
dBcl2/dt=( 1.0 * Bcl2_synt) + (-1.0 * Bcl2_degr) + (-1.0 * Bax_Bcl2_) + ( 1.0 * Bax_Bcl_1)

# Species:   id = CREB, name = CREB, affected by kineticLaw

init CREB=100.0
dCREB/dt=(-1.0 * CREB_acti) + ( 1.0 * CREB_inac)

# Species:   id = CREB_P, name = CREB_P, affected by kineticLaw

init CREB_P=0.0
dCREB_P/dt=( 1.0 * CREB_acti) + (-1.0 * CREB_inac) + (-1.0 * CREB_Ru_1) + ( 1.0 * CREB_Ru_2)

# Species:   id = CREB_Runx2, name = CREB_Runx2, affected by kineticLaw

par CREB_Runx=0.0
aux CREB_Runx=CREB_Runx
dCREB_Runx/dt=( 1.0 * CREB_Ru_1) + (-1.0 * CREB_Ru_2) + (-1.0 * Bcl2_synt) + ( 1.0 * Bcl2_synt)

# Species:   id = Runx2, name = Runx2, affected by kineticLaw

init Runx2=10.0
dRunx2/dt=(-1.0 * CREB_Ru_1) + ( 1.0 * CREB_Ru_2) + ( 1.0 * Runx2_syn) + (-1.0 * Runx2_deg) + (-1.0 * Runx2_d_1)

# event : AddLOAD1
AddLOAD1=if (X > 300) then (1.5) else (0.2)
global 1 {AddLOAD1 - 1.1} {LOAD=1}

# event : AddLOAD2
AddLOAD2=if (X > 600) then (1.5) else (0.2)
global 1 {AddLOAD2 - 1.1} {LOAD=1}

# event : AddPTH1
AddPTH1=if (X > 625) then (1.5) else (0.2)
global 1 {AddPTH1 - 1.1} {PTH=150}

# event : AddPTH2
AddPTH2=if (X > 1000) then (1.5) else (0.2)
global 1 {AddPTH2 - 1.1} {PTH=170;X=0}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

