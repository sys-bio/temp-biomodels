
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Mukandavire2020 - SEIR model of early COVID-19 transmission in South Africa
#
# isDescribedBy http://identifiers.org/pubmed/32706790
# is http://identifiers.org/biomodels.db/MODEL2012010001
# is http://identifiers.org/biomodels.db/BIOMD0000000978
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_reaction, name = Rate Law for reaction
Rate_Law_(beta,S,I,N,epsilon)=((1-epsilon)*beta*S*I/N)


# Compartment: id = South_Africa, name = South_Africa, constant
par South_Afr=1.0

# Parameter:   id =  beta, name = beta, constant
par beta=1.3

# Parameter:   id =  epsilon, name = epsilon
par epsilon=0.0

# Parameter:   id =  sigma, name = sigma, constant
par sigma=0.311

# Parameter:   id =  gamma, name = gamma, constant
par gamma=0.3389830508

# Parameter:   id =  N, name = N, constant
par N=3.6196938E7

# Parameter:   id =  Event_trigger, name = Event_trigger, constant
par Event_tri=1.0

# Parameter:   id =  Cumulative_cases, name = Cumulative_cases, defined by a Rule

# assignmentRule: variable = Cumulative_cases
Cumulativ=Infected+Recovered
aux Cumulativ=Cumulativ

# Reaction: id = Susceptible_to_Exposed, name = Susceptible_to_Exposed

Suscept_1=South_Afr*Rate_Law_(beta, Susceptib, Infected, N, epsilon)

# Reaction: id = Exposed_to_Infected, name = Exposed_to_Infected

Exposed_t=South_Afr*sigma*Exposed

# Reaction: id = Infected_to_Recovered, name = Infected_to_Recovered

Infected_=South_Afr*gamma*Infected

# Species:   id = Susceptible, name = Susceptible, affected by kineticLaw

par Susceptib=3.6196938E7
aux Susceptib=Susceptib
dSusceptib/dt=(1/(South_Afr))*((-1.0 * Suscept_1))

# Species:   id = Exposed, name = Exposed, affected by kineticLaw

init Exposed=0.0
dExposed/dt=(1/(South_Afr))*(( 1.0 * Suscept_1) + (-1.0 * Exposed_t))

# Species:   id = Infected, name = Infected, affected by kineticLaw

init Infected=2.0
dInfected/dt=(1/(South_Afr))*(( 1.0 * Exposed_t) + (-1.0 * Infected_))

# Species:   id = Recovered, name = Recovered, affected by kineticLaw

init Recovered=0.0
dRecovered/dt=(1/(South_Afr))*(( 1.0 * Infected_))

# event : Lockdown
Lockdown=if (t > 23) then (1.5) else (0.2)
global 1 {Lockdown - 1.1} {epsilon=Event_tri*0.8031}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

