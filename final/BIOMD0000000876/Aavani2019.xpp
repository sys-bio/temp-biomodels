
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Aavani2019 - The role of CD4 T cells in immune system activation and viral reproduction in a simple model for HIV infection
#
# isDescribedBy http://identifiers.org/doi/10.1016/j.apm.2019.05.028
# isDerivedFrom http://identifiers.org/pubmed/10588728
# is http://identifiers.org/biomodels.db/MODEL1911270003
# is http://identifiers.org/biomodels.db/BIOMD0000000876
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_CD4_Uninfected_Growth, name = Function_for_CD4_Uninfected_Growth
Function_(lambda,C_ast)=(lambda*C_ast)


# FunctionDefinition id = Function_for_CD4_Infected_Clearance_CTL, name = Function_for_CD4_Infected_Clearance_CTL
Functio_1(rho,F,I)=(rho*F*I)


# FunctionDefinition id = Function_for_CD4_Uninfected_Infection, name = Function_for_CD4_Uninfected_Infection
Functio_2(beta,C,V)=(beta*C*V)


# FunctionDefinition id = Function_for_Virus_Production, name = Function_for_Virus_Production
Functio_3(a,N,I)=(a*N*I)


# FunctionDefinition id = Function_for_CTL_Stimulation, name = Function_for_CTL_Stimulation
Functio_4(e,C,V,F,C_ast)=(e*C*V*F/(C_ast+F))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  C_ast, name = C_ast, constant
par C_ast=1000.0

# Parameter:   id =  N, name = N, constant
par N=2000.0

# Parameter:   id =  beta, name = beta, constant
par beta=5.75E-5

# Parameter:   id =  lambda, name = lambda, constant
par lambda=0.01

# Parameter:   id =  a, name = a, constant
par a=1.0

# Parameter:   id =  k, name = k, constant
par k=23.0

# Parameter:   id =  d_0, name = d_0, constant
par d_0=0.001

# Parameter:   id =  a_L, name = a_L, constant
par a_L=0.1

# Parameter:   id =  rho, name = rho, constant
par rho=1.0

# Parameter:   id =  b, name = b, constant
par b=0.1

# Parameter:   id =  e, name = e, constant
par e=0.001

# Reaction: id = CD4_Uninfected_Growth, name = CD4_Uninfected_Growth

CD4_Uninf=compartme*Function_(lambda, C_ast)

# Reaction: id = CD4_Uninfected_Death, name = CD4_Uninfected_Death

CD4_Uni_1=compartme*lambda*C_Uninfec

# Reaction: id = CD4_Infected_Death, name = CD4_Infected_Death

CD4_Infec=compartme*a*I_Infecte

# Reaction: id = CTL_Death, name = CTL_Death

CTL_Death=compartme*b*F_CTL

# Reaction: id = Virus_Degradation, name = Virus_Degradation

Virus_Deg=compartme*k*V_Virus

# Reaction: id = CD4_Uninfected_Infection, name = CD4_Uninfected_Infection

CD4_Uni_2=compartme*Functio_2(beta, C_Uninfec, V_Virus)

# Reaction: id = CD4_Infected_Clearance_CTL, name = CD4_Infected_Clearance_CTL

CD4_Inf_1=compartme*Functio_1(rho, F_CTL, I_Infecte)

# Reaction: id = CTL_Stimulation, name = CTL_Stimulation

CTL_Stimu=compartme*Functio_4(e, C_Uninfec, V_Virus, F_CTL, C_ast)

# Reaction: id = Virus_Production, name = Virus_Production

Virus_Pro=compartme*Functio_3(a, N, I_Infecte)

# Species:   id = C_Uninfected_CD4, name = C_Uninfected_CD4, affected by kineticLaw

par C_Uninfec=1000.0
aux C_Uninfec=C_Uninfec
dC_Uninfec/dt=(1/(compartme))*(( 1.0 * CD4_Uninf) + (-1.0 * CD4_Uni_1) + (-1.0 * CD4_Uni_2))

# Species:   id = I_Infected_CD4, name = I_Infected_CD4, affected by kineticLaw

par I_Infecte=1.0
aux I_Infecte=I_Infecte
dI_Infecte/dt=(1/(compartme))*((-1.0 * CD4_Infec) + ( 1.0 * CD4_Uni_2) + (-1.0 * CD4_Inf_1))

# Species:   id = F_CTL, name = F_CTL, affected by kineticLaw

init F_CTL=1.0
dF_CTL/dt=(1/(compartme))*((-1.0 * CTL_Death) + ( 1.0 * CTL_Stimu))

# Species:   id = V_Virus, name = V_Virus, affected by kineticLaw

init V_Virus=200.0
dV_Virus/dt=(1/(compartme))*((-1.0 * Virus_Deg) + ( 1.0 * Virus_Pro))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

