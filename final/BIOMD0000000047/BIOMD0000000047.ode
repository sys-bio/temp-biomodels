
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Oxhamre2005_Ca_oscillation
#
# is http://identifiers.org/biomodels.db/MODEL6623415355
# is http://identifiers.org/biomodels.db/BIOMD0000000047
# isDescribedBy http://identifiers.org/pubmed/15596518
# isDerivedFrom http://identifiers.org/pubmed/11874447
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = Cytosol, name = Cytosol, constant
par Cytosol=1.0

# Compartment: id = Endoplasmic_Reticulum, name = Endoplasmic_Reticulum, constant
par Endoplasm=1.0

# Parameter:   id =  n, name = n, defined by a Rule

# Parameter:   id =  n0, name = n0, constant
par n0=1.0

# Parameter:   id =  kbN, name = kbN, constant
par kbN=0.5

# Parameter:   id =  kappa, name = kappa, constant
par kappa=5.0

# Parameter:   id =  p1, name = p1, defined by a Rule

# Parameter:   id =  p11, name = p11, constant
par p11=0.2

# Parameter:   id =  p12, name = p12, constant
par p12=0.8

# Parameter:   id =  K1, name = K1, constant
par K1=5.0

# Parameter:   id =  p2, name = p2, defined by a Rule

# Parameter:   id =  K2, name = K2, constant
par K2=0.7

# Parameter:   id =  p3, name = p3, defined by a Rule

# Parameter:   id =  k31, name = k31, constant
par k31=0.5

# Parameter:   id =  K3, name = K3, constant
par K3=0.7

# assignmentRule: variable = n
n=n0*(exp((-kbN)*t)+kappa*(1-exp((-kbN)*t)))
aux n=n

# assignmentRule: variable = p1
p1=p11+p12*n/(K1+n)
aux p1=p1

# assignmentRule: variable = p2
p2=Ca_Cyt/(K2+Ca_Cyt)
aux p2=p2

# rateRule: variable = p3
init p3=0.95
dp3/dt=-k31*Ca_Cyt*p3+k31*K3*(1-p3)

# Reaction: id = Jch
# Local Parameter:   id =  Fch_0, name = Fch_0
par Fch_0=8.0


Jch=Fch_0*p1*p2*p3

# Reaction: id = Jleak
# Local Parameter:   id =  Fleak, name = Fleak
par Fleak=0.5


Jleak=Fleak

# Reaction: id = Jpump
# Local Parameter:   id =  Fpump_0, name = Fpump_0
par Fpump_0=2.0

# Local Parameter:   id =  Kpump, name = Kpump
par Kpump=0.1


Jpump=Fpump_0*Ca_Cyt/(Kpump+Ca_Cyt)

# Species:   id = CaER, name = CaER, affected by kineticLaw

init CaER=0.0
dCaER/dt=(1/(Endoplasm))*((-1.0 * Jch) + (-1.0 * Jleak) + ( 1.0 * Jpump))

# Species:   id = Ca_Cyt, name = Ca_Cyt, affected by kineticLaw

init Ca_Cyt=0.0
dCa_Cyt/dt=(1/(Cytosol))*(( 1.0 * Jch) + ( 1.0 * Jleak) + (-1.0 * Jpump))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

