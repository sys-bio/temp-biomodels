
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Kuznetsov1994 - Nonlinear dynamics of immunogenic tumors
#
# isDescribedBy http://identifiers.org/pubmed/8186756
# is http://identifiers.org/biomodels.db/MODEL1907230002
# is http://identifiers.org/biomodels.db/BIOMD0000000762
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_EC_Tumor_Complex_Formation, name = Function_for_EC_Tumor_Complex_Formation
Function_(m,E,T)=(m*E*T)


# FunctionDefinition id = Function_for_Tumor_Growth, name = Function_for_Tumor_Growth
Functio_1(a,T)=(a*T)


# FunctionDefinition id = Function_for_Tumor_Killing, name = Function_for_Tumor_Killing
Functio_2(n,E,T)=(n*E*T)


# FunctionDefinition id = Function_for_EC_Accumulation, name = Function_for_EC_Accumulation
Functio_3(p,E,T,g)=(p*E*T/(g+T))


# FunctionDefinition id = Function_for_Tumor_Growth_Inhibition, name = Function_for_Tumor_Growth_Inhibition
Functio_4(a,b,T)=(a*b*T^2)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  p, name = p, constant
par p=0.1245

# Parameter:   id =  g, name = g, constant
par g=2.019E7

# Parameter:   id =  m, name = m, constant
par m=3.422E-10

# Parameter:   id =  n, name = n, constant
par n=1.101E-7

# Parameter:   id =  d, name = d, constant
par d=0.0412

# Parameter:   id =  s, name = s, constant
par s=13000.0

# Parameter:   id =  a, name = a, constant
par a=0.18

# Parameter:   id =  b, name = b, constant
par b=2.0E-9

# Reaction: id = EC_Passive_Accumulation, name = EC_Passive_Accumulation

EC_Passiv=compartme*Constant_(s)

# Reaction: id = EC_Accumulation, name = EC_Accumulation

EC_Accumu=compartme*Functio_3(p, E, T_renamed, g)

# Reaction: id = Tumor_Growth, name = Tumor_Growth

Tumor_Gro=compartme*Functio_1(a, T_renamed)

# Reaction: id = Tumor_Growth_Inhibition, name = Tumor_Growth_Inhibition

Tumor_G_1=compartme*Functio_4(a, b, T_renamed)

# Reaction: id = Tumor_Killing, name = Tumor_Killing

Tumor_Kil=compartme*Functio_2(n, E, T_renamed)

# Reaction: id = EC_Tumor_Complex_Formation, name = EC_Tumor_Complex_Formation

EC_Tumor_=compartme*Function_(m, E, T_renamed)

# Reaction: id = EC_Elimination, name = EC_Elimination

EC_Elimin=compartme*d*E

# Species:   id = E, name = Effector Cells, affected by kineticLaw

init E=320000.0
dE/dt=(1/(compartme))*(( 1.0 * EC_Passiv) + ( 1.0 * EC_Accumu) + (-1.0 * EC_Tumor_) + (-1.0 * EC_Elimin))

# Species:   id = T, name = Tumor Cells, affected by kineticLaw

par T_renamed=5000000.0
aux T_renamed=T_renamed
dT_renamed/dt=(1/(compartme))*(( 1.0 * Tumor_Gro) + (-1.0 * Tumor_G_1) + (-1.0 * Tumor_Kil))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

