
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Wodarz2001 - Viruses as antitumor weapons
#
# is http://identifiers.org/biomodels.db/MODEL2109090001
# is http://identifiers.org/biomodels.db/BIOMD0000001043
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_x_increase, name = Rate Law for x increase
Rate_Law_(r,x,y,k)=(r*x*(1-(x+y)/k))


# FunctionDefinition id = Rate_Law_for_y_increase, name = Rate Law for y increase
Rate_La_1(s,y,x,k)=(s*y*(1-(x+y)/k))


# FunctionDefinition id = Rate_Law_for_y_decrease, name = Rate Law for y decrease
Rate_La_2(a,y,p_v,z_v)=(a*y+p_v*y*z_v)


# FunctionDefinition id = Rate_Law_for_x_to_y, name = Rate Law for x to y
Rate_La_3(beta,x,y)=(beta*x*y)


# FunctionDefinition id = Rate_Law_for_z_v_increase, name = Rate Law for z_v increase
Rate_La_4(c_v,y,z_v)=(c_v*y*z_v)


# Compartment: id = Tumor_microenvironment, name = Tumor_microenvironment, constant
par Tumor_mic=1.0

# Parameter:   id =  r, name = r, constant
par r=0.5

# Parameter:   id =  k, name = k, constant
par k=17.0

# Parameter:   id =  d, name = d, constant
par d=0.1

# Parameter:   id =  beta, name = beta, constant
par beta=0.5

# Parameter:   id =  s, name = s, constant
par s=0.0

# Parameter:   id =  a, name = a, constant
par a=0.1

# Parameter:   id =  p_v, name = p_v, constant
par p_v=0.0

# Parameter:   id =  c_v, name = c_v, constant
par c_v=0.0

# Parameter:   id =  b, name = b, constant
par b=0.0

# assignmentRule: variable = overall_tumor_size
overall_t=uninfecte+infected_
aux overall_t=overall_t

# Reaction: id = uninfected_tumor_growth, name = uninfected_tumor_growth

uninfec_1=Tumor_mic*Rate_Law_(r, uninfecte, infected_, k)

# Reaction: id = uninfected_tumor_death, name = uninfected_tumor_death

uninfec_2=Tumor_mic*d*uninfecte

# Reaction: id = infected_tumor_growth, name = infected_tumor_growth

infecte_1=Tumor_mic*Rate_La_1(s, infected_, uninfecte, k)

# Reaction: id = infected_tumor_death, name = infected_tumor_death

infecte_2=Tumor_mic*Rate_La_2(a, infected_, p_v, virus_spe)

# Reaction: id = tumor_infection, name = tumor_infection

tumor_inf=Tumor_mic*Rate_La_3(beta, uninfecte, infected_)

# Reaction: id = virus_specific_CTL_expansion, name = virus-specific_CTL_expansion

virus_s_1=Tumor_mic*Rate_La_4(c_v, infected_, virus_spe)

# Reaction: id = virus_specific_CTLs_decay, name = virus-specific_CTLs_decay

virus_s_2=Tumor_mic*b*virus_spe

# Species:   id = uninfected_tumor_cells, name = uninfected_tumor_cells, affected by kineticLaw

par uninfecte=0.01
aux uninfecte=uninfecte
duninfecte/dt=(1/(Tumor_mic))*(( 1.0 * uninfec_1) + (-1.0 * uninfec_2) + (-1.0 * tumor_inf))

# Species:   id = infected_tumor_cells, name = infected_tumor_cells, affected by kineticLaw

par infected_=1.0E-4
aux infected_=infected_
dinfected_/dt=(1/(Tumor_mic))*(( 1.0 * infecte_1) + (-1.0 * infecte_2) + ( 1.0 * tumor_inf))

# Species:   id = virus_specific_CTLs, name = virus-specific_CTLs, affected by kineticLaw
# Species is changed by 1 event(s)
par virus_spe=0.0
aux virus_spe=virus_spe
dvirus_spe/dt=(1/(Tumor_mic))*(( 1.0 * virus_s_1) + (-1.0 * virus_s_2))

# Species:   id = overall_tumor_size, name = overall_tumor_size, involved in a rule 

# event : virotherapy
virothera=if (t == 20) then (1.5) else (0.2)
global 1 {virothera - 1.1} {virus_specific_CTLs=0.001}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

