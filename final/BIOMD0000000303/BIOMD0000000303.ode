
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Liu2011_Complement_System
#
# is http://identifiers.org/biomodels.db/MODEL1101260000
# is http://identifiers.org/biomodels.db/BIOMD0000000303
# isDescribedBy http://identifiers.org/pubmed/21283780
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_1, name = my-MM
function_(k,E,S,Km)=(k*E*S/(Km+S))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  ka01_1, name = ka01_1, constant
par ka01_1=0.0275999

# Parameter:   id =  ka01_2, name = ka01_2, constant
par ka01_2=0.0109

# Parameter:   id =  ka02_1, name = ka02_1, constant
par ka02_1=7.4E-4

# Parameter:   id =  ka02_2, name = ka02_2, constant
par ka02_2=0.0011

# Parameter:   id =  ka03_1, name = ka03_1, constant
par ka03_1=2.0

# Parameter:   id =  ka04_1, name = ka04_1, constant
par ka04_1=10.5

# Parameter:   id =  kc01_1, name = kc01_1, constant
par kc01_1=0.64564661669102

# Parameter:   id =  kc01_2, name = kc01_2, constant
par kc01_2=0.194551104058408

# Parameter:   id =  kc02, name = kc02, constant
par kc02=5.91152775857994E-4

# Parameter:   id =  kc03_1, name = kc03_1, constant
par kc03_1=0.414004459949002

# Parameter:   id =  kc03_2, name = kc03_2, constant
par kc03_2=0.99647572245388

# Parameter:   id =  kc04_1, name = kc04_1, constant
par kc04_1=0.977836567576895

# Parameter:   id =  ka03_2, name = ka03_2, constant
par ka03_2=500.0

# Parameter:   id =  ka04_2, name = ka04_2, constant
par ka04_2=2500.0

# Parameter:   id =  kd02_2, name = kd02_2, constant
par kd02_2=0.1

# Parameter:   id =  kd02_1, name = kd02_1, constant
par kd02_1=0.0368010796682635

# Parameter:   id =  kd03_1, name = kd03_1, constant
par kd03_1=66.3776807395383

# Parameter:   id =  kd03_2, name = kd03_2, constant
par kd03_2=829.115813389061

# Parameter:   id =  kb01_1, name = kb01_1, constant
par kb01_1=0.091011109910329

# Parameter:   id =  kb01_2, name = kb01_2, constant
par kb01_2=0.0508205528375529

# Parameter:   id =  kb02_1, name = kb02_1, constant
par kb02_1=0.0368010796682635

# Parameter:   id =  kb02_2, name = kb02_2, constant
par kb02_2=0.1

# Parameter:   id =  kb03_1, name = kb03_1, constant
par kb03_1=66.3776807395383

# Parameter:   id =  kb03_2, name = kb03_2, constant
par kb03_2=829.115813389061

# Parameter:   id =  kb04_1, name = kb04_1, constant
par kb04_1=1.1

# Parameter:   id =  kb04_2, name = kb04_2, constant
par kb04_2=2000.0

# Parameter:   id =  kc04_2, name = kc04_2, constant
par kc04_2=0.199162432258527

# Parameter:   id =  kd01_1, name = kd01_1, constant
par kd01_1=7.07E-5

# Parameter:   id =  kd01_2, name = kd01_2, constant
par kd01_2=7.23E-5

# Parameter:   id =  kd04_1, name = kd04_1, constant
par kd04_1=1.1

# Parameter:   id =  kd04_2, name = kd04_2, constant
par kd04_2=2000.0

# Parameter:   id =  ke01_1, name = ke01_1, constant
par ke01_1=7.07E-5

# Parameter:   id =  ke01_2, name = ke01_2, constant
par ke01_2=1.0E-4

# Parameter:   id =  ke02_1, name = ke02_1, constant
par ke02_1=7.4E-4

# Parameter:   id =  ke02_2, name = ke02_2, constant
par ke02_2=0.0011

# Parameter:   id =  ke03_1, name = ke03_1, constant
par ke03_1=2.0

# Parameter:   id =  ke03_2, name = ke03_2, constant
par ke03_2=500.0

# Parameter:   id =  ke04_1, name = ke04_1, constant
par ke04_1=10.5

# Parameter:   id =  ke04_2, name = ke04_2, constant
par ke04_2=2500.0

# Parameter:   id =  kf01_1, name = kf01_1, constant
par kf01_1=0.969998277173144

# Parameter:   id =  kf01_2, name = kf01_2, constant
par kf01_2=0.069020578737621

# Parameter:   id =  kf02_1, name = kf02_1, constant
par kf02_1=0.969998277173144

# Parameter:   id =  kf02_2, name = kf02_2, constant
par kf02_2=0.069020578737621

# Parameter:   id =  kf03, name = kf03, constant
par kf03=0.0613537204215846

# Parameter:   id =  kf04_2, name = kf04_2, constant
par kf04_2=0.983691204042155

# Parameter:   id =  kf04_1, name = kf04_1, constant
par kf04_1=0.613416050428938

# Parameter:   id =  kf05, name = kf05, constant
par kf05=0.980777558937884

# Parameter:   id =  mC3, name = mC3, defined by a Rule

# Parameter:   id =  kf06_1, name = kf06_1, constant
par kf06_1=0.613416050428938

# Parameter:   id =  kf06_2, name = kf06_2, constant
par kf06_2=0.983691204042155

# Parameter:   id =  kf07_1, name = kf07_1, constant
par kf07_1=0.613416050428938

# Parameter:   id =  kf07_2, name = kf07_2, constant
par kf07_2=0.983691204042155

# Parameter:   id =  kd05_1, name = kd05_1, constant
par kd05_1=7.4E-4

# Parameter:   id =  kd05_2, name = kd05_2, constant
par kd05_2=0.0011

# Parameter:   id =  kd06_1, name = kd06_1, constant
par kd06_1=2.0

# Parameter:   id =  kd06_2, name = kd06_2, constant
par kd06_2=500.0

# Parameter:   id =  kd07_1, name = kd07_1, constant
par kd07_1=10.5

# Parameter:   id =  kd07_2, name = kd07_2, constant
par kd07_2=2500.0

# Parameter:   id =  ke05_1, name = ke05_1, constant
par ke05_1=0.0368010796682635

# Parameter:   id =  ke05_2, name = ke05_2, constant
par ke05_2=0.1

# Parameter:   id =  ke06_1, name = ke06_1, constant
par ke06_1=66.3776807395383

# Parameter:   id =  ke06_2, name = ke06_2, constant
par ke06_2=829.115813389061

# Parameter:   id =  ke07_1, name = ke07_1, constant
par ke07_1=1.1

# Parameter:   id =  ke07_2, name = ke07_2, constant
par ke07_2=2000.0

# Parameter:   id =  kd08_1, name = kd08_1, constant
par kd08_1=0.0368010796682635

# Parameter:   id =  kd08_2, name = kd08_2, constant
par kd08_2=0.1

# Parameter:   id =  kd09_1, name = kd09_1, constant
par kd09_1=7.4E-4

# Parameter:   id =  kd09_2, name = kd09_2, constant
par kd09_2=0.0011

# Parameter:   id =  kd10_1, name = kd10_1, constant
par kd10_1=71.1705760475931

# Parameter:   id =  kd10_2, name = kd10_2, constant
par kd10_2=3796.22684377655

# Parameter:   id =  kd11_1, name = kd11_1, constant
par kd11_1=38.9625903487667

# Parameter:   id =  kd11_2, name = kd11_2, constant
par kd11_2=5972.30640657865

# Parameter:   id =  kg01_1, name = kg01_1, constant
par kg01_1=0.091011109910329

# Parameter:   id =  kg01_2, name = kg01_2, constant
par kg01_2=0.0508205528375529

# Parameter:   id =  kg02_1, name = kg02_1, constant
par kg02_1=0.0368010796682635

# Parameter:   id =  kg02_2, name = kg02_2, constant
par kg02_2=0.1

# Parameter:   id =  kg03_1, name = kg03_1, constant
par kg03_1=66.3776807395383

# Parameter:   id =  kg03_2, name = kg03_2, constant
par kg03_2=829.115813389061

# Parameter:   id =  kg04_1, name = kg04_1, constant
par kg04_1=1.1

# Parameter:   id =  kg04_2, name = kg04_2, constant
par kg04_2=2000.0

# Parameter:   id =  kt01, name = kt01, constant
par kt01=3.42266E-4

# Parameter:   id =  kt02, name = kt02, constant
par kt02=0.492901

# Parameter:   id =  kt03, name = kt03, constant
par kt03=0.0470911

# Parameter:   id =  kt04_1, name = kt04_1, constant
par kt04_1=0.0

# Parameter:   id =  kt04_2, name = kt04_2, constant
par kt04_2=0.0

# assignmentRule: variable = mC3
mC3=dC3b
aux mC3=mC3

# Reaction: id = a_01, name = a_01

a_01=compartme*(ka01_1*PC*CRP-ka01_2*PC_CRP)

# Reaction: id = a_02, name = a_02

a_02=compartme*(ka02_1*PC_CRP*C1-ka02_2*PC_CRP_C1)

# Reaction: id = a_03, name = a_03

a_03=compartme*function_(ka03_1, PC_CRP_C1, C4, ka03_2)

# Reaction: id = a_04, name = a_04

a_04=compartme*function_(ka04_1, PC_CRP_C1, C2, ka04_2)

# Reaction: id = c_01, name = c_01

c_01=compartme*(kc01_1*C4b*C2a-kc01_2*C4b_C2a)

# Reaction: id = c_02, name = c_02

c_02=compartme*kc02*C4b_C2a*C3

# Reaction: id = c_03, name = c_03

c_03=compartme*(kc03_1*C3b-kc03_2*dC3b)

# Reaction: id = c_04, name = c_04

c_04=compartme*(kc04_1*C4b_C2a-kc04_2*dC4b_C2a)

# Reaction: id = d_01, name = d_01

d_01=compartme*(kd01_1*PC_CRP*LF-kd01_2*PC_CRP_LF)

# Reaction: id = d_02, name = d_02

d_02=compartme*(kd02_1*PC_CRP_LF*MASP-kd02_2*PC_CRP__1)

# Reaction: id = d_03, name = d_03

d_03=compartme*function_(kd03_1, PC_CRP__1, C4, kd03_2)

# Reaction: id = d_04, name = d_04

d_04=compartme*function_(kd04_1, PC_CRP__1, C2, kd04_2)

# Reaction: id = b_01, name = b_01

b_01=compartme*(kb01_1*GlcNac*LF-kb01_2*GlcNac_LF)

# Reaction: id = b_02, name = b_02

b_02=compartme*(kb02_1*GlcNac_LF*MASP-kb02_2*GlcNac__1)

# Reaction: id = b_03, name = b_03

b_03=compartme*function_(kb03_1, GlcNac__1, C4, kb03_2)

# Reaction: id = b_04, name = b_04

b_04=compartme*function_(kb04_1, GlcNac__1, C2, kb04_2)

# Reaction: id = e_01, name = e_01

e_01=compartme*(ke01_1*GlcNac_LF*CRP-ke01_2*GlcNac__2)

# Reaction: id = e_02, name = e_02

e_02=compartme*(ke02_1*GlcNac__2*C1-ke02_2*GlcNac__3)

# Reaction: id = e_03, name = e_03

e_03=compartme*function_(ke03_1, GlcNac__3, C4, ke03_2)

# Reaction: id = e_04, name = e_04

e_04=compartme*function_(ke04_1, GlcNac__3, C2, ke04_2)

# Reaction: id = f_01, name = f_01

f_01=compartme*(kf01_1*C4BP*PC_CRP-kf01_2*C4BP_PC_C)

# Reaction: id = f_02, name = f_02

f_02=compartme*(kf02_1*C4BP*GlcNac__2-kf02_2*C4BP_GlcN)

# Reaction: id = f_03, name = f_03

f_03=compartme*kf03*C4b_C2a*C4BP

# Reaction: id = f_04, name = f_04

f_04=compartme*(kf04_1*C4BP*C4b-kf04_2*C4BP_C4b)

# Reaction: id = f_05, name = f_05

f_05=compartme*kf05*C4b_C2a*C4BP

# Reaction: id = f_06, name = f_06

f_06=compartme*(kf06_1*C4b_C2a*C4BP-kf06_2*C4b_C2a_C)

# Reaction: id = f_07, name = f_07

f_07=compartme*(kf07_1*dC4b_C2a*C4BP-kf07_2*dC4b_C2a_)

# Reaction: id = t_01, name = t_01
# Local Parameter:   id =  k1_4, name = k1
par k1_4=3.42266E-4


t_01=compartme*k1_4*C4BP

# Reaction: id = t_02, name = t_02
# Local Parameter:   id =  k1_4, name = k1
par k1_4_1=0.492901


t_02=compartme*k1_4_1*C3b

# Reaction: id = t_03, name = t_03
# Local Parameter:   id =  k1_4, name = k1
par k1_4_1_2=0.0470911


t_03=compartme*k1_4_1_2*C4b_C2a

# Reaction: id = d_05, name = d_05

d_05=compartme*(kd05_1*PC_CRP_LF*C1-kd05_2*PC_CRP__2)

# Reaction: id = d_06, name = d_06

d_06=compartme*function_(kd06_1, PC_CRP__2, C4, kd06_2)

# Reaction: id = d_07, name = d_07

d_07=compartme*function_(kd07_1, PC_CRP__2, C2, kd07_2)

# Reaction: id = t_04, name = t_04
# Local Parameter:   id =  k1_4, name = k1
par k1_4_1__3=0.0

# Local Parameter:   id =  k2, name = k2
par k2=0.0


t_04=compartme*(k1_4_1__3*C4BP*PC_CRP_LF-k2*C4BP_PC_1)

# Reaction: id = e_05, name = e_05

e_05=compartme*(ke05_1*GlcNac__2*MASP-ke05_2*GlcNac__4)

# Reaction: id = e_06, name = e_06

e_06=compartme*function_(ke06_1, GlcNac__4, C4, ke06_2)

# Reaction: id = e_07, name = e_07

e_07=compartme*function_(ke07_1, GlcNac__4, C2, ke07_2)

# Reaction: id = d_08, name = d_08

d_08=compartme*(kd08_1*PC_CRP__2*MASP-kd08_2*PC_CRP__3)

# Reaction: id = d_09, name = d_09

d_09=compartme*(kd09_1*PC_CRP__1*C1-kd09_2*PC_CRP__3)

# Reaction: id = d_10, name = d_10

d_10=compartme*function_(kd10_1, PC_CRP__3, C4, kd10_2)

# Reaction: id = d_11, name = d_11

d_11=compartme*function_(kd11_1, PC_CRP__3, C2, kd11_2)

# Reaction: id = g_01, name = g_01

g_01=compartme*(kg01_1*X*HF-kg01_2*GlcNac_HF)

# Reaction: id = g_02, name = g_02

g_02=compartme*(kg02_1*GlcNac_HF*MASP-kg02_2*GlcNac__6)

# Reaction: id = g_03, name = g_03

g_03=compartme*function_(kg03_1, GlcNac__6, C4, kg03_2)

# Reaction: id = g_04, name = g_04

g_04=compartme*function_(kg04_1, GlcNac__6, C2, kg04_2)

# Species:   id = CRP, name = CRP, affected by kineticLaw

init CRP=2.0
dCRP/dt=(1/(compartme))*((-1.0 * a_01) + (-1.0 * e_01))

# Species:   id = PC, name = PC, affected by kineticLaw

init PC=0.0327796
dPC/dt=(1/(compartme))*((-1.0 * a_01))

# Species:   id = PC_CRP, name = PC/CRP, affected by kineticLaw

init PC_CRP=0.0
dPC_CRP/dt=(1/(compartme))*(( 1.0 * a_01) + (-1.0 * a_02) + (-1.0 * d_01) + (-1.0 * f_01))

# Species:   id = C4, name = C4, affected by kineticLaw

init C4=770.0
dC4/dt=(1/(compartme))*((-1.0 * a_03) + (-1.0 * d_03) + (-1.0 * b_03) + (-1.0 * e_03) + (-1.0 * d_06) + (-1.0 * e_06) + (-1.0 * d_10) + (-1.0 * g_03))

# Species:   id = C4a, name = C4a, affected by kineticLaw

init C4a=0.0
dC4a/dt=(1/(compartme))*(( 1.0 * a_03) + ( 1.0 * d_03) + ( 1.0 * b_03) + ( 1.0 * e_03) + ( 1.0 * d_06) + ( 1.0 * e_06) + ( 1.0 * d_10) + ( 1.0 * g_03))

# Species:   id = C4b, name = C4b, affected by kineticLaw

init C4b=0.0
dC4b/dt=(1/(compartme))*(( 1.0 * a_03) + (-1.0 * c_01) + ( 1.0 * d_03) + ( 1.0 * b_03) + ( 1.0 * e_03) + (-1.0 * f_04) + ( 1.0 * f_05) + ( 1.0 * d_06) + ( 1.0 * e_06) + ( 1.0 * d_10) + ( 1.0 * g_03))

# Species:   id = C2, name = C2, affected by kineticLaw

init C2=310.0
dC2/dt=(1/(compartme))*((-1.0 * a_04) + (-1.0 * d_04) + (-1.0 * b_04) + (-1.0 * e_04) + (-1.0 * d_07) + (-1.0 * e_07) + (-1.0 * d_11) + (-1.0 * g_04))

# Species:   id = C1, name = C1, affected by kineticLaw

init C1=2470.0
dC1/dt=(1/(compartme))*((-1.0 * a_02) + (-1.0 * e_02) + (-1.0 * d_05) + (-1.0 * d_09))

# Species:   id = PC_CRP_C1, name = PC/CRP/C1, affected by kineticLaw

init PC_CRP_C1=0.0
dPC_CRP_C1/dt=(1/(compartme))*(( 1.0 * a_02))

# Species:   id = C2a, name = C2a, affected by kineticLaw

init C2a=0.0
dC2a/dt=(1/(compartme))*(( 1.0 * a_04) + (-1.0 * c_01) + ( 1.0 * d_04) + ( 1.0 * b_04) + ( 1.0 * e_04) + ( 1.0 * f_05) + ( 1.0 * d_07) + ( 1.0 * e_07) + ( 1.0 * d_11) + ( 1.0 * g_04))

# Species:   id = C2b, name = C2b, affected by kineticLaw

init C2b=0.0
dC2b/dt=(1/(compartme))*(( 1.0 * a_04) + ( 1.0 * d_04) + ( 1.0 * b_04) + ( 1.0 * e_04) + ( 1.0 * d_07) + ( 1.0 * e_07) + ( 1.0 * d_11) + ( 1.0 * g_04))

# Species:   id = C4b_C2a, name = C4b/C2a, affected by kineticLaw

init C4b_C2a=0.0
dC4b_C2a/dt=(1/(compartme))*(( 1.0 * c_01) + (-1.0 * c_02) + ( 1.0 * c_02) + (-1.0 * c_04) + (-1.0 * f_03) + (-1.0 * f_05) + (-1.0 * f_06) + (-1.0 * t_03))

# Species:   id = C3, name = C3, affected by kineticLaw

init C3=4650.0
dC3/dt=(1/(compartme))*((-1.0 * c_02))

# Species:   id = C3a, name = C3a, affected by kineticLaw

init C3a=0.0
dC3a/dt=(1/(compartme))*(( 1.0 * c_02))

# Species:   id = C3b, name = C3b, affected by kineticLaw

init C3b=0.0
dC3b/dt=(1/(compartme))*(( 1.0 * c_02) + (-1.0 * c_03) + (-1.0 * t_02))

# Species:   id = dC3b, name = dC3b, affected by kineticLaw

init dC3b=0.0
ddC3b/dt=(1/(compartme))*(( 1.0 * c_03))

# Species:   id = MASP, name = MASP, affected by kineticLaw

init MASP=6.8
dMASP/dt=(1/(compartme))*((-1.0 * d_02) + (-1.0 * b_02) + (-1.0 * e_05) + (-1.0 * d_08) + (-1.0 * g_02))

# Species:   id = dC4b_C2a, name = dC4b/C2a, affected by kineticLaw

init dC4b_C2a=0.0
ddC4b_C2a/dt=(1/(compartme))*(( 1.0 * c_04) + (-1.0 * f_07))

# Species:   id = GlcNac, name = GlcNac, affected by kineticLaw

init GlcNac=0.0
dGlcNac/dt=(1/(compartme))*((-1.0 * b_01))

# Species:   id = GlcNac_LF, name = GlcNac/LF, affected by kineticLaw

init GlcNac_LF=0.0
dGlcNac_LF/dt=(1/(compartme))*(( 1.0 * b_01) + (-1.0 * b_02) + (-1.0 * e_01))

# Species:   id = LF, name = LF, affected by kineticLaw

init LF=20.0
dLF/dt=(1/(compartme))*((-1.0 * d_01) + (-1.0 * b_01))

# Species:   id = GlcNac_LF_MASP, name = GlcNac/LF/MASP, affected by kineticLaw

par GlcNac__1=0.0
aux GlcNac__1=GlcNac__1
dGlcNac__1/dt=(1/(compartme))*(( 1.0 * b_02))

# Species:   id = PC_CRP_LF, name = PC/CRP/LF, affected by kineticLaw

init PC_CRP_LF=0.0
dPC_CRP_LF/dt=(1/(compartme))*(( 1.0 * d_01) + (-1.0 * d_02) + (-1.0 * d_05) + (-1.0 * t_04))

# Species:   id = PC_CRP_LF_MASP, name = PC/CRP/LF/MASP, affected by kineticLaw

par PC_CRP__1=0.0
aux PC_CRP__1=PC_CRP__1
dPC_CRP__1/dt=(1/(compartme))*(( 1.0 * d_02) + (-1.0 * d_09))

# Species:   id = GlcNac_LF_CRP, name = GlcNac/LF/CRP, affected by kineticLaw

par GlcNac__2=0.0
aux GlcNac__2=GlcNac__2
dGlcNac__2/dt=(1/(compartme))*(( 1.0 * e_01) + (-1.0 * e_02) + (-1.0 * f_02) + (-1.0 * e_05))

# Species:   id = GlcNac_LF_CRP_C1, name = GlcNac/LF/CRP/C1, affected by kineticLaw

par GlcNac__3=0.0
aux GlcNac__3=GlcNac__3
dGlcNac__3/dt=(1/(compartme))*(( 1.0 * e_02))

# Species:   id = C4BP, name = C4BP, affected by kineticLaw

init C4BP=260.0
dC4BP/dt=(1/(compartme))*((-1.0 * f_01) + (-1.0 * f_02) + (-1.0 * f_03) + ( 1.0 * f_03) + (-1.0 * f_04) + (-1.0 * f_05) + ( 1.0 * f_05) + (-1.0 * f_06) + (-1.0 * f_07) + (-1.0 * t_01) + (-1.0 * t_04))

# Species:   id = C4BP_PC_CRP, name = C4BP/PC/CRP, affected by kineticLaw

par C4BP_PC_C=0.0
aux C4BP_PC_C=C4BP_PC_C
dC4BP_PC_C/dt=(1/(compartme))*(( 1.0 * f_01))

# Species:   id = C4BP_GlcNac_LF_CRP, name = C4BP/GlcNac/LF/CRP, affected by kineticLaw

par C4BP_GlcN=0.0
aux C4BP_GlcN=C4BP_GlcN
dC4BP_GlcN/dt=(1/(compartme))*(( 1.0 * f_02))

# Species:   id = iC4b_C2a, name = iC4b/C2a, affected by kineticLaw

init iC4b_C2a=0.0
diC4b_C2a/dt=(1/(compartme))*(( 1.0 * f_03))

# Species:   id = C4BP_C4b, name = C4BP/C4b, affected by kineticLaw

init C4BP_C4b=0.0
dC4BP_C4b/dt=(1/(compartme))*(( 1.0 * f_04))

# Species:   id = C4b_C2a_C4BP, name = C4b/C2a/C4BP, affected by kineticLaw

par C4b_C2a_C=0.0
aux C4b_C2a_C=C4b_C2a_C
dC4b_C2a_C/dt=(1/(compartme))*(( 1.0 * f_06))

# Species:   id = dC4b_C2a_C4BP, name = dC4b/C2a/C4BP, affected by kineticLaw

par dC4b_C2a_=0.0
aux dC4b_C2a_=dC4b_C2a_
ddC4b_C2a_/dt=(1/(compartme))*(( 1.0 * f_07))

# Species:   id = PC_CRP_LF_C1, name = PC/CRP/LF/C1, affected by kineticLaw

par PC_CRP__2=0.0
aux PC_CRP__2=PC_CRP__2
dPC_CRP__2/dt=(1/(compartme))*(( 1.0 * d_05) + (-1.0 * d_08))

# Species:   id = C4BP_PC_CRP_LF, name = C4BP/PC/CRP/LF, affected by kineticLaw

par C4BP_PC_1=0.0
aux C4BP_PC_1=C4BP_PC_1
dC4BP_PC_1/dt=(1/(compartme))*(( 1.0 * t_04))

# Species:   id = GlcNac_LF_CRP_MASP, name = GlcNac/LF/CRP/MASP, affected by kineticLaw

par GlcNac__4=0.0
aux GlcNac__4=GlcNac__4
dGlcNac__4/dt=(1/(compartme))*(( 1.0 * e_05))

# Species:   id = PC_CRP_LF_C1_MASP, name = PC/CRP/LF/C1/MASP, affected by kineticLaw

par PC_CRP__3=0.0
aux PC_CRP__3=PC_CRP__3
dPC_CRP__3/dt=(1/(compartme))*(( 1.0 * d_08) + ( 1.0 * d_09))

# Species:   id = GlcNac_LF_C1_MASP, name = GlcNac/LF/C1/MASP
# Warning species is not changed by either rules or reactions

par GlcNac__5=0.0
aux GlcNac__5=GlcNac__5

# Species:   id = GlcNac_HF, name = GlcNac/HF, affected by kineticLaw

init GlcNac_HF=0.0
dGlcNac_HF/dt=(1/(compartme))*(( 1.0 * g_01) + (-1.0 * g_02))

# Species:   id = HF, name = HF, affected by kineticLaw

init HF=0.0
dHF/dt=(1/(compartme))*((-1.0 * g_01))

# Species:   id = GlcNac_HF_MASP, name = GlcNac/HF/MASP, affected by kineticLaw

par GlcNac__6=0.0
aux GlcNac__6=GlcNac__6
dGlcNac__6/dt=(1/(compartme))*(( 1.0 * g_02))

# Species:   id = X, name = X, affected by kineticLaw

init X=5.0E-4
dX/dt=(1/(compartme))*((-1.0 * g_01))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

