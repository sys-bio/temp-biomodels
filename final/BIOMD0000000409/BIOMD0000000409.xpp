
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Queralt2006_MitoticExit_Cdc55DownregulationBySeparase
#
# is http://identifiers.org/biomodels.db/MODEL5951818256
# is http://identifiers.org/biomodels.db/BIOMD0000000409
# isDescribedBy http://identifiers.org/pubmed/16713564
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  Cdk, name = Cdk activity, defined by a Rule

# Parameter:   id =  ksclb2, name = ksclb2, constant
par ksclb2=0.03

# Parameter:   id =  kdclb2, name = kdclb2, constant
par kdclb2=0.03

# Parameter:   id =  kadclb2, name = kadclb2, constant
par kadclb2=0.2

# Parameter:   id =  kaadclb2, name = kaadclb2, constant
par kaadclb2=2.0

# Parameter:   id =  kscdc20, name = kscdc20, constant
par kscdc20=0.015

# Parameter:   id =  kdcdc20, name = kdcdc20, constant
par kdcdc20=0.05

# Parameter:   id =  kadcdc20, name = kadcdc20, constant
par kadcdc20=2.0

# Parameter:   id =  kdcdh, name = kdcdh, constant
par kdcdh=0.01

# Parameter:   id =  kadcdh, name = kadcdh, constant
par kadcdh=1.0

# Parameter:   id =  kapcdh, name = kapcdh, constant
par kapcdh=1.0

# Parameter:   id =  Jcdh, name = Jcdh, constant
par Jcdh=0.0015

# Parameter:   id =  Cdh1T, name = Cdh1T, constant
par Cdh1T=1.0

# Parameter:   id =  kssecurin, name = kssecurin, constant
par kssecurin=0.03

# Parameter:   id =  kdsecurin, name = kdsecurin, constant
par kdsecurin=0.05

# Parameter:   id =  kadsecurin, name = kadsecurin, constant
par kadsecuri=2.0

# Parameter:   id =  ksseparase, name = ksseparase, constant
par ksseparas=0.001

# Parameter:   id =  kdseparase, name = kdseparase, constant
par kdseparas=0.004

# Parameter:   id =  lasecurin, name = lasecurin, constant
par lasecurin=500.0

# Parameter:   id =  ldsecurin, name = ldsecurin, constant
par ldsecurin=1.0

# Parameter:   id =  kad, name = kad, constant
par kad=0.1

# Parameter:   id =  kd, name = kd, constant
par kd=0.45

# Parameter:   id =  kp, name = kp, constant
par kp=0.4

# Parameter:   id =  kap, name = kap, constant
par kap=2.0

# Parameter:   id =  Jnet, name = Jnet, constant
par Jnet=0.2

# Parameter:   id =  lanet, name = lanet, constant
par lanet=500.0

# Parameter:   id =  ldnet, name = ldnet, constant
par ldnet=1.0

# Parameter:   id =  Net1T, name = Net1T, constant
par Net1T=1.0

# Parameter:   id =  Cdc14T, name = Cdc14T, constant
par Cdc14T=0.5

# Parameter:   id =  kspolo, name = kspolo, constant
par kspolo=0.01

# Parameter:   id =  kdpolo, name = kdpolo, constant
par kdpolo=0.01

# Parameter:   id =  kadpolo, name = kadpolo, constant
par kadpolo=0.25

# Parameter:   id =  kapolo, name = kapolo, constant
par kapolo=0.0

# Parameter:   id =  kaapolo, name = kaapolo, constant
par kaapolo=0.5

# Parameter:   id =  kipolo, name = kipolo, constant
par kipolo=0.1

# Parameter:   id =  Jpolo, name = Jpolo, constant
par Jpolo=0.25

# Parameter:   id =  katem, name = katem, constant
par katem=0.0

# Parameter:   id =  kaatem, name = kaatem, constant
par kaatem=0.5

# Parameter:   id =  kitem, name = kitem, constant
par kitem=0.1

# Parameter:   id =  kaitem, name = kaitem, constant
par kaitem=1.0

# Parameter:   id =  Jtem1, name = Jtem1, constant
par Jtem1=0.005

# Parameter:   id =  Tem1T, name = Tem1T, constant
par Tem1T=1.0

# Parameter:   id =  kacdc15, name = kacdc15, constant
par kacdc15=0.02

# Parameter:   id =  kaacdc15, name = kaacdc15, constant
par kaacdc15=0.5

# Parameter:   id =  kicdc15, name = kicdc15, constant
par kicdc15=0.0

# Parameter:   id =  kaicdc15, name = kaicdc15, constant
par kaicdc15=0.2

# Parameter:   id =  Jcdc15, name = Jcdc15, constant
par Jcdc15=0.2

# Parameter:   id =  lamen, name = lamen, constant
par lamen=10.0

# Parameter:   id =  ldmen, name = ldmen, constant
par ldmen=0.1

# Parameter:   id =  Cdc15T, name = Cdc15T, constant
par Cdc15T=1.0

# Parameter:   id =  kpp, name = kpp, constant
par kpp=0.1

# Parameter:   id =  ki, name = ki, constant
par ki=20.0

# Parameter:   id =  PP2AT, name = PP2AT, constant
par PP2AT=1.0

# Parameter:   id =  Inh, name = Inh, constant
par Inh=0.0

# assignmentRule: variable = separase
separase=separaseT-securinse
aux separase=separase

# assignmentRule: variable = Cdh1_i
Cdh1_i=Cdh1T-Cdh1
aux Cdh1_i=Cdh1_i

# assignmentRule: variable = Tem1_i
Tem1_i=Tem1T-Tem1
aux Tem1_i=Tem1_i

# assignmentRule: variable = securin
securin=securinT-securinse
aux securin=securin

# assignmentRule: variable = Polo_i
Polo_i=PoloT-Polo
aux Polo_i=Polo_i

# assignmentRule: variable = Cdk
Cdk=Clb2/(1+Inh)
aux Cdk=Cdk

# assignmentRule: variable = Net1P
Net1P=Net1T-Net1-Net1Cdc14
aux Net1P=Net1P

# assignmentRule: variable = Cdc14
Cdc14=Cdc14T-Net1Cdc14
aux Cdc14=Cdc14

# assignmentRule: variable = Cdc15_i
Cdc15_i=Cdc15T-Cdc15
aux Cdc15_i=Cdc15_i

# assignmentRule: variable = PP2A
PP2A=(1+kpp*ki*separase)/(1+ki*separase)*PP2AT
aux PP2A=PP2A

# Reaction: id = v1, name = v1

v1=ksclb2

# Reaction: id = v2, name = v2

v2=(kdclb2+kadclb2*Cdc20+kaadclb2*Cdh1)*Clb2

# Reaction: id = v3, name = v3

v3=kscdc20

# Reaction: id = v4, name = v4

v4=(kdcdc20+kadcdc20*Cdh1)*Cdc20

# Reaction: id = v5, name = v5

v5=(kdcdh+kadcdh*Cdc14)*(Cdh1T-Cdh1)/(Jcdh+Cdh1T-Cdh1)

# Reaction: id = v6, name = v6

v6=kapcdh*Cdk*Cdh1/(Jcdh+Cdh1)

# Reaction: id = v7, name = v7

v7=kssecurin

# Reaction: id = v8, name = v8

v8=(kdsecurin+kadsecuri*Cdc20)*securinT

# Reaction: id = v9, name = v9

v9=ksseparas

# Reaction: id = v10, name = v10

v10=kdseparas*separaseT

# Reaction: id = v11, name = v11

v11=lasecurin*securin*separase-ldsecurin*securinse

# Reaction: id = securinseparase_securindegradation, name = securinseparase securindegradation

securin_1=(kdsecurin+kadsecuri*Cdc20)*securinse

# Reaction: id = securinseparase_separase_degradation, name = securin:separase separase degradation

securin_2=kdseparas*securinse

# Reaction: id = v13, name = Net1P dephosphorylation

v13=(kad*Cdc14+kd*PP2A)*Net1P/(Jnet+Net1P)

# Reaction: id = v14, name = Net1 phosphorylation

v14=(kp*Cdk+kap*MEN)*Net1/(Jnet+Net1+Net1Cdc14)

# Reaction: id = v15, name = v15

v15=lanet*Net1*Cdc14

# Reaction: id = v16, name = v16

v16=ldnet*Net1Cdc14

# Reaction: id = v17, name = Net1Cdc14 phosphorylation

v17=(kp*Cdk+kap*MEN)*Net1Cdc14/(Jnet+Net1+Net1Cdc14)

# Reaction: id = v18, name = v18

v18=kspolo

# Reaction: id = v19, name = v19

v19=(kdpolo+kadpolo*Cdh1)*PoloT

# Reaction: id = v20, name = v20

v20=(kapolo+kaapolo*Cdk)*(PoloT-Polo)/(Jpolo+PoloT-Polo)

# Reaction: id = v21, name = v21

v21=kipolo*Polo/(Jpolo+Polo)

# Reaction: id = v22, name = v22

v22=(kdpolo+kadpolo*Cdh1)*Polo

# Reaction: id = v23, name = v23

v23=(katem+kaatem*Polo)*(Tem1T-Tem1)/(Jtem1+Tem1T-Tem1)

# Reaction: id = v24, name = v24

v24=(kitem+kaitem*PP2A)*Tem1/(Jtem1+Tem1)

# Reaction: id = v25, name = v25

v25=(kacdc15+kaacdc15*Cdc14)*(Cdc15T-Cdc15)/(Jcdc15+Cdc15T-Cdc15)

# Reaction: id = v26, name = v26

v26=(kicdc15+kaicdc15*Cdk)*Cdc15/(Jcdc15+Cdc15)

# Reaction: id = v27, name = v27

v27=lamen*(Tem1-MEN)*(Cdc15-MEN)

# Reaction: id = v28, name = v28

v28=ldmen*MEN

# Reaction: id = v29, name = Tem1 degradation in MEN

v29=(kitem+kaitem*PP2A)*MEN/(Jtem1+Tem1)

# Reaction: id = v30, name = Cdc15 degradation in MEN

v30=(kicdc15+kaicdc15*Cdk)*MEN/(Jcdc15+Cdc15)

# Species:   id = AA, name = AA, constant
par AA=1.0


# Species:   id = Clb2, name = Clb2, affected by kineticLaw

init Clb2=0.997
dClb2/dt=(1/(compartme))*(( 1.0 * v1) + (-1.0 * v2))

# Species:   id = degr, name = degr, constant
par degr=1.0


# Species:   id = Cdc20, name = Cdc20, affected by kineticLaw

init Cdc20=0.0
dCdc20/dt=(1/(compartme))*(( 1.0 * v3) + (-1.0 * v4))

# Species:   id = Cdh1, name = Cdh1, affected by kineticLaw

init Cdh1=3.8E-5
dCdh1/dt=(1/(compartme))*(( 1.0 * v5) + (-1.0 * v6))

# Species:   id = Cdh1_i, name = inactive Cdh1, involved in a rule 

# Species:   id = securinT, name = securinT, affected by kineticLaw

init securinT=0.6
dsecurinT/dt=(1/(compartme))*(( 1.0 * v7) + (-1.0 * v8))

# Species:   id = securin, name = securin, involved in a rule 

# Species:   id = separaseT, name = separaseT, affected by kineticLaw

init separaseT=0.25
dseparaseT/dt=(1/(compartme))*(( 1.0 * v9) + (-1.0 * v10))

# Species:   id = separase, name = separase, involved in a rule 

# Species:   id = securinseparase, name = securin:separase, affected by kineticLaw

par securinse=0.248
aux securinse=securinse
dsecurinse/dt=(1/(compartme))*(( 1.0 * v11) + (-1.0 * securin_1) + (-1.0 * securin_2))

# Species:   id = Net1, name = Net1, affected by kineticLaw

init Net1=0.098
dNet1/dt=(1/(compartme))*(( 1.0 * v13) + (-1.0 * v14) + (-1.0 * v15) + ( 1.0 * v16))

# Species:   id = Net1Cdc14, name = Net1Cdc14, affected by kineticLaw

init Net1Cdc14=0.485
dNet1Cdc14/dt=(1/(compartme))*(( 1.0 * v15) + (-1.0 * v16) + (-1.0 * v17))

# Species:   id = PoloT, name = PoloT, affected by kineticLaw

init PoloT=0.99
dPoloT/dt=(1/(compartme))*(( 1.0 * v18) + (-1.0 * v19))

# Species:   id = Polo, name = Polo, affected by kineticLaw

init Polo=0.945
dPolo/dt=(1/(compartme))*(( 1.0 * v20) + (-1.0 * v21) + (-1.0 * v22))

# Species:   id = Polo_i, name = inactive Polo, involved in a rule 

# Species:   id = Tem1, name = Tem1, affected by kineticLaw

init Tem1=0.00389
dTem1/dt=(1/(compartme))*(( 1.0 * v23) + (-1.0 * v24))

# Species:   id = Tem1_i, name = inactive Tem1, involved in a rule 

# Species:   id = Cdc15, name = Cdc15, affected by kineticLaw

init Cdc15=0.0257
dCdc15/dt=(1/(compartme))*(( 1.0 * v25) + (-1.0 * v26))

# Species:   id = Cdc15_i, name = inactive Cdc15, involved in a rule 

# Species:   id = MEN, name = MEN, affected by kineticLaw

init MEN=8.0E-6
dMEN/dt=(1/(compartme))*(( 1.0 * v27) + (-1.0 * v28) + (-1.0 * v29) + (-1.0 * v30))

# Species:   id = PP2A, name = PP2A, involved in a rule 

# Species:   id = Net1P, name = Net1P, involved in a rule 

# Species:   id = Cdc14, name = Cdc14, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

