
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = PFKL
#
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = default, name = default, constant
par default=1.0

# Parameter:   id =  K_FBPase_cit, name = K_FBPase_cit, constant
par K_FBPase_=0.0211646

# Parameter:   id =  K_FBPase_f16bp, name = K_FBPase_f16bp, constant
par K_FBPas_1=0.104089638

# Parameter:   id =  K_FBPase_f26bp, name = K_FBPase_f26bp, constant
par K_FBPas_2=17.51744342

# Parameter:   id =  K_PFKL_PHOS_S775, name = K_PFKL_PHOS_S775, constant
par K_PFKL_PH=6.283705757

# Parameter:   id =  K_PFKL_akg, name = K_PFKL_akg, constant
par K_PFKL_ak=24661.01154

# Parameter:   id =  K_PFKL_cit, name = K_PFKL_cit, constant
par K_PFKL_ci=41.30426029

# Parameter:   id =  K_PFKL_f26bp, name = K_PFKL_f26bp, constant
par K_PFKL_f2=1.282443082

# Parameter:   id =  K_PFKL_f6p, name = K_PFKL_f6p, constant
par K_PFKL_f6=0.014114844

# Parameter:   id =  K_PFKL_icit, name = K_PFKL_icit, constant
par K_PFKL_ic=1784.508205

# Parameter:   id =  K_PFKL_mal, name = K_PFKL_mal, constant
par K_PFKL_ma=9.544729149

# Parameter:   id =  K_PFKL_pep, name = K_PFKL_pep, constant
par K_PFKL_pe=0.633518366

# Parameter:   id =  Vf_FBPase, name = Vf_FBPase, constant
par Vf_FBPase=9.932861302

# Parameter:   id =  Vf_PFKL, name = Vf_PFKL, constant
par Vf_PFKL=695063.7194

# Parameter:   id =  k_ALDO, name = k_ALDO, constant
par k_ALDO=0.008187906

# Parameter:   id =  k_mal, name = k_mal
par k_mal=4.02212166923

# Parameter:   id =  k_akg, name = k_akg
par k_akg=-4.22322775265

# Parameter:   id =  k_pep, name = k_pep
par k_pep=43.2378079437

# Parameter:   id =  k_icit, name = k_icit
par k_icit=-0.111236802414

# Parameter:   id =  k_f26bp, name = k_f26bp
par k_f26bp=-0.181345338

# Parameter:   id =  k_cit, name = k_cit
par k_cit=-0.653594771244

# Parameter:   id =  k_f6p, name = k_f6p
par k_f6p=0.502765208643

# Parameter:   id =  insulin, name = insulin, constant
par insulin=0.01

# assignmentRule: variable = s22
s22=s3
aux s22=s22

# Reaction: id = re1

re1=s9/(K_PFKL_f2+s9)*K_PFKL_ak/(K_PFKL_ak+s7)*K_PFKL_pe/(K_PFKL_pe+s5)*K_PFKL_ci/(K_PFKL_ci+s10)*K_PFKL_ic/(K_PFKL_ic+s6)*K_PFKL_ma/(K_PFKL_ma+s8)*s13/(K_PFKL_PH+s13)*Vf_PFKL*s22/(K_PFKL_f6+s22)

# Reaction: id = re2

re2=K_FBPas_2/(K_FBPas_2+s9)*s10/(K_FBPase_+s10)*Vf_FBPase*s4/(K_FBPas_1+s4)

# Reaction: id = re3

re3=k_ALDO*s4

# Reaction: id = re4

re4=-k_mal

# Reaction: id = re5

re5=-k_akg

# Reaction: id = re6

re6=-k_pep

# Reaction: id = re7

re7=-k_icit

# Reaction: id = re8

re8=-k_f26bp

# Reaction: id = re9

re9=-k_cit

# Reaction: id = re11

re11=-k_f6p

# Reaction: id = re13
# Local Parameter:   id =  k1, name = k1
par k1=0.0477985900779305


re13=k1*(s24-s23)

# Reaction: id = re14
# Local Parameter:   id =  k1, name = k1
par k1_1=7.78160761103111

# Local Parameter:   id =  k2, name = k2
par k2=1.61147523779118


re14=k1_1*insulin*s23-k2*s25

# Reaction: id = re15
# Local Parameter:   id =  k1, name = k1
par k1_1_2=9.93311225447353


re15=k1_1_2*s23*s31

# Reaction: id = re16
# Local Parameter:   id =  k1, name = k1
par k1_1_2_3=0.363030286526969

# Local Parameter:   id =  k2, name = k2
par k2_1=0.408127912886804


re16=k1_1_2_3*insulin*s26-k2_1*s27

# Reaction: id = re17
# Local Parameter:   id =  k1, name = k1
par k1_1_2__4=3.88248960751442E-5


re17=k1_1_2__4*s25*s31

# Reaction: id = re18
# Local Parameter:   id =  k1, name = k1
par k1_1_2__5=0.28442597446931


re18=k1_1_2__5*s27

# Reaction: id = re19
# Local Parameter:   id =  k1, name = k1
par k1_1_2__6=1.00000000282413E-5


re19=k1_1_2__6*s26

# Reaction: id = re20
# Local Parameter:   id =  k1, name = k1
par k1_1_2__7=0.0948960328385619


re20=k1_1_2__7*s27

# Reaction: id = re21
# Local Parameter:   id =  k1, name = k1
par k1_1_2__8=0.00919578911309774


re21=k1_1_2__8*(s28-s29)*s25

# Reaction: id = re22
# Local Parameter:   id =  k1, name = k1
par k1_1_2__9=7.70618517548016


re22=k1_1_2__9*s29

# Reaction: id = re23
# Local Parameter:   id =  k1, name = k1
par k1_1_2_10=1.00277786609339E-5


re23=k1_1_2_10*s26

# Reaction: id = re24
# Local Parameter:   id =  k1, name = k1
par k1_1_2_11=0.00792717614041237


re24=k1_1_2_11*s25

# Reaction: id = re25
# Local Parameter:   id =  k1, name = k1
par k1_1_2_12=0.419682384304397


re25=k1_1_2_12*(s30-s31)*s29

# Reaction: id = re26
# Local Parameter:   id =  k1, name = k1
par k1_1_2_13=0.124330492920416


re26=k1_1_2_13*s31

# Reaction: id = re27
# Local Parameter:   id =  k1, name = k1
par k1_1_2_14=0.00752464611370891


re27=k1_1_2_14*(s32-s33)*s31

# Reaction: id = re28
# Local Parameter:   id =  k1, name = k1
par k1_1_2_15=1.95497593092361


re28=k1_1_2_15*s33*s35

# Reaction: id = re29
# Local Parameter:   id =  k1, name = k1
par k1_1_2_16=0.00105342379833469


re29=k1_1_2_16*(s34-s35)*s31

# Reaction: id = re30
# Local Parameter:   id =  k1, name = k1
par k1_1_2_17=0.00145811601430322


re30=k1_1_2_17*s35

# Reaction: id = re31
# Local Parameter:   id =  k1, name = k1
par k1_1_2_18=26.8316707654711


re31=k1_1_2_18*(s1-s13)*s33

# Reaction: id = re32
# Local Parameter:   id =  k1, name = k1
par k1_1_2_19=0.0166525139097609


re32=k1_1_2_19*s13

# Species:   id = s1, name = PFKL, constant
par s1=1.235570941


# Species:   id = s2, name = FBPase
# Warning species is not changed by either rules or reactions

par s2=1.0
aux s2=s2

# Species:   id = s3, name = F6P, affected by kineticLaw

init s3=14.0774258421
ds3/dt=(-1.0 * re11)

# Species:   id = s4, name = F1,6BP, affected by kineticLaw

init s4=104.07239819
ds4/dt=( 1.0 * re1) + (-1.0 * re2) + (-1.0 * re3)

# Species:   id = s5, name = PEP, affected by kineticLaw

init s5=108.094519859
ds5/dt=(-1.0 * re6)

# Species:   id = s6, name = Isocitrate, affected by kineticLaw

init s6=1.79487179487
ds6/dt=(-1.0 * re7)

# Species:   id = s7, name = 2-oxoglutarate, affected by kineticLaw

init s7=25.1885369533
ds7/dt=(-1.0 * re5)

# Species:   id = s8, name = Malate, affected by kineticLaw

init s8=68.8788335846
ds8/dt=(-1.0 * re4)

# Species:   id = s9, name = F2,6BP, affected by kineticLaw

init s9=1.0
ds9/dt=(-1.0 * re8)

# Species:   id = s10, name = Citrate, affected by kineticLaw

init s10=17.7476118652
ds10/dt=(-1.0 * re9)

# Species:   id = s11, name = sa4_degraded, affected by kineticLaw

init s11=0.0
ds11/dt=(1/(default))*(( 1.0 * re3))

# Species:   id = s12, name = ALDO
# Warning species is not changed by either rules or reactions

par s12=1.0
aux s12=s12

# Species:   id = s14, name = sa8_degraded, affected by kineticLaw

init s14=0.0
ds14/dt=(1/(default))*(( 1.0 * re4))

# Species:   id = s15, name = sa7_degraded, affected by kineticLaw

init s15=0.0
ds15/dt=(1/(default))*(( 1.0 * re5))

# Species:   id = s16, name = sa5_degraded, affected by kineticLaw

init s16=0.0
ds16/dt=(1/(default))*(( 1.0 * re6))

# Species:   id = s17, name = sa6_degraded, affected by kineticLaw

init s17=0.0
ds17/dt=(1/(default))*(( 1.0 * re7))

# Species:   id = s18, name = sa9_degraded, affected by kineticLaw

init s18=0.0
ds18/dt=(1/(default))*(( 1.0 * re8))

# Species:   id = s21, name = sa3_degraded, affected by kineticLaw

init s21=0.0
ds21/dt=(1/(default))*(( 1.0 * re11))

# Species:   id = s19, name = sa10_degraded, affected by kineticLaw

init s19=0.0
ds19/dt=(1/(default))*(( 1.0 * re9))

# Species:   id = s23, name = IR_complex, affected by kineticLaw

init s23=37.81914621
ds23/dt=( 1.0 * re13) + (-1.0 * re14) + (-1.0 * re15) + ( 1.0 * re19)

# Species:   id = s24, name = pro_IR_complex, constant
par s24=46.2222520609226


# Species:   id = s25, name = p1IR_complex, affected by kineticLaw

init s25=2.507671281
ds25/dt=( 1.0 * re14) + (-1.0 * re17) + ( 1.0 * re18) + (-1.0 * re24)

# Species:   id = s26, name = p2IR_complex, affected by kineticLaw

init s26=852.608418
ds26/dt=( 1.0 * re15) + (-1.0 * re16) + (-1.0 * re19) + (-1.0 * re23)

# Species:   id = s27, name = p1p2IRcomplex, affected by kineticLaw

init s27=3.930695895
ds27/dt=( 1.0 * re16) + ( 1.0 * re17) + (-1.0 * re18) + (-1.0 * re20)

# Species:   id = s28, name = AKT, constant
par s28=4.33812187331668


# Species:   id = s29, name = pAKT, affected by kineticLaw

init s29=0.012942682
ds29/dt=( 1.0 * re21) + (-1.0 * re22)

# Species:   id = s30, name = mTOR, constant
par s30=0.0959163701057347


# Species:   id = s31, name = pmTOR, affected by kineticLaw

init s31=0.004015031
ds31/dt=( 1.0 * re25) + (-1.0 * re26)

# Species:   id = s32, name = S6K, constant
par s32=2.7769943784158


# Species:   id = s33, name = pS6K, affected by kineticLaw

init s33=9.88831E-4
ds33/dt=( 1.0 * re27) + (-1.0 * re28)

# Species:   id = s34, name = X, constant
par s34=14.9913345914433


# Species:   id = s35, name = pX, affected by kineticLaw

init s35=0.043352951
ds35/dt=( 1.0 * re29) + (-1.0 * re30)

# Species:   id = s36, name = sa28_degraded, affected by kineticLaw

init s36=0.0
ds36/dt=(1/(default))*(( 1.0 * re20))

# Species:   id = s37, name = sa27_degraded, affected by kineticLaw

init s37=0.0
ds37/dt=(1/(default))*(( 1.0 * re23))

# Species:   id = s38, name = sa26_degraded, affected by kineticLaw

init s38=0.0
ds38/dt=(1/(default))*(( 1.0 * re24))

# Species:   id = s13, name = pPFKL, affected by kineticLaw

init s13=0.759332005
ds13/dt=( 1.0 * re31) + (-1.0 * re32)

# Species:   id = s22, name = F6P_proxy, involved in a rule 

# event : ev2min
ev2min=if (t > 2) then (1.5) else (0.2)
global 1 {ev2min - 1.1} {k_akg=-1.43288084467;k_cit=0.150829562594;k_f6p=2.36299648065;k_icit=0;k_f26bp=0.010962773;k_mal=-6.03318250377;k_pep=1.50829562594}

# event : ev5min
ev5min=if (t > 5) then (1.5) else (0.2)
global 1 {ev5min - 1.1} {k_akg=-0.27149321267;k_cit=-0.27149321267;k_f6p=1.62895927602;k_icit=0.0113122171946;k_f26bp=0.034852204;k_mal=0;k_pep=-4.52488687783}

# event : ev10min
ev10min=if (t > 10) then (1.5) else (0.2)
global 1 {ev10min - 1.1} {k_akg=0;k_cit=0.060331825;k_f6p=-1.900452489;k_icit=-0.011312217;k_f26bp=-0.031487108;k_mal=2.714932127;k_pep=0.904977376}

# event : ev15min
ev15min=if (t > 15) then (1.5) else (0.2)
global 1 {ev15min - 1.1} {k_akg=0.090497738;k_cit=0.2413273;k_f6p=0.693815988;k_icit=-0.002262443;k_f26bp=0.083691707;k_mal=0;k_pep=-2.413273002}

# event : ev20min
ev20min=if (t > 20) then (1.5) else (0.2)
global 1 {ev20min - 1.1} {k_akg=0.113122172;k_cit=0.090497738;k_f6p=-0.090497738;k_icit=-0.033936652;k_f26bp=-0.010719796;k_mal=0.60331825;k_pep=-2.865761689}

# event : ev30min
ev30min=if (t > 30) then (1.5) else (0.2)
global 1 {ev30min - 1.1} {k_akg=0.263951735;k_cit=0.135746606;k_f6p=-0.09552539;k_icit=0.011689291;k_f26bp=-0.003477353;k_mal=0.351935646;k_pep=-0.301659125}

# event : ev45min
ev45min=if (t > 45) then (1.5) else (0.2)
global 1 {ev45min - 1.1} {k_akg=0.263951735;k_cit=0.135746606;k_f6p=-0.09552539;k_icit=0.011689291;k_f26bp=-0.003477353;k_mal=0.351935646;k_pep=-0.301659125}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

