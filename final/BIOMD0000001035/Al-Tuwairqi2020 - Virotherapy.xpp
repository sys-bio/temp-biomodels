
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Al-Tuwairqi2020 - Dynamics of cancer virotherapy with immune response
#
# is http://identifiers.org/biomodels.db/MODEL2108190004
# is http://identifiers.org/biomodels.db/BIOMD0000001035
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_uninfected_tumor_cell_growth, name = Rate Law for uninfected_tumor_cell_growth
Rate_Law_(r_1,x,y)=(r_1*x*(1-(x+y)))


# FunctionDefinition id = Rate_Law_for_virus_killing_clearence, name = Rate Law for virus_killing/clearence
Rate_La_1(h_2,v,z,e)=(h_2*v*z+e*v)


# FunctionDefinition id = Rate_Law_for_uninfected_tumor_cell_killing_death, name = Rate Law for uninfected_tumor_cell_killing/death
Rate_La_2(h_1,x,z,d_1)=(h_1*x*z+d_1*x)


# FunctionDefinition id = Rate_Law_for_immune_cell_proliferation, name = Rate Law for immune_cell_proliferation
Rate_La_3(m_1,y,z,m_2,x)=(m_1*y*z+m_2*x*z)


# FunctionDefinition id = Rate_Law_for_infected_tumor_cell_killing_death, name = Rate Law for infected_tumor_cell_killing/death
Rate_La_4(c,y,z)=(c*y*z+y)


# FunctionDefinition id = Rate_Law_for_virus_lytic_release, name = Rate Law for virus_lytic_release
Rate_La_5(b,y)=(b*y)


# Compartment: id = Whole_organism, name = Whole_organism, constant
par Whole_org=1.0

# Parameter:   id =  r_1, name = r_1, constant
par r_1=0.36

# Parameter:   id =  a, name = a, constant
par a=0.5

# Parameter:   id =  h_1, name = h_1, constant
par h_1=0.36

# Parameter:   id =  d_1, name = d_1, constant
par d_1=0.1278

# Parameter:   id =  c, name = c, constant
par c=0.48

# Parameter:   id =  h_2, name = h_2, constant
par h_2=0.16

# Parameter:   id =  e, name = e, constant
par e=0.2

# Parameter:   id =  m_1, name = m_1, constant
par m_1=0.6

# Parameter:   id =  m_2, name = m_2, constant
par m_2=0.29

# Parameter:   id =  n, name = n, constant
par n=0.16

# Parameter:   id =  b, name = b, constant
par b=2.0

# Reaction: id = uninfected_cancer_cell_growth, name = uninfected_cancer_cell_growth

uninfec_1=Whole_org*Rate_Law_(r_1, uninfecte, infected_)

# Reaction: id = cancer_cell_infection, name = cancer_cell_infection

cancer_ce=Whole_org*a*uninfecte*free_viru

# Reaction: id = uninfected_cancer_cell_killing_death, name = uninfected_cancer_cell_killing/death

uninfec_2=Whole_org*Rate_La_2(h_1, uninfecte, immune_ce, d_1)

# Reaction: id = infected_cancer_cell_killing_death, name = infected_cancer_cell_killing/death

infecte_1=Whole_org*Rate_La_4(c, infected_, immune_ce)

# Reaction: id = virus_lytic_release, name = virus_lytic_release

virus_lyt=Whole_org*Rate_La_5(b, infected_)

# Reaction: id = virus_killing_clearence, name = virus_killing/clearence

virus_kil=Whole_org*Rate_La_1(h_2, free_viru, immune_ce, e)

# Reaction: id = immune_cell_proliferation, name = immune_cell_proliferation

immune__1=Whole_org*Rate_La_3(m_1, infected_, immune_ce, m_2, uninfecte)

# Reaction: id = immune_cell_clearence, name = immune_cell_clearence

immune__2=Whole_org*n*immune_ce

# Species:   id = uninfected_cancer_cells, name = uninfected_cancer_cells, affected by kineticLaw

par uninfecte=0.5
aux uninfecte=uninfecte
duninfecte/dt=(1/(Whole_org))*(( 1.0 * uninfec_1) + (-1.0 * cancer_ce) + (-1.0 * uninfec_2))

# Species:   id = infected_cancer_cells, name = infected_cancer_cells, affected by kineticLaw

par infected_=0.0
aux infected_=infected_
dinfected_/dt=(1/(Whole_org))*(( 1.0 * cancer_ce) + (-1.0 * infecte_1))

# Species:   id = free_virus, name = free_virus, affected by kineticLaw

par free_viru=0.01
aux free_viru=free_viru
dfree_viru/dt=(1/(Whole_org))*((-1.0 * cancer_ce) + ( 1.0 * virus_lyt) + (-1.0 * virus_kil))

# Species:   id = immune_cells, name = immune_cells, affected by kineticLaw

par immune_ce=0.01
aux immune_ce=immune_ce
dimmune_ce/dt=(1/(Whole_org))*(( 1.0 * immune__1) + (-1.0 * immune__2))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

