
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Chickarmane2006 - Stem cell switch reversible
#
# is http://identifiers.org/biomodels.db/MODEL7957907314
# is http://identifiers.org/biomodels.db/BIOMD0000000203
# isDescribedBy http://identifiers.org/pubmed/16978048
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  eta1, name = eta1, constant
par eta1=1.0E-4

# Parameter:   id =  a1, name = a1, constant
par a1=1.0

# Parameter:   id =  a2, name = a2, constant
par a2=0.01

# Parameter:   id =  a3, name = a3, constant
par a3=0.2

# Parameter:   id =  f, name = f, constant
par f=1000.0

# Parameter:   id =  b1, name = b1, constant
par b1=0.0011

# Parameter:   id =  b2, name = b2, constant
par b2=0.001

# Parameter:   id =  b3, name = b3, constant
par b3=7.0E-4

# Parameter:   id =  gamma1, name = gamma1, constant
par gamma1=1.0

# Parameter:   id =  eta5, name = eta5, constant
par eta5=1.0E-4

# Parameter:   id =  e1, name = e1, constant
par e1=0.005

# Parameter:   id =  e2, name = e2, constant
par e2=0.1

# Parameter:   id =  f2, name = f2, constant
par f2=9.95E-4

# Parameter:   id =  f1, name = f1, constant
par f1=0.001

# Parameter:   id =  f3, name = f3, constant
par f3=0.01

# Parameter:   id =  gamma2, name = gamma2, constant
par gamma2=1.0

# Parameter:   id =  k1c, name = k1c, constant
par k1c=0.05

# Parameter:   id =  k2c, name = k2c, constant
par k2c=0.001

# Parameter:   id =  k3c, name = k3c, constant
par k3c=5.0

# Parameter:   id =  eta3, name = eta3, constant
par eta3=1.0E-4

# Parameter:   id =  c1, name = c1, constant
par c1=1.0

# Parameter:   id =  c2, name = c2, constant
par c2=0.01

# Parameter:   id =  c3, name = c3, constant
par c3=0.2

# Parameter:   id =  d1, name = d1, constant
par d1=0.0011

# Parameter:   id =  d2, name = d2, constant
par d2=0.001

# Parameter:   id =  d3, name = d3, constant
par d3=7.0E-4

# Parameter:   id =  gamma3, name = gamma3, constant
par gamma3=1.0

# Parameter:   id =  g1, name = g1, constant
par g1=0.1

# Parameter:   id =  eta7, name = eta7, constant
par eta7=1.0E-4

# Parameter:   id =  h1, name = h1, constant
par h1=0.0019

# Parameter:   id =  h2, name = h2, constant
par h2=0.05

# Parameter:   id =  gamma4, name = gamma4, constant
par gamma4=0.01

# Reaction: id = J0

J0=(eta1+a1*A+a2*OCT4_SOX2+a3*OCT4_SOX2*NANOG)/(1+eta1/f+b1*A+b2*OCT4_SOX2+b3*OCT4_SOX2*NANOG)

# Reaction: id = J1

J1=gamma1*OCT4

# Reaction: id = J2

J2=(eta5+e1*OCT4_SOX2+e2*OCT4_SOX2*NANOG)/(1+eta5/f+f2*OCT4_SOX2+f1*OCT4_SOX2*NANOG+f3*p53)

# Reaction: id = J3

J3=gamma2*NANOG

# Reaction: id = J4

J4=k1c*OCT4*SOX2-k2c*OCT4_SOX2

# Reaction: id = J5

J5=k3c*OCT4_SOX2

# Reaction: id = J6

J6=(eta3+c1*A+c2*OCT4_SOX2+c3*OCT4_SOX2*NANOG)/(1+eta3/f+d1*A+d2*OCT4_SOX2+d3*OCT4_SOX2*NANOG)

# Reaction: id = J7

J7=gamma3*SOX2

# Reaction: id = J8

J8=(g1*OCT4_SOX2+eta7)/(1+eta7/f+h1*OCT4_SOX2+h2*OCT4_SOX2*NANOG)

# Reaction: id = J9

J9=gamma4*Protein

# Species:   id = OCT4_Gene, name = OCT4_Gene
par OCT4_Gene=0.0
aux OCT4_Gene=OCT4_Gene
#WARNING speciesID: OCT4_Gene, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = NANOG_Gene, name = NANOG_Gene
par NANOG_Gen=0.0
aux NANOG_Gen=NANOG_Gen
#WARNING speciesID: NANOG_Gene, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = SOX2_Gene, name = SOX2_Gene
par SOX2_Gene=0.0
aux SOX2_Gene=SOX2_Gene
#WARNING speciesID: SOX2_Gene, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = targetGene, name = targetGene
par targetGen=0.01
aux targetGen=targetGen
#WARNING speciesID: targetGene, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = degradation, name = degradation
par degradati=0.0
aux degradati=degradati
#WARNING speciesID: degradation, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = p53, name = p53
par p53=0.0
aux p53=p53
#WARNING speciesID: p53, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = A, name = A
par A=10.0
aux A=A
#WARNING speciesID: A, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = OCT4, name = OCT4, affected by kineticLaw

init OCT4=0.01
dOCT4/dt=(1/(compartme))*(( 1.0 * J0) + (-1.0 * J1) + (-1.0 * J4))

# Species:   id = SOX2, name = SOX2, affected by kineticLaw

init SOX2=0.01
dSOX2/dt=(1/(compartme))*((-1.0 * J4) + ( 1.0 * J6) + (-1.0 * J7))

# Species:   id = NANOG, name = NANOG, affected by kineticLaw

init NANOG=0.01
dNANOG/dt=(1/(compartme))*(( 1.0 * J2) + (-1.0 * J3))

# Species:   id = OCT4_SOX2, name = OCT4_SOX2, affected by kineticLaw

init OCT4_SOX2=0.1
dOCT4_SOX2/dt=(1/(compartme))*(( 1.0 * J4) + (-1.0 * J5))

# Species:   id = Protein, name = Protein, affected by kineticLaw

init Protein=0.0
dProtein/dt=(1/(compartme))*(( 1.0 * J8) + (-1.0 * J9))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

