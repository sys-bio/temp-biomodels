
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Clancy2001_Kchannel
#
# is http://identifiers.org/biomodels.db/MODEL2898180293
# is http://identifiers.org/biomodels.db/BIOMD0000000121
# isDescribedBy http://identifiers.org/pubmed/11334834
# isDerivedFrom http://identifiers.org/pubmed/7514509
# isDerivedFrom http://identifiers.org/pubmed/7788872
# isDerivedFrom http://identifiers.org/pubmed/10318671
# isDerivedFrom http://identifiers.org/pubmed/10448858
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Parameter:   id =  R, name = gas constant, constant
par R=8.314

# Parameter:   id =  F, name = Faraday constant, constant
par F=96.485

# Parameter:   id =  Temp, name = temperature, constant
par Temp=310.0

# Parameter:   id =  ko, name = extracellular K, constant
par ko=5.4

# Parameter:   id =  ki, name = introcellular K, constant
par ki=140.0

# Parameter:   id =  vhold, name = holding_potential, constant
par vhold=-40.0

# Parameter:   id =  vtest, name = test_potential, constant
par vtest=0.0

# Parameter:   id =  vk, name = reversal potential for k, defined by a Rule

# Parameter:   id =  Gk, name = membrane_conductance, defined by a Rule

# Parameter:   id =  a, name = a, defined by a Rule

# Parameter:   id =  b, name = b, defined by a Rule

# Parameter:   id =  ain, name = ain, constant
par ain=2.172

# Parameter:   id =  bin, name = bin, constant
par bin=1.077

# Parameter:   id =  aa, name = aa, defined by a Rule

# Parameter:   id =  bb, name = bb, defined by a Rule

# Parameter:   id =  ai, name = ai, defined by a Rule

# Parameter:   id =  bi, name = bi, defined by a Rule

# Parameter:   id =  u, name = u, defined by a Rule

# Parameter:   id =  v, name = membrane_potential
par v=-40.0

# assignmentRule: variable = vk
vk=R*Temp/F*log(ko/ki)
aux vk=vk

# assignmentRule: variable = Gk
Gk=1.35E-2*ko^0.59
aux Gk=Gk

# assignmentRule: variable = a
a=5.55E-2*exp(0.05547153*(v-12))
aux a=a

# assignmentRule: variable = b
b=2.357E-3*exp((-0.036588)*v)
aux b=b

# assignmentRule: variable = aa
aa=6.55E-2*exp(0.05547153*(v-36))
aux aa=aa

# assignmentRule: variable = bb
bb=2.9357E-3*exp((-0.02158)*v)
aux bb=bb

# assignmentRule: variable = ai
ai=0.439*exp((-0.02352)*(v+25))*4.5/ko
aux ai=ai

# assignmentRule: variable = bi
bi=0.656*exp(0.000942*v)*(4.5/ko)^0.3
aux bi=bi

# assignmentRule: variable = u
u=ai*bb*aa/(aa*bi)
aux u=u

# assignmentRule: variable = ik
ik=Gk*o*(v-vk)
aux ik=ik

# Reaction: id = reaction_0000001, name = c3-c2 transition

reaction_=(a*c3-b*c2)*cell

# Reaction: id = reaction_0000002, name = c2-c1 transition

reactio_1=(ain*c2-bin*c1)*cell

# Reaction: id = reaction_0000003, name = c1-o transition

reactio_2=(c1*aa-bb*o)*cell

# Reaction: id = reaction_0000004, name = o-i transition

reactio_3=(o*bi-ai*i)*cell

# Reaction: id = reaction_0000005, name = c1-i transition

reactio_4=(aa*c1-u*i)*cell

# Species:   id = c3, name = ClosedState_3, affected by kineticLaw

init c3=1.0
dc3/dt=(1/(cell))*((-1.0 * reaction_))

# Species:   id = c2, name = ClosedState_2, affected by kineticLaw

init c2=0.0
dc2/dt=(1/(cell))*(( 1.0 * reaction_) + (-1.0 * reactio_1))

# Species:   id = c1, name = ClosedState_1, affected by kineticLaw

init c1=0.0
dc1/dt=(1/(cell))*(( 1.0 * reactio_1) + (-1.0 * reactio_2) + (-1.0 * reactio_4))

# Species:   id = o, name = OpenState, affected by kineticLaw

init o=0.06
do/dt=(1/(cell))*(( 1.0 * reactio_2) + (-1.0 * reactio_3))

# Species:   id = i, name = InactivationState, affected by kineticLaw

init i=0.0
di/dt=(1/(cell))*(( 1.0 * reactio_3) + ( 1.0 * reactio_4))

# Species:   id = ik, name = cardiac delayed rectifier current, defined in a rule 

# event : event_0000001
event_000=if ((t > 50) && (t <= 300)) then (1.5) else (0.2)
global 1 {event_000 - 1.1} {v=vtest}

# event : event_0000002
event_0_1=if (t > 300) then (1.5) else (0.2)
global 1 {event_0_1 - 1.1} {v=vhold}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

