
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Leloup2004 - Mammalian Circadian Rhythm models for 23.8 and 24.2 hours timeperiod
#
# isDerivedFrom http://identifiers.org/biomodels.db/MODEL0478895291
# isDerivedFrom http://identifiers.org/go/GO:0043153
# isDerivedFrom http://identifiers.org/taxonomy/9606
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000083
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000078
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000074
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000073
# isDescribedBy http://identifiers.org/biomodels.db/BIOMD0000000083
# isDescribedBy http://identifiers.org/biomodels.db/BIOMD0000000078
# isDescribedBy http://identifiers.org/biomodels.db/BIOMD0000000074
# isDescribedBy http://identifiers.org/biomodels.db/BIOMD0000000073
# isDescribedBy http://identifiers.org/pubmed/15363675
# is http://identifiers.org/biomodels.db/MODEL0478895291
# is http://identifiers.org/biomodels.db/BIOMD0000000975
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__1, name = Henri-Michaelis-Menten (irreversible)_1
Henri_Mic(Kp,PCN_0,V3PC)=(V3PC*PCN_0/(Kp+PCN_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__4, name = Henri-Michaelis-Menten (irreversible)_4
Henri_M_1(Kdp,PCCP_0,V2PC)=(V2PC*PCCP_0/(Kdp+PCCP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__2, name = Henri-Michaelis-Menten (irreversible)_2
Henri_M_2(Kdp,PCNP_0,V4PC)=(V4PC*PCNP_0/(Kdp+PCNP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__3, name = Henri-Michaelis-Menten (irreversible)_3
Henri_M_3(Kp,PCC_0,V1PC)=(V1PC*PCC_0/(Kp+PCC_0))


# FunctionDefinition id = Hill__Copy__1, name = Hill (Copy)_1
Hill__Cop(BN_0,KAC,n,vsC)=(vsC*BN_0^n/(KAC^n+BN_0^n))


# FunctionDefinition id = Hill__copy__1__1, name = Hill (copy, 1)_1
Hill__c_1(BN_0,KIB,m,vsB)=(vsB*KIB^m/(KIB^m+BN_0^m))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__9, name = Henri-Michaelis-Menten (irreversible)_9
Henri_M_4(BC_0,Kp,V1B)=(V1B*BC_0/(Kp+BC_0))


# FunctionDefinition id = Rate_Law_for_Translation_of_mRNA_to_protein_1, name = Rate Law for Translation of mRNA to protein_1
Rate_Law_(MC_0,ksC)=(ksC*MC_0)


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__11, name = Henri-Michaelis-Menten (irreversible)_11
Henri_M_5(BN_0,Kp,V3B)=(V3B*BN_0/(Kp+BN_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__12, name = Henri-Michaelis-Menten (irreversible)_12
Henri_M_6(BNP_0,Kdp,V4B)=(V4B*BNP_0/(Kdp+BNP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__14, name = Henri-Michaelis-Menten (irreversible)_14
Henri_M_7(KmC,MC_0,vmC)=(vmC*MC_0/(KmC+MC_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__15, name = Henri-Michaelis-Menten (irreversible)_15
Henri_M_8(CCP_0,Kd,vdCC)=(vdCC*CCP_0/(Kd+CCP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__18, name = Henri-Michaelis-Menten (irreversible)_18
Henri_M_9(KmP,MP_0,vmP)=(vmP*MP_0/(KmP+MP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__20, name = Henri-Michaelis-Menten (irreversible)_20
Henri__10(KmB,MB_0,vmB)=(vmB*MB_0/(KmB+MB_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__21, name = Henri-Michaelis-Menten (irreversible)_21
Henri__11(BCP_0,Kd,vdBC)=(vdBC*BCP_0/(Kd+BCP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__22, name = Henri-Michaelis-Menten (irreversible)_22
Henri__12(BNP_0,Kd,vdBN)=(vdBN*BNP_0/(Kd+BNP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__7, name = Henri-Michaelis-Menten (irreversible)_7
Henri__13(Kp,PC_0,V1P)=(V1P*PC_0/(Kp+PC_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__17, name = Henri-Michaelis-Menten (irreversible)_17
Henri__14(Kd,PCNP_0,vdPCN)=(vdPCN*PCNP_0/(Kd+PCNP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__19, name = Henri-Michaelis-Menten (irreversible)_19
Henri__15(Kd,PCP_0,vdPC)=(vdPC*PCP_0/(Kd+PCP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__13, name = Henri-Michaelis-Menten (irreversible)_13
Henri__16(IN_0,Kd,vdIN)=(vdIN*IN_0/(Kd+IN_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__8, name = Henri-Michaelis-Menten (irreversible)_8
Henri__17(Kdp,PCP_0,V2P)=(V2P*PCP_0/(Kdp+PCP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__10, name = Henri-Michaelis-Menten (irreversible)_10
Henri__18(BCP_0,Kdp,V2B)=(V2B*BCP_0/(Kdp+BCP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__16, name = Henri-Michaelis-Menten (irreversible)_16
Henri__19(Kd,PCCP_0,vdPCC)=(vdPCC*PCCP_0/(Kd+PCCP_0))


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__5, name = Henri-Michaelis-Menten (irreversible)_5
Henri__20(CC_0,Kp,V1C)=(V1C*CC_0/(Kp+CC_0))


# FunctionDefinition id = Rate_Law_for_Translation_of_mRNA_to_protein_2, name = Rate Law for Translation of mRNA to protein_2
Rate_La_1(MP_0,ksP)=(ksP*MP_0)


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible__6, name = Henri-Michaelis-Menten (irreversible)_6
Henri__21(CCP_0,Kdp,V2C)=(V2C*CCP_0/(Kdp+CCP_0))


# FunctionDefinition id = Hill__Copy__2, name = Hill (Copy)_2
Hill__C_2(BN_0,KAP,n,vsP)=(vsP*BN_0^n/(KAP^n+BN_0^n))


# FunctionDefinition id = Rate_Law_for_Translation_of_mRNA_to_protein_3, name = Rate Law for Translation of mRNA to protein_3
Rate_La_2(MB_0,ksB)=(ksB*MB_0)


# Compartment: id = Compartment, name = Mammalian Cell, constant
par Compartme=1.0

# Parameter:   id =  MP, name = MP, defined by a Rule

# Parameter:   id =  vsP, name = vsP, defined by a Rule

# Parameter:   id =  vmP, name = vmP, constant
par vmP=1.1

# Parameter:   id =  kdmp, name = kdmp, constant
par kdmp=0.01

# Parameter:   id =  KAP, name = KAP, constant
par KAP=0.7

# Parameter:   id =  KmP, name = KmP, constant
par KmP=0.31

# Parameter:   id =  MC, name = MC, defined by a Rule

# Parameter:   id =  vsC, name = vsC, defined by a Rule

# Parameter:   id =  vmC, name = vmC, constant
par vmC=1.0

# Parameter:   id =  kdmc, name = kdmc, constant
par kdmc=0.01

# Parameter:   id =  KAC, name = KAC, constant
par KAC=0.6

# Parameter:   id =  KmC, name = KmC, constant
par KmC=0.4

# Parameter:   id =  MB, name = MB, defined by a Rule

# Parameter:   id =  vsB, name = vsB, defined by a Rule

# Parameter:   id =  vmB, name = vmB, constant
par vmB=0.8

# Parameter:   id =  kdmb, name = kdmb, constant
par kdmb=0.01

# Parameter:   id =  KIB, name = KIB, constant
par KIB=2.2

# Parameter:   id =  KmB, name = KmB, constant
par KmB=0.4

# Parameter:   id =  PC, name = PC, defined by a Rule

# Parameter:   id =  CC, name = CC, defined by a Rule

# Parameter:   id =  PCP, name = PCP, defined by a Rule

# Parameter:   id =  CCP, name = CCP, defined by a Rule

# Parameter:   id =  PCC, name = PCC, defined by a Rule

# Parameter:   id =  PCN, name = PCN, defined by a Rule

# Parameter:   id =  PCCP, name = PCCP, defined by a Rule

# Parameter:   id =  PCNP, name = PCNP, defined by a Rule

# Parameter:   id =  BC, name = BC, defined by a Rule

# Parameter:   id =  BCP, name = BCP, defined by a Rule

# Parameter:   id =  BN, name = BN, defined by a Rule

# Parameter:   id =  BNP, name = BNP, defined by a Rule

# Parameter:   id =  IN, name = IN, defined by a Rule

# Parameter:   id =  k1, name = k1, constant
par k1=0.4

# Parameter:   id =  k2, name = k2, constant
par k2=0.2

# Parameter:   id =  k3, name = k3, constant
par k3=0.4

# Parameter:   id =  k4, name = k4, constant
par k4=0.2

# Parameter:   id =  k5, name = k5, constant
par k5=0.4

# Parameter:   id =  k6, name = k6, constant
par k6=0.2

# Parameter:   id =  k7, name = k7, constant
par k7=0.5

# Parameter:   id =  k8, name = k8, constant
par k8=0.1

# Parameter:   id =  kdnc, name = kdnc, constant
par kdnc=0.12

# Parameter:   id =  kdn, name = kdn, constant
par kdn=0.01

# Parameter:   id =  kstot, name = kstot, constant
par kstot=1.0

# Parameter:   id =  ksB, name = ksB, defined by a Rule

# Parameter:   id =  ksC, name = ksC, defined by a Rule

# Parameter:   id =  ksP, name = ksP, defined by a Rule

# Parameter:   id =  m, name = m, constant
par m=2.0

# Parameter:   id =  n, name = n, constant
par n=4.0

# Parameter:   id =  vstot, name = vstot, constant
par vstot=1.0

# Parameter:   id =  Kd, name = Kd, constant
par Kd=0.3

# Parameter:   id =  Kdp, name = Kdp, constant
par Kdp=0.1

# Parameter:   id =  Kp, name = Kp, constant
par Kp=0.1

# Parameter:   id =  Vphos, name = Vphos, constant
par Vphos=0.4

# Parameter:   id =  V1B, name = V1B, constant
par V1B=0.5

# Parameter:   id =  V1C, name = V1C, constant
par V1C=0.6

# Parameter:   id =  V1P, name = V1P, defined by a Rule

# Parameter:   id =  V1PC, name = V1PC, defined by a Rule

# Parameter:   id =  V2B, name = V2B, constant
par V2B=0.1

# Parameter:   id =  V2C, name = V2C, constant
par V2C=0.1

# Parameter:   id =  V2P, name = V2P, constant
par V2P=0.3

# Parameter:   id =  V2PC, name = V2PC, constant
par V2PC=0.1

# Parameter:   id =  V3B, name = V3B, constant
par V3B=0.5

# Parameter:   id =  V3PC, name = V3PC, defined by a Rule

# Parameter:   id =  V4B, name = V4B, constant
par V4B=0.2

# Parameter:   id =  V4PC, name = V4PC, constant
par V4PC=0.1

# Parameter:   id =  vdBC, name = vdBC, constant
par vdBC=0.5

# Parameter:   id =  vdBN, name = vdBN, constant
par vdBN=0.6

# Parameter:   id =  vdCC, name = vdCC, constant
par vdCC=0.7

# Parameter:   id =  vdIN, name = vdIN, constant
par vdIN=0.8

# Parameter:   id =  vdPC, name = vdPC, constant
par vdPC=0.7

# Parameter:   id =  vdPCC, name = vdPCC, constant
par vdPCC=0.7

# Parameter:   id =  vdPCN, name = vdPCN, constant
par vdPCN=0.7

# assignmentRule: variable = vsB
vsB=vstot
aux vsB=vsB

# assignmentRule: variable = vsC
vsC=1.1*vstot
aux vsC=vsC

# assignmentRule: variable = vsP
vsP=1.5*vstot
aux vsP=vsP

# assignmentRule: variable = CTot
CTot=CC+CCP
aux CTot=CTot

# assignmentRule: variable = BTot
BTot=BN+BC
aux BTot=BTot

# assignmentRule: variable = PTot
PTot=PC+PCCP+PCC+PCNP+PCN+PCP
aux PTot=PTot

# assignmentRule: variable = ksP
ksP=0.6*kstot
aux ksP=ksP

# assignmentRule: variable = ksB
ksB=0.12*kstot
aux ksB=ksB

# assignmentRule: variable = V1P
V1P=Vphos
aux V1P=V1P

# assignmentRule: variable = ksC
ksC=1.6*kstot
aux ksC=ksC

# assignmentRule: variable = V1PC
V1PC=Vphos
aux V1PC=V1PC

# assignmentRule: variable = V3PC
V3PC=Vphos
aux V3PC=V3PC

# rateRule: variable = MP
init MP=0.0
dMP/dt=vsP*BN^n/(KAP^n+BN^n)-(vmP*MP/(KmP+MP)+kdmp*MP)

# rateRule: variable = MC
init MC=0.0
dMC/dt=vsC*BN^n/(KAC^n+BN^n)-(vmC*MC/(KmC+MC)+kdmc*MC)

# rateRule: variable = MB
init MB=8.6
dMB/dt=vsB*KIB^m/(KIB^m+BN^m)-(vmB*MB/(KmB+MB)+kdmb*MB)

# rateRule: variable = PC
init PC=1.0
dPC/dt=ksP*MP+V2P*PCP/(Kdp+PCP)+k4*PCC-(V1P*PC/(Kp+PC)+k3*PC*CC+kdn*PC)

# rateRule: variable = CC
init CC=1.0
dCC/dt=ksC*MC+V2C*CCP/(Kdp+CCP)+k4*PCC-(V1C*CC/(Kp+CC)+k3*PC*CC+kdnc*CC)

# rateRule: variable = PCP
init PCP=1.0
dPCP/dt=V1P*PC/(Kp+PC)-(V2P*PCP/(Kdp+PCP)+vdPC*PCP/(Kd+PCP)+kdn*PCP)

# rateRule: variable = CCP
init CCP=1.0
dCCP/dt=V1C*CC/(Kp+CC)-(V2C*CCP/(Kdp+CCP)+vdCC*CCP/(Kd+CCP)+kdn*CCP)

# rateRule: variable = PCC
init PCC=1.0
dPCC/dt=V2PC*PCCP/(Kdp+PCCP)+k3*PC*CC+k2*PCN-(V1PC*PCC/(Kp+PCC)+k4*PCC+k1*PCC+kdn*PCC)

# rateRule: variable = PCN
init PCN=1.0
dPCN/dt=V4PC*PCNP/(Kdp+PCNP)+k1*PCC+k8*IN-(V3PC*PCN/(Kp+PCN)+k2*PCN+k7*BN*PCN+kdn*PCN)

# rateRule: variable = PCCP
init PCCP=1.0
dPCCP/dt=V1PC*PCC/(Kp+PCC)-(V2PC*PCCP/(Kdp+PCCP)+vdPCC*PCCP/(Kd+PCCP)+kdn*PCCP)

# rateRule: variable = PCNP
init PCNP=1.0
dPCNP/dt=V3PC*PCN/(Kp+PCN)-(V4PC*PCNP/(Kdp+PCNP)+vdPCN*PCNP/(Kd+PCNP)+kdn*PCNP)

# rateRule: variable = BC
init BC=1.0
dBC/dt=V2B*BCP/(Kdp+BCP)+k6*BN+ksB*MB-(V1B*BC/(Kp+BC)+k5*BC+kdn*BC)

# rateRule: variable = BCP
init BCP=1.0
dBCP/dt=V1B*BC/(Kp+BC)-(V2B*BCP/(Kdp+BCP)+vdBC*BCP/(Kd+BCP)+kdn*BCP)

# rateRule: variable = BN
init BN=1.0
dBN/dt=V4B*BNP/(Kdp+BNP)+k5*BC+k8*IN-(V3B*BN/(Kp+BN)+k6*BN+k7*BN*PCN+kdn*BN)

# rateRule: variable = BNP
init BNP=1.0
dBNP/dt=V3B*BN/(Kp+BN)-(V4B*BNP/(Kdp+BNP)+vdBN*BNP/(Kd+BNP)+kdn*BNP)

# rateRule: variable = IN
init IN=1.0
dIN/dt=k7*BN*PCN-(k8*IN+vdIN*IN/(Kd+IN)+kdn*IN)

# Reaction: id = Reversible_reaction__between_PER_CRY_complex_in_cytosol_and_nucleus, name = Reversible reaction  between PER-CRY complex in cytosol and nucleus

Reversibl=Compartme*(k1*PCC_0-k2*PCN_0)

# Reaction: id = Phosphorylation_of_PER_CRY_complex_in_nucleus, name = Phosphorylation of PER-CRY complex in nucleus

Phosphory=Compartme*Henri_Mic(Kp, PCN_0, V3PC)

# Reaction: id = Dephosphorylation_of_PER_CRY_complex_in_nucleus, name = Dephosphorylation of PER-CRY complex in nucleus

Dephospho=Compartme*Henri_M_2(Kdp, PCNP_0, V4PC)

# Reaction: id = Phosphorylation_of_PER_CRY_complex_in_cytosol, name = Phosphorylation of PER-CRY complex in cytosol

Phospho_1=Compartme*Henri_M_3(Kp, PCC_0, V1PC)

# Reaction: id = Dephosphorylation_of_PER_CRY_complex_in_cytosol, name = Dephosphorylation of PER-CRY complex in cytosol

Dephosp_1=Compartme*Henri_M_1(Kdp, PCCP_0, V2PC)

# Reaction: id = Reversible_reaction_between_PER__CRY_and_PER_CRY_complex_in_cytosol, name = Reversible reaction between PER, CRY and PER-CRY complex in cytosol

Reversi_1=Compartme*(k3*CC_0*PC_0-k4*PCC_0)

# Reaction: id = Phosphorylation_of_CRY_in_cytosol, name = Phosphorylation of CRY in cytosol

Phospho_2=Compartme*Henri__20(CC_0, Kp, V1C)

# Reaction: id = Dephosphorylation_of_CRY_in_cytosol, name = Dephosphorylation of CRY in cytosol

Dephosp_2=Compartme*Henri__21(CCP_0, Kdp, V2C)

# Reaction: id = Translation_of_Cry_mRNA_to_CRY_protein_in_cytosol, name = Translation of Cry mRNA to CRY protein in cytosol

Translati=Compartme*Rate_Law_(MC_0, ksC)

# Reaction: id = Transcription_of_Cry_gene_to_Cry_mRNA, name = Transcription of Cry gene to Cry mRNA

Transcrip=Compartme*Hill__Cop(BN_0, KAC, n, vsC)

# Reaction: id = Transcription_of_Per_gene_to_Per_mRNA, name = Transcription of Per gene to Per mRNA

Transcr_1=Compartme*Hill__C_2(BN_0, KAP, n, vsP)

# Reaction: id = Translation_of_Per_mRNA_to_PER_protein, name = Translation of Per mRNA to PER protein

Transla_1=Compartme*Rate_La_1(MP_0, ksP)

# Reaction: id = Phosphorylation_of_PER_in_cytosol, name = Phosphorylation of PER in cytosol

Phospho_3=Compartme*Henri__13(Kp, PC_0, V1P)

# Reaction: id = Dephosphorylation_of_PER_in_cytosol, name = Dephosphorylation of PER in cytosol

Dephosp_3=Compartme*Henri__17(Kdp, PCP_0, V2P)

# Reaction: id = Transcription_of_Bmal1_gene_to_Bmal1_mRNA, name = Transcription of Bmal1 gene to Bmal1 mRNA

Transcr_2=Compartme*Hill__c_1(BN_0, KIB, m, vsB)

# Reaction: id = Translation_of_Bmal1_mRNA_to_BMAL1_protein, name = Translation of Bmal1 mRNA to BMAL1 protein

Transla_2=Compartme*Rate_La_2(MB_0, ksB)

# Reaction: id = Phosphorylation_of_BMAL1_in_cytosol, name = Phosphorylation of BMAL1 in cytosol

Phospho_4=Compartme*Henri_M_4(BC_0, Kp, V1B)

# Reaction: id = Dephosphorylation_of_BMAL1_in_cytosol, name = Dephosphorylation of BMAL1 in cytosol

Dephosp_4=Compartme*Henri__18(BCP_0, Kdp, V2B)

# Reaction: id = Reversible_reation_between_BMAL1_in_cytosol_and_nucleus, name = Reversible reation between BMAL1 in cytosol and nucleus

Reversi_2=Compartme*(k5*BC_0-k6*BN_0)

# Reaction: id = Phosphorylation_of_BMAL1_in_nucleus, name = Phosphorylation of BMAL1 in nucleus

Phospho_5=Compartme*Henri_M_5(BN_0, Kp, V3B)

# Reaction: id = Dephosphorylation_of_BMAL1_in_nucleus, name = Dephosphorylation of BMAL1 in nucleus

Dephosp_5=Compartme*Henri_M_6(BNP_0, Kdp, V4B)

# Reaction: id = Reversible_reaction_between_PER_CRY_complex_and_PER_CRY_CLOCK_BMAL1_in_nuclues, name = Reversible reaction between PER-CRY complex and PER-CRY-CLOCK-BMAL1 in nuclues

Reversi_3=Compartme*(k7*PCN_0*BN_0-k8*IN_0)

# Reaction: id = Degradation_of_the_PER_CRY_CLOCK_BMAL1_complex, name = Degradation of the PER-CRY-CLOCK-BMAL1 complex

Degradati=Compartme*Henri__16(IN_0, Kd, vdIN)

# Reaction: id = Degradation_of_Cry_mRNA, name = Degradation of Cry mRNA

Degrada_1=Compartme*Henri_M_7(KmC, MC_0, vmC)

# Reaction: id = Degradation_of_CRY_P_protein_in_cytosol, name = Degradation of CRY-P protein in cytosol

Degrada_2=Compartme*Henri_M_8(CCP_0, Kd, vdCC)

# Reaction: id = Non_specific_degradation_of_Cry_mRNA, name = Non-specific degradation of Cry mRNA

Non_speci=Compartme*kdmc*MC_0

# Reaction: id = Degradation_of_PER_CRY_complex_in_cytosol, name = Degradation of PER-CRY complex in cytosol

Degrada_3=Compartme*Henri__19(Kd, PCCP_0, vdPCC)

# Reaction: id = Degradation_of_PER_CRY_complex_in_nucleus, name = Degradation of PER-CRY complex in nucleus

Degrada_4=Compartme*Henri__14(Kd, PCNP_0, vdPCN)

# Reaction: id = Degradation_of_Per_mRNA, name = Degradation of Per mRNA

Degrada_5=Compartme*Henri_M_9(KmP, MP_0, vmP)

# Reaction: id = Degradation_of_PER_P_in_cytosol, name = Degradation of PER-P in cytosol

Degrada_6=Compartme*Henri__15(Kd, PCP_0, vdPC)

# Reaction: id = Non_specific_degradation_of_Per_mRNA, name = Non-specific degradation of Per mRNA

Non_spe_1=Compartme*kdmp*MP_0

# Reaction: id = Degradation_of_Bmal1_mRNA, name = Degradation of Bmal1 mRNA

Degrada_7=Compartme*Henri__10(KmB, MB_0, vmB)

# Reaction: id = Non_specific_degradation_of_Bmal1_mRNA, name = Non-specific degradation of Bmal1 mRNA

Non_spe_2=Compartme*kdmb*MB_0

# Reaction: id = Degradation_of_BMAL1_P_in_cytosol, name = Degradation of BMAL1-P in cytosol

Degrada_8=Compartme*Henri__11(BCP_0, Kd, vdBC)

# Reaction: id = Degradation_of_BMAL1_P_in_nucleus, name = Degradation of BMAL1-P in nucleus

Degrada_9=Compartme*Henri__12(BNP_0, Kd, vdBN)

# Reaction: id = Non_specific_degradation_of_PER_protein_in_cytosol, name = Non-specific degradation of PER protein in cytosol

Non_spe_3=Compartme*kdn*PC_0

# Reaction: id = Non_specific_degradation_of_CRY_protein_in_cytosol, name = Non-specific degradation of CRY protein in cytosol

Non_spe_4=Compartme*kdnc*CC_0

# Reaction: id = Non_specific_degradation_of_PER_P_protein_in_cytosol, name = Non-specific degradation of PER-P protein in cytosol

Non_spe_5=Compartme*kdn*PCP_0

# Reaction: id = Non_specific_degradation_of_CRY_P_protein_in_cytosol, name = Non-specific degradation of CRY-P protein in cytosol

Non_spe_6=Compartme*kdn*CCP_0

# Reaction: id = Non_specific_degradation_of_PER_CRY_protein_complex_in_cytosol, name = Non-specific degradation of PER-CRY protein complex in cytosol

Non_spe_7=Compartme*kdn*PCC_0

# Reaction: id = Non_specific_degradation_of_PER_CRY_protein_complex_in_nucleus, name = Non-specific degradation of PER-CRY protein complex in nucleus

Non_spe_8=Compartme*kdn*PCN_0

# Reaction: id = Non_specific_degradation_of_PER_CRY_P_protein_complex_in_cytosol, name = Non-specific degradation of PER-CRY-P protein complex in cytosol

Non_spe_9=Compartme*kdn*PCCP_0

# Reaction: id = Non_specific_degradation_of_PER_CRY_P_protein_complex_in_nucleus, name = Non-specific degradation of PER-CRY-P protein complex in nucleus

Non_sp_10=Compartme*kdn*PCNP_0

# Reaction: id = Non_specific_degradation_of_BMAL1_protein_in_cytosol, name = Non-specific degradation of BMAL1 protein in cytosol

Non_sp_11=Compartme*kdn*BC_0

# Reaction: id = Non_specific_degradation_of_BMAL1_P_protein_in_cytosol, name = Non-specific degradation of BMAL1-P protein in cytosol

Non_sp_12=Compartme*kdn*BCP_0

# Reaction: id = Non_specific_degradation_of_BMAL1_protein_in_nucleus, name = Non-specific degradation of BMAL1 protein in nucleus

Non_sp_13=Compartme*kdn*BN_0

# Reaction: id = Non_specific_degradation_of_BMAL1_P_protein_in_nucleus, name = Non-specific degradation of BMAL1-P protein in nucleus

Non_sp_14=Compartme*kdn*BNP_0

# Reaction: id = Non_specific_degradation_of_PER_CRY_BMAL1_CLOCK_complex_in_nucleus, name = Non-specific degradation of PER-CRY-BMAL1-CLOCK complex in nucleus

Non_sp_15=Compartme*kdn*IN_0

# Species:   id = MP_0, name = MP, affected by kineticLaw

init MP_0=0.0
dMP_0/dt=(1/(Compartme))*(( 1.0 * Transcr_1) + (-1.0 * Degrada_5) + (-1.0 * Non_spe_1))

# Species:   id = MC_0, name = MC, affected by kineticLaw

init MC_0=0.0
dMC_0/dt=(1/(Compartme))*(( 1.0 * Transcrip) + (-1.0 * Degrada_1) + (-1.0 * Non_speci))

# Species:   id = MB_0, name = MB, affected by kineticLaw

init MB_0=8.6
dMB_0/dt=(1/(Compartme))*(( 1.0 * Transcr_2) + (-1.0 * Degrada_7) + (-1.0 * Non_spe_2))

# Species:   id = PC_0, name = PC, affected by kineticLaw

init PC_0=1.0
dPC_0/dt=(1/(Compartme))*((-1.0 * Reversi_1) + ( 1.0 * Transla_1) + (-1.0 * Phospho_3) + ( 1.0 * Dephosp_3) + (-1.0 * Non_spe_3))

# Species:   id = CC_0, name = CC, affected by kineticLaw

init CC_0=1.0
dCC_0/dt=(1/(Compartme))*((-1.0 * Reversi_1) + (-1.0 * Phospho_2) + ( 1.0 * Dephosp_2) + ( 1.0 * Translati) + (-1.0 * Non_spe_4))

# Species:   id = PCP_0, name = PCP, affected by kineticLaw

init PCP_0=1.0
dPCP_0/dt=(1/(Compartme))*(( 1.0 * Phospho_3) + (-1.0 * Dephosp_3) + (-1.0 * Degrada_6) + (-1.0 * Non_spe_5))

# Species:   id = CCP_0, name = CCP, affected by kineticLaw

init CCP_0=1.0
dCCP_0/dt=(1/(Compartme))*(( 1.0 * Phospho_2) + (-1.0 * Dephosp_2) + (-1.0 * Degrada_2) + (-1.0 * Non_spe_6))

# Species:   id = PCC_0, name = PCC, affected by kineticLaw

init PCC_0=1.0
dPCC_0/dt=(1/(Compartme))*((-1.0 * Reversibl) + (-1.0 * Phospho_1) + ( 1.0 * Dephosp_1) + ( 1.0 * Reversi_1) + (-1.0 * Non_spe_7))

# Species:   id = PCN_0, name = PCN, affected by kineticLaw

init PCN_0=1.0
dPCN_0/dt=(1/(Compartme))*(( 1.0 * Reversibl) + (-1.0 * Phosphory) + ( 1.0 * Dephospho) + (-1.0 * Reversi_3) + (-1.0 * Non_spe_8))

# Species:   id = PCNP_0, name = PCNP, affected by kineticLaw

init PCNP_0=1.0
dPCNP_0/dt=(1/(Compartme))*(( 1.0 * Phosphory) + (-1.0 * Dephospho) + (-1.0 * Degrada_4) + (-1.0 * Non_sp_10))

# Species:   id = PCCP_0, name = PCCP, affected by kineticLaw

init PCCP_0=1.0
dPCCP_0/dt=(1/(Compartme))*(( 1.0 * Phospho_1) + (-1.0 * Dephosp_1) + (-1.0 * Degrada_3) + (-1.0 * Non_spe_9))

# Species:   id = BC_0, name = BC, affected by kineticLaw

init BC_0=1.0
dBC_0/dt=(1/(Compartme))*(( 1.0 * Transla_2) + (-1.0 * Phospho_4) + ( 1.0 * Dephosp_4) + (-1.0 * Reversi_2) + (-1.0 * Non_sp_11))

# Species:   id = BCP_0, name = BCP, affected by kineticLaw

init BCP_0=1.0
dBCP_0/dt=(1/(Compartme))*(( 1.0 * Phospho_4) + (-1.0 * Dephosp_4) + (-1.0 * Degrada_8) + (-1.0 * Non_sp_12))

# Species:   id = BN_0, name = BN, affected by kineticLaw

init BN_0=1.0
dBN_0/dt=(1/(Compartme))*(( 1.0 * Reversi_2) + (-1.0 * Phospho_5) + ( 1.0 * Dephosp_5) + (-1.0 * Reversi_3) + (-1.0 * Non_sp_13))

# Species:   id = BNP_0, name = BNP, affected by kineticLaw

init BNP_0=1.0
dBNP_0/dt=(1/(Compartme))*(( 1.0 * Phospho_5) + (-1.0 * Dephosp_5) + (-1.0 * Degrada_9) + (-1.0 * Non_sp_14))

# Species:   id = IN_0, name = IN, affected by kineticLaw

init IN_0=1.0
dIN_0/dt=(1/(Compartme))*(( 1.0 * Reversi_3) + (-1.0 * Degradati) + (-1.0 * Non_sp_15))

# Species:   id = BTot, name = BTot, involved in a rule 

# Species:   id = CTot, name = CTot, involved in a rule 

# Species:   id = PTot, name = PTot, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

