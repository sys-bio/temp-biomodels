
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Zongo2020 - model of COVID-19 transmission dynamics under containment measures in France
#
# isDescribedBy http://identifiers.org/pubmed/32958091
# is http://identifiers.org/biomodels.db/MODEL2101150002
# is http://identifiers.org/biomodels.db/BIOMD0000000983
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_reaction, name = Rate Law for reaction
Rate_Law_(m_t,S_c)=((1-m_t)*S_c)


# FunctionDefinition id = Rate_Law_for_reaction_2, name = Rate Law for reaction_2
Rate_La_1(sigma,beta,n,I_r,I_u,S_u)=((1-sigma)*beta*(n*I_r+I_u)*S_u)


# FunctionDefinition id = Rate_Law_for_reaction_5, name = Rate Law for reaction_5
Rate_La_2(mu,f,E)=(mu*f*E)


# FunctionDefinition id = Rate_Law_for_reaction_6, name = Rate Law for reaction_6
Rate_La_3(mu,f,E)=(mu*(1-f)*E)


# FunctionDefinition id = Rate_Law_for_reaction_4, name = Rate Law for reaction_4
Rate_La_4(theta,lambda,Q)=(theta*lambda*Q)


# FunctionDefinition id = Rate_Law_for_reaction_3, name = Rate Law for reaction_3
Rate_La_5(sigma,beta,n,I_r,I_q,S_u)=(sigma*beta*(n*I_r+I_q)*S_u)


# FunctionDefinition id = Rate_Law_for_Quarantined_to_Susceptible_unconfined, name = Rate Law for Quarantined_to_Susceptible_unconfined
Rate_La_6(theta,lambda,Q)=(theta*(1-lambda)*Q)


# Compartment: id = _1, name = France, constant
par _1=1.0

# Parameter:   id =  p, name = p, constant
par p=0.93

# Parameter:   id =  f, name = f, constant
par f=0.2

# Parameter:   id =  n, name = n, constant
par n=0.5

# Parameter:   id =  lambda, name = lambda, constant
par lambda=0.3

# Parameter:   id =  q, name = q, constant
par q=0.83

# Parameter:   id =  sigma, name = sigma, constant
par sigma=0.2

# Parameter:   id =  beta, name = beta, constant
par beta=2.115E-8

# Parameter:   id =  mu, name = mu, constant
par mu=0.2

# Parameter:   id =  eta_r, name = eta_r, constant
par eta_r=0.1

# Parameter:   id =  eta_u, name = eta_u, constant
par eta_u=0.25

# Parameter:   id =  theta, name = theta, constant
par theta=0.07142857

# Parameter:   id =  m_t, name = m_t, defined by a Rule

# Parameter:   id =  tau_1, name = tau_1, constant
par tau_1=21.0

# Parameter:   id =  tau_2, name = tau_2, constant
par tau_2=47.0

# Parameter:   id =  tau_3, name = tau_3, constant
par tau_3=76.0

# Parameter:   id =  tau_f, name = tau_f, constant
par tau_f=189.0

# Parameter:   id =  a, name = a, defined by a Rule

# Parameter:   id =  b, name = b, defined by a Rule

# Parameter:   id =  m_t_phase_1, name = trigger_phase_1
par m_t_phase=0.0

# Parameter:   id =  m_t_phase_2, name = trigger_phase_2
par m_t_pha_1=0.0

# Parameter:   id =  m_t_phase_3, name = trigger_phase_3
par m_t_pha_2=0.0

# assignmentRule: variable = b
b=(-p)/(tau_f-tau_3)
aux b=b

# assignmentRule: variable = a
a=(-log(1-p))/(tau_2-tau_1)
aux a=a

# assignmentRule: variable = m_t
m_t=0+m_t_phase*(1-exp((-a)*(t-tau_1)))+m_t_pha_1*p+m_t_pha_2*(p+b*(t-tau_3))
aux m_t=m_t

# Reaction: id = reaction, name = Susceptible_confined_to_Susceptible_unconfined

reaction=_1*Rate_Law_(m_t, S_c)

# Reaction: id = reaction_1, name = Susceptible_unconfined_to_Susceptible_confined

reaction_=_1*m_t*S_u

# Reaction: id = reaction_2, name = Susceptible_unconfined_to_Exposed

reactio_1=_1*Rate_La_1(sigma, beta, n, I_r, I_u, S_u)

# Reaction: id = reaction_3, name = Susceptible_unconfined_to_Quarantined

reactio_2=_1*Rate_La_5(sigma, beta, n, I_r, I_u, S_u)

# Reaction: id = reaction_4, name = Quarantined_to_Infected_reported

reactio_3=_1*Rate_La_4(theta, lambda, Q_1)

# Reaction: id = reaction_5, name = Exposed_to_Infected_reported

reactio_4=_1*Rate_La_2(mu, f, E)

# Reaction: id = reaction_6, name = Exposed_to_Infected_unreported

reactio_5=_1*Rate_La_3(mu, f, E)

# Reaction: id = reaction_7, name = Infected_reported_to_Recovered

reactio_6=_1*eta_r*I_r

# Reaction: id = reaction_8, name = Infected_unreported_to_Recovered

reactio_7=_1*eta_u*I_u

# Reaction: id = reaction_9, name = Quarantined_to_Susceptible_unconfined

reactio_8=_1*Rate_La_6(theta, lambda, Q_1)

# Species:   id = S_c, name = Susceptible_confined, affected by kineticLaw

init S_c=0.0
dS_c/dt=(1/(_1))*((-1.0 * reaction) + ( 1.0 * reaction_))

# Species:   id = S_u, name = Susceptible_unconfined, affected by kineticLaw

init S_u=6.699E7
dS_u/dt=(1/(_1))*(( 1.0 * reaction) + (-1.0 * reaction_) + (-1.0 * reactio_1) + (-1.0 * reactio_2) + ( 1.0 * reactio_8))

# Species:   id = E, name = Exposed, affected by kineticLaw

init E=112.0
dE/dt=(1/(_1))*(( 1.0 * reactio_1) + (-1.0 * reactio_4) + (-1.0 * reactio_5))

# Species:   id = I_r, name = Infected_reported, affected by kineticLaw

init I_r=12.0
dI_r/dt=(1/(_1))*(( 1.0 * reactio_3) + ( 1.0 * reactio_4) + (-1.0 * reactio_6))

# Species:   id = I_u, name = Infected_unreported, affected by kineticLaw

init I_u=50.0
dI_u/dt=(1/(_1))*(( 1.0 * reactio_5) + (-1.0 * reactio_7))

# Species:   id = R, name = Recovered, affected by kineticLaw

init R=0.0
dR/dt=(1/(_1))*(( 1.0 * reactio_6) + ( 1.0 * reactio_7))

# Species:   id = Q, name = Quarantined, affected by kineticLaw

par Q_1=36.0
aux Q_1=Q_1
dQ_1/dt=(1/(_1))*(( 1.0 * reactio_2) + (-1.0 * reactio_3) + (-1.0 * reactio_8))

# event : Phase_1
# unable to handle events with delays currently.
# event ignored.


# event : Phase_2
# unable to handle events with delays currently.
# event ignored.


# event : Phase_3
# unable to handle events with delays currently.
# event ignored.


# event : End_phase
# unable to handle events with delays currently.
# event ignored.


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

