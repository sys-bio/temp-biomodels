
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Saucerman2006_PKA
#
# is http://identifiers.org/biomodels.db/MODEL8003201958
# is http://identifiers.org/biomodels.db/BIOMD0000000165
# isDescribedBy http://identifiers.org/pubmed/16905651
# isDerivedFrom http://identifiers.org/biomodels.db/MODEL1006230118
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = ec, name = ec, constant
par ec=1.0

# Compartment: id = cell, name = cell, constant
par cell=0.25

# Compartment: id = membrane, name = membrane, constant
par membrane=0.25

# Parameter:   id =  k_ac_gsa_cAMP_synthesis_GsAC, name = k_ac_gsa_cAMP_synthesis_GsAC, constant
par k_ac_gsa_=2.5

# Parameter:   id =  Vmax_cAMP_synthesis_GsAC, name = Vmax_cAMP_synthesis_GsAC, defined by a Rule

# Parameter:   id =  ton_global_light_cAMP_photolysis, name = ton_global_light_cAMP_photolysis, constant
par ton_globa=2160.0

# Parameter:   id =  toff_global_light_cAMP_photolysis, name = toff_global_light_cAMP_photolysis, constant
par toff_glob=2165.0

# Parameter:   id =  ton_local_light_cAMP_photolysis, name = ton_local_light_cAMP_photolysis, constant
par ton_local=0.0

# Parameter:   id =  toff_local_light_cAMP_photolysis, name = toff_local_light_cAMP_photolysis, constant
par toff_loca=0.0

# Parameter:   id =  light_cAMP_photolysis, name = light_cAMP_photolysis, defined by a Rule

# Parameter:   id =  kfsk_cAMP_synthesis_FskAC, name = kfsk_cAMP_synthesis_FskAC, constant
par kfsk_cAMP=7.3

# Parameter:   id =  Vmax_cAMP_synthesis_FskAC, name = Vmax_cAMP_synthesis_FskAC, defined by a Rule

# Parameter:   id =  Kf_inhibit_PDE, name = Kf_inhibit_PDE, defined by a Rule

# Parameter:   id =  Kr_inhibit_PDE, name = Kr_inhibit_PDE, defined by a Rule

# Parameter:   id =  ar_for_add_propranolol, name = ar_for_add_propranolol, defined by a Rule

# Parameter:   id =  t_propadd, name = t_propadd, constant
par t_propadd=2420.0

# Parameter:   id =  Propranolol_pipette, name = Propranolol_pipette, constant
par Propranol=1.0

# Parameter:   id =  tauPropranolol, name = tauPropranolol, constant
par tauPropra=1.0

# Parameter:   id =  ar_for_add_Ligand, name = ar_for_add_Ligand, defined by a Rule

# Parameter:   id =  t_Ladd, name = t_Ladd, constant
par t_Ladd=2160.0

# Parameter:   id =  L_pipette, name = L_pipette, constant
par L_pipette=0.1

# Parameter:   id =  tauL, name = tauL, constant
par tauL=1.0

# Parameter:   id =  Ratio_AKARp_AKARtot, name = Ratio_AKARp_AKARtot, defined by a Rule

# assignmentRule: variable = Vmax_cAMP_synthesis_GsAC
Vmax_cAMP=k_ac_gsa_*GsAC_cell
aux Vmax_cAMP=Vmax_cAMP

# assignmentRule: variable = light_cAMP_photolysis
# the operator ton_global_light_cAMP_photolysis is not supported by xpp
# the formula is : piecewise(1, (t > ton_global_light_cAMP_photolysis) && (t < toff_global_light_cAMP_photolysis), 0)+ piecew1 
# the operator toff_global_light_cAMP_photolysis is not supported by xpp
# the formula is : piecewise(1, (t > ton_global_light_cAMP_photolysis) && (t < toff_global_light_cAMP_photolysis), 0)+ piecew1 
#Rule ignored : there are some unsupported functions !!

# assignmentRule: variable = Vmax_cAMP_synthesis_FskAC
Vmax_cA_1=kfsk_cAMP*FskAC_cel
aux Vmax_cA_1=Vmax_cA_1

# assignmentRule: variable = Kf_inhibit_PDE
Kf_inhibi= piecew2 
aux Kf_inhibi=Kf_inhibi

# assignmentRule: variable = Kr_inhibit_PDE
Kr_inhibi= piecew3 
aux Kr_inhibi=Kr_inhibi

# assignmentRule: variable = ar_for_add_propranolol
ar_for_ad= piecew4 
aux ar_for_ad=ar_for_ad

# assignmentRule: variable = ar_for_add_Ligand
ar_for__1= piecew5 
aux ar_for__1=ar_for__1

# assignmentRule: variable = Ratio_AKARp_AKARtot
Ratio_AKA=AKARp_cel/(AKAR_cell+AKARp_cel+PKAC_AKAR+PP_AKARp_)
aux Ratio_AKA=Ratio_AKA

# Reaction: id = cAMP_synthesis_GsAC, name = cAMP_synthesis_GsAC
# Local Parameter:   id =  Km, name = Km
par Km=315.0


cAMP_synt=Vmax_cAMP*ATP_cell*1/(Km+ATP_cell)*cell

# Reaction: id = bind_b1AR_propranolol, name = bind_b1AR_propranolol
# Local Parameter:   id =  Kf, name = Kf
par Kf=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr=8.0


bind_b1AR=(Kf*Propran_1*b1AR_cell+(-Kr*b1ARinhib))*cell

# Reaction: id = add_propranolol, name = add_propranolol

add_propr=ar_for_ad*cell

# Reaction: id = cAMP_photolysis, name = cAMP_photolysis
# Local Parameter:   id =  kphot, name = kphot
par kphot=0.1


cAMP_phot=kphot*light_cAM*DMNB_cAMP*cell

# Reaction: id = LRG_activation, name = LRG_activation
# Local Parameter:   id =  k_gact, name = k_gact
par k_gact=16.0


LRG_activ=k_gact*L_b1AR_Gs*cell

# Reaction: id = bind_Lb1AR_Gs, name = bind_Lb1AR_Gs
# Local Parameter:   id =  Kf, name = Kf
par Kf_1=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1=62.0


bind_Lb1A=(Kf_1*Gs_cell*L_b1AR_ce+(-Kr_1*L_b1AR_Gs))*cell

# Reaction: id = desens_bark, name = desens_bark
# Local Parameter:   id =  k_barkp, name = k_barkp
par k_barkp=0.0011


desens_ba=k_barkp*(L_b1AR_ce+L_b1AR_Gs)*cell

# Reaction: id = bind_cAMP_ARC, name = bind_cAMP_ARC
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2=1640.0


bind_cAMP=(Kf_1_2*ARC_cell*cAMP_cell+(-Kr_1_2*A2RC_cell))*cell

# Reaction: id = bind_b1AR_Gs, name = bind_b1AR_Gs
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2_3=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2_3=33000.0


bind_b1_1=(Kf_1_2_3*b1AR_cell*Gs_cell+(-Kr_1_2_3*b1AR_Gs_c))*cell

# Reaction: id = bind_PDEcAMP, name = bind_PDEcAMP
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2__4=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2__4=1300.0


bind_PDEc=(Kf_1_2__4*PDE_cell*cAMP_cell+(-Kr_1_2__4*PDEcAMP_c))*cell

# Reaction: id = Gs_gtp_hydrolysis, name = Gs_gtp_hydrolysis
# Local Parameter:   id =  khyd, name = khyd
par khyd=0.8


Gs_gtp_hy=khyd*Gsa_gtp_c*cell

# Reaction: id = Gs_reassociation, name = Gs_reassociation
# Local Parameter:   id =  k_reassoc, name = k_reassoc
par k_reassoc=1210.0


Gs_reasso=k_reassoc*Gsa_gdp_c*Gsbg_cell*cell

# Reaction: id = bind_FskAC, name = bind_FskAC
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2__5=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2__5=860000.0


bind_FskA=(Kf_1_2__5*AC_cell*Fsk_cell+(-Kr_1_2__5*FskAC_cel))*cell

# Reaction: id = bind_AKARp_PP, name = bind_AKARp_PP
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2__6=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2__6=7000.0


bind_AKAR=(Kf_1_2__6*PP_cell*AKARp_cel+(-Kr_1_2__6*PP_AKARp_))*cell

# Reaction: id = desens_pka, name = desens_pka
# Local Parameter:   id =  kpkap, name = kpkap
par kpkap=0.0036

# Local Parameter:   id =  kpkam, name = kpkam
par kpkam=0.0022


desens_pk=(kpkap*PKAC_cell*(L_b1AR_Gs+b1AR_cell+L_b1AR_ce)+(-kpkam*b1AR_p_ce))*cell

# Reaction: id = bind_L_b1ARGs, name = bind_L_b1ARGs
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2__7=1000.0

# Local Parameter:   id =  Kd, name = Kd
par Kd=0.535714


bind_L_b1=(Kf_1_2__7*b1AR_Gs_c*L_cell+(-Kd*L_b1AR_Gs))*cell

# Reaction: id = bind_L_b1AR, name = bind_L_b1AR
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2__8=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2__7=285.0


bind_L__1=(Kf_1_2__8*L_cell*b1AR_cell+(-Kr_1_2__7*L_b1AR_ce))*cell

# Reaction: id = bind_A2R_PKAC, name = bind_A2R_PKAC
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2__9=4375.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2__8=1000.0


bind_A2R_=(Kf_1_2__9*A2RC_cell+(-Kr_1_2__8*A2R_cell*PKAC_cell))*cell

# Reaction: id = inhib_PKAC, name = inhib_PKAC
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2_10=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2__9=0.2


inhib_PKA=(Kf_1_2_10*PKAC_cell*PKI_cell+(-Kr_1_2__9*PKAC_PKI_))*cell

# Reaction: id = bind_RC_cAMP, name = bind_RC_cAMP
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2_11=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2_10=9140.0


bind_RC_c=(Kf_1_2_11*RC_cell*cAMP_cell+(-Kr_1_2_10*ARC_cell))*cell

# Reaction: id = cAMP_synthesis_FskAC, name = cAMP_synthesis_FskAC
# Local Parameter:   id =  Km, name = Km
par Km_1=860.0


cAMP_sy_1=Vmax_cA_1*ATP_cell*1/(Km_1+ATP_cell)*cell

# Reaction: id = add_Ligand, name = add_Ligand

add_Ligan=ar_for__1*cell

# Reaction: id = bind_Gs_AC, name = bind_Gs_AC
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2_12=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2_11=400.0


bind_Gs_A=(Kf_1_2_12*Gsa_gtp_c*AC_cell+(-Kr_1_2_11*GsAC_cell))*cell

# Reaction: id = resens_bark, name = resens_bark
# Local Parameter:   id =  k_barkm, name = k_barkm
par k_barkm=0.0022


resens_ba=k_barkm*b1AR_S464*cell

# Reaction: id = bind_PKAC_AKAR, name = bind_PKAC_AKAR
# Local Parameter:   id =  Kf, name = Kf
par Kf_1_2_13=1000.0

# Local Parameter:   id =  Kr, name = Kr
par Kr_1_2_12=21000.0


bind_PKAC=(Kf_1_2_13*AKAR_cell*PKAC_cell+(-Kr_1_2_12*PKAC_AKAR))*cell

# Reaction: id = inhibit_PDE, name = inhibit_PDE

inhibit_P=(Kf_inhibi*PDE_cell*IBMX_cell+(-Kr_inhibi*PDE_IBMX_))*cell

# Reaction: id = AKARp_dephosph, name = AKARp_dephosph
# Local Parameter:   id =  kcat_PP_AKARp, name = kcat_PP_AKARp
par kcat_PP_A=8.5


AKARp_dep=kcat_PP_A*PP_AKARp_*cell

# Reaction: id = AKAR_phosph, name = AKAR_phosph
# Local Parameter:   id =  kpka_akar, name = kpka_akar
par kpka_akar=54.0


AKAR_phos=kpka_akar*PKAC_AKAR*cell

# Reaction: id = RG_activation, name = RG_activation
# Local Parameter:   id =  k_gact, name = k_gact
par k_gact_1=16.0


RG_activa=k_gact_1*b1AR_Gs_c*cell

# Reaction: id = cAMP_degradation, name = cAMP_degradation
# Local Parameter:   id =  kpde, name = kpde
par kpde=5.0


cAMP_degr=kpde*PDEcAMP_c*cell

# Species:   id = Gsbg_cell, name = Gsbg, affected by kineticLaw

init Gsbg_cell=0.0
dGsbg_cell/dt=(1/(cell))*(( 1.0 * LRG_activ) + (-1.0 * Gs_reasso) + ( 1.0 * RG_activa))

# Species:   id = L_cell, name = L, affected by kineticLaw

init L_cell=0.0
dL_cell/dt=(1/(cell))*((-1.0 * bind_L_b1) + (-1.0 * bind_L__1) + ( 1.0 * add_Ligan))

# Species:   id = Gsa_gdp_cell, name = Gsa_gdp, affected by kineticLaw

par Gsa_gdp_c=0.0
aux Gsa_gdp_c=Gsa_gdp_c
dGsa_gdp_c/dt=(1/(cell))*(( 1.0 * Gs_gtp_hy) + (-1.0 * Gs_reasso))

# Species:   id = Gsa_gtp_cell, name = Gsa_gtp, affected by kineticLaw

par Gsa_gtp_c=0.0
aux Gsa_gtp_c=Gsa_gtp_c
dGsa_gtp_c/dt=(1/(cell))*(( 1.0 * LRG_activ) + (-1.0 * Gs_gtp_hy) + (-1.0 * bind_Gs_A) + ( 1.0 * RG_activa))

# Species:   id = b1AR_S464_cell, name = b1AR_S464, affected by kineticLaw

par b1AR_S464=0.0
aux b1AR_S464=b1AR_S464
db1AR_S464/dt=(1/(cell))*(( 1.0 * desens_ba) + (-1.0 * resens_ba))

# Species:   id = PDEcAMP_cell, name = PDEcAMP, affected by kineticLaw

par PDEcAMP_c=0.0
aux PDEcAMP_c=PDEcAMP_c
dPDEcAMP_c/dt=(1/(cell))*(( 1.0 * bind_PDEc) + (-1.0 * cAMP_degr))

# Species:   id = PDE_cell, name = PDE, affected by kineticLaw

init PDE_cell=0.014
dPDE_cell/dt=(1/(cell))*((-1.0 * bind_PDEc) + (-1.0 * inhibit_P) + ( 1.0 * cAMP_degr))

# Species:   id = ATP_cell, name = ATP
par ATP_cell=5000.0
aux ATP_cell=ATP_cell
#WARNING speciesID: ATP_cell, constant= false  , boundaryCondition = true but is not involved in assignmentRule, rateRule or events !

# Species:   id = b1AR_cell, name = b1AR, affected by kineticLaw

init b1AR_cell=0.0132
db1AR_cell/dt=(1/(cell))*((-1.0 * bind_b1AR) + (-1.0 * bind_b1_1) + (-1.0 * desens_pk) + (-1.0 * bind_L__1) + ( 1.0 * RG_activa))

# Species:   id = Gs_cell, name = Gs, affected by kineticLaw

init Gs_cell=3.83
dGs_cell/dt=(1/(cell))*((-1.0 * bind_Lb1A) + (-1.0 * bind_b1_1) + ( 1.0 * Gs_reasso))

# Species:   id = A2RC_cell, name = A2RC, affected by kineticLaw

init A2RC_cell=0.0
dA2RC_cell/dt=(1/(cell))*(( 1.0 * bind_cAMP) + (-1.0 * bind_A2R_))

# Species:   id = A2R_cell, name = A2R, affected by kineticLaw

init A2R_cell=0.0
dA2R_cell/dt=(1/(cell))*(( 1.0 * bind_A2R_))

# Species:   id = PKAC_cell, name = PKAC, affected by kineticLaw

init PKAC_cell=0.0
dPKAC_cell/dt=(1/(cell))*(( 1.0 * bind_A2R_) + (-1.0 * inhib_PKA) + (-1.0 * bind_PKAC) + ( 1.0 * AKAR_phos))

# Species:   id = ARC_cell, name = ARC, affected by kineticLaw

init ARC_cell=0.0
dARC_cell/dt=(1/(cell))*((-1.0 * bind_cAMP) + ( 1.0 * bind_RC_c))

# Species:   id = PKAC_AKAR_cell, name = PKAC_AKAR, affected by kineticLaw

par PKAC_AKAR=0.0
aux PKAC_AKAR=PKAC_AKAR
dPKAC_AKAR/dt=(1/(cell))*(( 1.0 * bind_PKAC) + (-1.0 * AKAR_phos))

# Species:   id = Propranolol_cell, name = Propranolol, affected by kineticLaw

par Propran_1=0.0
aux Propran_1=Propran_1
dPropran_1/dt=(1/(cell))*((-1.0 * bind_b1AR) + ( 1.0 * add_propr))

# Species:   id = b1ARinhib_cell, name = b1ARinhib, affected by kineticLaw

par b1ARinhib=0.0
aux b1ARinhib=b1ARinhib
db1ARinhib/dt=(1/(cell))*(( 1.0 * bind_b1AR))

# Species:   id = light_spot_cell, name = light_spot
# Warning species is not changed by either rules or reactions

par light_spo=0.0
aux light_spo=light_spo

# Species:   id = AC_cell, name = AC, affected by kineticLaw

init AC_cell=0.0497
dAC_cell/dt=(1/(cell))*((-1.0 * bind_FskA) + (-1.0 * bind_Gs_A))

# Species:   id = PKI_cell, name = PKI, affected by kineticLaw

init PKI_cell=0.18
dPKI_cell/dt=(1/(cell))*((-1.0 * inhib_PKA))

# Species:   id = PKAC_PKI_cell, name = PKAC_PKI, affected by kineticLaw

par PKAC_PKI_=0.0
aux PKAC_PKI_=PKAC_PKI_
dPKAC_PKI_/dt=(1/(cell))*(( 1.0 * inhib_PKA))

# Species:   id = RC_cell, name = RC, affected by kineticLaw

init RC_cell=1.18
dRC_cell/dt=(1/(cell))*((-1.0 * bind_RC_c))

# Species:   id = b1AR_Gs_cell, name = b1AR_Gs, affected by kineticLaw

par b1AR_Gs_c=0.0
aux b1AR_Gs_c=b1AR_Gs_c
db1AR_Gs_c/dt=(1/(cell))*(( 1.0 * bind_b1_1) + (-1.0 * bind_L_b1) + (-1.0 * RG_activa))

# Species:   id = cAMP_cell, name = cAMP, affected by kineticLaw

init cAMP_cell=0.0
dcAMP_cell/dt=(1/(cell))*(( 1.0 * cAMP_synt) + ( 1.0 * cAMP_phot) + (-1.0 * bind_cAMP) + (-1.0 * bind_PDEc) + (-1.0 * bind_RC_c) + ( 1.0 * cAMP_sy_1))

# Species:   id = GsAC_cell, name = GsAC, affected by kineticLaw

init GsAC_cell=0.0
dGsAC_cell/dt=(1/(cell))*(( 1.0 * bind_Gs_A))

# Species:   id = IBMX_cell, name = IBMX, affected by kineticLaw

init IBMX_cell=0.0
dIBMX_cell/dt=(1/(cell))*((-1.0 * inhibit_P))

# Species:   id = PDE_IBMX_cell, name = PDE_IBMX, affected by kineticLaw

par PDE_IBMX_=0.0
aux PDE_IBMX_=PDE_IBMX_
dPDE_IBMX_/dt=(1/(cell))*(( 1.0 * inhibit_P))

# Species:   id = Fsk_cell, name = Fsk, affected by kineticLaw

init Fsk_cell=0.0
dFsk_cell/dt=(1/(cell))*((-1.0 * bind_FskA))

# Species:   id = FskAC_cell, name = FskAC, affected by kineticLaw

par FskAC_cel=0.0
aux FskAC_cel=FskAC_cel
dFskAC_cel/dt=(1/(cell))*(( 1.0 * bind_FskA))

# Species:   id = b1AR_p_cell, name = b1AR_p, affected by kineticLaw

par b1AR_p_ce=0.0
aux b1AR_p_ce=b1AR_p_ce
db1AR_p_ce/dt=(1/(cell))*(( 1.0 * desens_pk))

# Species:   id = L_b1AR_cell, name = L_b1AR, affected by kineticLaw

par L_b1AR_ce=0.0
aux L_b1AR_ce=L_b1AR_ce
dL_b1AR_ce/dt=(1/(cell))*(( 1.0 * LRG_activ) + (-1.0 * bind_Lb1A) + (-1.0 * desens_ba) + ( 1.0 * bind_L__1) + ( 1.0 * resens_ba))

# Species:   id = AKAR_cell, name = AKAR, affected by kineticLaw

init AKAR_cell=10.0
dAKAR_cell/dt=(1/(cell))*((-1.0 * bind_PKAC) + ( 1.0 * AKARp_dep))

# Species:   id = AKARp_cell, name = AKARp, affected by kineticLaw

par AKARp_cel=0.0
aux AKARp_cel=AKARp_cel
dAKARp_cel/dt=(1/(cell))*((-1.0 * bind_AKAR) + ( 1.0 * AKAR_phos))

# Species:   id = PP_cell, name = PP, affected by kineticLaw

init PP_cell=0.67
dPP_cell/dt=(1/(cell))*((-1.0 * bind_AKAR) + ( 1.0 * AKARp_dep))

# Species:   id = PP_AKARp_cell, name = PP_AKARp, affected by kineticLaw

par PP_AKARp_=0.0
aux PP_AKARp_=PP_AKARp_
dPP_AKARp_/dt=(1/(cell))*(( 1.0 * bind_AKAR) + (-1.0 * AKARp_dep))

# Species:   id = DMNB_cAMP_cell, name = DMNB_cAMP, affected by kineticLaw

par DMNB_cAMP=3.01
aux DMNB_cAMP=DMNB_cAMP
dDMNB_cAMP/dt=(1/(cell))*((-1.0 * cAMP_phot))

# Species:   id = L_b1AR_Gs_cell, name = L_b1AR_Gs, affected by kineticLaw

par L_b1AR_Gs=0.0
aux L_b1AR_Gs=L_b1AR_Gs
dL_b1AR_Gs/dt=(1/(cell))*((-1.0 * LRG_activ) + ( 1.0 * bind_Lb1A) + ( 1.0 * bind_L_b1))


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if ((t  >  ton_local) && (t  <  toff_loca)) then (light_spo) else (0)

piecew2=if (t  >  1000) then (1000) else (0)

piecew3=if (t  >  1000) then (30000) else (0)

piecew4=if (t  >  t_propadd) then ((Propranol+(-Propran_1))*1/tauPropra) else (0)

piecew5=if (t  >  t_Ladd) then ((L_pipette+(-L_cell))*1/tauL) else (0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

