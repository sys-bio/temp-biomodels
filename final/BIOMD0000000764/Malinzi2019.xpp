
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Malinzi2019 - chemovirotherapy
#
# isDescribedBy http://identifiers.org/pubmed/30984283
# is http://identifiers.org/biomodels.db/MODEL1907260017
# is http://identifiers.org/biomodels.db/BIOMD0000000764
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = tumor_grow_0, name = tumor grow
tumor_gro(alph,U,I)=(alph*U*(1-U-I))


# FunctionDefinition id = killing, name = killing
killing(d,C,S)=(d*C*S)


# FunctionDefinition id = infection, name = infection
infection(bet,U,V)=(bet*U*V)


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = burst, name = burst
burst(b,I)=(b*I)


# Compartment: id = tme, name = tme, constant
par tme=1.0

# Parameter:   id =  alph, name = alph, defined by a Rule

# Parameter:   id =  bet, name = bet, defined by a Rule

# Parameter:   id =  d0, name = d0, defined by a Rule

# Parameter:   id =  d1, name = d1, defined by a Rule

# Parameter:   id =  b, name = b, defined by a Rule

# Parameter:   id =  y, name = y, defined by a Rule

# Parameter:   id =  p, name = p, defined by a Rule

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.206

# Parameter:   id =  delta, name = delta, constant
par delta=0.5115

# Parameter:   id =  beta, name = beta, constant
par beta=0.001

# Parameter:   id =  delta0, name = delta0, constant
par delta0=0.005

# Parameter:   id =  delta1, name = delta1, constant
par delta1=0.006

# Parameter:   id =  bb, name = bb, constant
par bb=2.0

# Parameter:   id =  K, name = K, constant
par K=1000000.0

# Parameter:   id =  gamma, name = gamma, constant
par gamma=0.001

# Parameter:   id =  q, name = q, constant
par q=5.0

# Parameter:   id =  lamda, name = lamda, constant
par lamda=4.16

# Parameter:   id =  a, name = a, defined by a Rule

# Parameter:   id =  aa, name = aa, constant
par aa=0.206

# Parameter:   id =  V0, name = V0, defined by a Rule

# Parameter:   id =  C0, name = C0, defined by a Rule

# Parameter:   id =  f, name = f, defined by a Rule

# Parameter:   id =  k, name = k, defined by a Rule

# Parameter:   id =  Metabolite_3, name = Initial for C, constant
par Metabolit=0.1

# assignmentRule: variable = C0
C0=Metabolit
aux C0=C0

# assignmentRule: variable = d1
d1=delta1*C0/delta
aux d1=d1

# assignmentRule: variable = alph
alph=alpha/delta
aux alph=alph

# assignmentRule: variable = y
y=gamma/delta
aux y=y

# assignmentRule: variable = p
p=lamda/delta
aux p=p

# assignmentRule: variable = d0
d0=delta0*C0/delta
aux d0=d0

# assignmentRule: variable = V0
V0=K
aux V0=V0

# assignmentRule: variable = b
b=bb*K/V0
aux b=b

# assignmentRule: variable = bet
bet=beta*V0/delta
aux bet=bet

# assignmentRule: variable = a
a=aa/delta
aux a=a

# assignmentRule: variable = f
f=q/(delta*C0)
aux f=f

# assignmentRule: variable = k
k_1=f*exp((-a)*t)
aux k_1=k_1

# Reaction: id = tumor_grow, name = tumor grow

tumor_g_1=tme*tumor_gro(alph, U, I)

# Reaction: id = tumor_killing, name = tumor killing

tumor_kil=tme*killing(d0, C, U)

# Reaction: id = tumor_infection, name = tumor infection

tumor_inf=tme*infection(bet, U, V)

# Reaction: id = infected_tumor_death, name = infected tumor death
# Local Parameter:   id =  k1, name = k1
par k1=1.0


infected_=tme*k1*I

# Reaction: id = infected_tumor_killing, name = infected tumor killing

infecte_1=tme*killing(d1, C, I)

# Reaction: id = virus_burst, name = virus burst

virus_bur=tme*burst(b, I)

# Reaction: id = virus_death, name = virus death

virus_dea=tme*y*V

# Reaction: id = drug_infusion, name = drug infusion

drug_infu=tme*Constant_(k_1)

# Reaction: id = drug_decay, name = drug decay

drug_deca=tme*p*C

# Species:   id = U, name = U, affected by kineticLaw

init U=1.0
dU/dt=(1/(tme))*(( 1.0 * tumor_g_1) + (-1.0 * tumor_kil) + (-1.0 * tumor_inf))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.0
dI/dt=(1/(tme))*(( 1.0 * tumor_inf) + (-1.0 * infected_) + (-1.0 * infecte_1))

# Species:   id = V, name = V, affected by kineticLaw

init V=0.1
dV/dt=(1/(tme))*((-1.0 * tumor_inf) + ( 1.0 * virus_bur) + (-1.0 * virus_dea))

# Species:   id = C, name = C, affected by kineticLaw

init C=0.1
dC/dt=(1/(tme))*(( 1.0 * drug_infu) + (-1.0 * drug_deca))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

