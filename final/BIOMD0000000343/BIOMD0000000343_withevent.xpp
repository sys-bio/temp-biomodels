
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Brannmark2010_InsulinSignalling_Mifamodel_Fig5D
#
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment_0000001, name = compartemnt 1, constant
par compartme=1.0

# Parameter:   id =  k1a, name = k1a, constant
par k1a=0.3892881852

# Parameter:   id =  k1abasic, name = k1abasic, constant
par k1abasic=0.012452744

# Parameter:   id =  k1b, name = k1b, constant
par k1b=0.02000224505

# Parameter:   id =  k1e, name = k1e, constant
par k1e=4.38334E-5

# Parameter:   id =  k1f, name = k1f, constant
par k1f=20.0726035037

# Parameter:   id =  k1g, name = k1g, constant
par k1g=286.6994648072

# Parameter:   id =  k1r, name = k1r, constant
par k1r=3.6327773442

# Parameter:   id =  k21, name = k21, constant
par k21=1.6722503302

# Parameter:   id =  k22, name = k22, constant
par k22=0.036381619

# Parameter:   id =  km2, name = km2, constant
par km2=32.5942371891

# Parameter:   id =  k3, name = k3, constant
par k3=1.6286590231

# Parameter:   id =  km3, name = km3, constant
par km3=0.1131073982

# Parameter:   id =  ky1, name = ky1, constant
par ky1=152.9631668536

# Parameter:   id =  ky2, name = ky2, constant
par ky2=8936.219557405

# Parameter:   id =  kyanna, name = kyanna, constant
par kyanna=16760.1203140926

# Parameter:   id =  kyDosR, name = kyDosR, constant
par kyDosR=13740.4321729991

# Parameter:   id =  ins, name = ins
par ins=0.65

# Parameter:   id =  k1c, name = k1c, constant
par k1c=0.3635167928

# Parameter:   id =  k1d, name = k1d, constant
par k1d=1580.6782649401

# assignmentRule: variable = intamount
intamount=(IRi+IRip)/10
aux intamount=intamount

# assignmentRule: variable = measIRp
measIRp=ky1*(IRp+IRip)
aux measIRp=measIRp

# assignmentRule: variable = measdosR
measdosR=kyDosR*IRSip
aux measdosR=measdosR

# assignmentRule: variable = measanna
measanna=kyanna*IRSip
aux measanna=measanna

# assignmentRule: variable = measdoublestep
measdoubl=ky2*IRSip
aux measdoubl=measdoubl

# assignmentRule: variable = V1a
V1a=k1a*ins*IR+k1abasic*IR
aux V1a=V1a

# assignmentRule: variable = V1b
V1b=k1b*IRins
aux V1b=V1b

# assignmentRule: variable = V1c
V1c=k1c*IRins
aux V1c=V1c

# assignmentRule: variable = V1d
V1d=k1d*IRp
aux V1d=V1d

# assignmentRule: variable = V1e
V1e=IRip*(k1e+k1f*Xp)/(1+Xp)
aux V1e=V1e

# assignmentRule: variable = V1g
V1g=k1g*IRp
aux V1g=V1g

# assignmentRule: variable = V1r
V1r=k1r*IRi
aux V1r=V1r

# assignmentRule: variable = V2
V2=k21*(IRp+k22*IRip)*IRS
aux V2=V2

# assignmentRule: variable = Vm2
Vm2=km2*IRSip
aux Vm2=Vm2

# assignmentRule: variable = V3
V3=k3*X*IRSip
aux V3=V3

# assignmentRule: variable = Vm3
Vm3=km3*Xp
aux Vm3=Vm3

# assignmentRule: variable = simXP
simXP=Xp
aux simXP=simXP

# rateRule: variable = IR
init IR=10.0
dIR/dt=-V1a+V1b+V1r+V1g

# rateRule: variable = IRins
init IRins=0.0
dIRins/dt=V1a-V1b-V1c

# rateRule: variable = IRp
init IRp=0.0
dIRp/dt=V1c-V1d-V1g

# rateRule: variable = IRip
init IRip=0.0
dIRip/dt=V1d-V1e

# rateRule: variable = IRi
init IRi=0.0
dIRi/dt=V1e-V1r

# rateRule: variable = IRS
init IRS=10.0
dIRS/dt=-V2+Vm2

# rateRule: variable = IRSip
init IRSip=0.0
dIRSip/dt=V2-Vm2

# rateRule: variable = X
init X=10.0
dX/dt=-V3+Vm3

# rateRule: variable = Xp
init Xp=0.0
dXp/dt=V3-Vm3

# Species:   id = IR, name = IR, involved in a rule 

# Species:   id = IRins, name = IRins, involved in a rule 

# Species:   id = IRp, name = IRp, involved in a rule 

# Species:   id = IRip, name = IRip, involved in a rule 

# Species:   id = IRi, name = IRi, involved in a rule 

# Species:   id = IRS, name = IRS, involved in a rule 

# Species:   id = IRSip, name = IRSip, involved in a rule 

# Species:   id = X, name = X, involved in a rule 

# Species:   id = Xp, name = Xp, involved in a rule 

# Species:   id = V1a, name = V1a, involved in a rule 

# Species:   id = V1b, name = V1b, involved in a rule 

# Species:   id = V1c, name = V1c, involved in a rule 

# Species:   id = V1d, name = V1d, involved in a rule 

# Species:   id = V1e, name = V1e, involved in a rule 

# Species:   id = V1g, name = V1g, involved in a rule 

# Species:   id = V1r, name = v1r, involved in a rule 

# Species:   id = V2, name = V2, involved in a rule 

# Species:   id = Vm2, name = Vm2, involved in a rule 

# Species:   id = V3, name = V3, involved in a rule 

# Species:   id = Vm3, name = Vm3, involved in a rule 

# Species:   id = simXP, name = simXp, involved in a rule 

# Species:   id = intamount, name = intamount, involved in a rule 

# Species:   id = measIRp, name = measIRp, involved in a rule 

# Species:   id = measdoublestep, name = measdoublestep, involved in a rule 

# Species:   id = measanna, name = measanna, involved in a rule 

# Species:   id = measdosR, name = measdosR, involved in a rule 

# event : event_1
event_1=if (t == 0) then (1.5) else (0.2)
global 1 {event_1 - 1.1} {ins=1.2}

# event : event_2
event_2=if (t >= 4) then (1.5) else (0.2)
global 1 {event_2 - 1.1} {ins=10}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

