
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Hu2019 - Modeling Pancreatic Cancer Dynamics with Immunotherapy
#
# isDescribedBy http://identifiers.org/pubmed/30843136
# isDerivedFrom http://identifiers.org/doi/10.1142/S021833901750005X
# is http://identifiers.org/biomodels.db/MODEL1908130001
# is http://identifiers.org/biomodels.db/BIOMD0000000792
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_TSC_Production, name = Function_for_TSC_Production
Function_(beta_5,x,z,k_5)=(beta_5*x*z/(k_5+x))


# FunctionDefinition id = Function_for_TPC_Production_PSC, name = Function_for_TPC_Production_PSC
Functio_1(r_4,x,y,m_4,v)=(r_4*x*y/(m_4+v))


# FunctionDefinition id = Function_for_PSC_Tumor_Growth, name = Function_for_PSC_Tumor_Growth
Functio_2(r_2,beta_2,w,k_2,y,b_2)=((r_2+beta_2*w/(k_2+w))*y*(1-b_2*y))


# FunctionDefinition id = Function_for_PCC_Tumor_Killing, name = Function_for_PCC_Tumor_Killing
Functio_3(delta_1,x,z,m_1,w)=(delta_1*x*z/(m_1+w))


# FunctionDefinition id = Function_for_Effector_Cells_Production, name = Function_for_Effector_Cells_Production
Functio_4(beta_3,z,v,k_3,m_3,w)=(beta_3*z*v/((k_3+v)*(m_3+w)))


# FunctionDefinition id = Function_for_PCC_Tumor_Growth, name = Function_for_PCC_Tumor_Growth
Functio_5(r_1,beta_1,y,x,b_1)=((r_1+beta_1*y)*x*(1-b_1*x))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  r_1, name = r_1, constant
par r_1=0.0195

# Parameter:   id =  b_1, name = b_1, constant
par b_1=1.02E-11

# Parameter:   id =  beta_1, name = beta_1, constant
par beta_1=1.7857E-12

# Parameter:   id =  m_1, name = m_1, constant
par m_1=1.0E9

# Parameter:   id =  delta_1, name = delta_1, constant
par delta_1=0.96

# Parameter:   id =  r_2, name = r_2, constant
par r_2=0.00195

# Parameter:   id =  beta_2, name = beta_2, constant
par beta_2=0.125

# Parameter:   id =  k_2, name = k_2, constant
par k_2=5.6E10

# Parameter:   id =  b_2, name = b_2, constant
par b_2=1.7857E-9

# Parameter:   id =  mu_2, name = mu_2, constant
par mu_2=0.015

# Parameter:   id =  beta_3, name = beta_3, constant
par beta_3=124.5

# Parameter:   id =  k_3, name = k_3, constant
par k_3=2.0E10

# Parameter:   id =  m_3, name = m_3, constant
par m_3=1000000.0

# Parameter:   id =  r_3, name = r_3, constant
par r_3=3500.0

# Parameter:   id =  mu_3, name = mu_3, constant
par mu_3=0.02

# Parameter:   id =  beta_4, name = beta_4, constant
par beta_4=5.85

# Parameter:   id =  k_4, name = k_4, constant
par k_4=1000000.0

# Parameter:   id =  mu_4, name = mu_4, constant
par mu_4=0.034

# Parameter:   id =  r_4, name = r_4, constant
par r_4=12500.0

# Parameter:   id =  m_4, name = m_4, constant
par m_4=8.9E10

# Parameter:   id =  beta_5, name = beta_5, constant
par beta_5=7.3

# Parameter:   id =  k_5, name = k_5, constant
par k_5=1000000.0

# Parameter:   id =  mu_5, name = mu_5, constant
par mu_5=0.034

# Parameter:   id =  D_0, name = D_0, constant
par D_0=5.0E10

# Parameter:   id =  p, name = p, constant
par p=0.9

# Parameter:   id =  k, name = k, constant
par k=1.0

# Parameter:   id =  mu_6, name = mu_6, constant
par mu_6=0.66

# Reaction: id = PCC_Tumor_Growth, name = PCC_Tumor_Growth

PCC_Tumor=compartme*Functio_5(r_1, beta_1, y_PSC, x_PCC, b_1)

# Reaction: id = PCC_Tumor_Killing, name = PCC_Tumor_Killing

PCC_Tum_1=compartme*Functio_3(delta_1, x_PCC, z_Effecto, m_1, w_TPC)

# Reaction: id = PSC_Tumor_Growth, name = PSC_Tumor_Growth

PSC_Tumor=compartme*Functio_2(r_2, beta_2, w_TPC, k_2, y_PSC, b_2)

# Reaction: id = PSC_Natural_Death, name = PSC_Natural_Death

PSC_Natur=compartme*mu_2*y_PSC

# Reaction: id = Effector_Cells_Production, name = Effector_Cells_Production

Effector_=compartme*Functio_4(beta_3, z_Effecto, v_TSC, k_3, m_3, w_TPC)

# Reaction: id = Effector_Cells_Apoptosis, name = Effector_Cells_Apoptosis

Effecto_1=compartme*mu_3*z_Effecto

# Reaction: id = Effector_Cells_Production_Constant, name = Effector_Cells_Production_Constant

Effecto_2=compartme*Constant_(r_3)

# Reaction: id = TPC_Production, name = TPC_Production
# Local Parameter:   id =  v, name = v
par v=0.1


TPC_Produ=compartme*Constant_(v)

# Reaction: id = TPC_Decay, name = TPC_Decay

TPC_Decay=compartme*mu_4*w_TPC

# Reaction: id = TPC_Production_PSC, name = TPC_Production_PSC

TPC_Pro_1=compartme*Functio_1(r_4, x_PCC, y_PSC, m_4, v_TSC)

# Reaction: id = TSC_Production, name = TSC_Production

TSC_Produ=compartme*Function_(beta_5, x_PCC, z_Effecto, k_5)

# Reaction: id = TSC_Decay, name = TSC_Decay

TSC_Decay=compartme*mu_5*v_TSC

# Reaction: id = siRNA_Decay, name = siRNA_Decay

siRNA_Dec=compartme*mu_6*R_siRNA

# Reaction: id = siRNA_Dose, name = siRNA_Dose

siRNA_Dos=compartme*Constant_(D_0)

# Species:   id = x_PCC, name = x_PCC, affected by kineticLaw

init x_PCC=1.0E9
dx_PCC/dt=(1/(compartme))*(( 1.0 * PCC_Tumor) + (-1.0 * PCC_Tum_1))

# Species:   id = y_PSC, name = y_PSC, affected by kineticLaw

init y_PSC=5600000.0
dy_PSC/dt=(1/(compartme))*(( 1.0 * PSC_Tumor) + (-1.0 * PSC_Natur))

# Species:   id = z_Effector_Cells, name = z_Effector_Cells, affected by kineticLaw

par z_Effecto=1.9E8
aux z_Effecto=z_Effecto
dz_Effecto/dt=(1/(compartme))*(( 1.0 * Effector_) + (-1.0 * Effecto_1) + ( 1.0 * Effecto_2))

# Species:   id = w_TPC, name = w_TPC, affected by kineticLaw

init w_TPC=50000.0
dw_TPC/dt=(1/(compartme))*(( 1.0 * TPC_Produ) + (-1.0 * TPC_Decay) + ( 1.0 * TPC_Pro_1))

# Species:   id = v_TSC, name = v_TSC, affected by kineticLaw

init v_TSC=9.4
dv_TSC/dt=(1/(compartme))*(( 1.0 * TSC_Produ) + (-1.0 * TSC_Decay))

# Species:   id = R_siRNA, name = R_siRNA, affected by kineticLaw

init R_siRNA=1.0
dR_siRNA/dt=(1/(compartme))*((-1.0 * siRNA_Dec) + ( 1.0 * siRNA_Dos))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

