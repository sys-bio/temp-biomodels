
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Mager2005 - Quasi-equilibrium pharmacokinetic model for drugs exhibiting target-mediated drug disposition
#
# isDescribedBy http://identifiers.org/pubmed/16180117
# isDerivedFrom http://identifiers.org/pubmed/11999290
# is http://identifiers.org/biomodels.db/MODEL1907290001
# is http://identifiers.org/biomodels.db/BIOMD0000000765
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_Complex_Dissociation, name = Function_for_Complex_Dissociation
Function_(k_off,RC)=(k_off*RC)


# FunctionDefinition id = Function_for_Drug_Distribution_Tissue_to_Central, name = Function_for_Drug_Distribution_Tissue_to_Central
Functio_1(k_tp,A_T,V_c)=(k_tp*A_T/V_c)


# FunctionDefinition id = Function_for_Drug_Exit_Central, name = Function_for_Drug_Exit_Central
Functio_2(k_pt,C,k_el)=((k_el+k_pt)*C)


# FunctionDefinition id = Function_for_Complex_Internalisation, name = Function_for_Complex_Internalisation
Functio_3(k_off,k_int,RC)=((k_off+k_int)*RC)


# FunctionDefinition id = Function_for_Drug_Distribution_Central_to_Tissue, name = Function_for_Drug_Distribution_Central_to_Tissue
Functio_4(k_pt,C,V_c)=(k_pt*C*V_c)


# Compartment: id = Central, name = Central, constant
par Central=1.0

# Compartment: id = Peripheral_Tissue, name = Peripheral Tissue, constant
par Periphera=1.0

# Parameter:   id =  k_el, name = k_el, constant
par k_el=1.0

# Parameter:   id =  V_c, name = V_c, constant
par V_c=10.0

# Parameter:   id =  k_on, name = k_on, constant
par k_on=0.1

# Parameter:   id =  K_D, name = K_D, constant
par K_D=1.0

# Parameter:   id =  k_int, name = k_int, constant
par k_int=0.0

# Parameter:   id =  k_deg, name = k_deg, constant
par k_deg=0.566

# Parameter:   id =  k_syn, name = k_syn, constant
par k_syn=0.0

# Parameter:   id =  k_off, name = k_off, constant
par k_off=0.1

# Parameter:   id =  k_tp, name = k_tp, constant
par k_tp=0.0

# Parameter:   id =  k_pt, name = k_pt, constant
par k_pt=0.0

# Parameter:   id =  C_Concentration, name = C_Concentration, defined by a Rule

# Parameter:   id =  C_tot, name = C_tot, defined by a Rule

# Parameter:   id =  ModelValue_1, name = Initial for V_c, constant
par ModelValu=10.0

# assignmentRule: variable = C_Concentration
C_Concent=C/ModelValu
aux C_Concent=C_Concent

# assignmentRule: variable = C_tot
C_tot=(C+RC)/ModelValu
aux C_tot=C_tot

# Reaction: id = Complex_Formation, name = Complex_Formation

Complex_F=Central*k_on*R*C

# Reaction: id = Complex_Dissociation, name = Complex_Dissociation

Complex_D=Central*Function_(k_off, RC)

# Reaction: id = Complex_Internalisation, name = Complex_Internalisation

Complex_I=Central*Functio_3(k_off, k_int, RC)

# Reaction: id = Drug_Exit_Central, name = Drug_Exit_Central

Drug_Exit=Central*Functio_2(k_pt, C, k_el)

# Reaction: id = Drug_Distribution_Tissue_to_Central, name = Drug_Distribution_Tissue_to_Central

Drug_Dist=Functio_1(k_tp, A_T, V_c)

# Reaction: id = Drug_Distribution_Central_to_Tissue, name = Drug_Distribution_Central_to_Tissue

Drug_Di_1=Functio_4(k_pt, C, V_c)

# Reaction: id = Drug_Distribution_Tissue_to_Central_MA, name = Drug_Distribution_Tissue_to_Central_MA

Drug_Di_2=Periphera*k_tp*A_T

# Reaction: id = Receptor_Synthesis, name = Receptor_Synthesis

Receptor_=Central*Constant_(k_syn)

# Reaction: id = Receptor_Dergradation, name = Receptor_Dergradation

Recepto_1=Central*k_deg*R

# Species:   id = C, name = C, affected by kineticLaw

init C=4000.0
dC/dt=(1/(Central))*((-1.0 * Complex_F) + ( 1.0 * Complex_D) + (-1.0 * Drug_Exit) + ( 1.0 * Drug_Dist))

# Species:   id = A_T, name = A_T, affected by kineticLaw

init A_T=0.0
dA_T/dt=(1/(Periphera))*(( 1.0 * Drug_Di_1) + (-1.0 * Drug_Di_2))

# Species:   id = R, name = R, affected by kineticLaw

init R=53.0
dR/dt=(1/(Central))*((-1.0 * Complex_F) + ( 1.0 * Complex_D) + ( 1.0 * Receptor_) + (-1.0 * Recepto_1))

# Species:   id = RC, name = RC, affected by kineticLaw

init RC=0.0
dRC/dt=(1/(Central))*(( 1.0 * Complex_F) + (-1.0 * Complex_I))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

