
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Sivakumar2011 - Notch Signaling Pathway
#
# is http://identifiers.org/biomodels.db/MODEL1101270000
# is http://identifiers.org/biomodels.db/BIOMD0000000396
# isDescribedBy http://identifiers.org/pubmed/21978399
# isDerivedFrom http://identifiers.org/panther.pathway/P00045
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = default, name = default, constant
par default=1.0

# Compartment: id = c1, name = cytosol, constant
par c1=1.0

# Compartment: id = c5, name = nucleus, constant
par c5=1.0

# Parameter:   id =  kcatp_r8, name = kcatp_r8, constant
par kcatp_r8=0.5

# Parameter:   id =  kM_r8_s15, name = kM_r8_s15, constant
par kM_r8_s15=1.0

# Parameter:   id =  kcatn_r8, name = kcatn_r8, constant
par kcatn_r8=1.5

# Parameter:   id =  kM_r8_s19, name = kM_r8_s19, constant
par kM_r8_s19=2.0

# Parameter:   id =  kM_r8_s63, name = kM_r8_s63, constant
par kM_r8_s63=1.5

# Parameter:   id =  kcatp_r9, name = kcatp_r9, constant
par kcatp_r9=1.5

# Parameter:   id =  kM_r9_s7, name = kM_r9_s7, constant
par kM_r9_s7=1.0

# Parameter:   id =  kcatn_r9, name = kcatn_r9, constant
par kcatn_r9=0.04

# Parameter:   id =  kM_r9_s22, name = kM_r9_s22, constant
par kM_r9_s22=0.05

# Parameter:   id =  kass_r10, name = kass_r10, constant
par kass_r10=2.0

# Parameter:   id =  kdiss_r10, name = kdiss_r10, constant
par kdiss_r10=0.01

# Parameter:   id =  kI_r10_s25, name = kI_r10_s25, constant
par kI_r10_s2=1.0

# Parameter:   id =  kcatp_r11, name = kcatp_r11, constant
par kcatp_r11=0.5

# Parameter:   id =  kM_r11_s32, name = kM_r11_s32, constant
par kM_r11_s3=1.0

# Parameter:   id =  kcatn_r11, name = kcatn_r11, constant
par kcatn_r11=0.5

# Parameter:   id =  kM_r11_s26, name = kM_r11_s26, constant
par kM_r11_s2=1.5

# Parameter:   id =  kM_r11_s28, name = kM_r11_s28, constant
par kM_r11__1=1.0

# Parameter:   id =  kass_r13, name = kass_r13, constant
par kass_r13=0.5

# Parameter:   id =  kdiss_r13, name = kdiss_r13, constant
par kdiss_r13=2.0

# Parameter:   id =  kcatp_r16, name = kcatp_r16, constant
par kcatp_r16=1.0

# Parameter:   id =  kcatn_r16, name = kcatn_r16, constant
par kcatn_r16=1.0

# Parameter:   id =  kM_r16_s39, name = kM_r16_s39, constant
par kM_r16_s3=1.0

# Parameter:   id =  ki_r16_s39, name = ki_r16_s39, constant
par ki_r16_s3=1.0

# Parameter:   id =  kass_r17, name = kass_r17, constant
par kass_r17=1.5

# Parameter:   id =  kdiss_r17, name = kdiss_r17, constant
par kdiss_r17=1.5

# Parameter:   id =  kcatp_r18, name = kcatp_r18, constant
par kcatp_r18=1.0

# Parameter:   id =  kcatn_r18, name = kcatn_r18, constant
par kcatn_r18=1.5

# Parameter:   id =  kM_r18_s4, name = kM_r18_s4, constant
par kM_r18_s4=1.0

# Parameter:   id =  ki_r18_s4, name = ki_r18_s4, constant
par ki_r18_s4=1.5

# Parameter:   id =  kass_r21, name = kass_r21, constant
par kass_r21=1.5

# Parameter:   id =  kdiss_r21, name = kdiss_r21, constant
par kdiss_r21=1.5

# Parameter:   id =  kI_r21_s2, name = kI_r21_s2, constant
par kI_r21_s2=1.5

# Parameter:   id =  kcatp_r25, name = kcatp_r25, constant
par kcatp_r25=1.0

# Parameter:   id =  kM_r25_s53, name = kM_r25_s53, constant
par kM_r25_s5=1.5

# Parameter:   id =  kcatn_r25, name = kcatn_r25, constant
par kcatn_r25=1.5

# Parameter:   id =  kM_r25_s60, name = kM_r25_s60, constant
par kM_r25_s6=1.25

# Parameter:   id =  kM_r25_s15, name = kM_r25_s15, constant
par kM_r25_s1=1.5

# Parameter:   id =  kcatp_r26, name = kcatp_r26, constant
par kcatp_r26=0.5

# Parameter:   id =  kM_r26_s25, name = kM_r26_s25, constant
par kM_r26_s2=1.7

# Parameter:   id =  kcatn_r26, name = kcatn_r26, constant
par kcatn_r26=1.0

# Parameter:   id =  kM_r26_s64, name = kM_r26_s64, constant
par kM_r26_s6=1.61

# Parameter:   id =  kcatp_r28, name = kcatp_r28, constant
par kcatp_r28=1.71

# Parameter:   id =  kcatn_r28, name = kcatn_r28, constant
par kcatn_r28=1.48

# Parameter:   id =  kM_r28_s41, name = kM_r28_s41, constant
par kM_r28_s4=1.64

# Parameter:   id =  ki_r28_s41, name = ki_r28_s41, constant
par ki_r28_s4=1.28

# Parameter:   id =  kcatp_r29, name = kcatp_r29, constant
par kcatp_r29=1.86

# Parameter:   id =  kM_r29_s67, name = kM_r29_s67, constant
par kM_r29_s6=1.61

# Parameter:   id =  kcatn_r29, name = kcatn_r29, constant
par kcatn_r29=1.78

# Parameter:   id =  kM_r29_s18, name = kM_r29_s18, constant
par kM_r29_s1=0.15

# Parameter:   id =  kM_r29_s15, name = kM_r29_s15, constant
par kM_r29__1=1.87

# Parameter:   id =  kass_r30, name = kass_r30, constant
par kass_r30=1.95

# Parameter:   id =  kass_r31, name = kass_r31, constant
par kass_r31=0.055

# Parameter:   id =  kdiss_r31, name = kdiss_r31, constant
par kdiss_r31=2.0

# Parameter:   id =  kass_re16, name = kass_re16, constant
par kass_re16=0.004

# Parameter:   id =  kdiss_re16, name = kdiss_re16, constant
par kdiss_re1=2.0

# Parameter:   id =  kI_re16_s81, name = kI_re16_s81, constant
par kI_re16_s=0.00594

# Reaction: id = r30

r30=kass_r30*s32

# Reaction: id = r31

r31=kass_r31*s35-kdiss_r31*s75

# Reaction: id = r8

r8=s82*(kcatp_r8*s15/kM_r8_s15-kcatn_r8*s19/kM_r8_s19*s63/kM_r8_s63)/(s15/kM_r8_s15+(1+s19/kM_r8_s19)*(1+s63/kM_r8_s63))

# Reaction: id = r9

r9=s23*(kcatp_r9/kM_r9_s7*s7-kcatn_r9/kM_r9_s22*s22)/(1+s7/kM_r9_s7+s22/kM_r9_s22)

# Reaction: id = r10

r10=kI_r10_s2/(kI_r10_s2+s25)*(kass_r10*s63-kdiss_r10*s24)

# Reaction: id = r11

r11=s24*(kcatp_r11*s32/kM_r11_s3-kcatn_r11*s26/kM_r11_s2*s28/kM_r11__1)/(s32/kM_r11_s3+(1+s26/kM_r11_s2)*(1+s28/kM_r11__1))

# Reaction: id = r13

r13=kass_r13*s24*s26*s27*s29-kdiss_r13*s35

# Reaction: id = r16

r16=(kcatp_r16/(ki_r16_s3*kM_r16_s3)*s38*s24*s39-kcatn_r16/kM_r16_s3*s38*s37)/(1+s24/ki_r16_s3+s39/ki_r16_s3+s24*s39/(ki_r16_s3*kM_r16_s3)+s37/kM_r16_s3)

# Reaction: id = r17

r17=kass_r17*s37-kdiss_r17*s40

# Reaction: id = r18

r18=(kcatp_r18/(ki_r18_s4*kM_r18_s4)*s42*s1*s4-kcatn_r18/kM_r18_s4*s42*s41)/(1+s1/ki_r18_s4+s4/ki_r18_s4+s1*s4/(ki_r18_s4*kM_r18_s4)+s41/kM_r18_s4)

# Reaction: id = r21

r21=kI_r21_s2/(kI_r21_s2+s2)*(kass_r21*s41*s48-kdiss_r21*s53)

# Reaction: id = r25

r25=s21*(kcatp_r25*s53/kM_r25_s5-kcatn_r25*s60/kM_r25_s6*s15/kM_r25_s1)/(s53/kM_r25_s5+(1+s60/kM_r25_s6)*(1+s15/kM_r25_s1))

# Reaction: id = r26

r26=s65*(kcatp_r26/kM_r26_s2*s25-kcatn_r26/kM_r26_s6*s64)/(1+s25/kM_r26_s2+s64/kM_r26_s6)

# Reaction: id = r28

r28=(kcatp_r28/(ki_r28_s4*kM_r28_s4)*s2*s7*s41-kcatn_r28/kM_r28_s4*s2*s67)/(1+s7/ki_r28_s4+s41/ki_r28_s4+s7*s41/(ki_r28_s4*kM_r28_s4)+s67/kM_r28_s4)

# Reaction: id = r29

r29=s21*(kcatp_r29*s67/kM_r29_s6-kcatn_r29*s18/kM_r29_s1*s15/kM_r29__1)/(s67/kM_r29_s6+(1+s18/kM_r29_s1)*(1+s15/kM_r29__1))

# Reaction: id = re16

re16=kI_re16_s/(kI_re16_s+s81)*(kass_re16*s76*s77-kdiss_re1*s82)

# Species:   id = s2, name = Fringe
# Warning species is not changed by either rules or reactions

par s2=5.0
aux s2=s2

# Species:   id = s4, name = fucose, affected by kineticLaw

init s4=5.0
ds4/dt=(1/(default))*((-1.0 * r18))

# Species:   id = s7, name = Delta, affected by kineticLaw

init s7=5.0
ds7/dt=(1/(default))*((-1.0 * r9) + (-1.0 * r28))

# Species:   id = s15, name = NI_sub_c_sub_t, affected by kineticLaw

init s15=5.0
ds15/dt=(1/(c1))*((-1.0 * r8) + ( 1.0 * r25) + ( 1.0 * r29))

# Species:   id = s19, name = N_sub_tm, affected by kineticLaw

init s19=0.0
ds19/dt=(1/(c1))*(( 1.0 * r8))

# Species:   id = s21, name = TACE
# Warning species is not changed by either rules or reactions

par s21=0.5
aux s21=s21

# Species:   id = s22, name = a7_degraded, affected by kineticLaw

init s22=0.0
ds22/dt=(1/(default))*(( 1.0 * r9))

# Species:   id = s23, name = Neuralized
# Warning species is not changed by either rules or reactions

par s23=0.5
aux s23=s23

# Species:   id = s25, name = Numb, affected by kineticLaw

init s25=0.64
ds25/dt=(1/(c1))*((-1.0 * r26))

# Species:   id = s27, name = Mastermind, affected by kineticLaw

init s27=0.5
ds27/dt=(1/(c5))*((-1.0 * r13))

# Species:   id = s26, name = Su(H), affected by kineticLaw

init s26=5.0
ds26/dt=(1/(c5))*(( 1.0 * r11) + (-1.0 * r13))

# Species:   id = s28, name = CoR, affected by kineticLaw

init s28=5.0
ds28/dt=(1/(c5))*(( 1.0 * r11))

# Species:   id = s32, name = Complex_br_(Su(H)/CoR), affected by kineticLaw

init s32=0.0
ds32/dt=(1/(c5))*((-1.0 * r30) + (-1.0 * r11))

# Species:   id = s29, name = CoA, affected by kineticLaw

init s29=0.5
ds29/dt=(1/(c5))*((-1.0 * r13))

# Species:   id = s24, name = NI_sub_c_sub_s, affected by kineticLaw

init s24=0.0
ds24/dt=(1/(c5))*(( 1.0 * r10) + (-1.0 * r13) + (-1.0 * r16))

# Species:   id = s35, name = Complex_br_(Mastermind/Su(H)/_br_CoA/NI_sub_c_sub_s), affected by kineticLaw

init s35=0.0
ds35/dt=(1/(c5))*((-1.0 * r31) + ( 1.0 * r13))

# Species:   id = s37, name = NI_sub_c_sub_s, affected by kineticLaw

init s37=0.0
ds37/dt=(1/(c5))*(( 1.0 * r16) + (-1.0 * r17))

# Species:   id = s38, name = Sel 10
# Warning species is not changed by either rules or reactions

par s38=0.6
aux s38=s38

# Species:   id = s39, name = Ub, affected by kineticLaw

init s39=0.5
ds39/dt=(1/(c5))*((-1.0 * r16))

# Species:   id = s40, name = a46_degraded, affected by kineticLaw

init s40=0.0
ds40/dt=(1/(c5))*(( 1.0 * r17))

# Species:   id = s1, name = Notch, affected by kineticLaw

init s1=5.0
ds1/dt=(1/(c1))*((-1.0 * r18))

# Species:   id = s18, name = Complex_br_(Delta/N_sub_ext), affected by kineticLaw

init s18=0.0
ds18/dt=(1/(default))*(( 1.0 * r29))

# Species:   id = s41, name = Notch, affected by kineticLaw

init s41=0.0
ds41/dt=(1/(c1))*(( 1.0 * r18) + (-1.0 * r21) + (-1.0 * r28))

# Species:   id = s42, name = Neurotic
# Warning species is not changed by either rules or reactions

par s42=5.0
aux s42=s42

# Species:   id = s48, name = Serrate, affected by kineticLaw

init s48=5.0
ds48/dt=(1/(default))*((-1.0 * r21))

# Species:   id = s53, name = Complex_br_(Serrate/Notch), affected by kineticLaw

init s53=0.0
ds53/dt=(1/(c1))*(( 1.0 * r21) + (-1.0 * r25))

# Species:   id = s60, name = Complex_br_(Serrate/N_sub_ext), affected by kineticLaw

init s60=0.0
ds60/dt=(1/(default))*(( 1.0 * r25))

# Species:   id = s63, name = NI_sub_c_sub_s, affected by kineticLaw

init s63=0.0
ds63/dt=(1/(c1))*(( 1.0 * r8) + (-1.0 * r10))

# Species:   id = s64, name = a25_degraded, affected by kineticLaw

init s64=0.0
ds64/dt=(1/(c1))*(( 1.0 * r26))

# Species:   id = s65, name = LNXp80
# Warning species is not changed by either rules or reactions

par s65=0.33
aux s65=s65

# Species:   id = s67, name = Complex_br_(Notch/Delta), affected by kineticLaw

init s67=0.0
ds67/dt=(1/(c1))*(( 1.0 * r28) + (-1.0 * r29))

# Species:   id = s75, name = E(spl)-C genes, affected by kineticLaw

init s75=0.0
ds75/dt=(1/(c5))*(( 1.0 * r30) + ( 1.0 * r31))

# Species:   id = s76, name = s76, affected by kineticLaw

init s76=5.0
ds76/dt=(1/(default))*((-1.0 * re16))

# Species:   id = s77, name = s77, affected by kineticLaw

init s77=5.0
ds77/dt=(1/(default))*((-1.0 * re16))

# Species:   id = s81, name = dapt
# Warning species is not changed by either rules or reactions

par s81=0.0
aux s81=s81

# Species:   id = s82, name = gama secretase, affected by kineticLaw

init s82=0.0
ds82/dt=(1/(default))*(( 1.0 * re16))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

