
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Komarova2003_BoneRemodeling
#
# is http://identifiers.org/biomodels.db/MODEL6029826395
# is http://identifiers.org/biomodels.db/BIOMD0000000148
# isDescribedBy http://identifiers.org/pubmed/14499354
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  alpha1, name = alpha1, constant
par alpha1=3.0

# Parameter:   id =  alpha2, name = alpha2, constant
par alpha2=4.0

# Parameter:   id =  beta1, name = beta1, constant
par beta1=0.2

# Parameter:   id =  beta2, name = beta2, constant
par beta2=0.02

# Parameter:   id =  g11, name = g11, constant
par g11=0.5

# Parameter:   id =  g21, name = g21, constant
par g21=-0.5

# Parameter:   id =  g12, name = g12, constant
par g12=1.0

# Parameter:   id =  g22, name = g22, constant
par g22=0.0

# Parameter:   id =  k1, name = k1, constant
par k1=0.24

# Parameter:   id =  k2, name = k2, constant
par k2=0.0017

# Parameter:   id =  gamma, name = gamma, defined by a Rule

# Parameter:   id =  flag_resorption, name = flag_resorption
par flag_reso=0.0

# Parameter:   id =  flag_formation, name = flag_formation
par flag_form=0.0

# assignmentRule: variable = gamma
gamma=g12*g21-(1-g11)*(1-g22)
aux gamma=gamma

# assignmentRule: variable = x1_bar
x1_bar=(beta1/alpha1)^((1-g22)/gamma)*(beta2/alpha2)^(g21/gamma)
aux x1_bar=x1_bar

# assignmentRule: variable = x2_bar
x2_bar=(beta1/alpha1)^(g12/gamma)*(beta2/alpha2)^((1-g11)/gamma)
aux x2_bar=x2_bar

# Reaction: id = R1, name = Osteoclast production

R1=alpha1*x1^g11*x2^g21

# Reaction: id = R2, name = Osteoclast removal

R2=beta1*x1

# Reaction: id = R3, name = Osteoblast production

R3=alpha2*x1^g12*x2^g22

# Reaction: id = R4, name = Osteoblast removal

R4=beta2*x2

# Reaction: id = R5, name = Bone resorption

R5=flag_reso*k1*(x1-x1_bar)

# Reaction: id = R6, name = Bone formation

R6=flag_form*k2*(x2-x2_bar)

# Species:   id = x1, name = Osteoclast, affected by kineticLaw

init x1=11.0
dx1/dt=( 1.0 * R1) + (-1.0 * R2)

# Species:   id = x2, name = Osteoblast, affected by kineticLaw

init x2=212.0
dx2/dt=( 1.0 * R3) + (-1.0 * R4)

# Species:   id = x1_bar, name = Steady state osteoclast, defined in a rule 

# Species:   id = x2_bar, name = Steady state osteoblast, defined in a rule 

# Species:   id = z, name = Bone mass, affected by kineticLaw

init z=100.0
dz/dt=(-1.0 * R5) + ( 1.0 * R6)

# Species:   id = y1, name = Cells actively resorbing bone
# Warning species is not changed by either rules or reactions

par y1=0.0
aux y1=y1

# Species:   id = y2, name = Cells actively forming bone
# Warning species is not changed by either rules or reactions

par y2=0.0
aux y2=y2

# event : event_0000001
event_000=if (x1 > x1_bar) then (1.5) else (0.2)
global 1 {event_000 - 1.1} {flag_resorption=1}

# event : event_0000003
event_0_1=if (x1 <= x1_bar) then (1.5) else (0.2)
global 1 {event_0_1 - 1.1} {flag_resorption=0}

# event : event_0000002
event_0_2=if (x2 > x2_bar) then (1.5) else (0.2)
global 1 {event_0_2 - 1.1} {flag_formation=1}

# event : event_0000004
event_0_3=if (x2 <= x2_bar) then (1.5) else (0.2)
global 1 {event_0_3 - 1.1} {flag_formation=0}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

