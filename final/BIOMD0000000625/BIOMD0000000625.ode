
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Leber2016 - Expanded model of Tfh-Tfr differentiation - Helicobacter pylori infection
#
# is http://identifiers.org/biomodels.db/MODEL1603010000
# is http://identifiers.org/biomodels.db/BIOMD0000000625
# isDescribedBy http://identifiers.org/pubmed/26947272
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Molecule_Production__1A_0I__2, name = Molecule Production (1A/0I)_2
Molecule_(IL2,sigma)=(sigma*IL2)


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Molecule_Production__1A_0I__1, name = Molecule Production (1A/0I)_1
Molecul_1(nTreg,sigma)=(sigma*nTreg)


# FunctionDefinition id = Molecule_Production__2A_3I__v2_1, name = Molecule Production (2A/3I) v2_1
Molecul_2(Blimp1,ICOS,RXR,STAT3,STAT5,alpha1,alpha2,alpha3,sigma1,sigma2)=((sigma1*ICOS+sigma2*STAT3)/((alpha1+Blimp1)*(alpha2+STAT5)*(alpha3+RXR)))


# FunctionDefinition id = Molecule_Production__0A_1I__1, name = Molecule Production (0A/1I)_1
Molecul_3(IL4,alpha1,sigma1)=(sigma1/(alpha1+IL4))


# FunctionDefinition id = Molecule_Production__1A_0I__5, name = Molecule Production (1A/0I)_5
Molecul_4(IL10,sigma)=(sigma*IL10)


# FunctionDefinition id = Cell_Differentiation__2A__1, name = Cell Differentiation (2A)_1
Cell_Diff(Bcl6,CXCR5,gamma1,gamma2,nTreg)=(gamma1*nTreg*Bcl6+gamma2*nTreg*CXCR5)


# FunctionDefinition id = Molecule_Production__2A_0I__1, name = Molecule Production (2A/0I)_1
Molecul_5(IL21,IL6,sigma1,sigma2)=(sigma1*IL6+sigma2*IL21)


# FunctionDefinition id = Molecule_Production__2A_1I__1, name = Molecule Production (2A/1I)_1
Molecul_6(Blimp1,Tfh,Tfr,alpha,sigma1,sigma2)=((sigma1*Tfh+sigma2*Tfr)/(alpha+Blimp1))


# FunctionDefinition id = Molecule_Production__1A_0I__4, name = Molecule Production (1A/0I)_4
Molecul_7(Tfr,sigma)=(sigma*Tfr)


# FunctionDefinition id = Molecule_Production__1A_1I__2, name = Molecule Production (1A/1I)_2
Molecul_8(TGFb,Tgif1,alpha,sigma)=(sigma*TGFb/(alpha+Tgif1))


# FunctionDefinition id = Molecule_Production__1A_1I__1, name = Molecule Production (1A/1I)_1
Molecul_9(Bcl6,Tfr,alpha,sigma)=(sigma*Tfr/(alpha+Bcl6))


# FunctionDefinition id = Molecule_Production__1A_0I__3, name = Molecule Production (1A/0I)_3
Molecu_10(Tfh,sigma)=(sigma*Tfh)


# FunctionDefinition id = Cell_Differentiation__1A_1I__1, name = Cell Differentiation (1A/1I)_1
Cell_Di_1(Bcl6,IL10,NaiveCD4,alpha,gamma)=(gamma*NaiveCD4*Bcl6/(alpha+IL10))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Reaction: id = NaiveCD4_Source, name = NaiveCD4 Source
# Local Parameter:   id =  v, name = v
par v=100.0


NaiveCD4_=compartme*Constant_(v)

# Reaction: id = NaiveCD4_Death, name = NaiveCD4 Death
# Local Parameter:   id =  k1, name = k1
par k1=0.035655


NaiveCD_1=compartme*k1*NaiveCD4

# Reaction: id = nTreg_Source, name = nTreg Source
# Local Parameter:   id =  v, name = v
par v_1=10.0


nTreg_Sou=compartme*Constant_(v_1)

# Reaction: id = nTreg_Death, name = nTreg Death
# Local Parameter:   id =  k1, name = k1
par k1_1=0.03


nTreg_Dea=compartme*k1_1*nTreg

# Reaction: id = Tfh_Differentiation, name = Tfh Differentiation
# Local Parameter:   id =  alpha, name = alpha
par alpha=0.1

# Local Parameter:   id =  gamma, name = gamma
par gamma=0.364318


Tfh_Diffe=compartme*Cell_Di_1(Bcl6, IL10, NaiveCD4, alpha, gamma)

# Reaction: id = Tfr_Differentiation, name = Tfr Differentiation
# Local Parameter:   id =  gamma1, name = gamma1
par gamma1=0.0555708

# Local Parameter:   id =  gamma2, name = gamma2
par gamma2=0.111444


Tfr_Diffe=compartme*Cell_Diff(Bcl6, CXCR5, gamma1, gamma2, nTreg)

# Reaction: id = Tfh_Death, name = Tfh Death
# Local Parameter:   id =  k1, name = k1
par k1_1_2=0.03


Tfh_Death=compartme*k1_1_2*Tfh

# Reaction: id = Tfr_Death, name = Tfr Death
# Local Parameter:   id =  k1, name = k1
par k1_1_2_3=0.03


Tfr_Death=compartme*k1_1_2_3*Tfr

# Reaction: id = Bcl6_Activation, name = Bcl6 Activation
# Local Parameter:   id =  alpha1, name = alpha1
par alpha1=0.20001

# Local Parameter:   id =  alpha2, name = alpha2
par alpha2=1.36752

# Local Parameter:   id =  alpha3, name = alpha3
par alpha3=0.1253

# Local Parameter:   id =  sigma1, name = sigma1
par sigma1=3.24417

# Local Parameter:   id =  sigma2, name = sigma2
par sigma2=3.2195


Bcl6_Acti=compartme*Molecul_2(Blimp1, ICOS, RXR, STAT3, STAT5, alpha1, alpha2, alpha3, sigma1, sigma2)

# Reaction: id = Blimp1_Activation, name = Blimp1 Activation
# Local Parameter:   id =  alpha, name = alpha
par alpha_1=2.386

# Local Parameter:   id =  sigma, name = sigma
par sigma=3.59995


Blimp1_Ac=compartme*Molecul_9(Bcl6, Tfr, alpha_1, sigma)

# Reaction: id = FoxP3_Activation, name = FoxP3 Activation
# Local Parameter:   id =  sigma, name = sigma
par sigma_1=0.1


FoxP3_Act=compartme*Molecul_1(nTreg, sigma_1)

# Reaction: id = STAT3_Activation, name = STAT3 Activation
# Local Parameter:   id =  sigma1, name = sigma1
par sigma1_1=0.1253

# Local Parameter:   id =  sigma2, name = sigma2
par sigma2_1=0.1


STAT3_Act=compartme*Molecul_5(IL21, IL6, sigma1_1, sigma2_1)

# Reaction: id = STAT5_Activation, name = STAT5 Activation
# Local Parameter:   id =  sigma, name = sigma
par sigma_1_2=10.0


STAT5_Act=compartme*Molecule_(IL2, sigma_1_2)

# Reaction: id = CXCR5_Production, name = CXCR5 Production
# Local Parameter:   id =  alpha, name = alpha
par alpha_1_2=0.0539319

# Local Parameter:   id =  sigma1, name = sigma1
par sigma1__2=3.0403

# Local Parameter:   id =  sigma2, name = sigma2
par sigma2__2=2.92243


CXCR5_Pro=compartme*Molecul_6(Blimp1, Tfh, Tfr, alpha_1_2, sigma1__2, sigma2__2)

# Reaction: id = ICOS_Production, name = ICOS Production
# Local Parameter:   id =  sigma, name = sigma
par sigma_1_3=0.01787


ICOS_Prod=compartme*Molecu_10(Tfh, sigma_1_3)

# Reaction: id = IL2_Production, name = IL2 Production
# Local Parameter:   id =  v, name = v
par v_1_2=0.1


IL2_Produ=compartme*Constant_(v_1_2)

# Reaction: id = IL4_Production, name = IL4 Production
# Local Parameter:   id =  sigma, name = sigma
par sigma_1_4=0.014555


IL4_Produ=compartme*Molecu_10(Tfh, sigma_1_4)

# Reaction: id = IL6_Production, name = IL6 Production
# Local Parameter:   id =  alpha1, name = alpha1
par alpha1_1=0.43475

# Local Parameter:   id =  sigma1, name = sigma1
par sigma1__3=0.9901


IL6_Produ=compartme*Molecul_3(IL4, alpha1_1, sigma1__3)

# Reaction: id = IL10_Production, name = IL10 Production
# Local Parameter:   id =  sigma, name = sigma
par sigma_1_5=0.0677


IL10_Prod=compartme*Molecul_7(Tfr, sigma_1_5)

# Reaction: id = Bcl6_Degradation, name = Bcl6 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__4=0.16373


Bcl6_Degr=compartme*k1_1_2__4*Bcl6

# Reaction: id = Blimp1_Degradation, name = Blimp1 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__5=0.1106


Blimp1_De=compartme*k1_1_2__5*Blimp1

# Reaction: id = FoxP3_Degradation, name = FoxP3 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__6=0.1


FoxP3_Deg=compartme*k1_1_2__6*FoxP3

# Reaction: id = STAT3_Degradation, name = STAT3 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__7=0.1


STAT3_Deg=compartme*k1_1_2__7*STAT3

# Reaction: id = STAT5_Degradation, name = STAT5 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__8=0.1


STAT5_Deg=compartme*k1_1_2__8*STAT5

# Reaction: id = CXCR5_Degradation, name = CXCR5 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2__9=0.1


CXCR5_Deg=compartme*k1_1_2__9*CXCR5

# Reaction: id = ICOS_Degradation, name = ICOS Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_10=0.1


ICOS_Degr=compartme*k1_1_2_10*ICOS

# Reaction: id = IL2_Degradation, name = IL2 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_11=0.1


IL2_Degra=compartme*k1_1_2_11*IL2

# Reaction: id = IL4_Degradation, name = IL4 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_12=0.1


IL4_Degra=compartme*k1_1_2_12*IL4

# Reaction: id = IL6_Degradation, name = IL6 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_13=0.69675


IL6_Degra=compartme*k1_1_2_13*IL6

# Reaction: id = IL10_Degradation, name = IL10 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_14=0.1


IL10_Degr=compartme*k1_1_2_14*IL10

# Reaction: id = IL21_Degradation, name = IL21 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_15=0.1


IL21_Degr=compartme*k1_1_2_15*IL21

# Reaction: id = IL21_Production, name = IL21 Production
# Local Parameter:   id =  sigma, name = sigma
par sigma_1_6=0.06005


IL21_Prod=compartme*Molecu_10(Tfh, sigma_1_6)

# Reaction: id = TGFb_Production, name = TGFb Production
# Local Parameter:   id =  sigma, name = sigma
par sigma_1_7=0.1


TGFb_Prod=compartme*Molecul_4(IL10, sigma_1_7)

# Reaction: id = TGFb_Degradation, name = TGFb Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_16=0.1


TGFb_Degr=compartme*k1_1_2_16*TGFb

# Reaction: id = RXR_Activation, name = RXR Activation
# Local Parameter:   id =  alpha, name = alpha
par alpha_1_3=3.04985

# Local Parameter:   id =  sigma, name = sigma
par sigma_1_8=0.05


RXR_Activ=compartme*Molecul_8(TGFb, Tgif1, alpha_1_3, sigma_1_8)

# Reaction: id = Tgif1_Production, name = Tgif1 Production
# Local Parameter:   id =  sigma, name = sigma
par sigma_1_9=0.1


Tgif1_Pro=compartme*Molecu_10(Tfh, sigma_1_9)

# Reaction: id = RXR_Degradation, name = RXR Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_17=0.08465


RXR_Degra=compartme*k1_1_2_17*RXR

# Reaction: id = Tgif1_Degradation, name = Tgif1 Degradation
# Local Parameter:   id =  k1, name = k1
par k1_1_2_18=0.1


Tgif1_Deg=compartme*k1_1_2_18*Tgif1

# Species:   id = NaiveCD4, name = NaiveCD4, affected by kineticLaw

init NaiveCD4=200.0
dNaiveCD4/dt=(1/(compartme))*(( 1.0 * NaiveCD4_) + (-1.0 * NaiveCD_1) + (-1.0 * Tfh_Diffe))

# Species:   id = nTreg, name = nTreg, affected by kineticLaw

init nTreg=100.0
dnTreg/dt=(1/(compartme))*(( 1.0 * nTreg_Sou) + (-1.0 * nTreg_Dea) + (-1.0 * Tfr_Diffe))

# Species:   id = Tfh, name = Tfh, affected by kineticLaw

init Tfh=1.0
dTfh/dt=(1/(compartme))*(( 1.0 * Tfh_Diffe) + (-1.0 * Tfh_Death))

# Species:   id = Tfr, name = Tfr, affected by kineticLaw

init Tfr=1.0
dTfr/dt=(1/(compartme))*(( 1.0 * Tfr_Diffe) + (-1.0 * Tfr_Death))

# Species:   id = Bcl6, name = Bcl6, affected by kineticLaw

init Bcl6=1.0
dBcl6/dt=(1/(compartme))*(( 1.0 * Bcl6_Acti) + (-1.0 * Bcl6_Degr))

# Species:   id = Blimp1, name = Blimp1, affected by kineticLaw

init Blimp1=1.0
dBlimp1/dt=(1/(compartme))*(( 1.0 * Blimp1_Ac) + (-1.0 * Blimp1_De))

# Species:   id = FoxP3, name = FoxP3, affected by kineticLaw

init FoxP3=1.0
dFoxP3/dt=(1/(compartme))*(( 1.0 * FoxP3_Act) + (-1.0 * FoxP3_Deg))

# Species:   id = STAT3, name = STAT3, affected by kineticLaw

init STAT3=1.0
dSTAT3/dt=(1/(compartme))*(( 1.0 * STAT3_Act) + (-1.0 * STAT3_Deg))

# Species:   id = STAT5, name = STAT5, constant
par STAT5=0.0


# Species:   id = IL2, name = IL2, constant
par IL2=1.0E-4


# Species:   id = IL4, name = IL4, affected by kineticLaw

init IL4=1.0
dIL4/dt=(1/(compartme))*(( 1.0 * IL4_Produ) + (-1.0 * IL4_Degra))

# Species:   id = IL6, name = IL6, affected by kineticLaw

init IL6=1.0
dIL6/dt=(1/(compartme))*(( 1.0 * IL6_Produ) + (-1.0 * IL6_Degra))

# Species:   id = IL10, name = IL10, affected by kineticLaw

init IL10=1.0
dIL10/dt=(1/(compartme))*(( 1.0 * IL10_Prod) + (-1.0 * IL10_Degr))

# Species:   id = IL21, name = IL21, affected by kineticLaw

init IL21=1.0
dIL21/dt=(1/(compartme))*((-1.0 * IL21_Degr) + ( 1.0 * IL21_Prod))

# Species:   id = CXCR5, name = CXCR5, affected by kineticLaw

init CXCR5=1.0
dCXCR5/dt=(1/(compartme))*(( 1.0 * CXCR5_Pro) + (-1.0 * CXCR5_Deg))

# Species:   id = ICOS, name = ICOS, affected by kineticLaw

init ICOS=1.0
dICOS/dt=(1/(compartme))*(( 1.0 * ICOS_Prod) + (-1.0 * ICOS_Degr))

# Species:   id = TGFb, name = TGFb, affected by kineticLaw

init TGFb=1.0
dTGFb/dt=(1/(compartme))*(( 1.0 * TGFb_Prod) + (-1.0 * TGFb_Degr))

# Species:   id = Tgif1, name = Tgif1, affected by kineticLaw

init Tgif1=1.0
dTgif1/dt=(1/(compartme))*(( 1.0 * Tgif1_Pro) + (-1.0 * Tgif1_Deg))

# Species:   id = RXR, name = RXR, affected by kineticLaw

init RXR=1.0
dRXR/dt=(1/(compartme))*(( 1.0 * RXR_Activ) + (-1.0 * RXR_Degra))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

