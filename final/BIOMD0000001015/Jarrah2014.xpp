
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Jarrah2014 - mathematical model of the immune response in muscle degeneration and subsequent regeneration in Duchenne muscular dystrophy in mdx mice
#
# isDescribedBy http://identifiers.org/pubmed/25013809
# is http://identifiers.org/biomodels.db/MODEL2107200002
# is http://identifiers.org/biomodels.db/BIOMD0000001015
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_reaction_4, name = Rate Law for reaction_4
Rate_Law_(bm,k3,D,M)=(bm+k3*D*M)


# FunctionDefinition id = Rate_Law_for_reaction, name = Rate Law for reaction
Rate_La_1(bH,k1,D,M)=(bH+k1*D*M)


# FunctionDefinition id = Rate_Law_for_reaction_6, name = Rate Law for reaction_6
Rate_La_2(k5,C,N,alpha)=(k5*C*N+alpha*N)


# Compartment: id = compartment, name = Skeletal_muscle, constant
par compartme=1.0

# Parameter:   id =  k1, name = k1, constant
par k1=0.0341

# Parameter:   id =  k2, name = k2, constant
par k2=0.115375

# Parameter:   id =  k3, name = k3, constant
par k3=0.766576

# Parameter:   id =  k4, name = k4, constant
par k4=0.123848

# Parameter:   id =  k5, name = k5, constant
par k5=0.00409948

# Parameter:   id =  k6, name = k6, constant
par k6=3.23097E-4

# Parameter:   id =  bH, name = bH, defined by a Rule

# Parameter:   id =  bC, name = bC, defined by a Rule

# Parameter:   id =  bM, name = bM, defined by a Rule

# Parameter:   id =  dH, name = dH, constant
par dH=1.0

# Parameter:   id =  dC, name = dC, constant
par dC=1.61511

# Parameter:   id =  dM, name = dM, constant
par dM=0.781155

# Parameter:   id =  dD, name = dD, constant
par dD=1.34671

# Parameter:   id =  H0, name = H0, constant
par H0=0.0

# Parameter:   id =  C0, name = C0, constant
par C0=4.0

# Parameter:   id =  M0, name = M0, constant
par M0=400.0

# Parameter:   id =  sigma, name = sigma, constant
par sigma=2.2

# Parameter:   id =  m, name = m, constant
par m=4.22686

# Parameter:   id =  h, name = h, constant
par h=0.511657

# Parameter:   id =  alpha, name = alpha, defined by a Rule

# assignmentRule: variable = bC
bC=dC*C0
aux bC=bC

# assignmentRule: variable = bH
bH=dH*H0
aux bH=bH

# assignmentRule: variable = bM
bM=dM*M0
aux bM=bM

# assignmentRule: variable = alpha
alpha=h/((t+1E-11)*sigma*(2*pi)^0.5)*exp((-(log(t+1E-11)-m)^2)/(2*sigma^2))
aux alpha=alpha

# Reaction: id = reaction, name = T_helper_cells_creation

reaction=compartme*Rate_La_1(bH, k1, D, M_1)

# Reaction: id = reaction_1, name = T_helper_cells_degradation

reaction_=compartme*dH*H_1

# Reaction: id = reaction_2, name = T_lymphocytes_creation

reactio_1=compartme*Rate_La_1(bC, k2, D, H_1)

# Reaction: id = reaction_3, name = T_lymphocytes_degradation

reactio_2=compartme*dC*C

# Reaction: id = reaction_4, name = Macrophage_creation

reactio_3=compartme*Rate_Law_(bM, k3, D, M_1)

# Reaction: id = reaction_5, name = Macrophage_degradation

reactio_4=compartme*dM*M_1

# Reaction: id = reaction_6, name = Fibre_damage

reactio_5=compartme*Rate_La_2(k5, C, N, alpha)

# Reaction: id = reaction_7, name = Fibre_regeneration

reactio_6=compartme*Rate_La_2(k6, M_1, D, dD)

# Reaction: id = reaction_8, name = Fibre_normalisation

reactio_7=compartme*k4*R

# Species:   id = H, name = CD4+_T_Helper_cells_(H), affected by kineticLaw

par H_1=0.0
aux H_1=H_1
dH_1/dt=(1/(compartme))*(( 1.0 * reaction) + (-1.0 * reaction_))

# Species:   id = D, name = Damaged_fibres_(D), affected by kineticLaw

init D=0.0
dD/dt=(1/(compartme))*(( 1.0 * reactio_5) + (-1.0 * reactio_6))

# Species:   id = M, name = Macrophages_(M), affected by kineticLaw

par M_1=400.0
aux M_1=M_1
dM_1/dt=(1/(compartme))*(( 1.0 * reactio_3) + (-1.0 * reactio_4))

# Species:   id = C, name = CD8+_cytotoxic_T_lymphocytes_(C), affected by kineticLaw

init C=4.0
dC/dt=(1/(compartme))*(( 1.0 * reactio_1) + (-1.0 * reactio_2))

# Species:   id = N, name = Normal_fibres_(N), affected by kineticLaw

init N=100.0
dN/dt=(1/(compartme))*((-1.0 * reactio_5) + ( 1.0 * reactio_7))

# Species:   id = R, name = Regenerative_fibres_(R), affected by kineticLaw

init R=0.0
dR/dt=(1/(compartme))*(( 1.0 * reactio_6) + (-1.0 * reactio_7))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

