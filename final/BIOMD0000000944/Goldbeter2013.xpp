
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Goldbeter2013-Oscillatory activity of cyclin-dependent kinases in the cell cycle
#
# isDerivedFrom http://identifiers.org/pubmed/1833774
# isDescribedBy http://identifiers.org/pubmed/23892075
# is http://identifiers.org/biomodels.db/MODEL2005050002
# is http://identifiers.org/biomodels.db/BIOMD0000000944
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_reaction_for_M_production, name = Rate Law for reaction for M production
Rate_Law_(V1,M,K1)=(V1*(1-M)/(K1+(1-M)))


# FunctionDefinition id = Rate_Law_for_reaction_for_C_production, name = Rate Law for reaction for C production
Rate_La_1(vs)=(vs)


# FunctionDefinition id = Rate_Law_for_reaction_for_C_decay, name = Rate Law for reaction for C decay
Rate_La_2(vd,X,C,Kd,kd)=(vd*X*C/(Kd+C)+kd*C)


# FunctionDefinition id = Rate_Law_for_reaction_for_X_production, name = Rate Law for reaction for X production
Rate_La_3(V3,X,K3)=(V3*(1-X)/(K3+(1-X)))


# FunctionDefinition id = Rate_Law_for_reaction_for_M_decay, name = Rate Law for reaction for M decay
Rate_La_4(V2,M,K2)=(V2*M/(K2+M))


# FunctionDefinition id = Rate_Law_for_reaction_for_X_decay, name = Rate Law for reaction for X decay
Rate_La_5(V4,X,K4)=(V4*X/(K4+X))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  K1, name = K1, constant
par K1=0.002

# Parameter:   id =  K2, name = K2, defined by a Rule

# Parameter:   id =  K3, name = K3, constant
par K3=0.01

# Parameter:   id =  K4, name = K4, constant
par K4=0.01

# Parameter:   id =  Kc, name = Kc, constant
par Kc=0.5

# Parameter:   id =  Kd, name = Kd, constant
par Kd=0.001

# Parameter:   id =  kd, name = kd, constant
par kd_1=0.046

# Parameter:   id =  V2, name = V2, constant
par V2=2.0

# Parameter:   id =  V4, name = V4, constant
par V4=0.7

# Parameter:   id =  vs, name = vs, constant
par vs=0.06

# Parameter:   id =  vd, name = vd, constant
par vd=0.25

# Parameter:   id =  Vm1, name = Vm1, constant
par Vm1=4.0

# Parameter:   id =  Vm3, name = Vm3, constant
par Vm3=1.0

# Parameter:   id =  V1, name = V1, defined by a Rule

# Parameter:   id =  V3, name = V3, defined by a Rule

# assignmentRule: variable = K2
K2=K1
aux K2=K2

# assignmentRule: variable = V1
V1=Cyclin/(Kc+Cyclin)*Vm1
aux V1=V1

# assignmentRule: variable = V3
V3=Active_Cd*Vm3
aux V3=V3

# Reaction: id = reaction_for_C_production, name = reaction for C production

reaction_=compartme*Rate_La_1(vs)

# Reaction: id = reaction_for_C_decay, name = reaction for C decay

reactio_1=compartme*Rate_La_2(vd, Active_AP, Cyclin, Kd, kd_1)

# Reaction: id = reaction_for_M_production, name = reaction for M production

reactio_2=compartme*Rate_Law_(V1, Active_Cd, K1)

# Reaction: id = reaction_for_M_decay, name = reaction for M decay

reactio_3=compartme*Rate_La_4(V2, Active_Cd, K2)

# Reaction: id = reaction_for_X_production, name = reaction for X production

reactio_4=compartme*Rate_La_3(V3, Active_AP, K3)

# Reaction: id = reaction_for_X_decay, name = reaction for X decay

reactio_5=compartme*Rate_La_5(V4, Active_AP, K4)

# Species:   id = Cyclin, name = Cyclin, affected by kineticLaw

init Cyclin=0.01
dCyclin/dt=(1/(compartme))*(( 1.0 * reaction_) + (-1.0 * reactio_1))

# Species:   id = Active_Cdc2_kinase, name = Active Cdc2 kinase, affected by kineticLaw

par Active_Cd=0.01
aux Active_Cd=Active_Cd
dActive_Cd/dt=(1/(compartme))*(( 1.0 * reactio_2) + (-1.0 * reactio_3))

# Species:   id = Active_APC, name = Active APC, affected by kineticLaw

par Active_AP=0.01
aux Active_AP=Active_AP
dActive_AP/dt=(1/(compartme))*(( 1.0 * reactio_4) + (-1.0 * reactio_5))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

