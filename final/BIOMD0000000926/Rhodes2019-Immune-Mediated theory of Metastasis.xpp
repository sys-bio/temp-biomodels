
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Rhodes2019 - Immune-Mediated theory of MetastasisNew Model
#
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_TE_immune_Cell_y2__natural_death, name = Function for TE immune Cell(y2) natural death
Function_(tau_2,y_2)=(tau_2*y_2)


# FunctionDefinition id = Function_for_CT_immune_Cell_x1__killed, name = Function for CT immune Cell(x1) killed
Functio_1(rho_1,u_1,x_1)=(rho_1*u_1*x_1)


# FunctionDefinition id = Function_for_CT_immune_Cell_x2__death, name = Function for CT immune Cell(x2) death
Functio_2(omega_2,x_2)=(omega_2*x_2)


# FunctionDefinition id = Function_for_CT_immune_Cell_x1__death, name = Function for CT immune Cell(x1) death
Functio_3(omega_1,x_1)=(omega_1*x_1)


# FunctionDefinition id = Function_for_Necrotic_cell_v1__rise, name = Function for Necrotic cell(v1) rise
Functio_4(theta_1,sigma_1,u_1)=(theta_1*sigma_1*u_1)


# FunctionDefinition id = Function_for_Tumor_Cell_u1__growth, name = Function for Tumor Cell(u1) growth
Functio_5(gamma_1,g_1,u_1)=(gamma_1*g_1*u_1)


# FunctionDefinition id = Function_for_TE_immune_Cell_y1__natural_death, name = Function for TE immune Cell(y1) natural death
Functio_6(tau_1,y_1)=(tau_1*y_1)


# FunctionDefinition id = Function_for_Tumor_Cell_u2__Metastatic, name = Function for Tumor Cell(u2) Metastatic
Functio_7(s_1,u_1,est)=(s_1*u_1*est)


# FunctionDefinition id = Function_for_CT_immune_Cell_x1__response, name = Function for CT immune Cell(x1) response
Functio_8(lambda_1,x_1)=(lambda_1*x_1)


# FunctionDefinition id = Function_for_Necrotic_cell_v2__lysis, name = Function for Necrotic cell(v2) lysis
Functio_9(myu_2,v_2)=(myu_2*v_2)


# FunctionDefinition id = Function_for_CT_immune_Cell_x2__transition, name = Function for CT immune Cell(x2) transition
Functi_10(ed_2,x_2)=(ed_2*x_2)


# FunctionDefinition id = Function_for_Necrotic_cell_v2__rise, name = Function for Necrotic cell(v2) rise
Functi_11(theta_2,sigma_2,u_2)=(theta_2*sigma_2*u_2)


# FunctionDefinition id = Function_for_CT_immune_Cell_x1__transition, name = Function for CT immune Cell(x1) transition
Functi_12(ed_1,x_1)=(ed_1*x_1)


# FunctionDefinition id = Function_for_CT_immune_Cell_x2__killed, name = Function for CT immune Cell(x2) killed
Functi_13(rho_2,u_2,x_2)=(rho_2*u_2*x_2)


# FunctionDefinition id = Function_for_CT_immune_Cell_x2__response, name = Function for CT immune Cell(x2) response
Functi_14(lambda_2,x_2)=(lambda_2*x_2)


# FunctionDefinition id = Function_for_Tumor_Cell_u2__growth, name = Function for Tumor Cell(u2) growth
Functi_15(gamma_2,g_2,u_2)=(gamma_2*g_2*u_2)


# FunctionDefinition id = Function_for_Tumor_Cell_u2__death, name = Function for Tumor Cell(u2) death
Functi_16(sigma_2,u_2)=(sigma_2*u_2)


# FunctionDefinition id = Function_for_Tumor_Cell_u1__Shedding, name = Function for Tumor Cell(u1) Shedding
Functi_17(s_1,u_1)=(s_1*u_1)


# FunctionDefinition id = Function_for_Tumor_Cell_u1__death, name = Function for Tumor Cell(u1) death
Functi_18(sigma_1,u_1)=(sigma_1*u_1)


# FunctionDefinition id = Function_for_CT_immune_Cell_x2__natural_influx, name = Function for CT immune Cell(x2) natural influx
Functi_19(alpha_2)=(alpha_2)


# FunctionDefinition id = Function_for_CT_immune_Cell_x1__natural_influx, name = Function for CT immune Cell(x1) natural influx
Functi_20(alpha_1)=(alpha_1)


# FunctionDefinition id = Function_for_Necrotic_cell_v1__lysis, name = Function for Necrotic cell(v1) lysis
Functi_21(myu_1,v_1)=(myu_1*v_1)


# FunctionDefinition id = Function_for_TE_immune_Cell_y1__loss_in_circulatory, name = Function for TE immune Cell(y1) loss in circulatory
Functi_22(tilde_s_1,y_1)=(tilde_s_1*y_1)


# FunctionDefinition id = Function_for_TE_immune_Cell_y2__Supplement, name = Function for TE immune Cell(y2) Supplement
Functi_23(p,tilde_s_1,y_1)=(p*tilde_s_1*y_1)


# FunctionDefinition id = Function_for_TE_immune_Cell_y1__recruitment, name = Function for TE immune Cell(y1) recruitment
Functi_24(f_1,y_1)=(f_1*y_1)


# FunctionDefinition id = Function_for_TE_immune_Cell_y2__recruitment, name = Function for TE immune Cell(y2) recruitment
Functi_25(f_2,y_2)=(f_2*y_2)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  gamma_1, name = gamma_1, defined by a Rule

# Parameter:   id =  g_1, name = g_1, defined by a Rule

# Parameter:   id =  r_1, name = r_1, constant
par r_1=0.38

# Parameter:   id =  K_1, name = K_1, constant
par K_1=5.3196E8

# Parameter:   id =  r_2, name = r_2, constant
par r_2=0.38

# Parameter:   id =  K_2, name = K_2, constant
par K_2=5.3196E8

# Parameter:   id =  g_2, name = g_2, defined by a Rule

# Parameter:   id =  minC_1, name = minC_1, constant
par minC_1=0.2

# Parameter:   id =  maxC_1, name = maxC_1, constant
par maxC_1=0.1

# Parameter:   id =  upC_1, name = upC_1, constant
par upC_1=1101695.0

# Parameter:   id =  lowC_1, name = lowC_1, constant
par lowC_1=254237.0

# Parameter:   id =  minC_2, name = minC_2, constant
par minC_2=0.2

# Parameter:   id =  maxC_2, name = maxC_2, constant
par maxC_2=0.1

# Parameter:   id =  upC_2, name = upC_2, constant
par upC_2=1101695.0

# Parameter:   id =  lowC_2, name = lowC_2, constant
par lowC_2=254237.0

# Parameter:   id =  max_1, name = max_1, constant
par max_1=0.5

# Parameter:   id =  max_2, name = max_2, constant
par max_2=0.5

# Parameter:   id =  low_1, name = low_1, constant
par low_1=25424.0

# Parameter:   id =  low_2, name = low_2, constant
par low_2=25424.0

# Parameter:   id =  up_1, name = up_1, constant
par up_1=110169.0

# Parameter:   id =  up_2, name = up_2, constant
par up_2=110169.0

# Parameter:   id =  gamma_2, name = gamma_2, defined by a Rule

# Parameter:   id =  sigma_1, name = sigma_1, defined by a Rule

# Parameter:   id =  sigma_2, name = sigma_2, defined by a Rule

# Parameter:   id =  upD_1, name = upD_1, constant
par upD_1=110169.0

# Parameter:   id =  upD_2, name = upD_2, constant
par upD_2=110169.0

# Parameter:   id =  lowD_1, name = lowD_1, constant
par lowD_1=25424.0

# Parameter:   id =  lowD_2, name = lowD_2, constant
par lowD_2=25424.0

# Parameter:   id =  theta_1, name = theta_1, constant
par theta_1=65.67

# Parameter:   id =  theta_2, name = theta_2, constant
par theta_2=65.67

# Parameter:   id =  s_1, name = s_1, constant
par s_1=0.01

# Parameter:   id =  v_v2_minv_maxv_lowv_upv, name = v(v2;minv,maxv,lowv,upv), defined by a Rule

# Parameter:   id =  e_x2_0_maxct_lowesstct_upestct, name = e(x2,0,maxct,lowesstct,upestct), defined by a Rule

# Parameter:   id =  v_y2_minestte_maxestte_lowestte_upestte, name = v(y2,minestte,maxestte,lowestte,upestte), defined by a Rule

# Parameter:   id =  min_v, name = min_v, constant
par min_v=0.001

# Parameter:   id =  max_v, name = max_v, constant
par max_v=0.999

# Parameter:   id =  low_v, name = low_v, constant
par low_v=2.66E7

# Parameter:   id =  up_v, name = up_v, constant
par up_v=2.93E8

# Parameter:   id =  max_CT, name = max_CT, constant
par max_CT=100.0

# Parameter:   id =  lowEst_CT, name = lowEst_CT, constant
par lowEst_CT=254237.0

# Parameter:   id =  upEst_CT, name = upEst_CT, constant
par upEst_CT=1101695.0

# Parameter:   id =  minEst_TE, name = minEst_TE, constant
par minEst_TE=0.001

# Parameter:   id =  maxEst_TE, name = maxEst_TE, constant
par maxEst_TE=0.002

# Parameter:   id =  lowEst_TE, name = lowEst_TE, constant
par lowEst_TE=25424.0

# Parameter:   id =  upEst_TE, name = upEst_TE, constant
par upEst_TE=110169.0

# Parameter:   id =  est, name = est, defined by a Rule

# Parameter:   id =  myu_1, name = myu_1, constant
par myu_1=0.01

# Parameter:   id =  myu_2, name = myu_2, constant
par myu_2=0.05

# Parameter:   id =  alpha_1, name = alpha_1, constant
par alpha_1=1000000.0

# Parameter:   id =  alpha_2, name = alpha_2, constant
par alpha_2=1000000.0

# Parameter:   id =  a_11, name = a_11, constant
par a_11=0.524

# Parameter:   id =  a_12, name = a_12, constant
par a_12=0.524

# Parameter:   id =  a_21, name = a_21, constant
par a_21=0.786

# Parameter:   id =  a_22, name = a_22, constant
par a_22=0.786

# Parameter:   id =  b_11, name = b_11, constant
par b_11=161000.0

# Parameter:   id =  b_12, name = b_12, constant
par b_12=161000.0

# Parameter:   id =  b_21, name = b_21, constant
par b_21=161000.0

# Parameter:   id =  b_22, name = b_22, constant
par b_22=161000.0

# Parameter:   id =  a_31, name = a_31, constant
par a_31=0.04

# Parameter:   id =  a_32, name = a_32, constant
par a_32=0.04

# Parameter:   id =  b_31, name = b_31, constant
par b_31=160000.0

# Parameter:   id =  b_32, name = b_32, constant
par b_32=160000.0

# Parameter:   id =  lambda_1, name = lambda_1, defined by a Rule

# Parameter:   id =  lambda_2, name = lambda_2, defined by a Rule

# Parameter:   id =  omega_1, name = omega_1, constant
par omega_1=0.59

# Parameter:   id =  omega_2, name = omega_2, constant
par omega_2=0.59

# Parameter:   id =  rho_1, name = rho_1, constant
par rho_1=0.001

# Parameter:   id =  rho_2, name = rho_2, constant
par rho_2=0.01

# Parameter:   id =  chi_1, name = chi_1, constant
par chi_1=5.0E-5

# Parameter:   id =  chi_2, name = chi_2, constant
par chi_2=5.0E-5

# Parameter:   id =  ed_1, name = ed_1, defined by a Rule

# Parameter:   id =  ed_2, name = ed_2, defined by a Rule

# Parameter:   id =  tau_1, name = tau_1, constant
par tau_1=0.05

# Parameter:   id =  tau_2, name = tau_2, constant
par tau_2=0.05

# Parameter:   id =  tilde_s_1, name = tilde_s_1, constant
par tilde_s_1=0.05

# Parameter:   id =  p, name = p, constant
par p=1.0E-4

# Parameter:   id =  f_1, name = f_1, defined by a Rule

# Parameter:   id =  f_2, name = f_2, defined by a Rule

# assignmentRule: variable = lambda_1
lambda_1=a_11*Tumor_Cel/(b_11+Tumor_Cel)+a_21*Necrotic_/(b_21+Necrotic_)
aux lambda_1=lambda_1

# assignmentRule: variable = lambda_2
lambda_2=a_12*Tumor_C_1/(b_12+Tumor_C_1)+a_22*Necroti_1/(b_22+Necroti_1)
aux lambda_2=lambda_2

# assignmentRule: variable = gamma_1
gamma_1=(tanh((TE_immune-(low_1+up_1)/2)*6/(up_1-low_1))-tanh((low_1+up_1)*(-3)/(up_1-low_1)))*max_1/2+1
aux gamma_1=gamma_1

# assignmentRule: variable = g_1
g_1=r_1*(1-Tumor_Cel/K_1)
aux g_1=g_1

# assignmentRule: variable = g_2
g_2=r_2*(1-Tumor_C_1/K_2)
aux g_2=g_2

# assignmentRule: variable = gamma_2
gamma_2=(tanh((TE_immu_1-(low_2+up_2)/2)*6/(up_2-low_2))-tanh((-3)*(up_2+low_2)/(up_2-low_2)))*max_2/2+1
aux gamma_2=gamma_2

# assignmentRule: variable = sigma_1
sigma_1=((tanh(6*(CT_immune-(lowC_1+upC_1)/2)/(lowC_1-upC_1))-tanh((-3)*(lowC_1+upC_1)/(lowC_1-upC_1)))*maxC_1/2+minC_1)*(1-tanh(6*(TE_immune-(lowD_1+upD_1)/2)/(lowD_1-upD_1)))/(1-tanh((-3)*(lowD_1+upD_1)/(lowD_1-upD_1)))
aux sigma_1=sigma_1

# assignmentRule: variable = sigma_2
sigma_2=((tanh(6*(CT_immu_1-(lowC_2+upC_2)/2)/(lowC_2-upC_2))-tanh((-3)*(lowC_2+upC_2)/(lowC_2-upC_2)))*maxC_2/2+minC_2)*(1-tanh(6*(TE_immu_1-(lowD_2+upD_2)/2)/(lowD_2-upD_2)))/(1-tanh((-3)*(lowD_2+upD_2)/(lowD_2-upD_2)))
aux sigma_2=sigma_2

# assignmentRule: variable = v_v2_minv_maxv_lowv_upv
v_v2_minv=(tanh(6*(Necroti_1-(up_v+low_v)/2)/(up_v-low_v))-tanh((-3)*(up_v+low_v)/(up_v-low_v)))*max_v/2+min_v
aux v_v2_minv=v_v2_minv

# assignmentRule: variable = e_x2_0_maxct_lowesstct_upestct
e_x2_0_ma=max_CT*(1-tanh(6*(CT_immu_1-(upEst_CT+lowEst_CT)/2)/(upEst_CT-lowEst_CT)))/(1-tanh((-3)*(upEst_CT+lowEst_CT)/(upEst_CT-lowEst_CT)))
aux e_x2_0_ma=e_x2_0_ma

# assignmentRule: variable = v_y2_minestte_maxestte_lowestte_upestte
v_y2_mine=(tanh(6*(TE_immu_1-(upEst_TE+lowEst_TE)/2)/(upEst_TE-lowEst_TE))-tanh((-3)*(upEst_TE+lowEst_TE)/(upEst_TE-lowEst_TE)))*maxEst_TE/2+minEst_TE
aux v_y2_mine=v_y2_mine

# assignmentRule: variable = est
est=e_x2_0_ma*v_v2_minv*v_y2_mine
aux est=est

# assignmentRule: variable = ed_1
ed_1=chi_1*Tumor_Cel
aux ed_1=ed_1

# assignmentRule: variable = ed_2
ed_2=chi_2*Tumor_C_1
aux ed_2=ed_2

# assignmentRule: variable = f_1
f_1=a_31*Tumor_Cel/(b_31+Tumor_Cel)
aux f_1=f_1

# assignmentRule: variable = f_2
f_2=a_32*Tumor_C_1/(b_32+Tumor_C_1)
aux f_2=f_2

# Reaction: id = Tumor_Cell_u1__growth, name = Tumor Cell(u1) growth

Tumor_C_2=compartme*Functio_5(gamma_1, g_1, Tumor_Cel)

# Reaction: id = Tumor_Cell_u2__growth, name = Tumor Cell(u2) growth

Tumor_C_3=compartme*Functi_15(gamma_2, g_2, Tumor_C_1)

# Reaction: id = Tumor_Cell_u1__death, name = Tumor Cell(u1) death

Tumor_C_4=compartme*Functi_18(sigma_1, Tumor_Cel)

# Reaction: id = Tumor_Cell_u2__death, name = Tumor Cell(u2) death

Tumor_C_5=compartme*Functi_16(sigma_2, Tumor_C_1)

# Reaction: id = Necrotic_Cell_v1__rise, name = Necrotic Cell(v1) rise

Necroti_2=compartme*Functio_4(theta_1, sigma_1, Tumor_Cel)

# Reaction: id = Necrotic_Cell_v2__rise, name = Necrotic Cell(v2) rise

Necroti_3=compartme*Functi_11(theta_2, sigma_2, Tumor_C_1)

# Reaction: id = Tumor_Cell_u1__Shedding, name = Tumor Cell(u1) Shedding

Tumor_C_6=compartme*Functi_17(s_1, Tumor_Cel)

# Reaction: id = Tumor_Cell_u2__Metastatic, name = Tumor Cell(u2) Metastatic

Tumor_C_7=compartme*Functio_7(s_1, Tumor_Cel, est)

# Reaction: id = Necrotic_Cell_v1__lysis, name = Necrotic Cell(v1) lysis

Necroti_4=compartme*Functi_21(myu_1, Necrotic_)

# Reaction: id = Necrotic_Cell_v2__lysis, name = Necrotic Cell(v2) lysis

Necroti_5=compartme*Functio_9(myu_2, Necroti_1)

# Reaction: id = CT_immune_Cell_x1__natural_influx, name = CT immune Cell(x1) natural influx

CT_immu_2=compartme*Functi_20(alpha_1)

# Reaction: id = CT_immune_Cell_x2__natural_influx, name = CT immune Cell(x2) natural influx

CT_immu_3=compartme*Functi_19(alpha_2)

# Reaction: id = CT_immune_Cell_x1__response, name = CT immune Cell(x1) response

CT_immu_4=compartme*Functio_8(lambda_1, CT_immune)

# Reaction: id = CT_immune_Cell_x2__response, name = CT immune Cell(x2) response

CT_immu_5=compartme*Functi_14(lambda_2, CT_immu_1)

# Reaction: id = CT_immune_Cell_x1__death, name = CT immune Cell(x1) death

CT_immu_6=compartme*Functio_3(omega_1, CT_immune)

# Reaction: id = CT_immune_Cell_x2__death, name = CT immune Cell(x2) death

CT_immu_7=compartme*Functio_2(omega_2, CT_immu_1)

# Reaction: id = CT_immune_Cell_x1__killed, name = CT immune Cell(x1) killed

CT_immu_8=compartme*Functio_1(rho_1, Tumor_Cel, CT_immune)

# Reaction: id = CT_immune_Cell_x2__killed, name = CT immune Cell(x2) killed

CT_immu_9=compartme*Functi_13(rho_2, Tumor_C_1, CT_immu_1)

# Reaction: id = CT_immune_Cell_x1__transition, name = CT immune Cell(x1) transition

CT_imm_10=compartme*Functi_12(ed_1, CT_immune)

# Reaction: id = CT_immune_Cell_x2__transition, name = CT immune Cell(x2) transition

CT_imm_11=compartme*Functi_10(ed_2, CT_immu_1)

# Reaction: id = TE_immune_Cell_y1__natural_death, name = TE immune Cell(y1) natural death

TE_immu_2=compartme*Functio_6(tau_1, TE_immune)

# Reaction: id = TE_immune_Cell_y2__natural_death, name = TE immune Cell(y2) natural death

TE_immu_3=compartme*Function_(tau_2, TE_immu_1)

# Reaction: id = TE_immune_Cell_y1__loss_in_circulatory, name = TE immune Cell(y1) loss in circulatory

TE_immu_4=compartme*Functi_22(tilde_s_1, TE_immune)

# Reaction: id = TE_immune_Cell_y2__supplement, name = TE immune Cell(y2) supplement

TE_immu_5=compartme*Functi_23(p, tilde_s_1, TE_immune)

# Reaction: id = TE_immune_Cell_y1__recruitment, name = TE immune Cell(y1) recruitment

TE_immu_6=compartme*Functi_24(f_1, TE_immune)

# Reaction: id = TE_immune_Cell_y2__recruitment, name = TE immune Cell(y2) recruitment

TE_immu_7=compartme*Functi_25(f_2, TE_immu_1)

# Species:   id = Tumor_Cell_u_1, name = Tumor Cell(u_1), affected by kineticLaw

par Tumor_Cel=1.0
aux Tumor_Cel=Tumor_Cel
dTumor_Cel/dt=(1/(compartme))*(( 1.0 * Tumor_C_2) + (-1.0 * Tumor_C_4) + (-1.0 * Tumor_C_6))

# Species:   id = TE_immune_Cell_y_1, name = TE immune Cell(y_1), affected by kineticLaw

par TE_immune=0.0
aux TE_immune=TE_immune
dTE_immune/dt=(1/(compartme))*(( 1.0 * CT_imm_10) + (-1.0 * TE_immu_2) + (-1.0 * TE_immu_4) + ( 1.0 * TE_immu_6))

# Species:   id = CT_immune_Cell_x_1, name = CT immune Cell(x_1), affected by kineticLaw

par CT_immune=1694915.25423729
aux CT_immune=CT_immune
dCT_immune/dt=(1/(compartme))*(( 1.0 * CT_immu_2) + ( 1.0 * CT_immu_4) + (-1.0 * CT_immu_6) + (-1.0 * CT_immu_8) + (-1.0 * CT_imm_10))

# Species:   id = Tumor_Cell_u_2, name = Tumor Cell(u_2), affected by kineticLaw

par Tumor_C_1=0.0
aux Tumor_C_1=Tumor_C_1
dTumor_C_1/dt=(1/(compartme))*(( 1.0 * Tumor_C_3) + (-1.0 * Tumor_C_5) + ( 1.0 * Tumor_C_7))

# Species:   id = CT_immune_Cell_x_2, name = CT immune Cell(x_2), affected by kineticLaw

par CT_immu_1=1694915.25423729
aux CT_immu_1=CT_immu_1
dCT_immu_1/dt=(1/(compartme))*(( 1.0 * CT_immu_3) + ( 1.0 * CT_immu_5) + (-1.0 * CT_immu_7) + (-1.0 * CT_immu_9) + (-1.0 * CT_imm_11))

# Species:   id = TE_immune_Cell_y_2, name = TE immune Cell(y_2), affected by kineticLaw

par TE_immu_1=0.0
aux TE_immu_1=TE_immu_1
dTE_immu_1/dt=(1/(compartme))*(( 1.0 * CT_imm_11) + (-1.0 * TE_immu_3) + ( 1.0 * TE_immu_5) + ( 1.0 * TE_immu_7))

# Species:   id = Necrotic_Cell_v_1, name = Necrotic Cell(v_1), affected by kineticLaw

par Necrotic_=0.0
aux Necrotic_=Necrotic_
dNecrotic_/dt=(1/(compartme))*(( 1.0 * Necroti_2) + (-1.0 * Necroti_4))

# Species:   id = Necrotic_Cell_v_2, name = Necrotic Cell(v_2), affected by kineticLaw

par Necroti_1=0.0
aux Necroti_1=Necroti_1
dNecroti_1/dt=(1/(compartme))*(( 1.0 * Necroti_3) + (-1.0 * Necroti_5))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

