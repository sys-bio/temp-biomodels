
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Linke2017 - Synchronization of Cyclins' expression by the Fkh2 transcription factor in the budding yeast cell cycle
#
# is http://identifiers.org/biomodels.db/MODEL1809050002
# is http://identifiers.org/biomodels.db/BIOMD0000000934
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible_0, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_Sic1_degradation_1, name = Function for Sic1 degradation_1
Function_(Cdk1_Clb1or2,Cdk1_Clb3or4,Cdk1_Clb5or6,Cdk1_Clb5or6_Sic1,k5)=(k5*Cdk1_Clb5or6_Sic1*(1+Cdk1_Clb5or6+Cdk1_Clb3or4+Cdk1_Clb1or2))


# FunctionDefinition id = Function_for_Cdk1_Clb3_4_production_1, name = Function for Cdk1-Clb3,4 production_1
Functio_1(Cdk1_Clb5or6,k7,kA)=(k7*(1+kA*Cdk1_Clb5or6))


# FunctionDefinition id = Function_for_Cd1_Clb12_production_1, name = Function for Cd1_Clb12 production_1
Functio_2(Cdk1_Clb1or2,Cdk1_Clb3or4,Cdk1_Clb5or6,k9,kB,kC,kD)=(k9*(1+kD*Cdk1_Clb1or2+kB*Cdk1_Clb3or4+kC*Cdk1_Clb5or6))


# FunctionDefinition id = Function_for_Sic1_degradation_2, name = Function for Sic1 degradation_2
Functio_3(Cdk1_Clb1or2,Cdk1_Clb1or2_Sic1,Cdk1_Clb3or4,Cdk1_Clb5or6,k14)=(k14*Cdk1_Clb1or2_Sic1*(1+Cdk1_Clb5or6+Cdk1_Clb3or4+Cdk1_Clb1or2))


# FunctionDefinition id = Function_for_Sic1_degradation_3, name = Function for Sic1 degradation_3
Functio_4(Cdk1_Clb1or2,Cdk1_Clb3or4,Cdk1_Clb3or4_Sic1,Cdk1_Clb5or6,k18)=(k18*Cdk1_Clb3or4_Sic1*(1+Cdk1_Clb5or6+Cdk1_Clb3or4+Cdk1_Clb1or2))


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Parameter:   id =  k1, name = k1, constant
par k1=0.1

# Parameter:   id =  k2, name = k2, constant
par k2=5.0

# Parameter:   id =  k3, name = k3, constant
par k3=0.5

# Parameter:   id =  k4, name = k4, constant
par k4=0.01

# Parameter:   id =  k5, name = k5, constant
par k5=0.05

# Parameter:   id =  k6, name = k6, constant
par k6=0.7

# Parameter:   id =  k7, name = k7, constant
par k7=0.01

# Parameter:   id =  k8, name = k8, constant
par k8=0.7

# Parameter:   id =  k9, name = k9, constant
par k9=0.001

# Parameter:   id =  k10, name = k10, constant
par k10=0.7

# Parameter:   id =  k11, name = k11, constant
par k11=5.0

# Parameter:   id =  k12, name = k12, constant
par k12=0.5

# Parameter:   id =  k13, name = k13, constant
par k13=0.01

# Parameter:   id =  k14, name = k14, constant
par k14=0.05

# Parameter:   id =  k15, name = k15, constant
par k15=5.0

# Parameter:   id =  k16, name = k16, constant
par k16=0.5

# Parameter:   id =  k17, name = k17, constant
par k17=0.01

# Parameter:   id =  k18, name = k18, constant
par k18=0.05

# Parameter:   id =  k26, name = k26, constant
par k26=0.001

# Parameter:   id =  kA, name = kA, constant
par kA=100.0

# Parameter:   id =  kB, name = kB, constant
par kB=1000.0

# Parameter:   id =  kC, name = kC, constant
par kC=100.0

# Parameter:   id =  kD, name = kD, constant
par kD=100.0

# assignmentRule: variable = Clb34_total
Clb34_tot=Cdk1_Clb3+Cdk1_Cl_2
aux Clb34_tot=Clb34_tot

# assignmentRule: variable = Clb12_total
Clb12_tot=Cdk1_Clb1+Cdk1_Cl_3
aux Clb12_tot=Clb12_tot

# assignmentRule: variable = Clb56_total
Clb56_tot=Cdk1_Clb5+Cdk1_Cl_1
aux Clb56_tot=Clb56_tot

# Reaction: id = Cdk1_Clb5_6_production, name = Cdk1-Clb5,6 production

Cdk1_Cl_4=cell*Constant_(k1)

# Reaction: id = Sic1_binding_to_Cdk1_Clb5_6, name = Sic1 binding to Cdk1-Clb5,6

Sic1_bind=cell*k2*Sic1*Cdk1_Clb5

# Reaction: id = Cdk1_Clb5_6_Sic1_dissociation, name = Cdk1-Clb5,6-Sic1 dissociation

Cdk1_Cl_5=cell*k3*Cdk1_Cl_1

# Reaction: id = Clb5_6_degradation__ternary, name = Clb5,6 degradation (ternary)

Clb5_6_de=cell*k4*Cdk1_Cl_1

# Reaction: id = Sic1_degradation__Clb_regulated, name = Sic1 degradation (Clb-regulated)

Sic1_de_3=cell*Function_(Cdk1_Clb1, Cdk1_Clb3, Cdk1_Clb5, Cdk1_Cl_1, k5)

# Reaction: id = Clb5_6_degradation__binary, name = Clb5,6 degradation (binary)

Clb5_6__1=cell*k6*Cdk1_Clb5

# Reaction: id = Cdk1_Clb3_4_production, name = Cdk1-Clb3,4 production

Cdk1_Cl_6=cell*Functio_1(Cdk1_Clb5, k7, kA)

# Reaction: id = Clb3_4_degradation__binary, name = Clb3,4 degradation (binary)

Clb3_4_de=cell*k8*Cdk1_Clb3

# Reaction: id = Cdk1_Clb1_2_production, name = Cdk1-Clb1,2 production

Cdk1_Cl_7=cell*Functio_2(Cdk1_Clb1, Cdk1_Clb3, Cdk1_Clb5, k9, kB, kC, kD)

# Reaction: id = Clb1_2_degradation__binary, name = Clb1,2 degradation (binary)

Clb1_2_de=cell*k10*Cdk1_Clb1

# Reaction: id = Sic1_binding_to_Cdk1_Clb1_2, name = Sic1 binding to Cdk1-Clb1,2

Sic1_bi_1=cell*k11*Sic1*Cdk1_Clb1

# Reaction: id = Cdk1_Clb1_2_Sic1_dissociation, name = Cdk1-Clb1,2-Sic1 dissociation

Cdk1_Cl_8=cell*k12*Cdk1_Cl_3

# Reaction: id = Clb1_2_degradation__ternary, name = Clb1,2 degradation (ternary)

Clb1_2__1=cell*k13*Cdk1_Cl_3

# Reaction: id = Sic1_degradation__Clb_regulated__1, name = Sic1 degradation (Clb-regulated)_1

Sic1_de_4=cell*Functio_3(Cdk1_Clb1, Cdk1_Cl_3, Cdk1_Clb3, Cdk1_Clb5, k14)

# Reaction: id = Sic1_binding_to_Cdk1_Clb3_4, name = Sic1 binding to Cdk1-Clb3,4

Sic1_bi_2=cell*k15*Sic1*Cdk1_Clb3

# Reaction: id = Cdk1_Clb3_4_Sic1_dissociation, name = Cdk1-Clb3,4-Sic1 dissociation

Cdk1_Cl_9=cell*k16*Cdk1_Cl_2

# Reaction: id = Clb3_4_degradation__ternary, name = Clb3,4 degradation (ternary)

Clb3_4__1=cell*k17*Cdk1_Cl_2

# Reaction: id = Sic1_degradation__Clb_regulated__2, name = Sic1 degradation (Clb-regulated)_2

Sic1_de_5=cell*Functio_4(Cdk1_Clb1, Cdk1_Clb3, Cdk1_Cl_2, Cdk1_Clb5, k18)

# Reaction: id = Sic1_degradation__basal, name = Sic1 degradation (basal)

Sic1_de_6=cell*k26*Sic1

# Species:   id = Sic1, name = Sic1, affected by kineticLaw

init Sic1=5.0
dSic1/dt=(1/(cell))*((-1.0 * Sic1_bind) + ( 1.0 * Cdk1_Cl_5) + (-1.0 * Sic1_bi_1) + ( 1.0 * Cdk1_Cl_8) + (-1.0 * Sic1_bi_2) + ( 1.0 * Cdk1_Cl_9) + (-1.0 * Sic1_de_6))

# Species:   id = Cdk1_Clb5or6, name = Cdk1_Clb5or6, affected by kineticLaw

par Cdk1_Clb5=0.0
aux Cdk1_Clb5=Cdk1_Clb5
dCdk1_Clb5/dt=(1/(cell))*(( 1.0 * Cdk1_Cl_4) + (-1.0 * Sic1_bind) + ( 1.0 * Cdk1_Cl_5) + ( 1.0 * Sic1_de_3) + (-1.0 * Clb5_6__1))

# Species:   id = Cdk1_Clb5or6_Sic1, name = Cdk1_Clb5or6_Sic1, affected by kineticLaw

par Cdk1_Cl_1=0.0
aux Cdk1_Cl_1=Cdk1_Cl_1
dCdk1_Cl_1/dt=(1/(cell))*(( 1.0 * Sic1_bind) + (-1.0 * Cdk1_Cl_5) + (-1.0 * Clb5_6_de) + (-1.0 * Sic1_de_3))

# Species:   id = Clb5or6_degraded, name = Clb5or6_degraded, affected by kineticLaw

par Clb5or6_d=0.0
aux Clb5or6_d=Clb5or6_d
dClb5or6_d/dt=(1/(cell))*(( 1.0 * Clb5_6_de) + ( 1.0 * Clb5_6__1))

# Species:   id = Cdk1_Clb3or4, name = Cdk1_Clb3or4, affected by kineticLaw

par Cdk1_Clb3=0.0
aux Cdk1_Clb3=Cdk1_Clb3
dCdk1_Clb3/dt=(1/(cell))*(( 1.0 * Cdk1_Cl_6) + (-1.0 * Clb3_4_de) + (-1.0 * Sic1_bi_2) + ( 1.0 * Cdk1_Cl_9))

# Species:   id = Cdk1_Clb3or4_Sic1, name = Cdk1_Clb3or4_Sic1, affected by kineticLaw

par Cdk1_Cl_2=0.0
aux Cdk1_Cl_2=Cdk1_Cl_2
dCdk1_Cl_2/dt=(1/(cell))*(( 1.0 * Sic1_bi_2) + (-1.0 * Cdk1_Cl_9) + (-1.0 * Clb3_4__1) + (-1.0 * Sic1_de_5))

# Species:   id = Clb3or4_degraded, name = Clb3or4_degraded, affected by kineticLaw

par Clb3or4_d=0.0
aux Clb3or4_d=Clb3or4_d
dClb3or4_d/dt=(1/(cell))*(( 1.0 * Clb3_4_de) + ( 1.0 * Clb3_4__1))

# Species:   id = Cdk1_Clb1or2, name = Cdk1_Clb1or2, affected by kineticLaw

par Cdk1_Clb1=0.0
aux Cdk1_Clb1=Cdk1_Clb1
dCdk1_Clb1/dt=(1/(cell))*(( 1.0 * Cdk1_Cl_7) + (-1.0 * Clb1_2_de) + (-1.0 * Sic1_bi_1) + ( 1.0 * Cdk1_Cl_8))

# Species:   id = Cdk1_Clb1or2_Sic1, name = Cdk1_Clb1or2_Sic1, affected by kineticLaw

par Cdk1_Cl_3=0.0
aux Cdk1_Cl_3=Cdk1_Cl_3
dCdk1_Cl_3/dt=(1/(cell))*(( 1.0 * Sic1_bi_1) + (-1.0 * Cdk1_Cl_8) + (-1.0 * Clb1_2__1) + (-1.0 * Sic1_de_4))

# Species:   id = Clb1or2_degraded, name = Clb1or2_degraded, affected by kineticLaw

par Clb1or2_d=0.0
aux Clb1or2_d=Clb1or2_d
dClb1or2_d/dt=(1/(cell))*(( 1.0 * Clb1_2_de) + ( 1.0 * Clb1_2__1))

# Species:   id = Sic1_degraded_re14, name = Sic1_degraded_re14, affected by kineticLaw

par Sic1_degr=0.0
aux Sic1_degr=Sic1_degr
dSic1_degr/dt=(1/(cell))*(( 1.0 * Sic1_de_4))

# Species:   id = Sic1_degraded_re18, name = Sic1_degraded_re18, affected by kineticLaw

par Sic1_de_1=0.0
aux Sic1_de_1=Sic1_de_1
dSic1_de_1/dt=(1/(cell))*(( 1.0 * Sic1_de_5))

# Species:   id = Sic1_degraded_re5, name = Sic1_degraded_re5, affected by kineticLaw

par Sic1_de_2=0.0
aux Sic1_de_2=Sic1_de_2
dSic1_de_2/dt=(1/(cell))*(( 1.0 * Sic1_de_3))

# Species:   id = Clb34_total, name = Clb34_total, involved in a rule 

# Species:   id = Clb12_total, name = Clb12_total, involved in a rule 

# Species:   id = Clb56_total, name = Clb56_total, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

