
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Nyman2011_M3Hierarachical_InsulinGlucosedynamics
#
# is http://identifiers.org/biomodels.db/MODEL1108190000
# is http://identifiers.org/biomodels.db/BIOMD0000000356
# isDescribedBy http://identifiers.org/pubmed/21572040
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000137
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000343
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000379
# isDerivedFrom http://identifiers.org/pubmed/19225456
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = default, name = default, constant
par default=1.0

# Parameter:   id =  a1, name = a1, constant
par a1=4.4825146271204E8

# Parameter:   id =  a2, name = a2, constant
par a2=4321891.90327031

# Parameter:   id =  d1, name = d1, constant
par d1=0.7722612342

# Parameter:   id =  d2, name = d2, constant
par d2=0.0122057759

# Parameter:   id =  Kcr, name = Kcr, constant
par Kcr=0.0013640432

# Parameter:   id =  Kex, name = Kex, constant
par Kex=37.0818924842

# Parameter:   id =  Kend, name = Kend, constant
par Kend=30.6825110077

# Parameter:   id =  Kdp, name = Kdp, constant
par Kdp=9.500831E-4

# Parameter:   id =  Kcat, name = Kcat, constant
par Kcat=237.5189220434

# Parameter:   id =  Km, name = Km, constant
par Km=3.0181933402

# Parameter:   id =  kfbasal, name = kfbasal, constant
par kfbasal=0.49752158

# Parameter:   id =  krbasal, name = krbasal, constant
par krbasal=128042.884096176

# Parameter:   id =  k21, name = k21, constant
par k21=0.009645863

# Parameter:   id =  k22, name = k22, constant
par k22=2374.9773277896

# Parameter:   id =  k23, name = k23, constant
par k23=0.1199031163

# Parameter:   id =  k24, name = k24, constant
par k24=0.9430860972

# Parameter:   id =  k2b, name = k2b, constant
par k2b=608.5839585406

# Parameter:   id =  k3f, name = k3f, constant
par k3f=8.1119350488

# Parameter:   id =  k3b, name = k3b, constant
par k3b=0.1895302156

# Parameter:   id =  k4f, name = k4f, constant
par k4f=384885.688277883

# Parameter:   id =  k4b, name = k4b, constant
par k4b=28137.0701606029

# Parameter:   id =  k5f, name = k5f, constant
par k5f=64300.0712750856

# Parameter:   id =  k5b, name = k5b, constant
par k5b=10052.5084521206

# Parameter:   id =  k6f, name = k6f, constant
par k6f=1.60942017926563E7

# Parameter:   id =  k6b, name = k6b, constant
par k6b=77.7712105485

# Parameter:   id =  k7f, name = k7f, constant
par k7f=4174.6300598327

# Parameter:   id =  k7b, name = k7b, constant
par k7b=565342.162392942

# Parameter:   id =  k8f, name = k8f, constant
par k8f=1515762.41887571

# Parameter:   id =  k8b, name = k8b, constant
par k8b=300.7511656484

# Parameter:   id =  k91, name = k91, constant
par k91=8.14E-8

# Parameter:   id =  k92, name = k92, constant
par k92=0.0280831426

# Parameter:   id =  k9b, name = k9b, constant
par k9b=4.0297596909

# Parameter:   id =  k5Basic, name = k5Basic, constant
par k5Basic=0.2040341054

# Parameter:   id =  k5BasicWb, name = k5BasicWb, constant
par k5BasicWb=2.34E-8

# Parameter:   id =  k_glut4, name = k_glut4, constant
par k_glut4=31.4211308621

# Parameter:   id =  k_glut1, name = k_glut1, constant
par k_glut1=0.2966651081

# Parameter:   id =  KmG1, name = KmG1, constant
par KmG1=132.7704719106

# Parameter:   id =  KmG4, name = KmG4, constant
par KmG4=70.4032025464

# Parameter:   id =  kbf, name = kbf, constant
par kbf=0.003119389367

# Parameter:   id =  V_G, name = V_G, constant
par V_G=1.88

# Parameter:   id =  k_1, name = k_1, constant
par k_1=0.065

# Parameter:   id =  k_2, name = k_2, constant
par k_2=0.079

# Parameter:   id =  G_b, name = G_b, constant
par G_b=95.0

# Parameter:   id =  V_I, name = V_I, constant
par V_I=0.05

# Parameter:   id =  m_1, name = m_1, constant
par m_1=0.19

# Parameter:   id =  m_2, name = m_2, constant
par m_2=0.484

# Parameter:   id =  m_4, name = m_4, constant
par m_4=0.194

# Parameter:   id =  m_5, name = m_5, constant
par m_5=0.0304

# Parameter:   id =  m_6, name = m_6, constant
par m_6=0.6471

# Parameter:   id =  HE_b, name = HE_b, constant
par HE_b=0.6

# Parameter:   id =  I_b, name = I_b, constant
par I_b=25.0

# Parameter:   id =  S_b, name = S_b, constant
par S_b=1.8

# Parameter:   id =  S_b_minus, name = S_b_minus, constant
par S_b_minus=-1.8

# Parameter:   id =  k_max, name = k_max, constant
par k_max=0.0558

# Parameter:   id =  k_min, name = k_min, constant
par k_min=0.008

# Parameter:   id =  k_abs, name = k_abs, constant
par k_abs=0.057

# Parameter:   id =  k_gri, name = k_gri, constant
par k_gri=0.0558

# Parameter:   id =  f, name = f, constant
par f=0.9

# Parameter:   id =  b, name = b, constant
par b=0.82

# Parameter:   id =  d, name = d, constant
par d=0.01

# Parameter:   id =  BW, name = BW, constant
par BW=78.0

# Parameter:   id =  k_p1, name = k_p1, constant
par k_p1=2.7

# Parameter:   id =  k_p2, name = k_p2, constant
par k_p2=0.0021

# Parameter:   id =  k_p3, name = k_p3, constant
par k_p3=0.009

# Parameter:   id =  k_p4, name = k_p4, constant
par k_p4=0.0618

# Parameter:   id =  k_i, name = k_i, constant
par k_i=0.0079

# Parameter:   id =  U_ii, name = U_ii, constant
par U_ii=1.0

# Parameter:   id =  V_m0, name = V_m0, constant
par V_m0=2.5

# Parameter:   id =  V_mX, name = V_mX, constant
par V_mX=0.047

# Parameter:   id =  K_m0, name = K_m0, constant
par K_m0=225.59

# Parameter:   id =  p_2U, name = p_2U, constant
par p_2U=0.0331

# Parameter:   id =  part, name = part, constant
par part=0.2

# Parameter:   id =  K, name = K, constant
par K=2.3

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.05

# Parameter:   id =  beta, name = beta, constant
par beta=0.11

# Parameter:   id =  gamma, name = gamma, constant
par gamma=0.5

# Parameter:   id =  k_e1, name = k_e1, constant
par k_e1=5.0E-4

# Parameter:   id =  k_e2, name = k_e2, constant
par k_e2=339.0

# Parameter:   id =  D, name = D, constant
par D_1=78000.0

# Parameter:   id =  vglucoseuptake, name = vglucoseuptake, defined by a Rule

# Parameter:   id =  KD, name = KD, defined by a Rule

# Parameter:   id =  S2, name = S2, defined by a Rule

# Parameter:   id =  S1, name = S1, defined by a Rule

# Parameter:   id =  K4, name = K4, defined by a Rule

# Parameter:   id =  K8, name = K8, defined by a Rule

# Parameter:   id =  aa, name = aa, defined by a Rule

# Parameter:   id =  cc, name = cc, defined by a Rule

# Parameter:   id =  EGP, name = EGP, defined by a Rule

# Parameter:   id =  V_mmax, name = V_mmax, defined by a Rule

# Parameter:   id =  E, name = E, defined by a Rule

# Parameter:   id =  S, name = S, defined by a Rule

# Parameter:   id =  I, name = I, defined by a Rule

# Parameter:   id =  G, name = G, defined by a Rule

# Parameter:   id =  HE, name = HE, defined by a Rule

# Parameter:   id =  m_3, name = m_3, defined by a Rule

# Parameter:   id =  Q_sto, name = Q_sto, defined by a Rule

# Parameter:   id =  Ra, name = Ra, defined by a Rule

# Parameter:   id =  k_empt, name = k_empt, defined by a Rule

# Parameter:   id =  U_idm, name = U_idm, defined by a Rule

# Parameter:   id =  U_id, name = U_id, defined by a Rule

# Parameter:   id =  U, name = U, defined by a Rule

# Parameter:   id =  S_po, name = S_po, defined by a Rule

# Parameter:   id =  G_p, name = G_p, defined by a Rule

# Parameter:   id =  G_t, name = G_t, defined by a Rule

# Parameter:   id =  I_l, name = I_l, defined by a Rule

# Parameter:   id =  I_p, name = I_p, defined by a Rule

# Parameter:   id =  Q_sto1, name = Q_sto1, defined by a Rule

# Parameter:   id =  Q_sto2, name = Q_sto2, defined by a Rule

# Parameter:   id =  Q_gut, name = Q_gut, defined by a Rule

# Parameter:   id =  I_1, name = I_1, defined by a Rule

# Parameter:   id =  I_d, name = I_d, defined by a Rule

# Parameter:   id =  INS, name = INS, defined by a Rule

# Parameter:   id =  I_po, name = I_po, defined by a Rule

# Parameter:   id =  Y, name = Y, defined by a Rule

# assignmentRule: variable = vglucoseuptake
vglucoseu=k_glut1*G_t/(KmG1+G_t)+k_glut4*GLUT4_M*G_t/(KmG4+G_t)+kbf*(INS+5)
aux vglucoseu=vglucoseu

# assignmentRule: variable = KD
KD=7E-6
aux KD=KD

# assignmentRule: variable = S2
S2=0
aux S2=S2

# assignmentRule: variable = S1
S1=(INS+5)*1E-12
aux S1=S1

# assignmentRule: variable = K4
K4=1400
aux K4=K4

# assignmentRule: variable = K8
K8=0.01
aux K8=K8

# assignmentRule: variable = aa
aa=5/2/(1-b)/D_1
aux aa=aa

# assignmentRule: variable = cc
cc=5/2/d/D_1
aux cc=cc

# assignmentRule: variable = EGP
EGP=k_p1-k_p2*G_p-k_p3*I_d-k_p4*I_po
aux EGP=EGP

# assignmentRule: variable = V_mmax
V_mmax=(1-part)*(V_m0+V_mX*INS)
aux V_mmax=V_mmax

# assignmentRule: variable = E
E=0
aux E=E

# assignmentRule: variable = S
S=gamma*I_po
aux S=S

# assignmentRule: variable = I
I=I_p/V_I
aux I=I

# assignmentRule: variable = G
G=G_p/V_G
aux G=G

# assignmentRule: variable = HE
HE=(-m_5)*S+m_6
aux HE=HE

# assignmentRule: variable = m_3
m_3=HE*m_1/(1-HE)
aux m_3=m_3

# assignmentRule: variable = Q_sto
Q_sto=Q_sto1+Q_sto2
aux Q_sto=Q_sto

# assignmentRule: variable = Ra
Ra=f*k_abs*Q_gut/BW
aux Ra=Ra

# assignmentRule: variable = k_empt
k_empt=k_min+(k_max-k_min)/2*(tanh(aa*(Q_sto-b*D_1))-tanh(cc*(Q_sto-d*D_1))+2)
aux k_empt=k_empt

# assignmentRule: variable = U_idm
U_idm=V_mmax*G_t/(K_m0+G_t)
aux U_idm=U_idm

# assignmentRule: variable = U_id
U_id=U_idm+vglucoseu
aux U_id=U_id

# assignmentRule: variable = U
U=U_ii+U_id
aux U=U

# assignmentRule: variable = S_po
S_po=Y+K*(EGP+Ra-E-U_ii-k_1*G_p+k_2*G_t)/V_G+S_b
aux S_po=S_po

# rateRule: variable = G_p
init G_p=178.0
dG_p/dt=EGP+Ra-E-U_ii-k_1*G_p+k_2*G_t

# rateRule: variable = G_t
init G_t=135.0
dG_t/dt=-U_id+k_1*G_p-k_2*G_t

# rateRule: variable = I_l
init I_l=4.5
dI_l/dt=(-m_1)*I_l-m_3*I_l+m_2*I_p+S

# rateRule: variable = I_p
init I_p=1.25
dI_p/dt=(-m_2)*I_p-m_4*I_p+m_1*I_l

# rateRule: variable = Q_sto1
init Q_sto1=78000.0
dQ_sto1/dt=(-k_gri)*Q_sto1

# rateRule: variable = Q_sto2
init Q_sto2=0.0
dQ_sto2/dt=(-k_empt)*Q_sto2+k_gri*Q_sto1

# rateRule: variable = Q_gut
init Q_gut=0.0
dQ_gut/dt=(-k_abs)*Q_gut+k_empt*Q_sto2

# rateRule: variable = I_1
init I_1=25.0
dI_1/dt=(-k_i)*(I_1-I)

# rateRule: variable = I_d
init I_d=25.0
dI_d/dt=(-k_i)*(I_d-I_1)

# rateRule: variable = INS
init INS=0.0
dINS/dt=(-p_2U)*INS+p_2U*(I-I_b)

# rateRule: variable = I_po
init I_po=3.6
dI_po/dt=(-gamma)*I_po+S_po

# rateRule: variable = Y
init Y=0.0
dY/dt=(-alpha)*(Y-beta*(G-G_b))

# Reaction: id = R1, name = R1

R1_1=2*a1*S1*r0

# Reaction: id = R2, name = R2

R2_1=2*a2*S1*r0

# Reaction: id = R3, name = R3

R3=a1*S1*r1

# Reaction: id = R4, name = R4

R4=a1*S1*r2

# Reaction: id = R5, name = R5

R5=d1*r1

# Reaction: id = R6, name = R6

R6=a2*S1*r1

# Reaction: id = R7, name = R7

R7=a2*S1*r2

# Reaction: id = R8, name = R8

R8=d2*r2

# Reaction: id = R9, name = R9

R9=Kcr*r1

# Reaction: id = R10, name = R10

R10=Kcr*r2

# Reaction: id = R11, name = R11

R11_1=a1*S1*r1x2

# Reaction: id = R12, name = R12

R12_1=2*d1*r11

# Reaction: id = R13, name = R13

R13=d1*r12

# Reaction: id = R14, name = R14

R14=a2*S1*r1x2

# Reaction: id = R15, name = R15

R15=d2*r12

# Reaction: id = R16, name = R16

R16=2*d2*r22

# Reaction: id = R17, name = R17

R17=2*Kcr*r11

# Reaction: id = R18, name = R18

R18=Kcr*r12

# Reaction: id = R19, name = R19

R19=d2*r1x2

# Reaction: id = R20, name = R20

R20=Kcr*r12

# Reaction: id = R21, name = R21

R21=2*Kcr*r22

# Reaction: id = R22, name = R22

R22_1=d1*r1x2

# Reaction: id = R23, name = R23

R23=a2*S2*r1x2

# Reaction: id = R24, name = R24

R24=d1*r11x2

# Reaction: id = R25, name = R25

R25=d2*r1x22

# Reaction: id = R26, name = R26

R26=d2*r11x2

# Reaction: id = R27, name = R27

R27=d2*r1x22

# Reaction: id = R28, name = R28

R28=d1*r11x2

# Reaction: id = R29, name = R29

R29=d1*r1x22

# Reaction: id = R30, name = R30

R30=a1*S1*r1x22

# Reaction: id = R31, name = R31

R31=a2*S1*r11x2

# Reaction: id = R32, name = R32

R32=K4*S1*r1x22

# Reaction: id = R33, name = R33

R33=K8*r1x22d

# Reaction: id = R34, name = R34

R34=d2*r1x22d

# Reaction: id = R35, name = R35

R35=d1*r11x22

# Reaction: id = R36, name = R36

R36=d2*r11x22

# Reaction: id = R37, name = R37

R37=Kex*rend

# Reaction: id = R38, name = R38

R38=Kex*iend

# Reaction: id = R39, name = R39

R39=Kend*r1x2

# Reaction: id = R40, name = R40

R40=Kend*r11x2

# Reaction: id = R41, name = R41

R41=Kend*r1x22

# Reaction: id = R42, name = R42

R42=Kend*r1x22d

# Reaction: id = R43, name = R43

R43=Kend*r11x22

# Reaction: id = R44, name = R44

R44=(Kdp+Kcat*X_P/(Km+X_P))*rendP

# Reaction: id = R45, name = R45

R45=(Kdp+Kcat*X_P/(Km+X_P))*iendIR

# Reaction: id = R46, name = R46

R46=kfbasal*r0

# Reaction: id = R47, name = R47

R47=krbasal*rPbasal

# Reaction: id = R48, name = R48

R48=Kend*rPbasal

# Reaction: id = v2f, name = v2f

v2f=k21*IRS*(r1x2+r11x2+r1x22+r1x22d+r11x22+rPbasal+k22*rendP)*(1+k23*PKC_P+k24*mTOR)

# Reaction: id = v2b, name = v2b

v2b=k2b*IRSiP

# Reaction: id = v3f, name = v3f

v3f=k3f*X*IRSiP

# Reaction: id = v3b, name = v3b

v3b=k3b*X_P

# Reaction: id = v4f, name = v4f

v4f=k4f*PI3K*IRSiP

# Reaction: id = v4b, name = v4b

v4b=k4b*PI3K_

# Reaction: id = v5f, name = v5f

v5f=k5f*PDK1*PI3K_

# Reaction: id = v5b, name = v5b

v5b=k5b*PDK1_

# Reaction: id = v6f, name = v6f

v6f=k6f*PKC*PDK1_

# Reaction: id = v6b, name = v6b

v6b=k6b*PKC_P

# Reaction: id = v7f, name = v7f

v7f=k7f*PKB*PDK1_

# Reaction: id = v7b, name = v7b

v7b=k7b*PKB_P

# Reaction: id = v8f, name = v8f

v8f=k8f*mTOR*PKB_P

# Reaction: id = v8b, name = v8b

v8b=k8b*mTOR_

# Reaction: id = v9f, name = v9f

v9f=k91*GLUT4_C*PKC_P+k92*GLUT4_C*PKB_P+k5BasicWb*GLUT4_C

# Reaction: id = v9b, name = v9b

v9b=k9b*GLUT4_M

# Species:   id = r0, name = r0, affected by kineticLaw

init r0=9.96820379306998
dr0/dt=(1/(default))*((-1.0 * R1_1) + (-1.0 * R2_1) + ( 1.0 * R5) + ( 1.0 * R8) + ( 1.0 * R37) + (-1.0 * R46) + ( 1.0 * R47))

# Species:   id = r1, name = r1, affected by kineticLaw

init r1=0.0221366043399864
dr1/dt=(1/(default))*(( 1.0 * R1_1) + (-1.0 * R3) + (-1.0 * R5) + (-1.0 * R6) + (-1.0 * R9) + ( 1.0 * R12_1) + ( 1.0 * R15) + ( 1.0 * R19))

# Species:   id = r2, name = r2, affected by kineticLaw

init r2=0.00934921094738169
dr2/dt=(1/(default))*(( 1.0 * R2_1) + (-1.0 * R4) + (-1.0 * R7) + (-1.0 * R8) + (-1.0 * R10) + ( 1.0 * R13) + ( 1.0 * R16) + ( 1.0 * R22_1))

# Species:   id = r11, name = r11, affected by kineticLaw

init r11=1.22886711962222E-5
dr11/dt=(1/(default))*(( 1.0 * R3) + (-1.0 * R12_1) + (-1.0 * R17) + ( 1.0 * R26))

# Species:   id = r12, name = r12, affected by kineticLaw

init r12=1.0376421415741E-5
dr12/dt=(1/(default))*(( 1.0 * R4) + ( 1.0 * R6) + (-1.0 * R13) + (-1.0 * R15) + (-1.0 * R18) + (-1.0 * R20) + ( 1.0 * R27) + ( 1.0 * R28))

# Species:   id = r22, name = r22, affected by kineticLaw

init r22=2.18683301945588E-6
dr22/dt=(1/(default))*(( 1.0 * R7) + (-1.0 * R16) + (-1.0 * R21) + ( 1.0 * R29))

# Species:   id = r1x2, name = r1x2, affected by kineticLaw

init r1x2=1.36475817837692E-6
dr1x2/dt=(1/(default))*(( 1.0 * R9) + ( 1.0 * R10) + (-1.0 * R11_1) + (-1.0 * R14) + (-1.0 * R19) + (-1.0 * R22_1) + (-1.0 * R23) + ( 1.0 * R24) + ( 1.0 * R25) + ( 1.0 * R34) + (-1.0 * R39))

# Species:   id = r11x2, name = r11x2, affected by kineticLaw

init r11x2=1.51513915390766E-9
dr11x2/dt=(1/(default))*(( 1.0 * R11_1) + ( 1.0 * R17) + ( 1.0 * R20) + (-1.0 * R24) + (-1.0 * R26) + (-1.0 * R28) + (-1.0 * R31) + ( 1.0 * R36) + (-1.0 * R40))

# Species:   id = r1x22, name = r1x22, affected by kineticLaw

init r1x22=6.39351849488596E-10
dr1x22/dt=(1/(default))*(( 1.0 * R14) + ( 1.0 * R18) + ( 1.0 * R21) + (-1.0 * R25) + (-1.0 * R27) + (-1.0 * R29) + (-1.0 * R30) + (-1.0 * R32) + ( 1.0 * R33) + ( 1.0 * R35) + (-1.0 * R41))

# Species:   id = r1x22d, name = r1x22d, affected by kineticLaw

init r1x22d=5.59231079319369E-20
dr1x22d/dt=(1/(default))*(( 1.0 * R23) + ( 1.0 * R32) + (-1.0 * R33) + (-1.0 * R34) + (-1.0 * R42))

# Species:   id = r11x22, name = r11x22, affected by kineticLaw

init r11x22=1.78725515332219E-14
dr11x22/dt=(1/(default))*(( 1.0 * R30) + ( 1.0 * R31) + (-1.0 * R35) + (-1.0 * R36) + (-1.0 * R43))

# Species:   id = rend, name = rend, affected by kineticLaw

init rend=3.31711803810961E-5
drend/dt=(1/(default))*((-1.0 * R37) + ( 1.0 * R44))

# Species:   id = rendP, name = rendP, affected by kineticLaw

init rendP=2.12533941418487E-4
drendP/dt=(1/(default))*(( 1.0 * R39) + ( 1.0 * R40) + ( 1.0 * R41) + ( 1.0 * R42) + ( 1.0 * R43) + (-1.0 * R44) + ( 1.0 * R48))

# Species:   id = iendIR, name = iendIR, affected by kineticLaw

init iendIR=7.25519178924707E-6
diendIR/dt=(1/(default))*(( 1.0 * R39) + ( 2.0 * R40) + ( 2.0 * R41) + ( 3.0 * R42) + ( 3.0 * R43) + (-1.0 * R45))

# Species:   id = iend, name = iend, affected by kineticLaw

init iend=1.13228497567934E-6
diend/dt=(1/(default))*((-1.0 * R38) + ( 1.0 * R45))

# Species:   id = rPbasal, name = rPbasal, affected by kineticLaw

init rPbasal=3.87230309356247E-5
drPbasal/dt=(1/(default))*(( 1.0 * R46) + (-1.0 * R47) + (-1.0 * R48))

# Species:   id = IRS, name = IRS, affected by kineticLaw

init IRS=9.99982253600007
dIRS/dt=(1/(default))*((-1.0 * v2f) + ( 1.0 * v2b))

# Species:   id = IRSiP, name = IRSiP, affected by kineticLaw

init IRSiP=1.77463999892648E-4
dIRSiP/dt=(1/(default))*(( 1.0 * v2f) + (-1.0 * v2b))

# Species:   id = X, name = X, affected by kineticLaw

init X=9.92463241634744
dX/dt=(1/(default))*((-1.0 * v3f) + ( 1.0 * v3b))

# Species:   id = X_P, name = X_P, affected by kineticLaw

init X_P=0.0753675836525682
dX_P/dt=(1/(default))*(( 1.0 * v3f) + (-1.0 * v3b))

# Species:   id = PI3K, name = PI3K, affected by kineticLaw

init PI3K=9.97578356966623
dPI3K/dt=(1/(default))*((-1.0 * v4f) + ( 1.0 * v4b))

# Species:   id = PI3K_, name = PI3K_, affected by kineticLaw

init PI3K_=0.0242164303337614
dPI3K_/dt=(1/(default))*(( 1.0 * v4f) + (-1.0 * v4b))

# Species:   id = PDK1, name = PDK1, affected by kineticLaw

init PDK1=8.65876984730663
dPDK1/dt=(1/(default))*((-1.0 * v5f) + ( 1.0 * v5b))

# Species:   id = PDK1_, name = PDK1_, affected by kineticLaw

init PDK1_=1.34123015269338
dPDK1_/dt=(1/(default))*(( 1.0 * v5f) + (-1.0 * v5b))

# Species:   id = PKC, name = PKC, affected by kineticLaw

init PKC=3.60283594102724E-5
dPKC/dt=(1/(default))*((-1.0 * v6f) + ( 1.0 * v6b))

# Species:   id = PKC_P, name = PKC_P, affected by kineticLaw

init PKC_P=9.99996397164059
dPKC_P/dt=(1/(default))*(( 1.0 * v6f) + (-1.0 * v6b))

# Species:   id = PKB, name = PKB, affected by kineticLaw

init PKB=9.90193143617302
dPKB/dt=(1/(default))*((-1.0 * v7f) + ( 1.0 * v7b))

# Species:   id = PKB_P, name = PKB_P, affected by kineticLaw

init PKB_P=0.0980685638269942
dPKB_P/dt=(1/(default))*(( 1.0 * v7f) + (-1.0 * v7b))

# Species:   id = mTOR, name = mTOR, affected by kineticLaw

init mTOR=0.0201915011292933
dmTOR/dt=(1/(default))*((-1.0 * v8f) + ( 1.0 * v8b))

# Species:   id = mTOR_, name = mTOR_, affected by kineticLaw

init mTOR_=9.97980849887072
dmTOR_/dt=(1/(default))*(( 1.0 * v8f) + (-1.0 * v8b))

# Species:   id = GLUT4_C, name = GLUT4_C, affected by kineticLaw

init GLUT4_C=9.99316830771855
dGLUT4_C/dt=(1/(default))*((-1.0 * v9f) + ( 1.0 * v9b))

# Species:   id = GLUT4_M, name = GLUT4_M, affected by kineticLaw

init GLUT4_M=0.00683169228144988
dGLUT4_M/dt=(1/(default))*(( 1.0 * v9f) + (-1.0 * v9b))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

