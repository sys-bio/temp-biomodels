
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Varusai2018 - Dynamic modelling of the mTOR signalling network reveals complex emergent behaviours conferred by DEPTOR
#
# isDescribedBy http://identifiers.org/pubmed/29330362
# is http://identifiers.org/biomodels.db/MODEL1909250003
# is http://identifiers.org/biomodels.db/BIOMD0000000823
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible, name = Henri-Michaelis-Menten (irreversible)
Henri_Mic(substrate,Km,V)=(V*substrate/(Km+substrate))


# FunctionDefinition id = HMM_Mod, name = HMM_Mod
HMM_Mod(V,s,m,Km)=(V*s*m/(Km+s))


# FunctionDefinition id = Function_for_v11, name = Function_for_v11
Function_(k11ca,pmTORC1,DEPTOR,Km11a,pDEPTOR,k11cb,pmTORC2,Km11b)=(k11ca*pmTORC1*DEPTOR/(Km11a+pDEPTOR)+k11cb*pmTORC2*DEPTOR/(Km11b+DEPTOR))


# FunctionDefinition id = Function_for_v5, name = Function_for_v5
Functio_1(k5ca,pIRS,Akt,Km5a,k5cb,pmTORC2,Km5b)=(k5ca*pIRS*Akt/(Km5a+Akt)+k5cb*pmTORC2*Akt/(Km5b+Akt))


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  V1, name = V1, constant
par V1=1.0

# Parameter:   id =  Km1, name = Km1, constant
par Km1=95.0

# Parameter:   id =  V2, name = V2, constant
par V2=1.0

# Parameter:   id =  Km2, name = Km2, constant
par Km2=35.0

# Parameter:   id =  k3c, name = k3c, constant
par k3c=0.1

# Parameter:   id =  Km3, name = Km3, constant
par Km3=50.0

# Parameter:   id =  V4, name = V4, constant
par V4=1.0

# Parameter:   id =  Km4, name = Km4, constant
par Km4=50.0

# Parameter:   id =  k5ca, name = k5ca, constant
par k5ca=0.05

# Parameter:   id =  Km5a, name = Km5a, constant
par Km5a=7.0

# Parameter:   id =  k5cb, name = k5cb, constant
par k5cb=1.5

# Parameter:   id =  Km5b, name = Km5b, constant
par Km5b=4.0

# Parameter:   id =  V6, name = V6, constant
par V6=2.0

# Parameter:   id =  Km6, name = Km6, constant
par Km6=34.0

# Parameter:   id =  k7c, name = k7c, constant
par k7c=0.1

# Parameter:   id =  Km7, name = Km7, constant
par Km7=2.0

# Parameter:   id =  V8, name = V8, constant
par V8=6.0

# Parameter:   id =  Km8, name = Km8, constant
par Km8=1.0

# Parameter:   id =  k9c, name = k9c, constant
par k9c=0.3

# Parameter:   id =  Km9, name = Km9, constant
par Km9=160.0

# Parameter:   id =  V10, name = V10, constant
par V10=3.0

# Parameter:   id =  Km10, name = Km10, constant
par Km10=7.0

# Parameter:   id =  k11ca, name = k11ca, constant
par k11ca=0.1

# Parameter:   id =  Km11a, name = Km11a, constant
par Km11a=120.0

# Parameter:   id =  k11cb, name = k11cb, constant
par k11cb=0.13

# Parameter:   id =  Km11b, name = Km11b, constant
par Km11b=11.0

# Parameter:   id =  V12, name = V12, constant
par V12=4.0

# Parameter:   id =  Km12, name = Km12, constant
par Km12=7.0

# Parameter:   id =  k13f, name = k13f, constant
par k13f=0.001

# Parameter:   id =  k13r, name = k13r, constant
par k13r=0.006

# Parameter:   id =  k14f, name = k14f, constant
par k14f=0.007

# Parameter:   id =  k14r, name = k14r, constant
par k14r=0.006

# Parameter:   id =  k15c, name = k15c, constant
par k15c=0.1

# Parameter:   id =  Km15, name = Km15, constant
par Km15=50.0

# Parameter:   id =  V16, name = V16, constant
par V16=1.0

# Parameter:   id =  Km16, name = Km16, constant
par Km16=50.0

# Parameter:   id =  ks17, name = ks17, constant
par ks17=0.0

# Parameter:   id =  kd18, name = kd18, constant
par kd18=0.0

# Reaction: id = v1, name = v1

v1_1=compartme*Henri_Mic(IR, Km1, V1)

# Reaction: id = v2, name = v2

v2_1=compartme*Henri_Mic(pIR, Km2, V2)

# Reaction: id = v3, name = v3

v3=compartme*HMM_Mod(k3c, IRS, pIR, Km3)

# Reaction: id = v4, name = v4

v4_1=compartme*Henri_Mic(pIRS, Km4, V4)

# Reaction: id = v5, name = v5

v5=compartme*Functio_1(k5ca, pIRS, Akt, Km5a, k5cb, pmTORC2, Km5b)

# Reaction: id = v6, name = v6

v6_1=compartme*Henri_Mic(pAkt, Km6, V6)

# Reaction: id = v7, name = v7

v7=compartme*HMM_Mod(k7c, mTORC1, pAkt, Km7)

# Reaction: id = v8, name = v8

v8_1=compartme*Henri_Mic(pmTORC1, Km8, V8)

# Reaction: id = v9, name = v9

v9=compartme*HMM_Mod(k9c, mTORC2, pIR, Km9)

# Reaction: id = v10, name = v10

v10_1=compartme*Henri_Mic(pmTORC2, Km10, V10)

# Reaction: id = v11, name = v11

v11=compartme*Function_(k11ca, pmTORC1, DEPTOR, Km11a, pDEPTOR, k11cb, pmTORC2, Km11b)

# Reaction: id = v12, name = v12

v12_1=compartme*Henri_Mic(pDEPTOR, Km12, V12)

# Reaction: id = v13, name = v13

v13=compartme*(k13f*mTORC1*DEPTOR-k13r*mTORC1_DE)

# Reaction: id = v14, name = v14

v14=compartme*(k14f*mTORC2*DEPTOR-k14r*mTORC2_DE)

# Reaction: id = v15, name = v15

v15=compartme*HMM_Mod(k15c, IRS, pmTORC1, Km15)

# Reaction: id = v16, name = v16

v16_1=compartme*Henri_Mic(iIRS, Km16, V16)

# Reaction: id = v17, name = v17

v17=compartme*Constant_(ks17)

# Reaction: id = v18, name = v18

v18=compartme*kd18*pDEPTOR

# Species:   id = IR, name = IR, affected by kineticLaw

init IR=50.0
dIR/dt=(1/(compartme))*((-1.0 * v1_1) + ( 1.0 * v2_1))

# Species:   id = pIR, name = pIR, affected by kineticLaw

init pIR=0.0
dpIR/dt=(1/(compartme))*(( 1.0 * v1_1) + (-1.0 * v2_1))

# Species:   id = IRS, name = IRS, affected by kineticLaw

init IRS=100.0
dIRS/dt=(1/(compartme))*((-1.0 * v3) + ( 1.0 * v4_1) + (-1.0 * v15) + ( 1.0 * v16_1))

# Species:   id = pIRS, name = pIRS, affected by kineticLaw

init pIRS=0.0
dpIRS/dt=(1/(compartme))*(( 1.0 * v3) + (-1.0 * v4_1))

# Species:   id = iIRS, name = iIRS, affected by kineticLaw

init iIRS=0.0
diIRS/dt=(1/(compartme))*(( 1.0 * v15) + (-1.0 * v16_1))

# Species:   id = Akt, name = Akt, affected by kineticLaw

init Akt=100.0
dAkt/dt=(1/(compartme))*((-1.0 * v5) + ( 1.0 * v6_1))

# Species:   id = pAkt, name = pAkt, affected by kineticLaw

init pAkt=0.0
dpAkt/dt=(1/(compartme))*(( 1.0 * v5) + (-1.0 * v6_1))

# Species:   id = mTORC1, name = mTORC1, affected by kineticLaw

init mTORC1=250.0
dmTORC1/dt=(1/(compartme))*((-1.0 * v7) + ( 1.0 * v8_1) + (-1.0 * v13))

# Species:   id = pmTORC1, name = pmTORC1, affected by kineticLaw

init pmTORC1=0.0
dpmTORC1/dt=(1/(compartme))*(( 1.0 * v7) + (-1.0 * v8_1))

# Species:   id = mTORC2, name = mTORC2, affected by kineticLaw

init mTORC2=200.0
dmTORC2/dt=(1/(compartme))*((-1.0 * v9) + ( 1.0 * v10_1) + (-1.0 * v14))

# Species:   id = pmTORC2, name = pmTORC2, affected by kineticLaw

init pmTORC2=0.0
dpmTORC2/dt=(1/(compartme))*(( 1.0 * v9) + (-1.0 * v10_1))

# Species:   id = imTORC2, name = imTORC2
# Warning species is not changed by either rules or reactions

par imTORC2=0.0
aux imTORC2=imTORC2

# Species:   id = mTORC1_DEPTOR, name = mTORC1_DEPTOR, affected by kineticLaw

par mTORC1_DE=0.0
aux mTORC1_DE=mTORC1_DE
dmTORC1_DE/dt=(1/(compartme))*(( 1.0 * v13))

# Species:   id = mTORC2_DEPTOR, name = mTORC2_DEPTOR, affected by kineticLaw

par mTORC2_DE=0.0
aux mTORC2_DE=mTORC2_DE
dmTORC2_DE/dt=(1/(compartme))*(( 1.0 * v14))

# Species:   id = DEPTOR, name = DEPTOR, affected by kineticLaw

init DEPTOR=350.0
dDEPTOR/dt=(1/(compartme))*((-1.0 * v11) + ( 1.0 * v12_1) + (-1.0 * v13) + (-1.0 * v14) + ( 1.0 * v17))

# Species:   id = pDEPTOR, name = pDEPTOR, affected by kineticLaw

init pDEPTOR=0.0
dpDEPTOR/dt=(1/(compartme))*(( 1.0 * v11) + (-1.0 * v12_1) + (-1.0 * v18))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

