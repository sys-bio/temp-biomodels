
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Kim2011_Oscillator_SimpleI
#
# is http://identifiers.org/biomodels.db/MODEL1012090000
# is http://identifiers.org/biomodels.db/BIOMD0000000322
# isDescribedBy http://identifiers.org/pubmed/21283141
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_2, name = Hill Cooperativity
function_(substrate,Shalve,V,h)=(V*substrate^h/(Shalve^h+substrate^h))


# FunctionDefinition id = function_1, name = Hill inhibition
functio_1(V,Shalve,h,substrate)=(V/(Shalve^h+substrate^h))


# Compartment: id = compartment_1, name = compartment, constant
par compartme=1.0

# Parameter:   id =  parameter_1, name = alpha, constant
par parameter=0.57

# Parameter:   id =  parameter_2, name = beta, constant
par paramet_1=2.5

# Parameter:   id =  parameter_3, name = gamma, constant
par paramet_2=1.0

# Parameter:   id =  parameter_4, name = n, constant
par paramet_3=6.5

# Parameter:   id =  parameter_5, name = m, constant
par paramet_4=6.5

# Parameter:   id =  parameter_6, name = delta, constant
par paramet_5=1.5

# Reaction: id = reaction_1, name = reaction1
# Local Parameter:   id =  k1, name = k1
par k1=1.0


reaction_=compartme*k1*species_1

# Reaction: id = reaction_2, name = reaction2
# Local Parameter:   id =  k1, name = k1
par k1_1=1.0


reactio_1=compartme*k1_1*species_2

# Reaction: id = reaction_3, name = reaction3
# Local Parameter:   id =  k1, name = k1
par k1_1_2=1.0


reactio_2=compartme*k1_1_2*species_3

# Reaction: id = reaction_4, name = reaction4
# Local Parameter:   id =  k1, name = k1
par k1_1_2_3=1.0


reactio_3=compartme*k1_1_2_3*species_4

# Reaction: id = reaction_5, name = reaction5

reactio_4=compartme*parameter*species_3

# Reaction: id = reaction_6, name = reaction6

reactio_5=compartme*paramet_1*species_4

# Reaction: id = reaction_7, name = reaction7
# Local Parameter:   id =  V, name = V
par V=1.0

# Local Parameter:   id =  Shalve, name = Shalve
par Shalve=1.0


reactio_6=compartme*functio_1(V, Shalve, paramet_3, species_2)

# Reaction: id = reaction_8, name = reaction8
# Local Parameter:   id =  Shalve, name = Shalve
par Shalve_1=1.0

# Local Parameter:   id =  V, name = V
par V_1=1.0


reactio_7=compartme*function_(species_1, Shalve_1, V_1, paramet_4)

# Reaction: id = reaction_9, name = reaction9

reactio_8=compartme*paramet_5*species_4

# Species:   id = species_1, name = x, affected by kineticLaw

init species_1=0.1
dspecies_1/dt=(1/(compartme))*((-1.0 * reaction_) + ( 1.0 * reactio_4) + (-1.0 * reactio_7) + ( 1.0 * reactio_7) + ( 1.0 * reactio_8))

# Species:   id = species_2, name = y, affected by kineticLaw

init species_2=0.1
dspecies_2/dt=(1/(compartme))*((-1.0 * reactio_1) + ( 1.0 * reactio_5) + (-1.0 * reactio_6) + ( 1.0 * reactio_6))

# Species:   id = species_3, name = u, affected by kineticLaw

init species_3=0.1
dspecies_3/dt=(1/(compartme))*((-1.0 * reactio_2) + (-1.0 * reactio_4) + ( 1.0 * reactio_4) + ( 1.0 * reactio_6))

# Species:   id = species_4, name = v, affected by kineticLaw

init species_4=0.1
dspecies_4/dt=(1/(compartme))*((-1.0 * reactio_3) + (-1.0 * reactio_5) + ( 1.0 * reactio_5) + ( 1.0 * reactio_7) + (-1.0 * reactio_8) + ( 1.0 * reactio_8))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

