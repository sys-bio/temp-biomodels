
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Borisov2009_EGF_Insulin_Crosstalk
#
# is http://identifiers.org/biomodels.db/MODEL6194251662
# is http://identifiers.org/biomodels.db/BIOMD0000000223
# isDescribedBy http://identifiers.org/pubmed/19357636
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000048
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000146
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000026
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000027
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000028
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000029
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000030
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000031
# isDerivedFrom http://identifiers.org/pubmed/17052120
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Compartment: id = extra, name = extracellular space, constant
par extra=34.0

# Parameter:   id =  EGF_tot, name = EGF_tot, defined by a Rule

# Parameter:   id =  k1, name = k1, constant
par k1=0.068

# Parameter:   id =  Kd1, name = Kd1, constant
par Kd1=0.58824

# Parameter:   id =  k2, name = k2, constant
par k2=0.033

# Parameter:   id =  Kd2, name = Kd2, constant
par Kd2=15.0

# Parameter:   id =  k3, name = k3, constant
par k3=0.4

# Parameter:   id =  k4, name = k4, constant
par k4=6.66E-4

# Parameter:   id =  Kd4, name = Kd4, constant
par Kd4=10.0

# Parameter:   id =  Kd5, name = Kd5, constant
par Kd5=10.0

# Parameter:   id =  k5, name = k5, constant
par k5=0.0133

# Parameter:   id =  k6, name = k6, constant
par k6=0.333

# Parameter:   id =  k7, name = k7, constant
par k7=6.66E-4

# Parameter:   id =  Kd7, name = Kd7, constant
par Kd7=400.0

# Parameter:   id =  V8, name = V8, constant
par V8=200.0

# Parameter:   id =  Km8, name = Km8, constant
par Km8=100.0

# Parameter:   id =  Kd9, name = Kd9, constant
par Kd9=10.0

# Parameter:   id =  k9, name = k9, constant
par k9=0.00666

# Parameter:   id =  Kd10, name = Kd10, constant
par Kd10=400.0

# Parameter:   id =  k10, name = k10, constant
par k10=4.0E-4

# Parameter:   id =  k11, name = k11, defined by a Rule

# Parameter:   id =  k12, name = k12, constant
par k12=0.00933

# Parameter:   id =  Kd12, name = Kd12, constant
par Kd12=12.45

# Parameter:   id =  k13, name = k13, constant
par k13=6.66E-6

# Parameter:   id =  Kd13, name = Kd13, constant
par Kd13=200.0

# Parameter:   id =  k17, name = k17, constant
par k17=1.85E-4

# Parameter:   id =  k24, name = k24, constant
par k24=0.011322

# Parameter:   id =  Kd24, name = Kd24, constant
par Kd24=0.029412

# Parameter:   id =  k25, name = k25, constant
par k25=1.66

# Parameter:   id =  k26, name = k26, constant
par k26=0.00933

# Parameter:   id =  Kd26, name = Kd26, constant
par Kd26=124.5

# Parameter:   id =  k27, name = k27, constant
par k27=6.66E-8

# Parameter:   id =  Kd27, name = Kd27, constant
par Kd27=2000000.0

# Parameter:   id =  k28, name = k28, constant
par k28=0.1066

# Parameter:   id =  Kd28, name = Kd28, constant
par Kd28=3.75

# Parameter:   id =  k29, name = k29, constant
par k29=0.66

# Parameter:   id =  k30, name = k30, constant
par k30=0.0066

# Parameter:   id =  Kd30, name = Kd30, constant
par Kd30=10.0

# Parameter:   id =  V31, name = V31, constant
par V31=333.0

# Parameter:   id =  Km31, name = Km31, constant
par Km31=143.3

# Parameter:   id =  kcat40, name = kcat40, constant
par kcat40=6.6

# Parameter:   id =  Km40, name = Km40, constant
par Km40=110.0

# Parameter:   id =  alpha40, name = alpha40, constant
par alpha40=2.5E-4

# Parameter:   id =  V41, name = V41, constant
par V41=6.66

# Parameter:   id =  Km41, name = Km41, constant
par Km41=50.0

# Parameter:   id =  k42, name = k42, constant
par k42=0.00666

# Parameter:   id =  Kd42, name = Kd42, constant
par Kd42=10.0

# Parameter:   id =  kcat43, name = kcat43, constant
par kcat43=33.3

# Parameter:   id =  Km43, name = Km43, constant
par Km43=150.0

# Parameter:   id =  alpha43, name = alpha43, constant
par alpha43=0.05

# Parameter:   id =  Kd45, name = Kd45, constant
par Kd45=100000.0

# Parameter:   id =  k45, name = k45, constant
par k45=6.66E-4

# Parameter:   id =  k46, name = k46, constant
par k46=0.00666

# Parameter:   id =  Kd46, name = Kd46, constant
par Kd46=1.0

# Parameter:   id =  k47, name = k47, constant
par k47=6.66E-4

# Parameter:   id =  Kd47, name = Kd47, constant
par Kd47=1000.0

# Parameter:   id =  k48, name = k48, constant
par k48=0.666

# Parameter:   id =  k49, name = k49, constant
par k49=6.66E-4

# Parameter:   id =  Kd49, name = Kd49, constant
par Kd49=1.0

# Parameter:   id =  kcat50, name = kcat50, constant
par kcat50=3333.0

# Parameter:   id =  alpha50, name = alpha50, constant
par alpha50=1.0E-4

# Parameter:   id =  Km50, name = Km50, constant
par Km50=150.0

# Parameter:   id =  V51, name = V51, constant
par V51=333.0

# Parameter:   id =  Km51, name = Km51, constant
par Km51=130.0

# Parameter:   id =  k52, name = k52, constant
par k52=0.002

# Parameter:   id =  Kd52, name = Kd52, constant
par Kd52=1.0

# Parameter:   id =  k53, name = k53, constant
par k53=0.0133

# Parameter:   id =  Kd53, name = Kd53, constant
par Kd53=2.5

# Parameter:   id =  k54, name = k54, constant
par k54=1.0E-5

# Parameter:   id =  Kd54, name = Kd54, constant
par Kd54=66666.0

# Parameter:   id =  k55, name = k55, constant
par k55=6.66E-4

# Parameter:   id =  Kd55, name = Kd55, constant
par Kd55=100.0

# Parameter:   id =  k56, name = k56, constant
par k56=0.666

# Parameter:   id =  kcat57, name = kcat57, constant
par kcat57=0.133

# Parameter:   id =  Km57, name = Km57, constant
par Km57=150.0

# Parameter:   id =  V58, name = V58, constant
par V58=2.0

# Parameter:   id =  Km58, name = Km58, constant
par Km58=130.0

# Parameter:   id =  k59, name = k59, constant
par k59=0.01

# Parameter:   id =  Kd59, name = Kd59, constant
par Kd59=20.0

# Parameter:   id =  k60, name = k60, constant
par k60=4.66

# Parameter:   id =  k61, name = k61, constant
par k61=3.33

# Parameter:   id =  kcat62, name = kcat62, constant
par kcat62=5.33

# Parameter:   id =  Km62, name = Km62, constant
par Km62=50.0

# Parameter:   id =  kcat63, name = kcat63, constant
par kcat63=20000.0

# Parameter:   id =  Km63, name = Km63, constant
par Km63=50.0

# Parameter:   id =  k64, name = k64, constant
par k64=0.0

# Parameter:   id =  k_64, name = k_64, constant
par k_64=2.5

# Parameter:   id =  kcat65, name = kcat65, constant
par kcat65=0.1

# Parameter:   id =  Km65, name = Km65, constant
par Km65=400.0

# Parameter:   id =  kcat66, name = kcat66, constant
par kcat66=3.33

# Parameter:   id =  Km66, name = Km66, constant
par Km66=10.0

# Parameter:   id =  kcat67, name = kcat67, constant
par kcat67=0.666

# Parameter:   id =  Km67, name = Km67, constant
par Km67=10000.0

# Parameter:   id =  alpha67, name = alpha67, constant
par alpha67=1.0E-6

# Parameter:   id =  beta67, name = beta67, constant
par beta67=2.0

# Parameter:   id =  kcat68, name = kcat68, constant
par kcat68=0.133

# Parameter:   id =  Km68, name = Km68, constant
par Km68=50.0

# Parameter:   id =  V69, name = V69, constant
par V69=16.6

# Parameter:   id =  Km69, name = Km69, constant
par Km69=675.299

# Parameter:   id =  kcat70, name = kcat70, constant
par kcat70=0.333

# Parameter:   id =  Km70, name = Km70, constant
par Km70=500.0

# Parameter:   id =  kcat71, name = kcat71, constant
par kcat71=0.666

# Parameter:   id =  Km71, name = Km71, constant
par Km71=500.0

# Parameter:   id =  V72, name = V72, constant
par V72=33.3

# Parameter:   id =  Km72, name = Km72, constant
par Km72=500.0

# Parameter:   id =  V73, name = V73, constant
par V73=23.33

# Parameter:   id =  Km73, name = Km73, constant
par Km73=500.0

# Parameter:   id =  k74, name = k74, constant
par k74=0.00666

# Parameter:   id =  Kd74, name = Kd74, constant
par Kd74=100.0

# Parameter:   id =  kcat75, name = kcat75, constant
par kcat75=4.66

# Parameter:   id =  Km75, name = Km75, constant
par Km75=500.0

# Parameter:   id =  V76, name = V76, constant
par V76=16.66

# Parameter:   id =  Km76, name = Km76, constant
par Km76=1.0

# Parameter:   id =  kcat77, name = kcat77, constant
par kcat77=0.666

# Parameter:   id =  alpha77, name = alpha77, constant
par alpha77=0.5

# Parameter:   id =  Km77, name = Km77, constant
par Km77=100.0

# Parameter:   id =  k_77, name = k_77, constant
par k_77=0.666

# Parameter:   id =  kcat78, name = kcat78, constant
par kcat78=0.666

# Parameter:   id =  Km78, name = Km78, constant
par Km78=100.0

# Parameter:   id =  k_78, name = k_78, constant
par k_78=0.666

# Parameter:   id =  kcat79, name = kcat79, constant
par kcat79=0.0466

# Parameter:   id =  Km79, name = Km79, constant
par Km79=5000.0

# Parameter:   id =  k_79, name = k_79, constant
par k_79=6.66E-5

# Parameter:   id =  kcat80, name = kcat80, constant
par kcat80=0.04

# Parameter:   id =  Km80, name = Km80, constant
par Km80=700.0

# Parameter:   id =  k_80, name = k_80, constant
par k_80=6.66E-5

# Parameter:   id =  kcat81, name = kcat81, constant
par kcat81=0.166

# Parameter:   id =  Km81, name = Km81, constant
par Km81=300.0

# Parameter:   id =  k_81, name = k_81, constant
par k_81=6.66E-5

# Parameter:   id =  V_82, name = V_82, constant
par V_82=133.0

# Parameter:   id =  Km82, name = Km82, constant
par Km82=50.0

# Parameter:   id =  k83, name = k83, constant
par k83=0.0166

# Parameter:   id =  V_84, name = V_84, constant
par V_84=333.0

# Parameter:   id =  Km84, name = Km84, constant
par Km84=266.0

# Parameter:   id =  k85, name = k85, constant
par k85=0.0166

# Parameter:   id =  k111, name = k111, constant
par k111=0.0133

# Parameter:   id =  k118, name = k118, constant
par k118=0.001

# Parameter:   id =  k_1, name = k_1, defined by a Rule

# Parameter:   id =  k_2, name = k_2, defined by a Rule

# Parameter:   id =  k_4, name = k_4, defined by a Rule

# Parameter:   id =  k_5, name = k_5, defined by a Rule

# Parameter:   id =  k_7, name = k_7, defined by a Rule

# Parameter:   id =  k_9, name = k_9, defined by a Rule

# Parameter:   id =  k_10, name = k_10, defined by a Rule

# Parameter:   id =  k_11, name = k_11, defined by a Rule

# Parameter:   id =  k_12, name = k_12, defined by a Rule

# Parameter:   id =  k_13, name = k_13, defined by a Rule

# Parameter:   id =  k_24, name = k_24, defined by a Rule

# Parameter:   id =  k_26, name = k_26, defined by a Rule

# Parameter:   id =  k_27, name = k_27, defined by a Rule

# Parameter:   id =  k_28, name = k_28, defined by a Rule

# Parameter:   id =  k_30, name = k_30, defined by a Rule

# Parameter:   id =  k_42, name = k_42, defined by a Rule

# Parameter:   id =  k_45, name = k_45, defined by a Rule

# Parameter:   id =  k_46, name = k_46, defined by a Rule

# Parameter:   id =  k_47, name = k_47, defined by a Rule

# Parameter:   id =  k_49, name = k_49, defined by a Rule

# Parameter:   id =  k_52, name = k_52, defined by a Rule

# Parameter:   id =  k_53, name = k_53, defined by a Rule

# Parameter:   id =  k_54, name = k_54, defined by a Rule

# Parameter:   id =  k_55, name = k_55, defined by a Rule

# Parameter:   id =  k_59, name = k_59, defined by a Rule

# Parameter:   id =  k_74, name = k_74, defined by a Rule

# assignmentRule: variable = phosphorylated_Akt
phosphory=pAkt+ppAkt
aux phosphory=phosphory

# assignmentRule: variable = EGF_tot
EGF_tot=EGF+(RE+2*(Rd+Rp+Ri+Rp_GS+Rp_Shc+Rp_pShc+Rp_pShc_G+Rp_PI3K+Rp_RasGAP))*cell/extra
aux EGF_tot=EGF_tot

# assignmentRule: variable = k_1
k_1=Kd1*k1
aux k_1=k_1

# assignmentRule: variable = k_2
k_2=Kd2*k2
aux k_2=k_2

# assignmentRule: variable = k_4
k_4=Kd4*k4
aux k_4=k_4

# assignmentRule: variable = k_5
k_5=Kd5*k5
aux k_5=k_5

# assignmentRule: variable = k_7
k_7=Kd7*k7
aux k_7=k_7

# assignmentRule: variable = k_9
k_9=Kd9*k9
aux k_9=k_9

# assignmentRule: variable = k_10
k_10=Kd10*k10
aux k_10=k_10

# assignmentRule: variable = k_11
k_11=k_9
aux k_11=k_11

# assignmentRule: variable = k11
k11=k9
aux k11=k11

# assignmentRule: variable = k_12
k_12=Kd12*k12
aux k_12=k_12

# assignmentRule: variable = k_13
k_13=Kd13*k13
aux k_13=k_13

# assignmentRule: variable = k_24
k_24=Kd24*k24
aux k_24=k_24

# assignmentRule: variable = k_26
k_26=Kd26*k26
aux k_26=k_26

# assignmentRule: variable = k_27
k_27=Kd27*k27
aux k_27=k_27

# assignmentRule: variable = k_28
k_28=Kd28*k28
aux k_28=k_28

# assignmentRule: variable = k_30
k_30=Kd30*k30
aux k_30=k_30

# assignmentRule: variable = k_42
k_42=Kd42*k42
aux k_42=k_42

# assignmentRule: variable = k_45
k_45=k45*Kd45
aux k_45=k_45

# assignmentRule: variable = k_46
k_46=Kd46*k46
aux k_46=k_46

# assignmentRule: variable = k_47
k_47=Kd47*k47
aux k_47=k_47

# assignmentRule: variable = k_49
k_49=Kd49*k49
aux k_49=k_49

# assignmentRule: variable = k_52
k_52=k52*Kd52
aux k_52=k_52

# assignmentRule: variable = k_53
k_53=Kd53*k53
aux k_53=k_53

# assignmentRule: variable = k_54
k_54=Kd54*k54
aux k_54=k_54

# assignmentRule: variable = k_55
k_55=Kd55*k55
aux k_55=k_55

# assignmentRule: variable = k_59
k_59=Kd59*k59
aux k_59=k_59

# assignmentRule: variable = k_74
k_74=k74*Kd74
aux k_74=k_74

# Reaction: id = reaction_1

reaction_=(k1*R*EGF-k_1*RE)*cell

# Reaction: id = reaction_2

reactio_1=(k2*RE*RE-k_2*Rd)*cell

# Reaction: id = reaction_3

reactio_2=k3*Rd*cell

# Reaction: id = reaction_4

reactio_3=(k4*Rp*GS-k_4*Rp_GS)*cell

# Reaction: id = reaction_5

reactio_4=(k5*Rp*Shc-k_5*Rp_Shc)*cell

# Reaction: id = reaction_6

reactio_5=k6*Rp_Shc*cell

# Reaction: id = reaction_7

reactio_6=(k_7*Rp_pShc-k7*Rp*pShc)*cell

# Reaction: id = reaction_8

reactio_7=V8*pShc/(Km8+pShc)*cell

# Reaction: id = reaction_9

reactio_8=(k9*Rp_pShc*GS-k_9*Rp_pShc_G)*cell

# Reaction: id = reaction_10

reactio_9=(k_10*Rp_pShc_G-k10*Rp*pShc_GS)*cell

# Reaction: id = reaction_11

reacti_10=(k_11*pShc_GS-k11*pShc*GS)*cell

# Reaction: id = reaction_12

reacti_11=(k12*Rp*PI3K-k_12*Rp_PI3K)*cell

# Reaction: id = reaction_13

reacti_12=(k13*Rp*RasGAP-k_13*Rp_RasGAP)*cell

# Reaction: id = reaction_17

reacti_13=k17*Rp*cell

# Reaction: id = reaction_18

reacti_14=k17*Rp_GS*cell

# Reaction: id = reaction_19

reacti_15=k17*Rp_Shc*cell

# Reaction: id = reaction_20

reacti_16=k17*Rp_pShc*cell

# Reaction: id = reaction_21

reacti_17=k17*Rp_pShc_G*cell

# Reaction: id = reaction_22

reacti_18=k17*Rp_PI3K*cell

# Reaction: id = reaction_23

reacti_19=k17*Rp_RasGAP*cell

# Reaction: id = reaction_24

reacti_20=(k24*IR*I-k_24*IRL)*cell

# Reaction: id = reaction_25

reacti_21=k25*IRL*cell

# Reaction: id = reaction_26

reacti_22=(k26*IRp*PI3K-k_26*IRp_PI3K)*cell

# Reaction: id = reaction_27

reacti_23=(k27*IRp*RasGAP-k_27*IRp_RasGA)*cell

# Reaction: id = reaction_28

reacti_24=(k28*IRp*IRS-k_28*IRp_IRS)*cell

# Reaction: id = reaction_29

reacti_25=k29*IRp_IRS*cell

# Reaction: id = reaction_30

reacti_26=(k_30*IRp_IRSp-k30*IRp*IRSp)*cell

# Reaction: id = reaction_31

reacti_27=V31*IRSp/(Km31+IRSp)*cell

# Reaction: id = reaction_34

reacti_28=k17*IRp*cell

# Reaction: id = reaction_35

reacti_29=k17*IRp_PI3K*cell

# Reaction: id = reaction_36

reacti_30=k17*IRp_RasGA*cell

# Reaction: id = reaction_37

reacti_31=k17*IRp_IRS*cell

# Reaction: id = reaction_38

reacti_32=k17*IRp_IRSp*cell

# Reaction: id = reaction_40

reacti_33=kcat40*iSrc*(Rp+alpha40*IRp)/(Km40+iSrc)*cell

# Reaction: id = reaction_41

reacti_34=V41*aSrc/(Km41+aSrc)*cell

# Reaction: id = reaction_42

reacti_35=(k42*IRS*PIP3-k_42*mIRS)*cell

# Reaction: id = reaction_43

reacti_36=kcat43*mIRS*(IRp+alpha43*Rp)/(Km43+mIRS)*cell

# Reaction: id = reaction_44

reacti_37=V31*mIRSp/(Km31+mIRSp)*cell

# Reaction: id = reaction_45

reacti_38=(k45*mIRSp*GS-k_45*mIRSp_GS)*cell

# Reaction: id = reaction_46

reacti_39=(k46*mIRSp*PI3K-k_46*mIRSp_PI3)*cell

# Reaction: id = reaction_47

reacti_40=(k47*mIRSp*SHP2-k_47*mIRSp_SHP)*cell

# Reaction: id = reaction_48

reacti_41=k48*mIRSp_SHP*cell

# Reaction: id = reaction_49

reacti_42=(k49*GAB*PIP3-k_49*mGAB)*cell

# Reaction: id = reaction_50

reacti_43=kcat50*mGAB*(Rp+alpha50*aSrc)/(Km50+mGAB)*cell

# Reaction: id = reaction_51

reacti_44=V51*mGABp/(Km51+mGABp)*cell

# Reaction: id = reaction_52

reacti_45=(k52*mGABp*GS-k_52*mGABp_GS)*cell

# Reaction: id = reaction_53

reacti_46=(k53*mGABp*PI3K-k_53*mGABp_PI3)*cell

# Reaction: id = reaction_54

reacti_47=(k54*mGABp*RasGAP-k_54*mGABp_Ras)*cell

# Reaction: id = reaction_55

reacti_48=(k55*mGABp*SHP2-k_55*mGABp_SHP)*cell

# Reaction: id = reaction_56

reacti_49=k56*mGABp_SHP*cell

# Reaction: id = reaction_57

reacti_50=kcat57*mGABp_SHP*(Rp+aSrc)/(Km57+mGABp_SHP)*cell

# Reaction: id = reaction_58

reacti_51=V58*mGABp_pSH/(Km58+mGABp_pSH)*cell

# Reaction: id = reaction_59

reacti_52=(k59*mGABp_pSH*GS-k_59*mGABp_p_1)*cell

# Reaction: id = reaction_60

reacti_53=k60*(Rp_PI3K+IRp_PI3K+mIRSp_PI3+mGABp_PI3+tRas_PI3K)*cell

# Reaction: id = reaction_61

reacti_54=k61*PIP3*cell

# Reaction: id = reaction_62

reacti_55=kcat62*dRas*(Rp_GS+Rp_pShc_G+mIRSp_GS+mGABp_GS+mGABp_p_1)/(Km62+dRas)*cell

# Reaction: id = reaction_63

reacti_56=kcat63*tRas*(bRasGAP+mGABp_Ras+Rp_RasGAP+IRp_RasGA)/(Km63+tRas)*cell

# Reaction: id = reaction_64

reacti_57=(k64*tRas*PI3K-k_64*tRas_PI3K)*cell

# Reaction: id = reaction_65

reacti_58=kcat65*tRas*Raf/(Km65+Raf)*cell

# Reaction: id = reaction_66

reacti_59=kcat66*aSrc*aRaf/(Km66+aRaf)*cell

# Reaction: id = reaction_67

reacti_60=(kcat67*aaRaf*PKA/(Km67+aaRaf)+alpha67*aaRaf*(pAkt+beta67*ppAkt))*cell

# Reaction: id = reaction_68

reacti_61=kcat68*aaRaf*Mek/(Km68+Mek)*cell

# Reaction: id = reaction_69

reacti_62=V69*ppMek/(Km69+ppMek)*cell

# Reaction: id = reaction_70

reacti_63=kcat70*Erk*ppMek/(Km70+Erk+pErk*Km70/Km71)*cell

# Reaction: id = reaction_71

reacti_64=kcat71*pErk*ppMek/(Km71+pErk+Erk*Km71/Km70)*cell

# Reaction: id = reaction_72

reacti_65=V72*ppErk/(Km72+ppErk+pErk*Km72/Km73)*cell

# Reaction: id = reaction_73

reacti_66=V73*pErk/(Km73+pErk+ppErk*Km73/Km72)*cell

# Reaction: id = reaction_74

reacti_67=(k74*PDK1*PIP3-k_74*mPDK1)*cell

# Reaction: id = reaction_75

reacti_68=kcat75*mPDK1*Akt/(Km75+Akt)*cell

# Reaction: id = reaction_76

reacti_69=V76*pAkt/(Km76+pAkt)*cell

# Reaction: id = reaction_77

reacti_70=(kcat77*mTOR*(alpha77*pAkt+ppAkt)/(Km77+mTOR)-k_77*amTOR)*cell

# Reaction: id = reaction_78

reacti_71=(kcat78*amTOR*pAkt/(Km78+pAkt)-k_78*ppAkt)*cell

# Reaction: id = reaction_79

reacti_72=(kcat79*ppErk*GS/(Km79+GS)-k_79*iGS)*cell

# Reaction: id = reaction_80

reacti_73=(kcat80*mGAB*ppErk/(Km80+mGAB)-k_80*imGAB)*cell

# Reaction: id = reaction_81

reacti_74=(kcat81*mIRS*amTOR/(Km81+mIRS)-k_81*imIRS)*cell

# Reaction: id = reaction_82

reacti_75=V_82*Rp/(Km82+Rp)*cell

# Reaction: id = reaction_83

reacti_76=k83*Ri*cell

# Reaction: id = reaction_84

reacti_77=V_84*IRp/(Km84+IRp)*cell

# Reaction: id = reaction_85

reacti_78=k85*IRi*cell

# Reaction: id = reaction_88

reacti_79=(k_42*mIRSp-k42*PIP3*IRSp)*cell

# Reaction: id = reaction_89

reacti_80=(k_42*mIRSp_PI3-k42*PIP3*IRSp_PI3K)*cell

# Reaction: id = reaction_90

reacti_81=(k_42*mIRSp_GS-k42*PIP3*IRSp_GS)*cell

# Reaction: id = reaction_91

reacti_82=(k_42*mIRSp_SHP-k42*PIP3*IRSp_SHP2)*cell

# Reaction: id = reaction_92

reacti_83=(k_42*mGABp-k42*PIP3*GABp)*cell

# Reaction: id = reaction_93

reacti_84=(k_42*mGABp_PI3-k42*PIP3*GABp_PI3K)*cell

# Reaction: id = reaction_94

reacti_85=(k_42*mGABp_GS-k42*PIP3*GABp_GS)*cell

# Reaction: id = reaction_95

reacti_86=(k_42*mGABp_Ras-k49*PIP3*GABp_RasG)*cell

# Reaction: id = reaction_96

reacti_87=(k_42*mGABp_SHP-k42*PIP3*GABp_SHP2)*cell

# Reaction: id = reaction_97

reacti_88=(k_42*mGABp_pSH-k42*PIP3*GABp_pSHP)*cell

# Reaction: id = reaction_98

reacti_89=(k_42*mGABp_p_1-k42*PIP3*GABp_pS_1)*cell

# Reaction: id = reaction_99

reacti_90=V31*IRSp_PI3K/(Km31+IRSp_PI3K)*cell

# Reaction: id = reaction_100

reacti_91=V31*IRSp_GS/(Km31+IRSp_GS)*cell

# Reaction: id = reaction_101

reacti_92=k48*IRSp_SHP2*cell

# Reaction: id = reaction_102

reacti_93=k56*mGABp_pSH*cell

# Reaction: id = reaction_103

reacti_94=k56*mGABp_p_1*cell

# Reaction: id = reaction_104

reacti_95=V51*GABp/(Km51+GABp)*cell

# Reaction: id = reaction_105

reacti_96=V51*GABp_PI3K/(Km51+GABp_PI3K)*cell

# Reaction: id = reaction_106

reacti_97=V51*GABp_GS/(Km51+GABp_GS)*cell

# Reaction: id = reaction_107

reacti_98=V51*GABp_RasG/(Km51+GABp_RasG)*cell

# Reaction: id = reaction_108

reacti_99=k56*GABp_SHP2*cell

# Reaction: id = reaction_109

reac_100=k56*GABp_pSHP*cell

# Reaction: id = reaction_110

reac_101=k56*GABp_pS_1*cell

# Reaction: id = reaction_111

reac_102=k111*(mGABp_SHP+mGABp_pSH+mGABp_p_1+mIRSp_SHP)*mGABp_Ras*cell

# Reaction: id = reaction_112

reac_103=k111*(mGABp_SHP+mGABp_pSH+mGABp_p_1)*Rp_RasGAP*cell

# Reaction: id = reaction_113

reac_104=k111*(mGABp_SHP+mGABp_pSH+mGABp_p_1)*IRp_RasGA*cell

# Reaction: id = reaction_114

reac_105=k111*mIRSp_SHP*Rp_RasGAP*cell

# Reaction: id = reaction_115

reac_106=k111*mIRSp_SHP*IRp_RasGA*cell

# Reaction: id = reaction_117

reac_107=(2*kcat80*mGABp*ppErk/(Km80+mGABp)-k_80*imGABp)*cell

# Reaction: id = reaction_118

reac_108=k118*imGABp*cell

# Species:   id = EGF, name = EGF, affected by kineticLaw

init EGF=1.0
dEGF/dt=(1/(extra))*((-1.0 * reaction_))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.0
dI/dt=(1/(extra))*((-1.0 * reacti_20))

# Species:   id = RE, name = RE, affected by kineticLaw

init RE=0.0
dRE/dt=(1/(cell))*(( 1.0 * reaction_) + (-2.0 * reactio_1))

# Species:   id = Rd, name = Rd, affected by kineticLaw

init Rd=0.0
dRd/dt=(1/(cell))*(( 1.0 * reactio_1) + (-1.0 * reactio_2) + ( 1.0 * reacti_76))

# Species:   id = Rp, name = Rp, affected by kineticLaw

init Rp=0.0
dRp/dt=(1/(cell))*(( 1.0 * reactio_2) + (-1.0 * reactio_3) + (-1.0 * reactio_4) + ( 1.0 * reactio_6) + ( 1.0 * reactio_9) + (-1.0 * reacti_11) + (-1.0 * reacti_12) + (-1.0 * reacti_13) + (-1.0 * reacti_75) + ( 1.0 * reac_103) + ( 1.0 * reac_105))

# Species:   id = GS, name = GS, affected by kineticLaw

init GS=200.0
dGS/dt=(1/(cell))*((-1.0 * reactio_3) + (-1.0 * reactio_8) + ( 1.0 * reacti_10) + ( 1.0 * reacti_14) + (-1.0 * reacti_38) + (-1.0 * reacti_45) + (-1.0 * reacti_52) + (-1.0 * reacti_72) + ( 1.0 * reacti_91) + ( 1.0 * reacti_94) + ( 1.0 * reacti_97) + ( 1.0 * reac_101))

# Species:   id = Rp_GS, name = Rp_GS, affected by kineticLaw

init Rp_GS=0.0
dRp_GS/dt=(1/(cell))*(( 1.0 * reactio_3) + (-1.0 * reacti_14))

# Species:   id = Shc, name = Shc, affected by kineticLaw

init Shc=270.0
dShc/dt=(1/(cell))*((-1.0 * reactio_4) + ( 1.0 * reactio_7) + ( 1.0 * reacti_15))

# Species:   id = Rp_Shc, name = Rp_Shc, affected by kineticLaw

init Rp_Shc=0.0
dRp_Shc/dt=(1/(cell))*(( 1.0 * reactio_4) + (-1.0 * reactio_5) + (-1.0 * reacti_15))

# Species:   id = Rp_pShc, name = Rp_pShc, affected by kineticLaw

init Rp_pShc=0.0
dRp_pShc/dt=(1/(cell))*(( 1.0 * reactio_5) + (-1.0 * reactio_6) + (-1.0 * reactio_8) + (-1.0 * reacti_16))

# Species:   id = pShc, name = pShc, affected by kineticLaw

init pShc=0.0
dpShc/dt=(1/(cell))*(( 1.0 * reactio_6) + (-1.0 * reactio_7) + ( 1.0 * reacti_10) + ( 1.0 * reacti_16))

# Species:   id = Rp_pShc_GS, name = Rp_pShc_GS, affected by kineticLaw

par Rp_pShc_G=0.0
aux Rp_pShc_G=Rp_pShc_G
dRp_pShc_G/dt=(1/(cell))*(( 1.0 * reactio_8) + (-1.0 * reactio_9) + (-1.0 * reacti_17))

# Species:   id = PI3K, name = PI3K, affected by kineticLaw

init PI3K=200.0
dPI3K/dt=(1/(cell))*((-1.0 * reacti_11) + ( 1.0 * reacti_18) + (-1.0 * reacti_22) + ( 1.0 * reacti_29) + (-1.0 * reacti_39) + (-1.0 * reacti_46) + (-1.0 * reacti_57) + ( 1.0 * reacti_90) + ( 1.0 * reacti_96))

# Species:   id = Rp_PI3K, name = Rp_PI3K, affected by kineticLaw

init Rp_PI3K=0.0
dRp_PI3K/dt=(1/(cell))*(( 1.0 * reacti_11) + (-1.0 * reacti_18))

# Species:   id = RasGAP, name = RasGAP, affected by kineticLaw

init RasGAP=50.0
dRasGAP/dt=(1/(cell))*((-1.0 * reacti_12) + ( 1.0 * reacti_19) + (-1.0 * reacti_23) + ( 1.0 * reacti_30) + (-1.0 * reacti_47) + ( 1.0 * reacti_98) + ( 1.0 * reac_102) + ( 1.0 * reac_103) + ( 1.0 * reac_104) + ( 1.0 * reac_105) + ( 1.0 * reac_106))

# Species:   id = Rp_RasGAP, name = Rp_RasGAP, affected by kineticLaw

init Rp_RasGAP=0.0
dRp_RasGAP/dt=(1/(cell))*(( 1.0 * reacti_12) + (-1.0 * reacti_19) + (-1.0 * reac_103) + (-1.0 * reac_105))

# Species:   id = IRL, name = IRL, affected by kineticLaw

init IRL=0.0
dIRL/dt=(1/(cell))*(( 1.0 * reacti_20) + (-1.0 * reacti_21) + ( 1.0 * reacti_78))

# Species:   id = IRp, name = IRp, affected by kineticLaw

init IRp=0.0
dIRp/dt=(1/(cell))*(( 1.0 * reacti_21) + (-1.0 * reacti_22) + (-1.0 * reacti_23) + (-1.0 * reacti_24) + ( 1.0 * reacti_26) + (-1.0 * reacti_28) + (-1.0 * reacti_77) + ( 1.0 * reac_104) + ( 1.0 * reac_106))

# Species:   id = IRp_PI3K, name = IRp_PI3K, affected by kineticLaw

init IRp_PI3K=0.0
dIRp_PI3K/dt=(1/(cell))*(( 1.0 * reacti_22) + (-1.0 * reacti_29))

# Species:   id = IRp_RasGAP, name = IRp_RasGAP, affected by kineticLaw

par IRp_RasGA=0.0
aux IRp_RasGA=IRp_RasGA
dIRp_RasGA/dt=(1/(cell))*(( 1.0 * reacti_23) + (-1.0 * reacti_30) + (-1.0 * reac_104) + (-1.0 * reac_106))

# Species:   id = IRS, name = IRS, affected by kineticLaw

init IRS=300.0
dIRS/dt=(1/(cell))*((-1.0 * reacti_24) + ( 1.0 * reacti_27) + ( 1.0 * reacti_31) + (-1.0 * reacti_35) + ( 1.0 * reacti_90) + ( 1.0 * reacti_91) + ( 1.0 * reacti_92))

# Species:   id = IRp_IRS, name = IRp_IRS, affected by kineticLaw

init IRp_IRS=0.0
dIRp_IRS/dt=(1/(cell))*(( 1.0 * reacti_24) + (-1.0 * reacti_25) + (-1.0 * reacti_31))

# Species:   id = IRp_IRSp, name = IRp_IRSp, affected by kineticLaw

init IRp_IRSp=0.0
dIRp_IRSp/dt=(1/(cell))*(( 1.0 * reacti_25) + (-1.0 * reacti_26) + (-1.0 * reacti_32))

# Species:   id = IRSp, name = IRSp, affected by kineticLaw

init IRSp=0.0
dIRSp/dt=(1/(cell))*(( 1.0 * reacti_26) + (-1.0 * reacti_27) + ( 1.0 * reacti_32) + ( 1.0 * reacti_79))

# Species:   id = iSrc, name = iSrc, affected by kineticLaw

init iSrc=518.0
diSrc/dt=(1/(cell))*((-1.0 * reacti_33) + ( 1.0 * reacti_34))

# Species:   id = mIRS, name = mIRS, affected by kineticLaw

init mIRS=0.0
dmIRS/dt=(1/(cell))*(( 1.0 * reacti_35) + (-1.0 * reacti_36) + ( 1.0 * reacti_37) + ( 1.0 * reacti_41) + (-1.0 * reacti_74))

# Species:   id = mIRSp, name = mIRSp, affected by kineticLaw

init mIRSp=0.0
dmIRSp/dt=(1/(cell))*(( 1.0 * reacti_36) + (-1.0 * reacti_37) + (-1.0 * reacti_38) + (-1.0 * reacti_39) + (-1.0 * reacti_40) + (-1.0 * reacti_79))

# Species:   id = mIRSp_GS, name = mIRSp_GS, affected by kineticLaw

init mIRSp_GS=0.0
dmIRSp_GS/dt=(1/(cell))*(( 1.0 * reacti_38) + (-1.0 * reacti_81))

# Species:   id = mIRSp_PI3K, name = mIRSp_PI3K, affected by kineticLaw

par mIRSp_PI3=0.0
aux mIRSp_PI3=mIRSp_PI3
dmIRSp_PI3/dt=(1/(cell))*(( 1.0 * reacti_39) + (-1.0 * reacti_80))

# Species:   id = SHP2, name = SHP2, affected by kineticLaw

init SHP2=300.0
dSHP2/dt=(1/(cell))*((-1.0 * reacti_40) + ( 1.0 * reacti_41) + (-1.0 * reacti_48) + ( 1.0 * reacti_49) + ( 1.0 * reacti_92) + ( 1.0 * reacti_93) + ( 1.0 * reacti_94) + ( 1.0 * reacti_99) + ( 1.0 * reac_100) + ( 1.0 * reac_101))

# Species:   id = mIRSp_SHP2, name = mIRSp_SHP2, affected by kineticLaw

par mIRSp_SHP=0.0
aux mIRSp_SHP=mIRSp_SHP
dmIRSp_SHP/dt=(1/(cell))*(( 1.0 * reacti_40) + (-1.0 * reacti_41) + (-1.0 * reacti_82))

# Species:   id = GAB, name = GAB, affected by kineticLaw

init GAB=225.0
dGAB/dt=(1/(cell))*((-1.0 * reacti_42) + ( 1.0 * reacti_95) + ( 1.0 * reacti_96) + ( 1.0 * reacti_97) + ( 1.0 * reacti_98) + ( 1.0 * reacti_99) + ( 1.0 * reac_100) + ( 1.0 * reac_101))

# Species:   id = mGAB, name = mGAB, affected by kineticLaw

init mGAB=0.0
dmGAB/dt=(1/(cell))*(( 1.0 * reacti_42) + (-1.0 * reacti_43) + ( 1.0 * reacti_44) + ( 1.0 * reacti_49) + (-1.0 * reacti_73) + ( 1.0 * reacti_93) + ( 1.0 * reacti_94) + ( 1.0 * reac_102))

# Species:   id = mGABp, name = mGABp, affected by kineticLaw

init mGABp=0.0
dmGABp/dt=(1/(cell))*(( 1.0 * reacti_43) + (-1.0 * reacti_44) + (-1.0 * reacti_45) + (-1.0 * reacti_46) + (-1.0 * reacti_47) + (-1.0 * reacti_48) + (-1.0 * reacti_83) + (-1.0 * reac_107))

# Species:   id = mGABp_GS, name = mGABp_GS, affected by kineticLaw

init mGABp_GS=0.0
dmGABp_GS/dt=(1/(cell))*(( 1.0 * reacti_45) + (-1.0 * reacti_85))

# Species:   id = mGABp_PI3K, name = mGABp_PI3K, affected by kineticLaw

par mGABp_PI3=0.0
aux mGABp_PI3=mGABp_PI3
dmGABp_PI3/dt=(1/(cell))*(( 1.0 * reacti_46) + (-1.0 * reacti_84))

# Species:   id = mGABp_SHP2, name = mGABp_SHP2, affected by kineticLaw

par mGABp_SHP=0.0
aux mGABp_SHP=mGABp_SHP
dmGABp_SHP/dt=(1/(cell))*(( 1.0 * reacti_48) + (-1.0 * reacti_49) + (-1.0 * reacti_50) + ( 1.0 * reacti_51) + (-1.0 * reacti_87))

# Species:   id = mGABp_pSHP2, name = mGABp_pSHP2, affected by kineticLaw

par mGABp_pSH=0.0
aux mGABp_pSH=mGABp_pSH
dmGABp_pSH/dt=(1/(cell))*(( 1.0 * reacti_50) + (-1.0 * reacti_51) + (-1.0 * reacti_52) + (-1.0 * reacti_88) + (-1.0 * reacti_93))

# Species:   id = PIP3, name = PIP3, affected by kineticLaw

init PIP3=0.0
dPIP3/dt=(1/(cell))*((-1.0 * reacti_35) + (-1.0 * reacti_42) + ( 1.0 * reacti_53) + (-1.0 * reacti_54) + (-1.0 * reacti_67) + ( 1.0 * reacti_79) + ( 1.0 * reacti_80) + ( 1.0 * reacti_81) + ( 1.0 * reacti_82) + ( 1.0 * reacti_83) + ( 1.0 * reacti_84) + ( 1.0 * reacti_85) + ( 1.0 * reacti_86) + ( 1.0 * reacti_87) + ( 1.0 * reacti_88) + ( 1.0 * reacti_89))

# Species:   id = dRas, name = dRas, affected by kineticLaw

init dRas=150.0
ddRas/dt=(1/(cell))*((-1.0 * reacti_55) + ( 1.0 * reacti_56))

# Species:   id = Raf, name = Raf, affected by kineticLaw

init Raf=100.0
dRaf/dt=(1/(cell))*((-1.0 * reacti_58) + ( 1.0 * reacti_60))

# Species:   id = aRaf, name = aRaf, affected by kineticLaw

init aRaf=0.0
daRaf/dt=(1/(cell))*(( 1.0 * reacti_58) + (-1.0 * reacti_59))

# Species:   id = Mek, name = Mek, affected by kineticLaw

init Mek=200.0
dMek/dt=(1/(cell))*((-1.0 * reacti_61) + ( 1.0 * reacti_62))

# Species:   id = Erk, name = Erk, affected by kineticLaw

init Erk=400.0
dErk/dt=(1/(cell))*((-1.0 * reacti_63) + ( 1.0 * reacti_66))

# Species:   id = pErk, name = pErk, affected by kineticLaw

init pErk=0.0
dpErk/dt=(1/(cell))*(( 1.0 * reacti_63) + (-1.0 * reacti_64) + ( 1.0 * reacti_65) + (-1.0 * reacti_66))

# Species:   id = PDK1, name = PDK1, affected by kineticLaw

init PDK1=100.0
dPDK1/dt=(1/(cell))*((-1.0 * reacti_67))

# Species:   id = Akt, name = Akt, affected by kineticLaw

init Akt=100.0
dAkt/dt=(1/(cell))*((-1.0 * reacti_68) + ( 1.0 * reacti_69))

# Species:   id = pAkt, name = pAkt, affected by kineticLaw

init pAkt=0.0
dpAkt/dt=(1/(cell))*(( 1.0 * reacti_68) + (-1.0 * reacti_69) + (-1.0 * reacti_71))

# Species:   id = mTOR, name = mTOR, affected by kineticLaw

init mTOR=100.0
dmTOR/dt=(1/(cell))*((-1.0 * reacti_70))

# Species:   id = Null, name = Null, affected by kineticLaw

init Null=0.0
dNull/dt=(1/(cell))*(( 1.0 * reacti_13) + ( 1.0 * reacti_28) + ( 1.0 * reacti_54))

# Species:   id = aaRaf, name = aaRaf, affected by kineticLaw

init aaRaf=0.0
daaRaf/dt=(1/(cell))*(( 1.0 * reacti_59) + (-1.0 * reacti_60))

# Species:   id = PKA, name = PKA
# Warning species is not changed by either rules or reactions

par PKA=100.0
aux PKA=PKA

# Species:   id = pShc_GS, name = pShc_GS, affected by kineticLaw

init pShc_GS=0.0
dpShc_GS/dt=(1/(cell))*(( 1.0 * reactio_9) + (-1.0 * reacti_10) + ( 1.0 * reacti_17))

# Species:   id = ppMek, name = ppMek, affected by kineticLaw

init ppMek=0.0
dppMek/dt=(1/(cell))*(( 1.0 * reacti_61) + (-1.0 * reacti_62))

# Species:   id = mGABp_pSHP2_GS, name = mGABp_pSHP2_GS, affected by kineticLaw

par mGABp_p_1=0.0
aux mGABp_p_1=mGABp_p_1
dmGABp_p_1/dt=(1/(cell))*(( 1.0 * reacti_52) + (-1.0 * reacti_89) + (-1.0 * reacti_94))

# Species:   id = R, name = R, affected by kineticLaw

init R=100.0
dR/dt=(1/(cell))*((-1.0 * reaction_))

# Species:   id = ppErk, name = ppErk, affected by kineticLaw

init ppErk=0.0
dppErk/dt=(1/(cell))*(( 1.0 * reacti_64) + (-1.0 * reacti_65))

# Species:   id = IR, name = IR, affected by kineticLaw

init IR=150.0
dIR/dt=(1/(cell))*((-1.0 * reacti_20))

# Species:   id = mPDK1, name = mPDK1, affected by kineticLaw

init mPDK1=0.0
dmPDK1/dt=(1/(cell))*(( 1.0 * reacti_67))

# Species:   id = tRas, name = tRas, affected by kineticLaw

init tRas=0.0
dtRas/dt=(1/(cell))*(( 1.0 * reacti_55) + (-1.0 * reacti_56) + (-1.0 * reacti_57))

# Species:   id = tRas_PI3K, name = tRas_PI3K, affected by kineticLaw

init tRas_PI3K=0.0
dtRas_PI3K/dt=(1/(cell))*(( 1.0 * reacti_57))

# Species:   id = ppAkt, name = ppAkt, affected by kineticLaw

init ppAkt=0.0
dppAkt/dt=(1/(cell))*(( 1.0 * reacti_71))

# Species:   id = mGABp_RasGAP, name = mGABp_RasGAP, affected by kineticLaw

par mGABp_Ras=0.0
aux mGABp_Ras=mGABp_Ras
dmGABp_Ras/dt=(1/(cell))*(( 1.0 * reacti_47) + (-1.0 * reacti_86) + (-1.0 * reac_102))

# Species:   id = amTOR, name = amTOR, affected by kineticLaw

init amTOR=0.0
damTOR/dt=(1/(cell))*(( 1.0 * reacti_70))

# Species:   id = iGS, name = iGS, affected by kineticLaw

init iGS=0.0
diGS/dt=(1/(cell))*(( 1.0 * reacti_72))

# Species:   id = imGAB, name = imGAB, affected by kineticLaw

init imGAB=0.0
dimGAB/dt=(1/(cell))*(( 1.0 * reacti_73) + ( 1.0 * reac_108))

# Species:   id = imIRS, name = imIRS, affected by kineticLaw

init imIRS=0.0
dimIRS/dt=(1/(cell))*(( 1.0 * reacti_74))

# Species:   id = aSrc, name = aSrc, affected by kineticLaw

init aSrc=0.0
daSrc/dt=(1/(cell))*(( 1.0 * reacti_33) + (-1.0 * reacti_34))

# Species:   id = Ri, name = Ri, affected by kineticLaw

init Ri=0.0
dRi/dt=(1/(cell))*(( 1.0 * reacti_75) + (-1.0 * reacti_76))

# Species:   id = IRi, name = IRi, affected by kineticLaw

init IRi=0.0
dIRi/dt=(1/(cell))*(( 1.0 * reacti_77) + (-1.0 * reacti_78))

# Species:   id = iPX, name = iPX
# Warning species is not changed by either rules or reactions

par iPX=200.0
aux iPX=iPX

# Species:   id = aPX, name = aPX
# Warning species is not changed by either rules or reactions

par aPX=0.0
aux aPX=aPX

# Species:   id = aPX_GS, name = aPX_GS
# Warning species is not changed by either rules or reactions

par aPX_GS=0.0
aux aPX_GS=aPX_GS

# Species:   id = IRSp_PI3K, name = IRSp_PI3K, affected by kineticLaw

init IRSp_PI3K=0.0
dIRSp_PI3K/dt=(1/(cell))*(( 1.0 * reacti_80) + (-1.0 * reacti_90))

# Species:   id = IRSp_GS, name = IRSp_GS, affected by kineticLaw

init IRSp_GS=0.0
dIRSp_GS/dt=(1/(cell))*(( 1.0 * reacti_81) + (-1.0 * reacti_91))

# Species:   id = IRSp_SHP2, name = IRSp_SHP2, affected by kineticLaw

init IRSp_SHP2=0.0
dIRSp_SHP2/dt=(1/(cell))*(( 1.0 * reacti_82) + (-1.0 * reacti_92))

# Species:   id = GABp, name = GABp, affected by kineticLaw

init GABp=0.0
dGABp/dt=(1/(cell))*(( 1.0 * reacti_83) + (-1.0 * reacti_95))

# Species:   id = GABp_PI3K, name = GABp_PI3K, affected by kineticLaw

init GABp_PI3K=0.0
dGABp_PI3K/dt=(1/(cell))*(( 1.0 * reacti_84) + (-1.0 * reacti_96))

# Species:   id = GABp_GS, name = GABp_GS, affected by kineticLaw

init GABp_GS=0.0
dGABp_GS/dt=(1/(cell))*(( 1.0 * reacti_85) + (-1.0 * reacti_97))

# Species:   id = GABp_RasGAP, name = GABp_RasGAP, affected by kineticLaw

par GABp_RasG=0.0
aux GABp_RasG=GABp_RasG
dGABp_RasG/dt=(1/(cell))*(( 1.0 * reacti_86) + (-1.0 * reacti_98))

# Species:   id = GABp_SHP2, name = GABp_SHP2, affected by kineticLaw

init GABp_SHP2=0.0
dGABp_SHP2/dt=(1/(cell))*(( 1.0 * reacti_87) + (-1.0 * reacti_99))

# Species:   id = GABp_pSHP2, name = GABp_pSHP2, affected by kineticLaw

par GABp_pSHP=0.0
aux GABp_pSHP=GABp_pSHP
dGABp_pSHP/dt=(1/(cell))*(( 1.0 * reacti_88) + (-1.0 * reac_100))

# Species:   id = GABp_pSHP2_GS, name = GABp_pSHP2_GS, affected by kineticLaw

par GABp_pS_1=0.0
aux GABp_pS_1=GABp_pS_1
dGABp_pS_1/dt=(1/(cell))*(( 1.0 * reacti_89) + (-1.0 * reac_101))

# Species:   id = imGABp, name = imGABp, affected by kineticLaw

init imGABp=0.0
dimGABp/dt=(1/(cell))*(( 1.0 * reac_107) + (-1.0 * reac_108))

# Species:   id = bRasGAP, name = bRasGAP
# Warning species is not changed by either rules or reactions

par bRasGAP=1.0E-5
aux bRasGAP=bRasGAP

# Species:   id = phosphorylated_Akt, name = phosphorylated_Akt, defined in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

