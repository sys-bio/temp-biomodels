
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Gould2013 - Temperature Sensitive Circadian Clock
#
# is http://identifiers.org/biomodels.db/MODEL1410030000
# is http://identifiers.org/biomodels.db/BIOMD0000000564
# isDescribedBy http://identifiers.org/pubmed/23511208
# isDerivedFrom http://identifiers.org/biomodels.db/BIOMD0000000273
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_4_cL_degr_1, name = function_4_cL_degr_1
function_(c,cL,def,g3,m3,p3)=((m3*cL+p3*cL^c/(cL^c+g3^c))/def)


# FunctionDefinition id = function_4_cL_m_trscr_1, name = function_4_cL_m_trscr_1
functio_1(L,a,b,cNI,cP,cP7,cP9,cTm,def,g1,g2,n0,n1,q1)=((n0*L+L*q1*cP+n1*cTm^b/(cTm^b+g2^b))*g1^a/((cP9+cP7+cNI)^a+g1^a)/def)


# FunctionDefinition id = function_4_cL_m_degr_1, name = function_4_cL_m_degr_1
functio_2(D,L,cL_m,def,m1,m2)=((m1*L+m2*D)*cL_m/def)


# FunctionDefinition id = function_4_cL_trsl_1, name = function_4_cL_trsl_1
functio_3(D,L,cL_m,def,p1,p2)=(cL_m*(p1*L+p2*D)/def)


# FunctionDefinition id = function_4_cL_modif_1, name = function_4_cL_modif_1
functio_4(c,cL,def,g3,p3)=(p3*cL^c/(cL^c+g3^c)/def)


# FunctionDefinition id = function_4_cLm_degr_1, name = function_4_cLm_degr_1
functio_5(cLm,def,m4)=(m4*cLm/def)


# FunctionDefinition id = function_4_cT_m_trscr_1, name = function_4_cT_m_trscr_1
functio_6(cL,cY,d,def,e,g4,g5,n2,n3)=((n2*cY^d/(cY^d+g4^d)+n3)*g5^e/(cL^e+g5^e)/def)


# FunctionDefinition id = function_4_cT_m_degr_1, name = function_4_cT_m_degr_1
functio_7(cT_m,def,m5)=(m5*cT_m/def)


# FunctionDefinition id = function_4_cT_trsl_1, name = function_4_cT_trsl_1
functio_8(cT_m,def,p4)=(p4*cT_m/def)


# FunctionDefinition id = function_4_cT_degr_1, name = function_4_cT_degr_1
functio_9(D,L,cT,cZG,cZTL,def,m6,m7,m8,p5)=(((m6*L+m7*D)*cT*(p5*cZTL+cZG)+m8*cT)/def)


# FunctionDefinition id = function_4_cT_modif_1, name = function_4_cT_modif_1
functi_10(cT,def,f,g6,p15)=(p15*cT^f/(cT^f+g6^f)/def)


# FunctionDefinition id = function_4_cY_m_trscr_1, name = function_4_cY_m_trscr_1
functi_11(D,L,cL,cP,cT,def,g,g16,g7,n5,n6,q2,s)=((L*q2*cP+(n5*L+n6*D)*g7^s/(cT^s+g7^s)*g16^g/(cL^g+g16^g))/def)


# FunctionDefinition id = function_4_cTm_degr_1, name = function_4_cTm_degr_1
functi_12(D,L,cTm,def,m25,m26)=((m25*L+m26*D)*cTm/def)


# FunctionDefinition id = function_4_cY_m_degr_1, name = function_4_cY_m_degr_1
functi_13(cY_m,def,m9)=(m9*cY_m/def)


# FunctionDefinition id = function_4_cY_trsl_1, name = function_4_cY_trsl_1
functi_14(cY_m,def,p6)=(p6*cY_m/def)


# FunctionDefinition id = function_4_cY_degr_1, name = function_4_cY_degr_1
functi_15(cY,def,m10)=(m10*cY/def)


# FunctionDefinition id = function_4_cP_trsl_1, name = function_4_cP_trsl_1
functi_16(D,cP,def,p7)=(p7*D*(1-cP)/def)


# FunctionDefinition id = function_4_cP_degr_1, name = function_4_cP_degr_1
functi_17(L,cP,def,m11)=(m11*cP*L/def)


# FunctionDefinition id = function_4_cP9_m_trscr_1, name = function_4_cP9_m_trscr_1
functi_18(L,cL,cP,cT,def,g8,g9,h,i,n4,n7,q3)=((L*q3*cP+(n4*L+n7*cL^i/(cL^i+g9^i))*g8^h/(cT^h+g8^h))/def)


# FunctionDefinition id = function_4_cP9_m_degr_1, name = function_4_cP9_m_degr_1
functi_19(cP9_m,def,m12)=(m12*cP9_m/def)


# FunctionDefinition id = function_4_cP9_trsl_1, name = function_4_cP9_trsl_1
functi_20(cP9_m,def,p8)=(p8*cP9_m/def)


# FunctionDefinition id = function_4_cP9_degr_1, name = function_4_cP9_degr_1
functi_21(D,L,cP9,def,m13,m22)=((m13*L+m22*D)*cP9/def)


# FunctionDefinition id = function_4_cP7_m_trscr_1, name = function_4_cP7_m_trscr_1
functi_22(cL,cLm,cP9,def,g10,g11,j,k,n8,n9)=((n8*(cLm+cL)^j/((cLm+cL)^j+g10^j)+n9*cP9^k/(cP9^k+g11^k))/def)


# FunctionDefinition id = function_4_cP7_m_degr_1, name = function_4_cP7_m_degr_1
functi_23(cP7_m,def,m14)=(m14*cP7_m/def)


# FunctionDefinition id = function_4_cP7_trsl_1, name = function_4_cP7_trsl_1
functi_24(cP7_m,def,p9)=(p9*cP7_m/def)


# FunctionDefinition id = function_4_cNI_m_trscr_1, name = function_4_cNI_m_trscr_1
functi_25(cLm,cP7,def,g12,g13,l,m,n10,n11)=((n10*cLm^l/(cLm^l+g12^l)+n11*cP7^m/(cP7^m+g13^m))/def)


# FunctionDefinition id = function_4_cP7_degr_1, name = function_4_cP7_degr_1
functi_26(D,L,cP7,def,m15,m23)=((m15*L+m23*D)*cP7/def)


# FunctionDefinition id = function_4_cNI_m_degr_1, name = function_4_cNI_m_degr_1
functi_27(cNI_m,def,m16)=(m16*cNI_m/def)


# FunctionDefinition id = function_4_cNI_trsl_1, name = function_4_cNI_trsl_1
functi_28(cNI_m,def,p10)=(p10*cNI_m/def)


# FunctionDefinition id = function_4_cG_m_trscr_1, name = function_4_cG_m_trscr_1
functi_29(L,cL,cP,cT,def,g14,g15,n,n12,o,q4)=((L*q4*cP+n12*L*g15^o/(cL^o+g15^o)*g14^n/(cT^n+g14^n))/def)


# FunctionDefinition id = function_4_cNI_degr_1, name = function_4_cNI_degr_1
functi_30(D,L,cNI,def,m17,m24)=((m17*L+m24*D)*cNI/def)


# FunctionDefinition id = function_4_cG_m_degr_1, name = function_4_cG_m_degr_1
functi_31(cG_m,def,m18)=(m18*cG_m/def)


# FunctionDefinition id = function_4_cG_trsl_1, name = function_4_cG_trsl_1
functi_32(cG_m,def,p11)=(p11*cG_m/def)


# FunctionDefinition id = function_4_cG_degr_1, name = function_4_cG_degr_1
functi_33(cG,def,m19)=(m19*cG/def)


# FunctionDefinition id = function_4_cG_cZTL_assoc_1, name = function_4_cG_cZTL_assoc_1
functi_34(D,L,cG,cZG,cZTL,def,p12,p13)=((p12*L*cZTL*cG-p13*D*cZG)/def)


# FunctionDefinition id = function_4_cZTL_trsl_1, name = function_4_cZTL_trsl_1
functi_35(def,p14)=(p14/def)


# FunctionDefinition id = function_4_cZTL_degr_1, name = function_4_cZTL_degr_1
functi_36(cZTL,def,m20)=(m20*cZTL/def)


# FunctionDefinition id = function_4_cZG_degr_1, name = function_4_cZG_degr_1
functi_37(cZG,def,m21)=(m21*cZG/def)


# Compartment: id = def, name = def, constant
par def=1.0

# Parameter:   id =  n0, name = n0, defined by a Rule

# Parameter:   id =  n1, name = n1, constant
par n1=1.8

# Parameter:   id =  n2, name = n2, constant
par n2=0.7

# Parameter:   id =  n3, name = n3, constant
par n3=0.06

# Parameter:   id =  n4, name = n4, constant
par n4=0.0

# Parameter:   id =  n5, name = n5, constant
par n5=3.4

# Parameter:   id =  n6, name = n6, constant
par n6=1.25

# Parameter:   id =  n7, name = n7, constant
par n7=0.2

# Parameter:   id =  n8, name = n8, constant
par n8=0.42

# Parameter:   id =  n9, name = n9, constant
par n9=0.26

# Parameter:   id =  n10, name = n10, constant
par n10=0.18

# Parameter:   id =  n11, name = n11, constant
par n11=0.71

# Parameter:   id =  n12, name = n12, defined by a Rule

# Parameter:   id =  g1, name = g1, constant
par g1=0.1

# Parameter:   id =  g2, name = g2, constant
par g2=0.28

# Parameter:   id =  g3, name = g3, constant
par g3=0.4

# Parameter:   id =  g4, name = g4, constant
par g4=0.91

# Parameter:   id =  g5, name = g5, constant
par g5=0.3

# Parameter:   id =  g6, name = g6, constant
par g6=0.3

# Parameter:   id =  g7, name = g7, constant
par g7=0.18

# Parameter:   id =  g8, name = g8, constant
par g8=0.14

# Parameter:   id =  g9, name = g9, constant
par g9=0.3

# Parameter:   id =  g10, name = g10, constant
par g10=0.7

# Parameter:   id =  g11, name = g11, constant
par g11=0.7

# Parameter:   id =  g12, name = g12, constant
par g12=0.5

# Parameter:   id =  g13, name = g13, constant
par g13=0.6

# Parameter:   id =  g14, name = g14, constant
par g14=0.17

# Parameter:   id =  g15, name = g15, constant
par g15=0.4

# Parameter:   id =  g16, name = g16, constant
par g16=0.2

# Parameter:   id =  m1, name = m1, defined by a Rule

# Parameter:   id =  m2, name = m2, constant
par m2=0.24

# Parameter:   id =  m3, name = m3, constant
par m3=0.2

# Parameter:   id =  m4, name = m4, constant
par m4=0.2

# Parameter:   id =  m5, name = m5, constant
par m5=0.3

# Parameter:   id =  m6, name = m6, defined by a Rule

# Parameter:   id =  m7, name = m7, constant
par m7=0.5

# Parameter:   id =  m8, name = m8, constant
par m8=0.1

# Parameter:   id =  m9, name = m9, constant
par m9=1.0

# Parameter:   id =  m10, name = m10, constant
par m10=0.3

# Parameter:   id =  m11, name = m11, constant
par m11=1.0

# Parameter:   id =  m12, name = m12, constant
par m12=1.0

# Parameter:   id =  m13, name = m13, constant
par m13=0.32

# Parameter:   id =  m14, name = m14, constant
par m14=0.28

# Parameter:   id =  m15, name = m15, defined by a Rule

# Parameter:   id =  m16, name = m16, constant
par m16=0.5

# Parameter:   id =  m17, name = m17, constant
par m17=0.3

# Parameter:   id =  m18, name = m18, constant
par m18=1.0

# Parameter:   id =  m19, name = m19, constant
par m19=0.2

# Parameter:   id =  m20, name = m20, constant
par m20=1.2

# Parameter:   id =  m21, name = m21, constant
par m21=0.2

# Parameter:   id =  m22, name = m22, constant
par m22=2.0

# Parameter:   id =  m23, name = m23, constant
par m23=1.0

# Parameter:   id =  m24, name = m24, constant
par m24=0.405

# Parameter:   id =  m25, name = m25, defined by a Rule

# Parameter:   id =  m26, name = m26, constant
par m26=0.14

# Parameter:   id =  a, name = a, constant
par a=2.0

# Parameter:   id =  b, name = b, constant
par b=3.0

# Parameter:   id =  c, name = c, constant
par c=3.0

# Parameter:   id =  d, name = d, constant
par d=2.5

# Parameter:   id =  e, name = e, constant
par e=2.0

# Parameter:   id =  f, name = f, constant
par f=3.0

# Parameter:   id =  h, name = h, constant
par h=2.0

# Parameter:   id =  g, name = g, constant
par g=2.0

# Parameter:   id =  i, name = i, constant
par i=3.0

# Parameter:   id =  j, name = j, constant
par j=3.0

# Parameter:   id =  k, name = k, constant
par k=3.0

# Parameter:   id =  l, name = l, constant
par l=2.0

# Parameter:   id =  m, name = m, constant
par m=2.0

# Parameter:   id =  n, name = n, constant
par n=1.0

# Parameter:   id =  o, name = o, constant
par o=2.0

# Parameter:   id =  s, name = s, constant
par s=3.0

# Parameter:   id =  p1, name = p1, defined by a Rule

# Parameter:   id =  p2, name = p2, constant
par p2=0.27

# Parameter:   id =  p3, name = p3, constant
par p3=0.1

# Parameter:   id =  p4, name = p4, constant
par p4=0.268

# Parameter:   id =  p5, name = p5, constant
par p5=1.0

# Parameter:   id =  p6, name = p6, constant
par p6=0.44

# Parameter:   id =  p7, name = p7, constant
par p7=0.3

# Parameter:   id =  p8, name = p8, constant
par p8=0.7

# Parameter:   id =  p9, name = p9, constant
par p9=0.4

# Parameter:   id =  p10, name = p10, constant
par p10=0.36

# Parameter:   id =  p11, name = p11, constant
par p11=0.23

# Parameter:   id =  p12, name = p12, constant
par p12=30.0

# Parameter:   id =  p13, name = p13, constant
par p13=0.4

# Parameter:   id =  p14, name = p14, constant
par p14=0.45

# Parameter:   id =  p15, name = p15, constant
par p15=0.05

# Parameter:   id =  q1, name = q1, constant
par q1=0.8

# Parameter:   id =  q2, name = q2, constant
par q2=0.5

# Parameter:   id =  q3, name = q3, constant
par q3=2.9

# Parameter:   id =  q4, name = q4, constant
par q4=0.6

# Parameter:   id =  dawn, name = dawn, constant
par dawn=0.0

# Parameter:   id =  dusk, name = dusk, constant
par dusk=12.0

# Parameter:   id =  dawn1, name = dawn1, constant
par dawn1=0.0

# Parameter:   id =  dusk1, name = dusk1, constant
par dusk1=3.0

# Parameter:   id =  dawn2, name = dawn2, constant
par dawn2=9.0

# Parameter:   id =  dusk2, name = dusk2, constant
par dusk2=12.0

# Parameter:   id =  L, name = L, defined by a Rule

# Parameter:   id =  D, name = D, defined by a Rule

# Parameter:   id =  parameter_1, name = quantity, constant
par parameter=0.5

# Parameter:   id =  An0, name = An0, constant
par An0=4638600.0

# Parameter:   id =  En0, name = En0, constant
par En0=40.5939

# Parameter:   id =  Temp, name = Temp, constant
par Temp=300.15

# Parameter:   id =  Rgas, name = Rgas, constant
par Rgas=0.0083145

# Parameter:   id =  Am1, name = Am1, constant
par Am1=2.3323

# Parameter:   id =  Em1, name = Em1, constant
par Em1=3.6511

# Parameter:   id =  Ap1, name = Ap1, constant
par Ap1=559910.0

# Parameter:   id =  Ep1, name = Ep1, constant
par Ep1=35.3172

# Parameter:   id =  Am6, name = Am6, constant
par Am6=1499400.0

# Parameter:   id =  Em6, name = Em6, constant
par Em6=38.9484

# Parameter:   id =  Am25, name = Am25, constant
par Am25=0.559

# Parameter:   id =  Em25, name = Em25, constant
par Em25=1.7253

# Parameter:   id =  Am15, name = Am15, constant
par Am15=1287.0

# Parameter:   id =  Em15, name = Em15, constant
par Em15=20.7914

# Parameter:   id =  An12, name = An12, constant
par An12=3.5369

# Parameter:   id =  En12, name = En12, constant
par En12=1.0203

# assignmentRule: variable = n12
n12=An12*exp((-En12)/(Rgas*Temp))
aux n12=n12

# assignmentRule: variable = n0
n0=An0*exp((-En0)/(Rgas*Temp))
aux n0=n0

# assignmentRule: variable = m1
m1=Am1*exp((-Em1)/(Rgas*Temp))
aux m1=m1

# assignmentRule: variable = m6
m6=Am6*exp((-Em6)/(Rgas*Temp))
aux m6=m6

# assignmentRule: variable = m15
m15=Am15*exp((-Em15)/(Rgas*Temp))
aux m15=m15

# assignmentRule: variable = m25
m25=Am25*exp((-Em25)/(Rgas*Temp))
aux m25=m25

# assignmentRule: variable = p1
p1=Ap1*exp((-Ep1)/(Rgas*Temp))
aux p1=p1

# assignmentRule: variable = L
L_1=0.5*(1+tanh((t-24*flr(t/24))/0.5)-(1+tanh((t-24*flr(t/24)-12)/0.5))+1+tanh((t-24*flr(t/24)-24)/0.5))
aux L_1=L_1

# assignmentRule: variable = D
D_1=1-L_1
aux D_1=D_1

# Reaction: id = cL_m_trscr, name = cL_m_trscr

cL_m_trsc=def*functio_1(L_1, a, b, cNI, cP, cP7, cP9, cTm, def, g1, g2, n0, n1, q1)

# Reaction: id = cL_m_degr, name = cL_m_degr

cL_m_degr=def*functio_2(D_1, L_1, cL_m, def, m1, m2)

# Reaction: id = cL_trsl, name = cL_trsl

cL_trsl=def*functio_3(D_1, L_1, cL_m, def, p1, p2)

# Reaction: id = cL_degr, name = cL_degr

cL_degr=def*function_(c, cL, def, g3, m3, p3)

# Reaction: id = cL_modif, name = cL_modif

cL_modif=def*functio_4(c, cL, def, g3, p3)

# Reaction: id = cLm_degr, name = cLm_degr

cLm_degr=def*functio_5(cLm, def, m4)

# Reaction: id = cT_m_trscr, name = cT_m_trscr

cT_m_trsc=def*functio_6(cL, cY, d, def, e, g4, g5, n2, n3)

# Reaction: id = cT_m_degr, name = cT_m_degr

cT_m_degr=def*functio_7(cT_m, def, m5)

# Reaction: id = cT_trsl, name = cT_trsl

cT_trsl=def*functio_8(cT_m, def, p4)

# Reaction: id = cT_degr, name = cT_degr

cT_degr=def*functio_9(D_1, L_1, cT, cZG, cZTL, def, m6, m7, m8, p5)

# Reaction: id = cT_modif, name = cT_modif

cT_modif=def*functi_10(cT, def, f, g6, p15)

# Reaction: id = cTm_degr, name = cTm_degr

cTm_degr=def*functi_12(D_1, L_1, cTm, def, m25, m26)

# Reaction: id = cY_m_trscr, name = cY_m_trscr

cY_m_trsc=def*functi_11(D_1, L_1, cL, cP, cT, def, g, g16, g7, n5, n6, q2, s)

# Reaction: id = cY_m_degr, name = cY_m_degr

cY_m_degr=def*functi_13(cY_m, def, m9)

# Reaction: id = cY_trsl, name = cY_trsl

cY_trsl=def*functi_14(cY_m, def, p6)

# Reaction: id = cY_degr, name = cY_degr

cY_degr=def*functi_15(cY, def, m10)

# Reaction: id = cP_trsl, name = cP_trsl

cP_trsl=def*functi_16(D_1, cP, def, p7)

# Reaction: id = cP_degr, name = cP_degr

cP_degr=def*functi_17(L_1, cP, def, m11)

# Reaction: id = cP9_m_trscr, name = cP9_m_trscr

cP9_m_trs=def*functi_18(L_1, cL, cP, cT, def, g8, g9, h, i, n4, n7, q3)

# Reaction: id = cP9_m_degr, name = cP9_m_degr

cP9_m_deg=def*functi_19(cP9_m, def, m12)

# Reaction: id = cP9_trsl, name = cP9_trsl

cP9_trsl=def*functi_20(cP9_m, def, p8)

# Reaction: id = cP9_degr, name = cP9_degr

cP9_degr=def*functi_21(D_1, L_1, cP9, def, m13, m22)

# Reaction: id = cP7_m_trscr, name = cP7_m_trscr

cP7_m_trs=def*functi_22(cL, cLm, cP9, def, g10, g11, j, k, n8, n9)

# Reaction: id = cP7_m_degr, name = cP7_m_degr

cP7_m_deg=def*functi_23(cP7_m, def, m14)

# Reaction: id = cP7_trsl, name = cP7_trsl

cP7_trsl=def*functi_24(cP7_m, def, p9)

# Reaction: id = cP7_degr, name = cP7_degr

cP7_degr=def*functi_26(D_1, L_1, cP7, def, m15, m23)

# Reaction: id = cNI_m_trscr, name = cNI_m_trscr

cNI_m_trs=def*functi_25(cLm, cP7, def, g12, g13, l, m, n10, n11)

# Reaction: id = cNI_m_degr, name = cNI_m_degr

cNI_m_deg=def*functi_27(cNI_m, def, m16)

# Reaction: id = cNI_trsl, name = cNI_trsl

cNI_trsl=def*functi_28(cNI_m, def, p10)

# Reaction: id = cNI_degr, name = cNI_degr

cNI_degr=def*functi_30(D_1, L_1, cNI, def, m17, m24)

# Reaction: id = cG_m_trscr, name = cG_m_trscr

cG_m_trsc=def*functi_29(L_1, cL, cP, cT, def, g14, g15, n, n12, o, q4)

# Reaction: id = cG_m_degr, name = cG_m_degr

cG_m_degr=def*functi_31(cG_m, def, m18)

# Reaction: id = cG_trsl, name = cG_trsl

cG_trsl=def*functi_32(cG_m, def, p11)

# Reaction: id = cG_degr, name = cG_degr

cG_degr=def*functi_33(cG, def, m19)

# Reaction: id = cG_cZTL_assoc, name = cG_cZTL_assoc

cG_cZTL_a=def*functi_34(D_1, L_1, cG, cZG, cZTL, def, p12, p13)

# Reaction: id = cZTL_trsl, name = cZTL_trsl

cZTL_trsl=def*functi_35(def, p14)

# Reaction: id = cZTL_degr, name = cZTL_degr

cZTL_degr=def*functi_36(cZTL, def, m20)

# Reaction: id = cZG_degr, name = cZG_degr

cZG_degr=def*functi_37(cZG, def, m21)

# Species:   id = cG, name = cG, affected by kineticLaw

init cG=0.0238
dcG/dt=(1/(def))*(( 1.0 * cG_trsl) + (-1.0 * cG_degr) + (-1.0 * cG_cZTL_a))

# Species:   id = cG_m, name = cG_m, affected by kineticLaw

init cG_m=0.119
dcG_m/dt=(1/(def))*(( 1.0 * cG_m_trsc) + (-1.0 * cG_m_degr))

# Species:   id = cL, name = cL, affected by kineticLaw

init cL=0.416
dcL/dt=(1/(def))*(( 1.0 * cL_trsl) + (-1.0 * cL_degr))

# Species:   id = cL_m, name = cL_m, affected by kineticLaw

init cL_m=1.0
dcL_m/dt=(1/(def))*(( 1.0 * cL_m_trsc) + (-1.0 * cL_m_degr))

# Species:   id = cLm, name = cLm, affected by kineticLaw

init cLm=0.054
dcLm/dt=(1/(def))*(( 1.0 * cL_modif) + (-1.0 * cLm_degr))

# Species:   id = cNI, name = cNI, affected by kineticLaw

init cNI=0.044
dcNI/dt=(1/(def))*(( 1.0 * cNI_trsl) + (-1.0 * cNI_degr))

# Species:   id = cNI_m, name = cNI_m, affected by kineticLaw

init cNI_m=0.0065
dcNI_m/dt=(1/(def))*(( 1.0 * cNI_m_trs) + (-1.0 * cNI_m_deg))

# Species:   id = cP, name = cP, affected by kineticLaw

init cP=0.825
dcP/dt=(1/(def))*(( 1.0 * cP_trsl) + (-1.0 * cP_degr))

# Species:   id = cP7, name = cP7, affected by kineticLaw

init cP7=0.019
dcP7/dt=(1/(def))*(( 1.0 * cP7_trsl) + (-1.0 * cP7_degr))

# Species:   id = cP7_m, name = cP7_m, affected by kineticLaw

init cP7_m=0.075
dcP7_m/dt=(1/(def))*(( 1.0 * cP7_m_trs) + (-1.0 * cP7_m_deg))

# Species:   id = cP9, name = cP9, affected by kineticLaw

init cP9=0.056
dcP9/dt=(1/(def))*(( 1.0 * cP9_trsl) + (-1.0 * cP9_degr))

# Species:   id = cP9_m, name = cP9_m, affected by kineticLaw

init cP9_m=0.35
dcP9_m/dt=(1/(def))*(( 1.0 * cP9_m_trs) + (-1.0 * cP9_m_deg))

# Species:   id = cT, name = cT, affected by kineticLaw

init cT=0.393
dcT/dt=(1/(def))*(( 1.0 * cT_trsl) + (-1.0 * cT_degr))

# Species:   id = cT_m, name = cT_m, affected by kineticLaw

init cT_m=0.25
dcT_m/dt=(1/(def))*(( 1.0 * cT_m_trsc) + (-1.0 * cT_m_degr))

# Species:   id = cTm, name = cTm, affected by kineticLaw

init cTm=0.24
dcTm/dt=(1/(def))*(( 1.0 * cT_modif) + (-1.0 * cTm_degr))

# Species:   id = cY, name = cY, affected by kineticLaw

init cY=0.1
dcY/dt=(1/(def))*(( 1.0 * cY_trsl) + (-1.0 * cY_degr))

# Species:   id = cY_m, name = cY_m, affected by kineticLaw

init cY_m=0.093
dcY_m/dt=(1/(def))*(( 1.0 * cY_m_trsc) + (-1.0 * cY_m_degr))

# Species:   id = cZG, name = cZG, affected by kineticLaw

init cZG=0.0774
dcZG/dt=(1/(def))*(( 1.0 * cG_cZTL_a) + (-1.0 * cZG_degr))

# Species:   id = cZTL, name = cZTL, affected by kineticLaw

init cZTL=0.323
dcZTL/dt=(1/(def))*((-1.0 * cG_cZTL_a) + ( 1.0 * cZTL_trsl) + (-1.0 * cZTL_degr))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

