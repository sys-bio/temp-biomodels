
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Phan2017 - innate immune in oncolytic virotherapy
#
# isDescribedBy http://identifiers.org/pubmed/29379572
# is http://identifiers.org/biomodels.db/MODEL1907110001
# is http://identifiers.org/biomodels.db/BIOMD0000000748
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = t_g, name = t-g
t_g(r,x)=(r*x)


# FunctionDefinition id = t_k, name = t-k
t_k(c,y,z)=(c*y*z)


# FunctionDefinition id = inft_d, name = inft-d
inft_d(y)=(y)


# FunctionDefinition id = t_d, name = t-d
t_d(r,x)=(r*x*x)


# FunctionDefinition id = t_cross, name = t-cross
t_cross(r,x,y)=(r*x*y)


# FunctionDefinition id = v_rep, name = v-rep
v_rep(b,y)=(b*y)


# FunctionDefinition id = infection_0, name = infection
infection(a,x,v)=(a*x*v)


# FunctionDefinition id = v_k, name = v-k
v_k(d,v,z)=(d*v*z)


# FunctionDefinition id = v_clear, name = v-clear
v_clear(e,v)=(e*v)


# FunctionDefinition id = imm_s, name = imm-s
imm_s(m,y,z)=(m*y*z)


# FunctionDefinition id = imm_d, name = imm-d
imm_d(n,z)=(n*z)


# Compartment: id = tumor_microenvironment, name = tumor microenvironment, constant
par tumor_mic=1.0

# Parameter:   id =  r, name = r, constant
par r=0.36

# Parameter:   id =  a, name = a, constant
par a=0.11

# Parameter:   id =  c, name = c, constant
par c=0.48

# Parameter:   id =  d, name = d, constant
par d=0.16

# Parameter:   id =  e, name = e, constant
par e=0.2

# Parameter:   id =  m, name = m, constant
par m=0.6

# Parameter:   id =  n, name = n, constant
par n=0.036

# Parameter:   id =  b, name = b, constant
par b=9.0

# Reaction: id = tumor_growth, name = tumor growth

tumor_gro=tumor_mic*t_g(r, x)

# Reaction: id = tumor_death, name = tumor death

tumor_dea=tumor_mic*t_d(r, x)

# Reaction: id = tumor_cross_infection, name = tumor cross-infection

tumor_cro=tumor_mic*t_cross(r, x, y)

# Reaction: id = infected_tumor_killing, name = infected tumor killing

infected_=tumor_mic*t_k(c, y, z)

# Reaction: id = infected_tumor_death, name = infected tumor death

infecte_1=tumor_mic*inft_d(y)

# Reaction: id = virus_multiplication_in_infected_tumor, name = virus multiplication in infected tumor

virus_mul=tumor_mic*v_rep(b, y)

# Reaction: id = virus_clearing, name = virus clearing

virus_cle=tumor_mic*v_clear(e, v)

# Reaction: id = virus_killing_by_immune, name = virus killing by immune

virus_kil=tumor_mic*v_k(d, v, z)

# Reaction: id = immune_stimulation, name = immune stimulation

immune_st=tumor_mic*imm_s(m, y, z)

# Reaction: id = immune_cell_death, name = immune cell death

immune_ce=tumor_mic*imm_d(n, z)

# Reaction: id = infection, name = infection

infecti_1=tumor_mic*infection(a, x, v)

# Species:   id = x, name = x, affected by kineticLaw

init x=0.99
dx/dt=(1/(tumor_mic))*(( 1.0 * tumor_gro) + (-1.0 * tumor_dea) + (-1.0 * tumor_cro) + (-1.0 * infecti_1))

# Species:   id = y, name = y, affected by kineticLaw

init y=0.01
dy/dt=(1/(tumor_mic))*((-1.0 * infected_) + (-1.0 * infecte_1) + ( 1.0 * infecti_1))

# Species:   id = v, name = v, affected by kineticLaw

init v=0.01
dv/dt=(1/(tumor_mic))*(( 1.0 * virus_mul) + (-1.0 * virus_cle) + (-1.0 * virus_kil) + (-1.0 * infecti_1))

# Species:   id = z, name = z, affected by kineticLaw

init z=0.01
dz/dt=(1/(tumor_mic))*(( 1.0 * immune_st) + (-1.0 * immune_ce))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

