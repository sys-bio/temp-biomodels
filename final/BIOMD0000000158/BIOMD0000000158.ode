
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Zatorsky2006_p53_Model2
#
# is http://identifiers.org/biomodels.db/MODEL0076306022
# is http://identifiers.org/biomodels.db/BIOMD0000000158
# isDescribedBy http://identifiers.org/pubmed/16773083
# isDerivedFrom http://identifiers.org/pubmed/15725723
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = cell, constant
par compartme=1.0

# Parameter:   id =  beta_x, name = beta_x, constant
par beta_x=2.55

# Parameter:   id =  psi, name = psi, constant
par psi=1.0

# Parameter:   id =  alpha_x, name = alpha_x, constant
par alpha_x=0.0

# Parameter:   id =  alpha_xy, name = alpha_xy, constant
par alpha_xy=3.15

# Parameter:   id =  beta_y, name = beta_y, constant
par beta_y=0.85

# Parameter:   id =  alpha_y, name = alpha_y, constant
par alpha_y=0.6

# Parameter:   id =  alpha_0, name = alpha_0, constant
par alpha_0=55.0

# Parameter:   id =  fx, name = fx, defined by a Rule

# Parameter:   id =  flag1, name = flag1
par flag1=0.0

# Parameter:   id =  flag2, name = flag2
par flag2=0.0

# Parameter:   id =  flag3, name = flag3
par flag3=1.0

# Parameter:   id =  M, name = M, constant
par M=34.0

# Parameter:   id =  xmax, name = xmax
# Warning parameter xmax is not constant, it should be controled by a Rule and/or events
par xmax=0.92

# Parameter:   id =  xmin, name = xmin
# Warning parameter xmin is not constant, it should be controled by a Rule and/or events
par xmin=0.12

# assignmentRule: variable = fx
fx=beta_x*flag1+beta_x/M*flag2+flag3*beta_x/M*(1+(M-1)*(x-xmin)/(xmax-xmin))
aux fx=fx

# Reaction: id = R1, name = p53 production

R1=compartme*fx*psi

# Reaction: id = R2, name = Mdm2 independent p53 degradation

R2=compartme*alpha_x*x

# Reaction: id = R3, name = Mdm2 dependent p53 degradation

R3=compartme*alpha_xy*y*x

# Reaction: id = R4, name = p53 dependent Mdm2 precursor production

R4=compartme*beta_y*x*psi

# Reaction: id = R5, name = Mdm2 synthesis from precursor

R5=compartme*alpha_0*y0

# Reaction: id = R6, name = Mdm2 degradation

R6=compartme*alpha_y*y

# Species:   id = x, name = p53, affected by kineticLaw

init x=0.28
dx/dt=(1/(compartme))*(( 1.0 * R1) + (-1.0 * R2) + (-1.0 * R3))

# Species:   id = y, name = Mdm2, affected by kineticLaw

init y=0.73
dy/dt=(1/(compartme))*(( 1.0 * R5) + (-1.0 * R6))

# Species:   id = y0, name = precursor Mdm2, affected by kineticLaw

init y0=0.0
dy0/dt=(1/(compartme))*(( 1.0 * R4) + (-1.0 * R5))

# event : event_0000001
event_000=if (x >= xmax) then (1.5) else (0.2)
global 1 {event_000 - 1.1} {flag1=1;flag2=0;flag3=0}

# event : event_0000002
event_0_1=if (x < xmax) then (1.5) else (0.2)
global 1 {event_0_1 - 1.1} {flag1=0;flag2=0;flag3=1}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

