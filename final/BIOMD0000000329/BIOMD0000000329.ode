
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Kummer2000 - Oscillations in Calcium Signalling
#
# is http://identifiers.org/biomodels.db/MODEL1105060000
# is http://identifiers.org/biomodels.db/BIOMD0000000329
# isDescribedBy http://identifiers.org/pubmed/10968983
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Henri_Michaelis_Menten__irreversible, name = Henri-Michaelis-Menten (irreversible)
Henri_Mic(substrate,Km,V)=(V*substrate/(Km+substrate))


# FunctionDefinition id = Irr_Michaelis_Menten__enzyme__userdefined, name = Irr Michaelis-Menten (enzyme)[userdefined]
Irr_Micha(V,E,S,Km)=(V*E*S/(Km+S))


# FunctionDefinition id = linear_activation, name = linear activation
linear_ac(constant,Activator)=(constant*Activator)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0E-13

# Reaction: id = R1, name = R1
# Local Parameter:   id =  v, name = v
par v=0.212


R1=compartme*Constant_(v)

# Reaction: id = R2, name = R2
# Local Parameter:   id =  constant, name = constant
par constant=2.9


R2=compartme*linear_ac(constant, a)

# Reaction: id = R3, name = R3
# Local Parameter:   id =  V, name = V
par V_1=1.52

# Local Parameter:   id =  Km, name = Km
par Km=0.19


R3=compartme*Irr_Micha(V_1, b, a, Km)

# Reaction: id = R4, name = R4
# Local Parameter:   id =  V, name = V
par V_1_2=4.88

# Local Parameter:   id =  Km, name = Km
par Km_1=1.18


R4=compartme*Irr_Micha(V_1_2, c, a, Km_1)

# Reaction: id = R5, name = R5
# Local Parameter:   id =  constant, name = constant
par constan_1=1.24


R5=compartme*linear_ac(constan_1, a)

# Reaction: id = R6, name = R6
# Local Parameter:   id =  Km, name = Km
par Km_1_2=29.09

# Local Parameter:   id =  V, name = V
par V_1_2_3=32.24


R6=compartme*Henri_Mic(b, Km_1_2, V_1_2_3)

# Reaction: id = R7, name = R7
# Local Parameter:   id =  constant, name = constant
par constan_2=13.58


R7=compartme*linear_ac(constan_2, a)

# Reaction: id = R8, name = R8
# Local Parameter:   id =  Km, name = Km
par Km_1_2_3=0.16

# Local Parameter:   id =  V, name = V
par V_1_2_3_4=153.0


R8=compartme*Henri_Mic(c, Km_1_2_3, V_1_2_3_4)

# Species:   id = a, name = G-alpha, affected by kineticLaw

init a=0.01
da/dt=(1/(compartme))*(( 1.0 * R1) + ( 1.0 * R2) + (-1.0 * R3) + (-1.0 * R4))

# Species:   id = b, name = activePLC, affected by kineticLaw

init b=0.01
db/dt=(1/(compartme))*(( 1.0 * R5) + (-1.0 * R6))

# Species:   id = c, name = Calcium, affected by kineticLaw

init c=0.01
dc/dt=(1/(compartme))*(( 1.0 * R7) + (-1.0 * R8))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

