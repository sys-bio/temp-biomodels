
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Ota2015 - Positive regulation of Rho GTPase activity by RhoGDIs as a result of their direct interaction with GAPs (GDI integrated)
#
# isDescribedBy http://identifiers.org/pubmed/25628036
# is http://identifiers.org/biomodels.db/MODEL1912170003
# is http://identifiers.org/biomodels.db/BIOMD0000000899
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_re7, name = Function for re7
Function_(default,k6,k7,s13,s6,s7)=((k6*s6*s7*default-k7*s13)/default)


# FunctionDefinition id = Function_for_re2, name = Function for re2
Functio_1(default,k2,s4)=(s4*k2/default)


# FunctionDefinition id = Function_for_re1, name = Function for re1
Functio_2(default,k1,s1,s3)=(s1*default*s3*default*k1/default)


# FunctionDefinition id = Function_for_re8, name = Function for re8
Functio_3(default,k8,k9,s16,s6,s9)=((k8*s6*s9*default-k9*s16)/default)


# FunctionDefinition id = Function_for_re5, name = Function for re5
Functio_4(KmGAPGDI,KmGAPRho,default,kcatGAP,s6,s7,s8)=(kcatGAP*s6*s8*default/(KmGAPRho*(1+s7*default/KmGAPGDI)+s6*(1+s7*default/KmGAPGDI))/default)


# FunctionDefinition id = Function_for_re3, name = Function for re3
Functio_5(default,k3,s1)=(s1*default*k3/default)


# FunctionDefinition id = Function_for_re4, name = Function for re4
Functio_6(KmGEFGDI,KmGEFRho,default,kcatGEF,s4,s5,s7)=(kcatGEF*s5*s4/(KmGEFRho*(1+s7*default/KmGEFGDI)+s5*(1+s7*default/KmGEFGDI))/default)


# FunctionDefinition id = Function_for_re6, name = Function for re6
Functio_7(default,k4,k5,s10,s5,s7)=((k4*s5*s7*default-k5*s10*default)/default)


# Compartment: id = default, name = default, constant
par default=1.0

# Reaction: id = re1, name = re1
# Local Parameter:   id =  k1, name = k1
par k1=1.0


re1=default*Functio_2(default, k1, s1, s3)

# Reaction: id = re2, name = re2
# Local Parameter:   id =  k2, name = k2
par k2=0.1


re2=default*Functio_1(default, k2, s4)

# Reaction: id = re3, name = re3
# Local Parameter:   id =  k3, name = k3
par k3=0.5


re3=default*Functio_5(default, k3, s1)

# Reaction: id = re4, name = re4
# Local Parameter:   id =  KmGEFGDI, name = KmGEFGDI
par KmGEFGDI=1.0

# Local Parameter:   id =  KmGEFRho, name = KmGEFRho
par KmGEFRho=24.5

# Local Parameter:   id =  kcatGEF, name = kcatGEF
par kcatGEF=5.64


re4=default*Functio_6(KmGEFGDI, KmGEFRho, default, kcatGEF, s4, s5, s7)

# Reaction: id = re5, name = re5
# Local Parameter:   id =  KmGAPGDI, name = KmGAPGDI
par KmGAPGDI=0.1

# Local Parameter:   id =  KmGAPRho, name = KmGAPRho
par KmGAPRho=4.48

# Local Parameter:   id =  kcatGAP, name = kcatGAP
par kcatGAP=95.9


re5=default*Functio_4(KmGAPGDI, KmGAPRho, default, kcatGAP, s6, s7, s8)

# Reaction: id = re6, name = re6
# Local Parameter:   id =  k4, name = k4
par k4=0.5

# Local Parameter:   id =  k5, name = k5
par k5=0.05


re6=default*Functio_7(default, k4, k5, s10, s5, s7)

# Reaction: id = re7, name = re7
# Local Parameter:   id =  k6, name = k6
par k6=0.5

# Local Parameter:   id =  k7, name = k7
par k7=0.05


re7=default*Function_(default, k6, k7, s13, s6, s7)

# Reaction: id = re8, name = re8
# Local Parameter:   id =  k8, name = k8
par k8=28.2

# Local Parameter:   id =  k9, name = k9
par k9=0.18


re8=default*Functio_3(default, k8, k9, s16, s6, s9)

# Species:   id = s1, name = Activator, affected by kineticLaw

init s1=1.0
ds1/dt=(1/(default))*((-1.0 * re3))

# Species:   id = s2, name = Degrade, affected by kineticLaw

init s2=0.0
ds2/dt=(1/(default))*(( 1.0 * re3))

# Species:   id = s3, name = GEF, affected by kineticLaw

init s3=0.31
ds3/dt=(1/(default))*((-1.0 * re1) + ( 1.0 * re2))

# Species:   id = s4, name = Active GEF, affected by kineticLaw

init s4=0.0
ds4/dt=(1/(default))*(( 1.0 * re1) + (-1.0 * re2))

# Species:   id = s5, name = GDP-Rho, affected by kineticLaw

init s5=0.0
ds5/dt=(1/(default))*((-1.0 * re4) + ( 1.0 * re5) + (-1.0 * re6))

# Species:   id = s6, name = GTP-Rho, affected by kineticLaw

init s6=0.0
ds6/dt=(1/(default))*(( 1.0 * re4) + (-1.0 * re5) + (-1.0 * re7) + (-1.0 * re8))

# Species:   id = s7, name = GDI, affected by kineticLaw

init s7=0.0
ds7/dt=(1/(default))*((-1.0 * re6) + (-1.0 * re7))

# Species:   id = s8, name = GAP
# Warning species is not changed by either rules or reactions

par s8=0.1
aux s8=s8

# Species:   id = s9, name = Effector, affected by kineticLaw

init s9=1.0
ds9/dt=(1/(default))*((-1.0 * re8))

# Species:   id = s10, name = GDI?GDP-Rho, affected by kineticLaw

init s10=1.3
ds10/dt=(1/(default))*(( 1.0 * re6))

# Species:   id = s13, name = GDI?GTP-Rho, affected by kineticLaw

init s13=0.0
ds13/dt=(1/(default))*(( 1.0 * re7))

# Species:   id = s16, name = Effector?GTP-Rho, affected by kineticLaw

init s16=0.0
ds16/dt=(1/(default))*(( 1.0 * re8))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

