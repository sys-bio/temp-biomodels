
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Wan2020 - risk estimation and prediction of the transmission of COVID-19 in maninland China excluding Hubei province
#
# isDescribedBy http://identifiers.org/pubmed/32831142
# is http://identifiers.org/biomodels.db/MODEL2012090001
# is http://identifiers.org/biomodels.db/BIOMD0000000981
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_reaction, name = Rate Law for reaction
Rate_Law_(beta,c_t,I,xi,A,S,N)=(beta*c_t*(I+xi*A)*S/N)


# FunctionDefinition id = Rate_Law_for_reaction_4, name = Rate Law for reaction_4
Rate_La_1(theta,phi,E)=((1-theta)*phi*E)


# FunctionDefinition id = Rate_Law_for_reaction_5, name = Rate Law for reaction_5
Rate_La_2(q_3,q_2,I,eta,Q,E,N)=(q_3*(q_2*I+eta*Q)*E/N)


# FunctionDefinition id = Rate_Law_for_reaction_1, name = Rate Law for reaction_1
Rate_La_3(q_3,q_2,I,eta,Q,S,N)=(q_3*(q_2*I+eta*Q)*S/N)


# FunctionDefinition id = Rate_Law_for_reaction_3, name = Rate Law for reaction_3
Rate_La_4(theta,phi,E)=(theta*phi*E)


# Compartment: id = China, name = China, constant
par China=1.0

# Parameter:   id =  beta, name = beta, constant
par beta=0.054043

# Parameter:   id =  c_0, name = c_0, constant
par c_0=40.319

# Parameter:   id =  phi, name = phi, constant
par phi=0.19231

# Parameter:   id =  theta, name = theta, constant
par theta=0.6628

# Parameter:   id =  eta, name = eta, constant
par eta=17.379

# Parameter:   id =  gamma_I, name = gamma_I, constant
par gamma_I=0.15796

# Parameter:   id =  gamma_A, name = gamma_A, constant
par gamma_A=0.55671

# Parameter:   id =  gamma_H, name = gamma_H, constant
par gamma_H=0.035352

# Parameter:   id =  d, name = d, constant
par d=5.5888E-4

# Parameter:   id =  xi, name = xi, constant
par xi=0.80987

# Parameter:   id =  mu, name = mu, constant
par mu=0.07142857

# Parameter:   id =  q1, name = q1, constant
par q1=1.0

# Parameter:   id =  q2, name = q2, constant
par q2=0.47218

# Parameter:   id =  q3, name = q3, constant
par q3=2.6954

# Parameter:   id =  delta, name = delta, constant
par delta=2.8286E-4

# Parameter:   id =  c_t, name = c_t, defined by a Rule

# Parameter:   id =  q_1_t, name = q_1_t, defined by a Rule

# assignmentRule: variable = Total_population
Total_pop=Asymptoma+Exposed+Infected+Recovered+Susceptib
aux Total_pop=Total_pop

# assignmentRule: variable = q_1_t
q_1_t=q1*exp((-delta)*Total_rep)
aux q_1_t=q_1_t

# assignmentRule: variable = c_t
c_t=c_0*q_1_t
aux c_t=c_t

# rateRule: variable = Recovered_from_hospitals
init Recover_1=0.0
dRecover_1/dt=gamma_H*Hospitali

# rateRule: variable = Total_reported_cases
init Total_rep=21.0
dTotal_rep/dt=q2*Infected+eta*Quarantin

# Reaction: id = Susceptible_to_Exposed, name = Susceptible_to_Exposed

Suscept_2=China*Rate_Law_(beta, c_t, Infected, xi, Asymptoma, Susceptib, Total_pop)

# Reaction: id = Susceptible_to_isolated, name = Susceptible_to_isolated

Suscept_3=China*Rate_La_3(q3, q2, Infected, eta, Quarantin, Susceptib, Total_pop)

# Reaction: id = Isolated_to_Susceptible, name = Isolated_to_Susceptible

Isolated_=China*mu*Suscept_1

# Reaction: id = Exposed_to_Infected, name = Exposed_to_Infected

Exposed_t=China*Rate_La_4(theta, phi, Exposed)

# Reaction: id = Exposed_to_Asymptomatic, name = Exposed_to_Asymptomatic

Exposed_1=China*Rate_La_1(theta, phi, Exposed)

# Reaction: id = Exposed_to_Quarantined, name = Exposed_to_Quarantined

Exposed_2=China*Rate_La_2(q3, q2, Infected, eta, Quarantin, Exposed, Total_pop)

# Reaction: id = Infected_to_Hospitalised, name = Infected_to_Hospitalised

Infected_=China*q2*Infected

# Reaction: id = Infected_to_dead, name = Infected_to_dead

Infecte_1=China*d*Infected

# Reaction: id = Infected_to_Recovered, name = Infected_to_Recovered

Infecte_2=China*gamma_I*Infected

# Reaction: id = Infected_to_Quarantined, name = Infected_to_Quarantined

Infecte_3=China*Rate_La_2(q3, q2, Infected, eta, Quarantin, Infected, Total_pop)

# Reaction: id = Asymptomatic_to_Recovered, name = Asymptomatic_to_Recovered

Asympto_1=China*gamma_A*Asymptoma

# Reaction: id = Asymptomatic_to_Quarantined, name = Asymptomatic_to_Quarantined

Asympto_2=China*Rate_La_2(q3, q2, Infected, eta, Quarantin, Asymptoma, Total_pop)

# Reaction: id = Quarantined_to_Hospitalised, name = Quarantined_to_Hospitalised

Quarant_1=China*eta*Quarantin

# Reaction: id = Hospitalised_to_Deceased, name = Hospitalised_to_Deceased

Hospita_1=China*d*Hospitali

# Reaction: id = Hospitalised_to_Recovered, name = Hospitalised_to_Recovered

Hospita_2=China*gamma_H*Hospitali

# Species:   id = Susceptible, name = Susceptible, affected by kineticLaw

par Susceptib=1.33621E9
aux Susceptib=Susceptib
dSusceptib/dt=(1/(China))*((-1.0 * Suscept_2) + (-1.0 * Suscept_3) + ( 1.0 * Isolated_))

# Species:   id = Exposed, name = Exposed, affected by kineticLaw

init Exposed=501.23
dExposed/dt=(1/(China))*(( 1.0 * Suscept_2) + (-1.0 * Exposed_t) + (-1.0 * Exposed_1) + (-1.0 * Exposed_2))

# Species:   id = Infected, name = Infected, affected by kineticLaw

init Infected=0.22839
dInfected/dt=(1/(China))*(( 1.0 * Exposed_t) + (-1.0 * Infected_) + (-1.0 * Infecte_1) + (-1.0 * Infecte_2) + (-1.0 * Infecte_3))

# Species:   id = Asymptomatic, name = Asymptomatic, affected by kineticLaw

par Asymptoma=991.29
aux Asymptoma=Asymptoma
dAsymptoma/dt=(1/(China))*(( 1.0 * Exposed_1) + (-1.0 * Asympto_1) + (-1.0 * Asympto_2))

# Species:   id = Susceptible_isolated, name = Susceptible_isolated, affected by kineticLaw

par Suscept_1=0.0
aux Suscept_1=Suscept_1
dSuscept_1/dt=(1/(China))*(( 1.0 * Suscept_3) + (-1.0 * Isolated_))

# Species:   id = Quarantined, name = Quarantined, affected by kineticLaw

par Quarantin=0.0
aux Quarantin=Quarantin
dQuarantin/dt=(1/(China))*(( 1.0 * Exposed_2) + ( 1.0 * Infecte_3) + ( 1.0 * Asympto_2) + (-1.0 * Quarant_1))

# Species:   id = Hospitalised, name = Hospitalised, affected by kineticLaw

par Hospitali=2.0
aux Hospitali=Hospitali
dHospitali/dt=(1/(China))*(( 1.0 * Infected_) + ( 1.0 * Quarant_1) + (-1.0 * Hospita_1) + (-1.0 * Hospita_2))

# Species:   id = Recovered, name = Recovered, affected by kineticLaw

init Recovered=240.76
dRecovered/dt=(1/(China))*(( 1.0 * Infecte_2) + ( 1.0 * Asympto_1) + ( 1.0 * Hospita_2))

# Species:   id = Recovered_from_hospitals, name = Recovered_from_hospitals, involved in a rule 

# Species:   id = Deceased, name = Deceased, affected by kineticLaw

init Deceased=0.0
dDeceased/dt=(1/(China))*(( 1.0 * Hospita_1))

# Species:   id = Total_reported_cases, name = Total_reported_cases, involved in a rule 

# Species:   id = Total_population, name = Total_population, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

