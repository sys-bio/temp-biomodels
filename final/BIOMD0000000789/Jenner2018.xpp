
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Jenner2018 - treatment of oncolytic virus
#
# isDescribedBy http://identifiers.org/pubmed/29644518
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = inf, name = inf
inf(b,S,V,T)=(b*S*V/T)


# FunctionDefinition id = tg, name = tg
tg(r,L,S)=(r*S*log(L/S))


# FunctionDefinition id = burst, name = burst
burst(a,di,I)=(a*di*I)


# Compartment: id = tme, name = tme, constant
par tme=1.0

# Parameter:   id =  V0, name = V0, constant
par V0=0.0

# Parameter:   id =  dv, name = dv, constant
par dv=0.0

# Parameter:   id =  a, name = a, constant
par a=0.0

# Parameter:   id =  di, name = di, constant
par di=0.0

# Parameter:   id =  r, name = r, constant
par r=0.037

# Parameter:   id =  L, name = L, constant
par L=3.49E9

# Parameter:   id =  b, name = b, constant
par b=0.0

# Parameter:   id =  S0, name = S0, constant
par S0=2.51E8

# assignmentRule: variable = T
T_renamed=I+S
aux T_renamed=T_renamed

# Reaction: id = virus_burst, name = virus burst

virus_bur=tme*burst(a, di, I)

# Reaction: id = virus_decay, name = virus decay

virus_dec=tme*dv*V

# Reaction: id = tumor_growth, name = tumor growth

tumor_gro=tme*tg(r, L, S)

# Reaction: id = tumor_infection, name = tumor infection

tumor_inf=tme*inf(b, S, V, T_renamed)

# Reaction: id = infected_tumor_death, name = infected tumor death

infected_=tme*di*I

# Species:   id = V, name = V, affected by kineticLaw
# Species is changed by 2 event(s)
init V=0.0
dV/dt=(1/(tme))*(( 1.0 * virus_bur) + (-1.0 * virus_dec))

# Species:   id = S, name = S, affected by kineticLaw

init S=2.51E8
dS/dt=(1/(tme))*(( 1.0 * tumor_gro) + (-1.0 * tumor_inf))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.0
dI/dt=(1/(tme))*(( 1.0 * tumor_inf) + (-1.0 * infected_))

# Species:   id = T, name = T, involved in a rule 

# event : virus_treatment_1
virus_tre=if (t >= 2) then (1.5) else (0.2)
global 1 {virus_tre - 1.1} {V=V0}

# event : virus_treatment_2
virus_t_1=if (t >= 4) then (1.5) else (0.2)
global 1 {virus_t_1 - 1.1} {V=V0}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

