
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Chakrabarty2010 - A control theory approach to cancer remission aided by an optimal therapy
#
# isDescribedBy http://identifiers.org/doi/10.1142/S0218339010003226
# isDerivedFrom http://identifiers.org/pubmed/18083299
# is http://identifiers.org/biomodels.db/MODEL1908040001
# is http://identifiers.org/biomodels.db/BIOMD0000000777
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_Tumor_Growth, name = Function_for_Tumor_Growth
Function_(r_1,M,k_1)=(r_1*M*(1-M/k_1))


# FunctionDefinition id = Function_for_Tumor_Killing_T_Cells, name = Function_for_Tumor_Killing_T_Cells
Functio_1(alpha_1,M,N)=(alpha_1*M*N)


# FunctionDefinition id = Function_for_THL_Decay_IL_2, name = Function_for_THL_Decay_IL-2
Functio_2(mu_2,N,Z)=(mu_2*N*Z)


# FunctionDefinition id = Function_for_CTL_Recruitment, name = Function_for_CTL_Recruitment
Functio_3(mu_2,N,Z)=(mu_2*N*Z)


# FunctionDefinition id = Function_for_CTL_Decay, name = Function_for_CTL_Decay
Functio_4(alpha_2,M,N)=(alpha_2*M*N)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  r_1, name = r_1, constant
par r_1=0.18

# Parameter:   id =  k_1, name = k_1, constant
par k_1=5000000.0

# Parameter:   id =  alpha_1, name = alpha_1, constant
par alpha_1=1.101E-7

# Parameter:   id =  d_1, name = d_1, constant
par d_1=0.0412

# Parameter:   id =  alpha_2, name = alpha_2, constant
par alpha_2=3.422E-10

# Parameter:   id =  r_2, name = r_2, constant
par r_2=0.0245

# Parameter:   id =  k_2, name = k_2, constant
par k_2=1.0E7

# Parameter:   id =  mu_1, name = mu_1, constant
par mu_1=0.05

# Parameter:   id =  mu_2, name = mu_2, constant
par mu_2=0.0

# Reaction: id = Tumor_Growth, name = Tumor_Growth

Tumor_Gro=compartme*Function_(r_1, M_Tumor_C, k_1)

# Reaction: id = Tumor_Killing_T_Cells, name = Tumor_Killing_T_Cells

Tumor_Kil=compartme*Functio_1(alpha_1, M_Tumor_C, N_CTL)

# Reaction: id = CTL_Recruitment, name = CTL_Recruitment

CTL_Recru=compartme*Functio_3(mu_2, N_CTL, Z_THL)

# Reaction: id = CTL_Death, name = CTL_Death

CTL_Death=compartme*d_1*N_CTL

# Reaction: id = CTL_Decay, name = CTL_Decay

CTL_Decay=compartme*Functio_4(alpha_2, M_Tumor_C, N_CTL)

# Reaction: id = THL_Growth, name = THL_Growth

THL_Growt=compartme*Function_(r_2, Z_THL, k_2)

# Reaction: id = THL_Decay_IL_2, name = THL_Decay_IL-2

THL_Decay=compartme*Functio_2(mu_2, N_CTL, Z_THL)

# Reaction: id = Tumor_Killing_ACI, name = Tumor_Killing_ACI

Tumor_K_1=compartme*mu_1*M_Tumor_C

# Species:   id = M_Tumor_Cells, name = M_Tumor_Cells, affected by kineticLaw

par M_Tumor_C=2750000.0
aux M_Tumor_C=M_Tumor_C
dM_Tumor_C/dt=(1/(compartme))*(( 1.0 * Tumor_Gro) + (-1.0 * Tumor_Kil) + (-1.0 * Tumor_K_1))

# Species:   id = N_CTL, name = N_CTL, affected by kineticLaw

init N_CTL=200000.0
dN_CTL/dt=(1/(compartme))*(( 1.0 * CTL_Recru) + (-1.0 * CTL_Death) + (-1.0 * CTL_Decay))

# Species:   id = Z_THL, name = Z_THL, affected by kineticLaw

init Z_THL=7200000.0
dZ_THL/dt=(1/(compartme))*(( 1.0 * THL_Growt) + (-1.0 * THL_Decay))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

