
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Precup2012 - Mathematical modeling of cell dynamics after allogeneic bone marrow transplantation
#
# isDescribedBy http://identifiers.org/doi/10.1142/S1793524511001684
# isDerivedFrom http://identifiers.org/doi/10.1080/17486700902973751
# is http://identifiers.org/biomodels.db/MODEL1908190003
# is http://identifiers.org/biomodels.db/BIOMD0000000800
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_Normal_Cells_Growth, name = Function_for_Normal_Cells_Growth
Function_(x,a,b,y,z,epsilon,g)=(a/(1+b*(x+y+z))*(x+y+epsilon)/(x+y+epsilon+g*z)*x)


# FunctionDefinition id = Function_for_Leukemic_Cells_Growth, name = Function_for_Leukemic_Cells_Growth
Functio_1(A,B,x,y,z,epsilon,G)=(A/(1+B*(x+y+z))*(x+y+epsilon)/(x+y+epsilon+G*z)*y)


# FunctionDefinition id = Function_for_Donor_Cells_Growth, name = Function_for_Donor_Cells_Growth
Functio_2(a,b,x,y,z,h,epsilon)=(a/(1+b*(x+y+z))*(1-h*(x+y)/(z+epsilon+h*(x+y)))*z)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  a, name = a, constant
par a=0.23

# Parameter:   id =  A, name = A, constant
par A_1=0.45

# Parameter:   id =  b, name = b, constant
par b=2.2E-8

# Parameter:   id =  B, name = B, constant
par B_1=2.2E-8

# Parameter:   id =  c, name = c, constant
par c=0.01

# Parameter:   id =  C, name = C, constant
par C_1=0.01

# Parameter:   id =  epsilon, name = epsilon, constant
par epsilon=1.0

# Parameter:   id =  g, name = g, constant
par g=2.0

# Parameter:   id =  G, name = G, constant
par G_1=2.0

# Parameter:   id =  h, name = h, constant
par h=2.0

# Reaction: id = Normal_Cells_Growth, name = Normal_Cells_Growth

Normal_Ce=compartme*Function_(x, a, b, y, z, epsilon, g)

# Reaction: id = Normal_Cells_Removal, name = Normal_Cells_Removal

Normal__1=compartme*c*x

# Reaction: id = Leukemic_Cells_Growth, name = Leukemic_Cells_Growth

Leukemic_=compartme*Functio_1(A_1, B_1, x, y, z, epsilon, G_1)

# Reaction: id = Leukemic_Cells_Removal, name = Leukemic_Cells_Removal

Leukemi_1=compartme*C_1*y

# Reaction: id = Donor_Cells_Growth, name = Donor_Cells_Growth

Donor_Cel=compartme*Functio_2(a, b, x, y, z, h, epsilon)

# Reaction: id = Donor_Cells_Removal, name = Donor_Cells_Removal

Donor_C_1=compartme*c*z

# Species:   id = x, name = x, affected by kineticLaw

init x=2.0E8
dx/dt=(1/(compartme))*(( 1.0 * Normal_Ce) + (-1.0 * Normal__1))

# Species:   id = y, name = y, affected by kineticLaw

init y=1.0E8
dy/dt=(1/(compartme))*(( 1.0 * Leukemic_) + (-1.0 * Leukemi_1))

# Species:   id = z, name = z, affected by kineticLaw

init z=4.0E8
dz/dt=(1/(compartme))*(( 1.0 * Donor_Cel) + (-1.0 * Donor_C_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

