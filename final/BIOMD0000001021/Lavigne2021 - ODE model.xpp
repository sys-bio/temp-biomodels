
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Lavigne2021 - Non-spatial model of viral infection dynamics and interferon response of well-mixed viral infection
#
# is http://identifiers.org/biomodels.db/MODEL2107220003
# is http://identifiers.org/biomodels.db/BIOMD0000001021
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_Antiviral_response, name = Rate Law for Antiviral_response
Rate_Law_(Phi,F,I,k)=(k*I+Phi*F*I)


# FunctionDefinition id = Rate_Law_for_Virus_release, name = Rate Law for Virus_release
Rate_La_1(p,I,f,_I_)=(p*I+(1-f)*p*_I_)


# FunctionDefinition id = Rate_Law_for_IFN_release, name = Rate Law for IFN_release
Rate_La_2(Pi,p,I,_I_)=(Pi*p*(I+_I_))


# FunctionDefinition id = Rate_Law_for_Infection, name = Rate Law for Infection
Rate_La_3(Beta,V,T)=(Beta*V*T)


# FunctionDefinition id = Rate_Law_for_Refractory_state, name = Rate Law for Refractory_state
Rate_La_4(Phi,F,T,R,Rho)=(Phi*F*T-Rho*R)


# Compartment: id = whole_organism, name = whole_organism, constant
par whole_org=1.0

# Parameter:   id =  Beta, name = Beta, constant
par Beta=5.0E-10

# Parameter:   id =  Phi, name = Phi, constant
par Phi=5.0E-10

# Parameter:   id =  Rho, name = Rho, constant
par Rho=1.0

# Parameter:   id =  Delta, name = Delta, constant
par Delta=4.0

# Parameter:   id =  k, name = k, constant
par k=2.0

# Parameter:   id =  p, name = p, constant
par p=2400.0

# Parameter:   id =  f, name = f, constant
par f=0.9

# Parameter:   id =  c, name = c, constant
par c=14.0

# Parameter:   id =  Pi, name = Pi, constant
par Pi_ren=1.0

# Parameter:   id =  Metabolite_0, name = Initial for Target_cells, constant
par Metabolit=4.0E8

# assignmentRule: variable = Fraction_target_cells_remaining
Fraction_=Target_ce/Metabolit
aux Fraction_=Fraction_

# Reaction: id = Infection, name = Infection

Infection=whole_org*Rate_La_3(Beta, Virions, Target_ce)

# Reaction: id = Refractory_state, name = Refractory_state

Refract_1=whole_org*Rate_La_4(Phi, IFN, Target_ce, Refractor, Rho)

# Reaction: id = Antiviral_response, name = Antiviral_response

Antiviral=whole_org*Rate_Law_(Phi, IFN, Infected_, k)

# Reaction: id = Infected_cell_death, name = Infected_cell_death

Infecte_2=whole_org*Delta*Infected_

# Reaction: id = Antiviral_infected_cell_death, name = Antiviral_infected_cell_death

Antivir_1=whole_org*Delta*Infecte_1

# Reaction: id = Virus_release, name = Virus_release

Virus_rel=whole_org*Rate_La_1(p, Infected_, f, Infecte_1)

# Reaction: id = IFN_release, name = IFN_release

IFN_relea=whole_org*Rate_La_2(Pi_ren, p, Infected_, Infecte_1)

# Reaction: id = Virus_clearence, name = Virus_clearence

Virus_cle=whole_org*c*Virions

# Reaction: id = IFN_clearence, name = IFN_clearence

IFN_clear=whole_org*c*IFN

# Species:   id = Target_cells, name = Target_cells, affected by kineticLaw

par Target_ce=4.0E8
aux Target_ce=Target_ce
dTarget_ce/dt=(1/(whole_org))*((-1.0 * Infection) + (-1.0 * Refract_1))

# Species:   id = Infected_cells, name = Infected_cells, affected by kineticLaw

par Infected_=0.0
aux Infected_=Infected_
dInfected_/dt=(1/(whole_org))*(( 1.0 * Infection) + (-1.0 * Antiviral) + (-1.0 * Infecte_2))

# Species:   id = Infected_cells_antiviral, name = Infected_cells_antiviral, affected by kineticLaw

par Infecte_1=0.0
aux Infecte_1=Infecte_1
dInfecte_1/dt=(1/(whole_org))*(( 1.0 * Antiviral) + (-1.0 * Antivir_1))

# Species:   id = Refractory_cells, name = Refractory_cells, affected by kineticLaw

par Refractor=0.0
aux Refractor=Refractor
dRefractor/dt=(1/(whole_org))*(( 1.0 * Refract_1))

# Species:   id = Virions, name = Virions, affected by kineticLaw

init Virions=100.0
dVirions/dt=(1/(whole_org))*(( 1.0 * Virus_rel) + (-1.0 * Virus_cle))

# Species:   id = IFN, name = IFN, affected by kineticLaw

init IFN=0.0
dIFN/dt=(1/(whole_org))*(( 1.0 * IFN_relea) + (-1.0 * IFN_clear))

# Species:   id = Fraction_target_cells_remaining, name = Fraction_target_cells_remaining, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

