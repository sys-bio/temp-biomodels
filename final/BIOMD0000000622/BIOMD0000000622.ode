
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = NguyenLK2011 - Ubiquitination dynamics in Ring1B/Bmi1 system
#
# is http://identifiers.org/biomodels.db/MODEL1611160000
# is http://identifiers.org/biomodels.db/BIOMD0000000622
# isDescribedBy http://identifiers.org/pubmed/22194680
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = R6_Rate, name = R6_Rate
R6_Rate(subs,k1,k2,prod)=(subs*(k1*subs+k2*prod))


# FunctionDefinition id = R12_Rate, name = R12_Rate
R12_Rate(subs,k1,mod1,k2,mod2,k3,mod3)=(subs*(k1*mod1+k2*mod2+k3*mod3))


# FunctionDefinition id = MM_mod, name = MM_mod
MM_mod(kc,mod,subs,Km)=(kc*mod*subs/(Km+subs))


# FunctionDefinition id = Mod_MA1, name = Mod_MA1
Mod_MA1(k,mod,subs)=(k*mod*subs)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Reaction: id = R1, name = R1
# Local Parameter:   id =  k1, name = k1
par k1=0.002


R1=compartme*k1*Bmi1

# Reaction: id = R2, name = R2
# Local Parameter:   id =  k1, name = k1
par k1_1=0.002


R2=compartme*k1_1*Bmi1ubd

# Reaction: id = R3, name = R3
# Local Parameter:   id =  k1, name = k1
par k1_1_2=0.01


R3=compartme*k1_1_2*R1B

# Reaction: id = R4, name = R4
# Local Parameter:   id =  k, name = k
par k=0.001


R4=compartme*Mod_MA1(k, USP7tot, R1Bubd)

# Reaction: id = R5, name = R5
# Local Parameter:   id =  k1, name = k1
par k1_1_2_3=2.0

# Local Parameter:   id =  k2, name = k2
par k2=0.2


R5=compartme*(k1_1_2_3*Bmi1*R1B-k2*Z)

# Reaction: id = R6, name = R6
# Local Parameter:   id =  k1, name = k1
par k1_1_2__4=0.02

# Local Parameter:   id =  k2, name = k2
par k2_1=0.2


R6=compartme*R6_Rate(Z, k1_1_2__4, k2_1, Zub)

# Reaction: id = R7, name = R7
# Local Parameter:   id =  kc, name = kc
par kc=0.005

# Local Parameter:   id =  Km, name = Km
par Km=0.0025


R7=compartme*MM_mod(kc, USP7tot, Zub, Km)

# Reaction: id = R8, name = R8
# Local Parameter:   id =  k1, name = k1
par k1_1_2__5=0.012

# Local Parameter:   id =  k2, name = k2
par k2_1_2=2.0E-5


R8=compartme*(k1_1_2__5*Zub-k2_1_2*R1Buba*Bmi1)

# Reaction: id = R9, name = R9
# Local Parameter:   id =  k1, name = k1
par k1_1_2__6=0.2

# Local Parameter:   id =  k2, name = k2
par k2_1_2_3=0.2


R9=compartme*R6_Rate(R1B, k1_1_2__6, k2_1_2_3, R1Bub)

# Reaction: id = R10, name = R10
# Local Parameter:   id =  k, name = k
par k_1=0.0075


R10=compartme*Mod_MA1(k_1, USP7tot, R1Bub)

# Reaction: id = R11, name = R11
# Local Parameter:   id =  k, name = k
par k_1_2=0.005


R11=compartme*Mod_MA1(k_1_2, USP7tot, R1Buba)

# Reaction: id = R12, name = R12
# Local Parameter:   id =  k1, name = k1
par k1_1_2__7=0.002

# Local Parameter:   id =  k2, name = k2
par k2_1_2__4=2.0

# Local Parameter:   id =  k3, name = k3
par k3=0.2


R12=compartme*R12_Rate(H2A, k1_1_2__7, R1Bub, k2_1_2__4, Zub, k3, R1Buba)

# Reaction: id = R13, name = R13
# Local Parameter:   id =  k1, name = k1
par k1_1_2__8=0.01


R13=compartme*k1_1_2__8*H2Auba

# Reaction: id = R1Bprod, name = R1Bprod
# Local Parameter:   id =  v, name = v
par v=7.5E-6


R1Bprod=compartme*Constant_(v)

# Reaction: id = R1Bdeg, name = R1Bdeg
# Local Parameter:   id =  k1, name = k1
par k1_1_2__9=3.0E-5


R1Bdeg=compartme*k1_1_2__9*R1Bubd

# Reaction: id = Bmi1prod, name = Bmi1prod
# Local Parameter:   id =  v, name = v
par v_1=7.5E-6


Bmi1prod=compartme*Constant_(v_1)

# Reaction: id = Bmi1deg, name = Bmi1deg
# Local Parameter:   id =  k1, name = k1
par k1_1_2_10=3.0E-5


Bmi1deg=compartme*k1_1_2_10*Bmi1ubd

# Species:   id = Bmi1, name = Bmi1, affected by kineticLaw

init Bmi1=1.1
dBmi1/dt=(1/(compartme))*((-1.0 * R1) + ( 1.0 * R2) + (-1.0 * R5) + ( 1.0 * R8) + ( 1.0 * Bmi1prod))

# Species:   id = Bmi1ubd, name = Bmi1ubd, affected by kineticLaw

init Bmi1ubd=1.08
dBmi1ubd/dt=(1/(compartme))*(( 1.0 * R1) + (-1.0 * R2) + (-1.0 * Bmi1deg))

# Species:   id = R1B, name = R1B, affected by kineticLaw

init R1B=0.1
dR1B/dt=(1/(compartme))*((-1.0 * R3) + ( 1.0 * R4) + (-1.0 * R5) + (-1.0 * R9) + ( 1.0 * R10) + ( 1.0 * R11) + ( 1.0 * R1Bprod))

# Species:   id = R1Bubd, name = R1Bubd, affected by kineticLaw

init R1Bubd=0.12
dR1Bubd/dt=(1/(compartme))*(( 1.0 * R3) + (-1.0 * R4) + (-1.0 * R1Bdeg))

# Species:   id = USP7tot, name = USP7tot, constant
par USP7tot=1.0


# Species:   id = Z, name = Z, affected by kineticLaw

init Z=0.2
dZ/dt=(1/(compartme))*(( 1.0 * R5) + (-1.0 * R6) + ( 1.0 * R7))

# Species:   id = Zub, name = Zub, affected by kineticLaw

init Zub=0.12
dZub/dt=(1/(compartme))*(( 1.0 * R6) + (-1.0 * R7) + (-1.0 * R8))

# Species:   id = R1Buba, name = R1Buba, affected by kineticLaw

init R1Buba=0.44
dR1Buba/dt=(1/(compartme))*(( 1.0 * R8) + (-1.0 * R11))

# Species:   id = R1Bub, name = R1Bub, affected by kineticLaw

init R1Bub=0.02
dR1Bub/dt=(1/(compartme))*(( 1.0 * R9) + (-1.0 * R10))

# Species:   id = H2A, name = H2A, affected by kineticLaw

init H2A=0.1
dH2A/dt=(1/(compartme))*((-1.0 * R12) + ( 1.0 * R13))

# Species:   id = H2Auba, name = H2Auba, affected by kineticLaw

init H2Auba=0.0
dH2Auba/dt=(1/(compartme))*(( 1.0 * R12) + (-1.0 * R13))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

