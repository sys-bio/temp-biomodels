
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = GiantsosAdams2013 - Growth of glycocalyx under static conditions
#
# hasInstance http://identifiers.org/mamo/MAMO_0000046
# hasInstance http://identifiers.org/biomodels.db/MODEL1609100000
# hasInstance http://identifiers.org/taxonomy/9606
# hasInstance http://identifiers.org/ncit/C540
# isDescribedBy http://identifiers.org/ncit/C540
# isDescribedBy http://identifiers.org/pubmed/23805169
# is http://identifiers.org/biomodels.db/MODEL1609100000
# is http://identifiers.org/biomodels.db/BIOMD0000000830
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_k3, name = Function for k3
Function_(default,k3,s6)=(s6*default*k3/default)


# FunctionDefinition id = Function_for_k1, name = Function for k1
Functio_1(default,k1,s1)=(s1*default*k1/default)


# FunctionDefinition id = Function_for_k2, name = Function for k2
Functio_2(default,k2,s2)=(s2*default*k2/default)


# FunctionDefinition id = Function_for_k6, name = Function for k6
Functio_3(default,k6,s2)=(s2*default*k6/default)


# FunctionDefinition id = Function_for_k7, name = Function for k7
Functio_4(default,k7,s3)=(s3*default*k7/default)


# FunctionDefinition id = Function_for_k8, name = Function for k8
Functio_5(default,k8,s4)=(s4*default*k8/default)


# FunctionDefinition id = Function_for_k4, name = Function for k4
Functio_6(default,k4,s1)=(s1*default*k4/default)


# Compartment: id = default, name = default, constant
par default=1.0

# Reaction: id = k_golgi, name = De novo HS production for Golgi aparatus
# Local Parameter:   id =  k3, name = k3
par k3=0.96


k_golgi=default*Function_(default, k3, s6)

# Reaction: id = k_endo, name = HS exocytosis from recycling vesicles
# Local Parameter:   id =  k1, name = k1
par k1=0.05


k_endo=default*Functio_1(default, k1, s1)

# Reaction: id = k_exo, name = HS endocytosis
# Local Parameter:   id =  k2, name = k2
par k2=0.05


k_exo=default*Functio_2(default, k2, s2)

# Reaction: id = k_le, name = HS trafficking to late endosome
# Local Parameter:   id =  k6, name = k6
par k6=0.01


k_le=default*Functio_3(default, k6, s2)

# Reaction: id = k_lys, name = HS trafficking to lysosome
# Local Parameter:   id =  k7, name = k7
par k7=0.01


k_lys=default*Functio_4(default, k7, s3)

# Reaction: id = k_deg, name = HS release from lysosome
# Local Parameter:   id =  k8, name = k8
par k8=0.005


k_deg=default*Functio_5(default, k8, s4)

# Reaction: id = k_shed, name = HS cell surface shedding
# Local Parameter:   id =  k4, name = k4
par k4=0.033


k_shed=default*Functio_6(default, k4, s1)

# Species:   id = s1, name = HS surface, affected by kineticLaw

init s1=0.1
ds1/dt=(1/(default))*(( 1.0 * k_golgi) + (-1.0 * k_endo) + ( 1.0 * k_exo) + (-1.0 * k_shed))

# Species:   id = s2, name = early endosome, affected by kineticLaw

init s2=0.4
ds2/dt=(1/(default))*(( 1.0 * k_endo) + (-1.0 * k_exo) + (-1.0 * k_le))

# Species:   id = s3, name = late endosome, affected by kineticLaw

init s3=0.4
ds3/dt=(1/(default))*(( 1.0 * k_le) + (-1.0 * k_lys))

# Species:   id = s6, name = golgi, constant
par s6=0.05


# Species:   id = s4, name = lysosome, affected by kineticLaw

init s4=1.23
ds4/dt=(1/(default))*(( 1.0 * k_lys) + (-1.0 * k_deg))

# Species:   id = release, name = release, affected by kineticLaw

init release=0.0
drelease/dt=(1/(default))*(( 1.0 * k_deg))

# Species:   id = shedding, name = shedding, affected by kineticLaw

init shedding=0.0
dshedding/dt=(1/(default))*(( 1.0 * k_shed))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

