
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Kim2011_Oscillator_SimpleIII
#
# is http://identifiers.org/biomodels.db/MODEL1012090001
# is http://identifiers.org/biomodels.db/BIOMD0000000323
# isDescribedBy http://identifiers.org/pubmed/21283141
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_1, name = Hill inhibition
function_(V,Shalve,h,substrate)=(V/(Shalve^h+substrate^h))


# FunctionDefinition id = function_3, name = Simple inhibition
functio_1(x,beta)=(x/beta/(1+x/beta))


# Compartment: id = compartment_1, name = compartment, constant
par compartme=1.0

# Parameter:   id =  parameter_1, name = alpha, constant
par parameter=1.0

# Parameter:   id =  parameter_2, name = beta, constant
par paramet_1=0.3

# Parameter:   id =  parameter_3, name = n, constant
par paramet_2=5.0

# Reaction: id = reaction_1, name = reaction1
# Local Parameter:   id =  Shalve, name = Shalve
par Shalve=1.0


reaction_=compartme*function_(parameter, Shalve, paramet_2, species_1)

# Reaction: id = reaction_2, name = reaction2
# Local Parameter:   id =  Shalve, name = Shalve
par Shalve_1=1.0


reactio_1=compartme*function_(parameter, Shalve_1, paramet_2, species_2)

# Reaction: id = reaction_3, name = reaction3
# Local Parameter:   id =  Shalve, name = Shalve
par Shalve__2=1.0


reactio_2=compartme*function_(parameter, Shalve__2, paramet_2, species_3)

# Reaction: id = reaction_4, name = reaction4

reactio_3=compartme*functio_1(species_1, paramet_1)

# Reaction: id = reaction_5, name = reaction5

reactio_4=compartme*functio_1(species_2, paramet_1)

# Reaction: id = reaction_6, name = reaction6

reactio_5=compartme*functio_1(species_3, paramet_1)

# Species:   id = species_1, name = x1, affected by kineticLaw

init species_1=0.0
dspecies_1/dt=(1/(compartme))*((-1.0 * reaction_) + ( 1.0 * reaction_) + ( 1.0 * reactio_1) + (-1.0 * reactio_3))

# Species:   id = species_2, name = x2, affected by kineticLaw

init species_2=0.0
dspecies_2/dt=(1/(compartme))*((-1.0 * reactio_1) + ( 1.0 * reactio_1) + ( 1.0 * reactio_2) + (-1.0 * reactio_4))

# Species:   id = species_3, name = x3, affected by kineticLaw

init species_3=0.33
dspecies_3/dt=(1/(compartme))*(( 1.0 * reaction_) + (-1.0 * reactio_2) + ( 1.0 * reactio_2) + (-1.0 * reactio_5))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

