
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Overgaard2007_PDmodel_IL21
#
# is http://identifiers.org/biomodels.db/MODEL0911110000
# is http://identifiers.org/biomodels.db/BIOMD0000000238
# isDescribedBy http://identifiers.org/pubmed/17009101
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = COMpartment, name = COMpartment, constant
par COMpartme=1.0

# Parameter:   id =  M, name = Metabolic rate, defined by a Rule

# Parameter:   id =  T, name = Temperature, defined by a Rule

# Parameter:   id =  BR, name = Bound Receptor, defined by a Rule

# Parameter:   id =  E_slow, name = Slow Effect, defined by a Rule

# Parameter:   id =  E_fast, name = Fast Effect, defined by a Rule

# Parameter:   id =  f_prime, name = Priming, defined by a Rule

# Parameter:   id =  T_a, name = ambient temperature, constant
par T_a=21.0

# Parameter:   id =  T_b, name = basiline temperature, constant
par T_b=38.0

# Parameter:   id =  delta_T, name = temperature difference, constant
par delta_T=1.57

# Parameter:   id =  kinc, name = kinc, constant
par kinc=0.0258

# Parameter:   id =  tdose1, name = tdose1, constant
par tdose1=24.0

# Parameter:   id =  tdose2, name = tdose2, constant
par tdose2=72.0

# Parameter:   id =  tdose3, name = tdose3, constant
par tdose3=120.0

# Parameter:   id =  M_c, name = circadian rhythm, defined by a Rule

# Parameter:   id =  t_day, name = t_day, constant
par t_day=17.5

# Parameter:   id =  t_night, name = t_night, constant
par t_night=6.73

# Parameter:   id =  tprime, name = tprime, defined by a Rule

# Parameter:   id =  day_length, name = day_length, constant
par day_lengt=86400.0

# Parameter:   id =  km, name = rate constant Metabolism, constant
par km=1.1375

# Parameter:   id =  c, name = specific heat constant, constant
par c=3.47

# Parameter:   id =  k, name = heat conductance, defined by a Rule

# Parameter:   id =  pEtot, name = pEtot, constant
par pEtot=0.144

# Parameter:   id =  kR, name = kR, constant
par kR=5.35

# Parameter:   id =  AMT_dose, name = AMT_dose, constant
par AMT_dose=3.0

# Parameter:   id =  pEf1, name = pEf1, constant
par pEf1=1.0

# Parameter:   id =  pEs1, name = pEs1, constant
par pEs1=0.2

# Parameter:   id =  pEf2, name = pEf2, constant
par pEf2=3.57

# Parameter:   id =  pEs2, name = pEs2, constant
par pEs2=2.43

# Parameter:   id =  pEf3, name = pEf3, constant
par pEf3=8.0

# Parameter:   id =  pEs3, name = pEs3, constant
par pEs3=50.0

# Parameter:   id =  f2_drug, name = f2_drug, defined by a Rule

# Parameter:   id =  T_day, name = T_day, defined by a Rule

# Parameter:   id =  T_night, name = T_night, defined by a Rule

# Parameter:   id =  kb, name = heat conductance baselinevalue, defined by a Rule

# Parameter:   id =  M_b, name = M_b, constant
par M_b=3.0

# Parameter:   id =  M_day, name = M_day, defined by a Rule

# Parameter:   id =  M_night, name = M_night, defined by a Rule

# Parameter:   id =  t_prime, name = t_prime, constant
par t_prime=45.12

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.2229166

# Parameter:   id =  delta_high_dose, name = delta_high_dose, constant
par delta_hig=1.0

# Parameter:   id =  M_night_baseline, name = M_night_baseline, defined by a Rule

# Parameter:   id =  gNsTs1, name = gNsTs1, defined by a Rule

# Parameter:   id =  gNsTs2, name = gNsTs2, defined by a Rule

# Parameter:   id =  gNsTs3, name = gNsTs3, defined by a Rule

# Parameter:   id =  gNfTf1, name = gNfTf1, defined by a Rule

# Parameter:   id =  gNfTf2, name = gNfTf2, defined by a Rule

# Parameter:   id =  gNfTf3, name = gNfTf3, defined by a Rule

# Parameter:   id =  Ns, name = No. of transit compartment (slow), constant
par Ns=4.0

# Parameter:   id =  Nf, name = No. of transit compartment (fast), constant
par Nf=4.0

# Parameter:   id =  Ts, name = mean total delay (slow), constant
par Ts=2.45

# Parameter:   id =  Tf, name = mena total delay (fast), constant
par Tf=0.368

# Parameter:   id =  X1, name = X1, defined by a Rule

# Parameter:   id =  X2, name = X2, defined by a Rule

# Parameter:   id =  X3, name = X3, defined by a Rule

# Parameter:   id =  Kf, name = Kf, defined by a Rule

# Parameter:   id =  Ks, name = Ks, defined by a Rule

# rateRule: variable = M
init M=3.5
dM/dt=(-km)*(M-M_c)

# rateRule: variable = T
init T_renamed=38.785
dT_renamed/dt=c^(-1)*(M-k*(T_renamed-T_a))

# rateRule: variable = BR
init BR=0.0
dBR/dt=f_prime*(E_slow+E_fast)*(1-BR)-kR*BR

# assignmentRule: variable = tprime
tprime=t*3600*1-flr(t*3600*1/day_lengt)*day_lengt
aux tprime=tprime

# assignmentRule: variable = kb
kb=M_b/(T_b-T_a)
aux kb=kb

# assignmentRule: variable = T_day
T_day_1=T_b+delta_T/2
aux T_day_1=T_day_1

# assignmentRule: variable = M_day
M_day=(kb+kinc*(T_day_1-T_b))*(T_day_1-T_a)
aux M_day=M_day

# assignmentRule: variable = f_prime
f_prime=delta_hig*(1+exp((-alpha)*(t-(tdose1+t_prime))))^(-1)
aux f_prime=f_prime

# assignmentRule: variable = T_night
T_night_1=T_b-delta_T/2
aux T_night_1=T_night_1

# assignmentRule: variable = M_night_baseline
M_night_b=(kb+kinc*(T_night_1-T_b))*(T_night_1-T_a)
aux M_night_b=M_night_b

# assignmentRule: variable = M_night
M_night=(1-f_prime)*M_night_b+f_prime*M_day
aux M_night=M_night

# assignmentRule: variable = M_c
M_c= piecew1 
aux M_c=M_c

# assignmentRule: variable = f2_drug
f2_drug=0
aux f2_drug=f2_drug

# assignmentRule: variable = k
k=kb+kinc*(T_renamed-T_b*(1+pEtot*BR))+f2_drug
aux k=k

# assignmentRule: variable = X1
X1=(t-tdose1)/24
aux X1=X1

# assignmentRule: variable = X2
X2=(t-tdose2)/24
aux X2=X2

# assignmentRule: variable = X3
X3=(t-tdose3)/24
aux X3=X3

# assignmentRule: variable = Kf
Kf=Nf/Tf
aux Kf=Kf

# assignmentRule: variable = Ks
Ks=Ns/Ts
aux Ks=Ks

# assignmentRule: variable = gNsTs1
gNsTs1= piecew2 
aux gNsTs1=gNsTs1

# assignmentRule: variable = gNsTs2
gNsTs2= piecew3 
aux gNsTs2=gNsTs2

# assignmentRule: variable = gNsTs3
gNsTs3= piecew4 
aux gNsTs3=gNsTs3

# assignmentRule: variable = gNfTf1
gNfTf1= piecew5 
aux gNfTf1=gNfTf1

# assignmentRule: variable = gNfTf2
gNfTf2= piecew6 
aux gNfTf2=gNfTf2

# assignmentRule: variable = gNfTf3
gNfTf3= piecew7 
aux gNfTf3=gNfTf3

# assignmentRule: variable = E_slow
E_slow=AMT_dose*pEs2*(gNsTs1+gNsTs2+gNsTs3)
aux E_slow=E_slow

# assignmentRule: variable = E_fast
E_fast=pEf2*(gNfTf1+gNfTf2+gNfTf3)
aux E_fast=E_fast


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (((tprime/3600)  >=  t_night) && ((tprime/3600)  <  t_day)) then (M_night) else (M_day)

piecew2=if (X1  >  0) then (Ks^Ns/6*exp((-Ks)*X1)*X1^(Ns-1)) else (0)

piecew3=if (X2  >  0) then (Ks^Ns/6*exp((-Ks)*X2)*X2^(Ns-1)) else (0)

piecew4=if (X3  >  0) then (Ks^Ns/6*exp((-Ks)*X3)*X3^(Ns-1)) else (0)

piecew5=if (X1  >  0) then (Kf^Nf/6*exp((-Kf)*X1)*X1^(Nf-1)) else (0)

piecew6=if (X2  >  0) then (Kf^Nf/6*exp((-Kf)*X2)*X2^(Nf-1)) else (0)

piecew7=if (X3  >  0) then (Kf^Nf/6*exp((-Kf)*X3)*X3^(Nf-1)) else (0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

