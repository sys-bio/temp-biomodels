
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Abernathy2016 - glioblastoma treatment
#
# isDescribedBy http://identifiers.org/pubmed/27022405
# is http://identifiers.org/biomodels.db/MODEL1907240001
# is http://identifiers.org/biomodels.db/BIOMD0000000757
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = logistic, name = logistic
logistic(r,P,k)=(r*P*(1-P/k))


# FunctionDefinition id = killing, name = killing
killing(a1,M1,e,a2,Fb,C,sub,h)=(a1*M1()/(M1()+e)*(a2+e*(1-a2)/(Fb+e))*C*sub/(h+sub))


# FunctionDefinition id = transformation, name = transformation
transform(ra,T,k1,S,k2)=(ra*T/k1*S/k2*(k1-T))


# FunctionDefinition id = one_mod, name = one mod
one_mod(k,mod)=(k*mod)


# FunctionDefinition id = M2, name = M2
M2(am2y,Fy,em2y,em2b,am2b,Fb)=(am2y*Fy/(Fy+em2y)*(em2b*(1-am2b)/(Fb+em2b)+am2b))


# FunctionDefinition id = M1, name = M1
M1(am1y,Fy,em1y)=(am1y*Fy/(Fy+em1y))


# Compartment: id = tumor_microenvironment, name = tumor microenvironment, constant
par tumor_mic=1.0

# Parameter:   id =  r1, name = r1, constant
par r1=0.001

# Parameter:   id =  k1, name = k1, constant
par k1=1.0E8

# Parameter:   id =  at, name = at, constant
par at=0.12

# Parameter:   id =  et, name = et, constant
par et=50.0

# Parameter:   id =  atb, name = atb, constant
par atb=0.69

# Parameter:   id =  etb, name = etb, constant
par etb=10000.0

# Parameter:   id =  ht, name = ht, constant
par ht=5.0E8

# Parameter:   id =  r2, name = r2, constant
par r2=0.1

# Parameter:   id =  k2, name = k2, constant
par k2=1.0E7

# Parameter:   id =  ra, name = ra, constant
par ra=0.006

# Parameter:   id =  as, name = as, defined by a Rule

# Parameter:   id =  es, name = es, defined by a Rule

# Parameter:   id =  asb, name = asb, defined by a Rule

# Parameter:   id =  esb, name = esb, defined by a Rule

# Parameter:   id =  hs, name = hs, defined by a Rule

# Parameter:   id =  uc, name = uc, constant
par uc=0.007

# Parameter:   id =  gb, name = gb, constant
par gb=63945.0

# Parameter:   id =  abt, name = abt, constant
par abt=5.75E-6

# Parameter:   id =  abs, name = abs, defined by a Rule

# Parameter:   id =  ub, name = ub, constant
par ub=7.0

# Parameter:   id =  gm1, name = gm1, constant
par gm1=1.44

# Parameter:   id =  am1y, name = am1y, constant
par am1y=2.88

# Parameter:   id =  em1y, name = em1y, constant
par em1y=338000.0

# Parameter:   id =  um1, name = um1, constant
par um1=0.0144

# Parameter:   id =  am2y, name = am2y, constant
par am2y=8660.0

# Parameter:   id =  em2y, name = em2y, constant
par em2y=1420.0

# Parameter:   id =  am2b, name = am2b, constant
par am2b=0.012

# Parameter:   id =  em2b, name = em2b, constant
par em2b=100000.0

# Parameter:   id =  um2, name = um2, constant
par um2=0.0144

# Parameter:   id =  ayc, name = ayc, constant
par ayc=1.02E-4

# Parameter:   id =  uy, name = uy, constant
par uy=0.102

# Parameter:   id =  N, name = N, constant
par N=0.0

# assignmentRule: variable = Tumor_Plot
Tumor_Plo=Tumor/100000000
aux Tumor_Plo=Tumor_Plo

# assignmentRule: variable = CSC_Plot
CSC_Plot=CancerSte/10000000
aux CSC_Plot=CSC_Plot

# assignmentRule: variable = CTL_Plot
CTL_Plot=Cytotoxic/100
aux CTL_Plot=CTL_Plot

# assignmentRule: variable = as
as=at*0.1
aux as=as

# assignmentRule: variable = es
es=et
aux es=es

# assignmentRule: variable = asb
asb=atb
aux asb=asb

# assignmentRule: variable = esb
esb=etb
aux esb=esb

# assignmentRule: variable = hs
hs=ht
aux hs=hs

# assignmentRule: variable = abs
abs=abt
aux abs=abs

# Reaction: id = tumor_growth, name = tumor growth

tumor_gro=tumor_mic*logistic(r1, Tumor, k1)

# Reaction: id = tumor_transformation, name = tumor transformation

tumor_tra=tumor_mic*transform(ra, Tumor, k1, CancerSte, k2)

# Reaction: id = tumor_killing, name = tumor killing

tumor_kil=tumor_mic*killing(at, MHC1, etb, atb, TGFb, Cytotoxic, Tumor, ht)

# Reaction: id = csc_growth, name = csc growth

csc_growt=tumor_mic*logistic(r2, CancerSte, k2)

# Reaction: id = csc_killing, name = csc killing

csc_killi=tumor_mic*killing(as, MHC1, esb, asb, TGFb, Cytotoxic, CancerSte, hs)

# Reaction: id = ctl_death, name = ctl death

ctl_death=tumor_mic*uc*Cytotoxic

# Reaction: id = ctl_source, name = ctl source

ctl_sourc=tumor_mic*Constant_(N)

# Reaction: id = tgfb_source, name = tgfb source

tgfb_sour=tumor_mic*Constant_(gb)

# Reaction: id = tgfb_by_tumor, name = tgfb by tumor

tgfb_by_t=tumor_mic*one_mod(abt, Tumor)

# Reaction: id = tgfb_by_csc, name = tgfb by csc

tgfb_by_c=tumor_mic*one_mod(abs, CancerSte)

# Reaction: id = tgfb_decay, name = tgfb decay

tgfb_deca=tumor_mic*ub*TGFb

# Reaction: id = ifny_production, name = ifny production

ifny_prod=tumor_mic*one_mod(ayc, Cytotoxic)

# Reaction: id = ifny_decay, name = ifny decay

ifny_deca=tumor_mic*uy*IFNy

# Reaction: id = mhc1_source, name = mhc1 source

mhc1_sour=tumor_mic*Constant_(gm1)

# Reaction: id = mhc1_decay, name = mhc1 decay

mhc1_deca=tumor_mic*um1*MHC1

# Reaction: id = mhc1_stimulation, name = mhc1 stimulation

mhc1_stim=tumor_mic*M1(am1y, IFNy, em1y)

# Reaction: id = mhc2_production, name = mhc2 production

mhc2_prod=tumor_mic*M2(am2y, IFNy, em2y, em2b, am2b, TGFb)

# Reaction: id = mhc2_decay, name = mhc2 decay

mhc2_deca=tumor_mic*um2*MHC2

# Species:   id = Tumor, name = Tumor, affected by kineticLaw

init Tumor=70.0
dTumor/dt=(1/(tumor_mic))*(( 1.0 * tumor_gro) + ( 1.0 * tumor_tra) + (-1.0 * tumor_kil))

# Species:   id = CancerStemCell, name = CancerStemCell, affected by kineticLaw

par CancerSte=30.0
aux CancerSte=CancerSte
dCancerSte/dt=(1/(tumor_mic))*((-1.0 * tumor_tra) + ( 1.0 * csc_growt) + (-1.0 * csc_killi))

# Species:   id = CytotoxicTcell, name = CytotoxicTcell, affected by kineticLaw

par Cytotoxic=250.0
aux Cytotoxic=Cytotoxic
dCytotoxic/dt=(1/(tumor_mic))*((-1.0 * ctl_death) + ( 1.0 * ctl_sourc))

# Species:   id = TGFb, name = TGFb, affected by kineticLaw

init TGFb=50.0
dTGFb/dt=(1/(tumor_mic))*(( 1.0 * tgfb_sour) + ( 1.0 * tgfb_by_t) + ( 1.0 * tgfb_by_c) + (-1.0 * tgfb_deca))

# Species:   id = IFNy, name = IFNy, affected by kineticLaw

init IFNy=50.0
dIFNy/dt=(1/(tumor_mic))*(( 1.0 * ifny_prod) + (-1.0 * ifny_deca))

# Species:   id = MHC1, name = MHC1, affected by kineticLaw

init MHC1=50.0
dMHC1/dt=(1/(tumor_mic))*(( 1.0 * mhc1_sour) + (-1.0 * mhc1_deca) + ( 1.0 * mhc1_stim))

# Species:   id = MHC2, name = MHC2, affected by kineticLaw

init MHC2=50.0
dMHC2/dt=(1/(tumor_mic))*(( 1.0 * mhc2_prod) + (-1.0 * mhc2_deca))

# Species:   id = Tumor_Plot, name = Tumor Plot, involved in a rule 

# Species:   id = CSC_Plot, name = CSC Plot, involved in a rule 

# Species:   id = CTL_Plot, name = CTL Plot, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

