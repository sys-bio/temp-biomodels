
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Gallaher2018 - Tumor?Immune dynamics in multiple myeloma
#
# is http://identifiers.org/biomodels.db/MODEL1907050001
# is http://identifiers.org/biomodels.db/BIOMD0000000743
# isDescribedBy http://identifiers.org/pubmed/30172689
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = M_source_0, name = M source
M_source_(sm)=(sm)


# FunctionDefinition id = M_growth_0, name = M growth
M_growth_(rm,M,km)=(rm*(1-M/km)*M)


# FunctionDefinition id = M_decay_0, name = M decay
M_decay_0(M,dm)=(M*dm)


# FunctionDefinition id = M_breakup_0, name = M breakup
M_breakup(M,anm,N,bnm,acm,Tc,bcm,acnm,amm,bmm,arm,Tr,brm,dm)=(M*(anm*N/(bnm+N)+acm*Tc/(bcm+Tc)+acnm*N*Tc/((bnm+N)*(bcm+Tc)))*(1-amm*M/(bmm+M)-arm*Tr/(brm+Tr))*dm)


# FunctionDefinition id = Tc_growth_0, name = Tc growth
Tc_growth(rc,Tc,kc)=(rc*(1-Tc/kc)*Tc)


# FunctionDefinition id = Tc_stimulation_0, name = Tc stimulation
Tc_stimul(rc,Tc,kc,amc,M,bmc,anc,N,bnc)=(rc*(1-Tc/kc)*(amc*M/(bmc+M)+anc*N/(bnc+N))*Tc)


# FunctionDefinition id = Tc_death_0, name = Tc death
Tc_death_(dc,Tc)=(dc*Tc)


# FunctionDefinition id = N_source_0, name = N source
N_source_(sn)=(sn)


# FunctionDefinition id = N_growth_0, name = N growth
N_growth_(rn,N,kn)=(rn*(1-N/kn)*N)


# FunctionDefinition id = N_stimulation_0, name = N stimulation
N_stimula(rn,N,kn,acn,Tc,bcn)=(rn*(1-N/kn)*acn*Tc/(bcn+Tc)*N)


# FunctionDefinition id = N_death_0, name = N death
N_death_0(dn,N)=(dn*N)


# FunctionDefinition id = Tr_growth_0, name = Tr growth
Tr_growth(rr,Tr,kr)=(rr*(1-Tr/kr)*Tr)


# FunctionDefinition id = Tr_stimulation_0, name = Tr stimulation
Tr_stimul(rr,Tr,kr,amr,M,bmr)=(rr*(1-Tr/kr)*amr*M/(bmr+M)*Tr)


# FunctionDefinition id = Tr_death_0, name = Tr death
Tr_death_(dr,Tr)=(dr*Tr)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  sm, name = sm, constant
par sm=0.001

# Parameter:   id =  rm, name = rm, constant
par rm=0.0175

# Parameter:   id =  km, name = km, constant
par km=10.0

# Parameter:   id =  dm, name = dm, constant
par dm=0.002

# Parameter:   id =  anm, name = anm, constant
par anm=5.0

# Parameter:   id =  bnm, name = bnm, constant
par bnm=150.0

# Parameter:   id =  acm, name = acm, constant
par acm=5.0

# Parameter:   id =  bcm, name = bcm, constant
par bcm=375.0

# Parameter:   id =  acnm, name = acnm, constant
par acnm=8.0

# Parameter:   id =  amm, name = amm, constant
par amm=0.5

# Parameter:   id =  bmm, name = bmm, constant
par bmm=3.0

# Parameter:   id =  arm, name = arm, constant
par arm=0.5

# Parameter:   id =  brm, name = brm, constant
par brm=25.0

# Parameter:   id =  rc, name = rc, constant
par rc=0.013

# Parameter:   id =  kc, name = kc, constant
par kc=800.0

# Parameter:   id =  dc, name = dc, constant
par dc=0.02

# Parameter:   id =  amc, name = amc, constant
par amc=5.0

# Parameter:   id =  bmc, name = bmc, constant
par bmc=3.0

# Parameter:   id =  anc, name = anc, constant
par anc=1.0

# Parameter:   id =  bnc, name = bnc, constant
par bnc=150.0

# Parameter:   id =  sn, name = sn, constant
par sn=0.03

# Parameter:   id =  rn, name = rn, constant
par rn=0.04

# Parameter:   id =  kn, name = kn, constant
par kn=450.0

# Parameter:   id =  dn, name = dn, constant
par dn=0.025

# Parameter:   id =  acn, name = acn, constant
par acn=1.0

# Parameter:   id =  bcn, name = bcn, constant
par bcn=375.0

# Parameter:   id =  rr, name = rr, constant
par rr=0.0831

# Parameter:   id =  kr, name = kr, constant
par kr=80.0

# Parameter:   id =  dr, name = dr, constant
par dr=0.0757

# Parameter:   id =  amr, name = amr, constant
par amr=2.0

# Parameter:   id =  bmr, name = bmr, constant
par bmr=3.0

# Reaction: id = M_breakup, name = M breakup

M_break_1=compartme*M_breakup(M, anm, N, bnm, acm, Tc, bcm, acnm, amm, bmm, arm, Tr, brm, dm)

# Reaction: id = M_decay, name = M decay

M_decay=compartme*M_decay_0(M, dm)

# Reaction: id = M_source, name = M source

M_source=compartme*M_source_(sm)

# Reaction: id = M_growth, name = M growth

M_growth=compartme*M_growth_(rm, M, km)

# Reaction: id = Tc_growth, name = Tc growth

Tc_grow_1=compartme*Tc_growth(rc, Tc, kc)

# Reaction: id = Tc_death, name = Tc death

Tc_death=compartme*Tc_death_(dc, Tc)

# Reaction: id = Tc_stimulation, name = Tc stimulation

Tc_stim_1=compartme*Tc_stimul(rc, Tc, kc, amc, N, bmc, anc, M, bnc)

# Reaction: id = N_source, name = N source

N_source=compartme*N_source_(sn)

# Reaction: id = N_growth, name = N growth

N_growth=compartme*N_growth_(rn, N, kn)

# Reaction: id = N_stimulation, name = N stimulation

N_stimu_1=compartme*N_stimula(rn, N, kn, acn, Tc, bcn)

# Reaction: id = N_death, name = N death

N_death=compartme*N_death_0(dn, N)

# Reaction: id = Tr_death, name = Tr death

Tr_death=compartme*Tr_death_(dr, Tr)

# Reaction: id = Tr_growth, name = Tr growth

Tr_grow_1=compartme*Tr_growth(rr, Tr, kr)

# Reaction: id = Tr_stimulation, name = Tr stimulation

Tr_stim_1=compartme*Tr_stimul(rr, Tr, kr, amr, M, bmr)

# Species:   id = M, name = M, affected by kineticLaw

init M=4.0
dM/dt=(1/(compartme))*((-1.0 * M_break_1) + (-1.0 * M_decay) + ( 1.0 * M_source) + ( 1.0 * M_growth))

# Species:   id = Tc, name = Tc, affected by kineticLaw

init Tc=464.0
dTc/dt=(1/(compartme))*(( 1.0 * Tc_grow_1) + (-1.0 * Tc_death) + ( 1.0 * Tc_stim_1))

# Species:   id = N, name = N, affected by kineticLaw

init N=227.0
dN/dt=(1/(compartme))*(( 1.0 * N_source) + ( 1.0 * N_growth) + ( 1.0 * N_stimu_1) + (-1.0 * N_death))

# Species:   id = Tr, name = Tr, affected by kineticLaw

init Tr=42.0
dTr/dt=(1/(compartme))*((-1.0 * Tr_death) + ( 1.0 * Tr_grow_1) + ( 1.0 * Tr_stim_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

