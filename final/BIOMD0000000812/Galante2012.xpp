
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Galante2012 - B7-H1 and a Mathematical Model for Cytotoxic T Cell and Tumor Cell Interaction
#
# isDescribedBy http://identifiers.org/pubmed/21656310
# isDerivedFrom http://identifiers.org/pubmed/15705911
# is http://identifiers.org/biomodels.db/MODEL1909160001
# is http://identifiers.org/biomodels.db/BIOMD0000000812
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_T_Growth, name = Function_for_T_Growth
Function_(k,T)=(k*T)


# FunctionDefinition id = Function_for_X_Complex_Formation, name = Function_for_X_Complex_Formation
Functio_1(k1,C,E)=(k1*C*E)


# FunctionDefinition id = Function_for_C_Carrying_Capacity_Limit, name = Function_for_C_Carrying_Capacity_Limit
Functio_2(k_5,C)=(k_5*C^2)


# FunctionDefinition id = Function_for_P_Production, name = Function_for_P_Production
Functio_3(k_p,E,k_m_1,k_m_2,C)=(k_p*E/((k_m_1+E)*k_m_2*C))


# FunctionDefinition id = Function_for_C_Growth, name = Function_for_C_Growth
Functio_4(k,C)=(k*C)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  k, name = k, constant
par k=0.035

# Parameter:   id =  k_1, name = k_1, constant
par k_1=1.0E-4

# Parameter:   id =  k_2, name = k_2, constant
par k_2=1.0E-4

# Parameter:   id =  k_3, name = k_3, constant
par k_3=1.0E-4

# Parameter:   id =  k_4, name = k_4, constant
par k_4=3.0

# Parameter:   id =  k_5, name = k_5, constant
par k_5=0.003

# Parameter:   id =  k_6, name = k_6, constant
par k_6=0.63

# Parameter:   id =  k_p, name = k_p, constant
par k_p=0.097

# Parameter:   id =  k_m, name = k_m, constant
par k_m=1.0

# Parameter:   id =  k_m_1, name = k_m_1, constant
par k_m_1=2.2

# Parameter:   id =  k_m_2, name = k_m_2, constant
par k_m_2=80.0

# Parameter:   id =  E_init, name = E_init, constant
par E_init=1.0

# Parameter:   id =  Perc_Lysis, name = Perc_Lysis, defined by a Rule

# Parameter:   id =  P_10, name = P_10, defined by a Rule

# Parameter:   id =  X_1000, name = X_1000, defined by a Rule

# Parameter:   id =  ModelValue_11, name = Initial for E_init, constant
par ModelValu=1.0

# assignmentRule: variable = E_CTL
E_CTL=ModelValu-X_Complex
aux E_CTL=E_CTL

# assignmentRule: variable = T_Cancer_Cell_Total
T_Cancer_=C_Cancer_+X_Complex
aux T_Cancer_=T_Cancer_

# assignmentRule: variable = Perc_Lysis
Perc_Lysi=100*(T_ast-T_Cancer_)/T_ast
aux Perc_Lysi=Perc_Lysi

# assignmentRule: variable = P_10
P_10=10*P_Perfori
aux P_10=P_10

# assignmentRule: variable = X_1000
X_1000=X_Complex*1000
aux X_1000=X_1000

# Reaction: id = X_Complex_Formation, name = X_Complex_Formation

X_Compl_1=compartme*Functio_1(k_1, C_Cancer_, E_CTL)

# Reaction: id = X_Complex_Dissociation, name = X_Complex_Dissociation

X_Compl_2=compartme*k_2*X_Complex

# Reaction: id = X_Complex_Apoptosis, name = X_Complex_Apoptosis

X_Compl_3=compartme*k_3*X_Complex

# Reaction: id = P_Production, name = P_Production

P_Product=compartme*Functio_3(k_p, E_CTL, k_m_1, k_m_2, C_Cancer_)

# Reaction: id = P_Apoptosis_Perforin, name = P_Apoptosis_Perforin

P_Apoptos=compartme*k_4*P_Perfori*C_Cancer_

# Reaction: id = C_Growth, name = C_Growth

C_Growth=compartme*Functio_4(k, C_Cancer_)

# Reaction: id = C_Carrying_Capacity_Limit, name = C_Carrying_Capacity_Limit

C_Carryin=compartme*Functio_2(k_5, C_Cancer_)

# Reaction: id = T_Growth, name = T_Growth

T_Growth=compartme*Function_(k, T_ast)

# Reaction: id = T_Carrying_Capacity_Limit, name = T_Carrying_Capacity_Limit

T_Carryin=compartme*Functio_2(k_5, T_ast)

# Species:   id = X_Complex, name = X_Complex, affected by kineticLaw

init X_Complex=0.0
dX_Complex/dt=(1/(compartme))*(( 1.0 * X_Compl_1) + (-1.0 * X_Compl_2) + (-1.0 * X_Compl_3))

# Species:   id = P_Perforin, name = P_Perforin, affected by kineticLaw

par P_Perfori=0.315
aux P_Perfori=P_Perfori
dP_Perfori/dt=(1/(compartme))*(( 1.0 * P_Product) + (-1.0 * P_Apoptos))

# Species:   id = C_Cancer_Uncomplexed, name = C_Cancer_Uncomplexed, affected by kineticLaw

par C_Cancer_=1.0
aux C_Cancer_=C_Cancer_
dC_Cancer_/dt=(1/(compartme))*((-1.0 * X_Compl_1) + ( 1.0 * X_Compl_2) + (-1.0 * P_Apoptos) + ( 1.0 * C_Growth) + (-1.0 * C_Carryin))

# Species:   id = T_ast, name = T_ast, affected by kineticLaw

init T_ast=1.0
dT_ast/dt=(1/(compartme))*(( 1.0 * T_Growth) + (-1.0 * T_Carryin))

# Species:   id = E_CTL, name = E_CTL, involved in a rule 

# Species:   id = T_Cancer_Cell_Total, name = T_Cancer_Cell_Total, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

