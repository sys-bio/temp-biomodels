
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Yugi2014 - Insulin induced signalling (PFKL phosphorylation) - model 1
#
# is http://identifiers.org/biomodels.db/MODEL1406130000
# is http://identifiers.org/biomodels.db/BIOMD0000000540
# isDescribedBy http://identifiers.org/pubmed/25131207
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = default, name = default, constant
par default=1.0

# Parameter:   id =  K_FBPase_cit, name = K_FBPase_cit, constant
par K_FBPase_=0.0211646

# Parameter:   id =  K_FBPase_f16bp, name = K_FBPase_f16bp, constant
par K_FBPas_1=0.104089638

# Parameter:   id =  K_FBPase_f26bp, name = K_FBPase_f26bp, constant
par K_FBPas_2=17.51744342

# Parameter:   id =  K_PFKL_PHOS_S775, name = K_PFKL_PHOS_S775, constant
par K_PFKL_PH=6.283705757

# Parameter:   id =  K_PFKL_akg, name = K_PFKL_akg, constant
par K_PFKL_ak=24661.01154

# Parameter:   id =  K_PFKL_cit, name = K_PFKL_cit, constant
par K_PFKL_ci=41.30426029

# Parameter:   id =  K_PFKL_f26bp, name = K_PFKL_f26bp, constant
par K_PFKL_f2=1.282443082

# Parameter:   id =  K_PFKL_f6p, name = K_PFKL_f6p, constant
par K_PFKL_f6=0.014114844

# Parameter:   id =  K_PFKL_icit, name = K_PFKL_icit, constant
par K_PFKL_ic=1784.508205

# Parameter:   id =  K_PFKL_mal, name = K_PFKL_mal, constant
par K_PFKL_ma=9.544729149

# Parameter:   id =  K_PFKL_pep, name = K_PFKL_pep, constant
par K_PFKL_pe=0.633518366

# Parameter:   id =  Vf_FBPase, name = Vf_FBPase, constant
par Vf_FBPase=9.932861302

# Parameter:   id =  Vf_PFKL, name = Vf_PFKL, constant
par Vf_PFKL=695063.7194

# Parameter:   id =  k_ALDO, name = k_ALDO, constant
par k_ALDO=0.008187906

# Parameter:   id =  k_mal, name = k_mal
par k_mal=1.005530417

# Parameter:   id =  k_akg, name = k_akg
par k_akg=-3.544494721

# Parameter:   id =  k_pep, name = k_pep
par k_pep=43.99195576

# Parameter:   id =  k_icit, name = k_icit
par k_icit=-0.038210156

# Parameter:   id =  k_f26bp, name = k_f26bp
par k_f26bp=-0.083430336

# Parameter:   id =  k_cit, name = k_cit
par k_cit=-0.351935646

# Parameter:   id =  k_pfkl_s775, name = k_pfkl_s775
par k_pfkl_s7=-0.011384308

# Parameter:   id =  k_f6p, name = k_f6p
par k_f6p=-0.930115636

# assignmentRule: variable = s22
s22=s3
aux s22=s22

# Reaction: id = re1

re1=s9/(K_PFKL_f2+s9)*K_PFKL_ak/(K_PFKL_ak+s7)*K_PFKL_pe/(K_PFKL_pe+s5)*K_PFKL_ci/(K_PFKL_ci+s10)*K_PFKL_ic/(K_PFKL_ic+s6)*K_PFKL_ma/(K_PFKL_ma+s8)*s13/(K_PFKL_PH+s13)*Vf_PFKL*s22/(K_PFKL_f6+s22)

# Reaction: id = re2

re2=K_FBPas_2/(K_FBPas_2+s9)*s10/(K_FBPase_+s10)*Vf_FBPase*s4/(K_FBPas_1+s4)

# Reaction: id = re3

re3=k_ALDO*s4

# Reaction: id = re4

re4=-k_mal

# Reaction: id = re5

re5=-k_akg

# Reaction: id = re6

re6=-k_pep

# Reaction: id = re7

re7=-k_icit

# Reaction: id = re8

re8=-k_f26bp

# Reaction: id = re9

re9=-k_cit

# Reaction: id = re10

re10=-k_pfkl_s7

# Reaction: id = re11

re11=-k_f6p

# Species:   id = s1, name = PFKL
# Warning species is not changed by either rules or reactions

par s1=1.0
aux s1=s1

# Species:   id = s2, name = FBPase
# Warning species is not changed by either rules or reactions

par s2=1.0
aux s2=s2

# Species:   id = s3, name = F6P, affected by kineticLaw

init s3=14.0774258421
ds3/dt=(-1.0 * re11)

# Species:   id = s4, name = F1,6BP, affected by kineticLaw

init s4=104.07239819
ds4/dt=( 1.0 * re1) + (-1.0 * re2) + (-1.0 * re3)

# Species:   id = s5, name = PEP, affected by kineticLaw

init s5=108.094519859
ds5/dt=(-1.0 * re6)

# Species:   id = s6, name = Isocitrate, affected by kineticLaw

init s6=1.79487179487
ds6/dt=(-1.0 * re7)

# Species:   id = s7, name = 2-oxoglutarate, affected by kineticLaw

init s7=25.1885369533
ds7/dt=(-1.0 * re5)

# Species:   id = s8, name = Malate, affected by kineticLaw

init s8=68.8788335846
ds8/dt=(-1.0 * re4)

# Species:   id = s9, name = F2,6BP, affected by kineticLaw

init s9=1.0
ds9/dt=(-1.0 * re8)

# Species:   id = s10, name = Citrate, affected by kineticLaw

init s10=17.7476118652
ds10/dt=(-1.0 * re9)

# Species:   id = s11, name = sa4_degraded, affected by kineticLaw

init s11=0.0
ds11/dt=(1/(default))*(( 1.0 * re3))

# Species:   id = s12, name = ALDO
# Warning species is not changed by either rules or reactions

par s12=1.0
aux s12=s12

# Species:   id = s13, name = pPFKL, affected by kineticLaw

init s13=0.768939345
ds13/dt=(-1.0 * re10)

# Species:   id = s14, name = sa8_degraded, affected by kineticLaw

init s14=0.0
ds14/dt=(1/(default))*(( 1.0 * re4))

# Species:   id = s15, name = sa7_degraded, affected by kineticLaw

init s15=0.0
ds15/dt=(1/(default))*(( 1.0 * re5))

# Species:   id = s16, name = sa5_degraded, affected by kineticLaw

init s16=0.0
ds16/dt=(1/(default))*(( 1.0 * re6))

# Species:   id = s17, name = sa6_degraded, affected by kineticLaw

init s17=0.0
ds17/dt=(1/(default))*(( 1.0 * re7))

# Species:   id = s18, name = sa9_degraded, affected by kineticLaw

init s18=0.0
ds18/dt=(1/(default))*(( 1.0 * re8))

# Species:   id = s20, name = sa13_degraded, affected by kineticLaw

init s20=0.0
ds20/dt=(1/(default))*(( 1.0 * re10))

# Species:   id = s21, name = sa3_degraded, affected by kineticLaw

init s21=0.0
ds21/dt=(1/(default))*(( 1.0 * re11))

# Species:   id = s19, name = sa10_degraded, affected by kineticLaw

init s19=0.0
ds19/dt=(1/(default))*(( 1.0 * re9))

# Species:   id = s22, name = F6P_proxy, involved in a rule 

# event : ev2min
ev2min=if (t > 2) then (1.5) else (0.2)
global 1 {ev2min - 1.1} {k_akg=-1.357466063;k_cit=0.351935646;k_f6p=1.357466063;k_icit=-0.038210156;k_f26bp=0.028924455;k_mal=-1.508295626;k_pep=7.54147813;k_pfkl_s775=-0.011384308}

# event : ev5min
ev5min=if (t > 5) then (1.5) else (0.2)
global 1 {ev5min - 1.1} {k_akg=0;k_cit=-0.211161388;k_f6p=0.271493213;k_icit=-0.038210156;k_f26bp=0.119075279;k_mal=-0.904977376;k_pep=-6.334841629;k_pfkl_s775=0.057596439}

# event : ev10min
ev10min=if (t > 10) then (1.5) else (0.2)
global 1 {ev10min - 1.1} {k_akg=0.36199095;k_cit=1.085972851;k_f6p=-1.055806938;k_icit=-0.038210156;k_f26bp=-0.050207413;k_mal=3.921568627;k_pep=9.049773756;k_pfkl_s775=0.006730598}

# event : ev15min
ev15min=if (t > 15) then (1.5) else (0.2)
global 1 {ev15min - 1.1} {k_akg=1.085972851;k_cit=0.452488688;k_f6p=-0.12066365;k_icit=-0.018099548;k_f26bp=0.100115778;k_mal=1.809954751;k_pep=-4.826546003;k_pfkl_s775=0.006730598}

# event : ev20min
ev20min=if (t > 20) then (1.5) else (0.2)
global 1 {ev20min - 1.1} {k_akg=0.226244344;k_cit=0.377073906;k_f6p=-0.165912519;k_icit=0.031674208;k_f26bp=-0.032601514;k_mal=1.206636501;k_pep=-3.619909502;k_pfkl_s775=0.006730598}

# event : ev30min
ev30min=if (t > 30) then (1.5) else (0.2)
global 1 {ev30min - 1.1} {k_akg=0.369532428;k_cit=0.306686777;k_f6p=0.070387129;k_icit=0.031674208;k_f26bp=-0.003055632;k_mal=0.502765209;k_pep=-0.301659125;k_pfkl_s775=0.006730598}

# event : ev45min
ev45min=if (t > 45) then (1.5) else (0.2)
global 1 {ev45min - 1.1} {k_akg=0.369532428;k_cit=0.306686777;k_f6p=0.070387129;k_icit=0.031674208;k_f26bp=-0.003055632;k_mal=0.502765209;k_pep=-0.301659125;k_pfkl_s775=0.00673059831429}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

