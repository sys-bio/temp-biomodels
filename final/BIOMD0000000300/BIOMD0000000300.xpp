
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Schmierer2010_FIH_Ankyrins
#
# is http://identifiers.org/biomodels.db/MODEL1008170000
# is http://identifiers.org/biomodels.db/BIOMD0000000300
# isDescribedBy http://identifiers.org/pubmed/20955552
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_1, name = Constant flux (irreversible)
function_(v)=(v)


# FunctionDefinition id = function_2, name = vPH Htot
functio_1(kcatPH,Ptot,O2,KdPH,Htot,HP)=(Htot*kcatPH*Ptot*O2/(1+O2)/(KdPH+Ptot+HP))


# FunctionDefinition id = vFH, name = vFH
vFH(Ftot,O2,alpha,H,KiFH,HF,KcatFH)=(H*KcatFH*Ftot*O2/(alpha+O2)/(KiFH+Ftot+HF))


# FunctionDefinition id = vFA, name = vFA
vFA(Ftot,O2,alpha,A,gamma,Atot,KiFA,KcatFH)=(A*KcatFH*Ftot*O2/(alpha+O2)/(KiFA+A+gamma*(Atot-A)))


# FunctionDefinition id = function_3, name = vPH H
functio_2(H,kcatPH,Ptot,O2,KdPH,HP)=(H*kcatPH*Ptot*O2/(1+O2)/(KdPH+Ptot+HP))


# Compartment: id = compartment_1, name = Cell, constant
par compartme=1.0

# Parameter:   id =  parameter_1, name = alpha, constant
par parameter=0.33

# Parameter:   id =  parameter_2, name = KdFH, constant
par paramet_1=1.0

# Parameter:   id =  parameter_3, name = KdFA, constant
par paramet_2=1.0

# Parameter:   id =  parameter_4, name = KdPH, constant
par paramet_3=1.0

# Parameter:   id =  parameter_5, name = KdHRE, constant
par paramet_4=0.3

# Parameter:   id =  parameter_6, name = gamma, constant
par paramet_5=0.0

# Parameter:   id =  parameter_8, name = kcatPH, constant
par paramet_6=500.0

# Parameter:   id =  parameter_10, name = w, constant
par paramet_7=1.0

# Parameter:   id =  parameter_11, name = eps, constant
par paramet_8=5.0

# Parameter:   id =  parameter_14, name = kdeg_A, defined by a Rule

# Parameter:   id =  parameter_16, name = ksyn_A, defined by a Rule

# Parameter:   id =  parameter_7, name = KiFH, defined by a Rule

# Parameter:   id =  parameter_9, name = KiFA, defined by a Rule

# Parameter:   id =  parameter_13, name = kcatFH, defined by a Rule

# Parameter:   id =  parameter_17, name = kdeg_H, constant
par parame_14=1.0

# Parameter:   id =  parameter_18, name = ksyn_H, constant
par parame_15=1.0

# assignmentRule: variable = species_4
species_4=species_1-species_2
aux species_4=species_4

# assignmentRule: variable = species_6
species_6=species_5-species_3
aux species_6=species_6

# assignmentRule: variable = species_10
specie_10=0.5*(species_1-species_8-paramet_3+((paramet_3-species_1+species_8)^2+4*species_1*paramet_3)^(0.5))
aux specie_10=specie_10

# assignmentRule: variable = species_13
specie_13=species_2/(paramet_4+species_1)
aux specie_13=specie_13

# assignmentRule: variable = species_14
specie_14=species_1/(paramet_4+species_1)
aux specie_14=specie_14

# assignmentRule: variable = species_16
specie_16=species_3/species_5
aux specie_16=specie_16

# assignmentRule: variable = species_15
specie_15=(species_1-species_2)/(paramet_4+species_1)
aux specie_15=specie_15

# assignmentRule: variable = parameter_14
paramet_9=1/paramet_8
aux paramet_9=paramet_9

# assignmentRule: variable = parameter_16
parame_10=species_5/paramet_8
aux parame_10=parame_10

# assignmentRule: variable = parameter_7
parame_11=paramet_1/paramet_2*(paramet_2+species_3+paramet_5*(species_5-species_3))
aux parame_11=parame_11

# assignmentRule: variable = species_9
species_9=0.5*(species_2-species_7-parame_11+((parame_11-species_2+species_7)^2+4*species_2*parame_11)^(0.5))
aux species_9=species_9

# assignmentRule: variable = species_12
specie_12=(paramet_1+species_9)/(parame_11+species_9)
aux specie_12=specie_12

# assignmentRule: variable = parameter_9
parame_12=paramet_2/paramet_1*(paramet_1+species_9)
aux parame_12=parame_12

# assignmentRule: variable = parameter_13
parame_13=paramet_6*paramet_7
aux parame_13=parame_13

# Reaction: id = reaction_1, name = Htot synthesis

reaction_=compartme*function_(parame_15)

# Reaction: id = reaction_2, name = Htot basal degradation

reactio_1=compartme*parame_14*species_1

# Reaction: id = reaction_3, name = Htot induced degradation

reactio_2=compartme*functio_1(paramet_6, species_8, specie_11, paramet_3, species_1, specie_10)

# Reaction: id = reaction_4, name = H synthesis

reactio_3=compartme*function_(parame_15)

# Reaction: id = reaction_5, name = H basal degardation

reactio_4=compartme*parame_14*species_2

# Reaction: id = reaction_6, name = H induced degradation

reactio_5=compartme*functio_2(species_2, paramet_6, species_8, specie_11, paramet_3, specie_10)

# Reaction: id = reaction_7, name = H hydroxylation

reactio_6=compartme*vFH(species_7, specie_11, parameter, species_2, parame_11, species_9, parame_13)

# Reaction: id = reaction_8, name = A synthesis

reactio_7=compartme*function_(parame_10)

# Reaction: id = reaction_9, name = A degradation

reactio_8=compartme*paramet_9*species_3

# Reaction: id = reaction_10, name = A hydroxylation

reactio_9=compartme*vFA(species_7, specie_11, parameter, species_3, paramet_5, species_5, parame_12, parame_13)

# Species:   id = species_1, name = Htot, affected by kineticLaw

init species_1=0.0
dspecies_1/dt=(1/(compartme))*(( 1.0 * reaction_) + (-1.0 * reactio_1) + (-1.0 * reactio_2))

# Species:   id = species_2, name = H, affected by kineticLaw

init species_2=0.0
dspecies_2/dt=(1/(compartme))*(( 1.0 * reactio_3) + (-1.0 * reactio_4) + (-1.0 * reactio_5) + (-1.0 * reactio_6))

# Species:   id = species_3, name = A, affected by kineticLaw

init species_3=100.0
dspecies_3/dt=(1/(compartme))*(( 1.0 * reactio_7) + (-1.0 * reactio_8) + (-1.0 * reactio_9))

# Species:   id = species_4, name = HOH, involved in a rule 

# Species:   id = species_5, name = Atot, constant
par species_5=100.0


# Species:   id = species_6, name = AOH, involved in a rule 

# Species:   id = species_7, name = Ftot, constant
par species_7=1.0


# Species:   id = species_8, name = Ptot, constant
par species_8=0.2


# Species:   id = species_9, name = HF, involved in a rule 

# Species:   id = species_10, name = HP, involved in a rule 

# Species:   id = species_11, name = O2, constant
par specie_11=0.0


# Species:   id = species_12, name = FIHfree, involved in a rule 

# Species:   id = species_13, name = CAD, involved in a rule 

# Species:   id = species_14, name = NAD, involved in a rule 

# Species:   id = species_15, name = CADOH, involved in a rule 

# Species:   id = species_16, name = A for plotting, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

