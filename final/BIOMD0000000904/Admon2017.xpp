
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Admon2017 - Modelling tumor growth with immune response and drug using ordinary differential equations
#
# isDescribedBy http://identifiers.org/doi/10.11113/jt.v79.9791
# is http://identifiers.org/biomodels.db/MODEL1912180006
# is http://identifiers.org/biomodels.db/BIOMD0000000904
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_increase_in_the_population_of_tumor_cell_during_interphase, name = Function for increase in the population of tumor cell during interphase
Function_(a4,Tm)=(2*a4*Tm)


# FunctionDefinition id = Function_for_decrease_in_the_population_of_tumor_cell_during_mitosis, name = Function for decrease in the population of tumor cell during mitosis
Functio_1(d3,Tm,a4,c3,I,k1,k2,u)=(d3*Tm+a4*Tm+c3*Tm*I+k1*(-exp((-k2)*u))*Tm)


# FunctionDefinition id = Function_for_decrease_in_the_population_of_immune_response, name = Function for decrease in the population of immune response
Functio_2(c2,I,c4,Tm,d1,k3,k4,u,Ti)=(c2*I*Ti+c4*Tm*I+d1*I+k3*(1-exp((-k4)*u))*I)


# FunctionDefinition id = Function_for_decrease_in_the_population_of_tumor_cell_during_interphase, name = Function for decrease in the population of tumor cell during interphase
Functio_3(c1,I,d2,Ti,a1)=((c1*I+d2)*Ti+a1*Ti)


# FunctionDefinition id = Function_for_increase_in_the_population_of_tumor_cell_during_mitosis, name = Function for increase in the population of tumor cell during mitosis
Functio_4(a1,Ti)=(a1*Ti)


# FunctionDefinition id = Function_for_formation_of_immune_response, name = Function for formation of immune response
Functio_5(k,p,I,Ti,Tm,n,alpha)=(k+p*I*(Ti+Tm)^n/(alpha+(Ti+Tm)^n))


# FunctionDefinition id = Function_for_decrease_in_drug, name = Function for decrease in drug
Functio_6(gamma,u)=(gamma*u)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  a1, name = a1, constant
par a1=1.0

# Parameter:   id =  a4, name = a4, constant
par a4=0.8

# Parameter:   id =  d1, name = d1, constant
par d1=0.29

# Parameter:   id =  d2, name = d2, constant
par d2=0.11

# Parameter:   id =  d3, name = d3, constant
par d3=0.4

# Parameter:   id =  c1, name = c1, constant
par c1=0.9

# Parameter:   id =  c3, name = c3, constant
par c3=0.9

# Parameter:   id =  c2, name = c2, constant
par c2=0.085

# Parameter:   id =  c4, name = c4, constant
par c4=0.085

# Parameter:   id =  k, name = k, constant
par k=0.029

# Parameter:   id =  k1, name = k1, constant
par k1=0.0

# Parameter:   id =  k2, name = k2, constant
par k2=0.57

# Parameter:   id =  k3, name = k3, constant
par k3=0.0

# Parameter:   id =  k4, name = k4, constant
par k4=0.061

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.2

# Parameter:   id =  p, name = p, constant
par p=0.1

# Parameter:   id =  n, name = n, constant
par n=3.0

# Parameter:   id =  gamma, name = gamma, constant
par gamma=0.0

# Parameter:   id =  d, name = d, defined by a Rule

# assignmentRule: variable = d
d=2*a1*a4/(a1+d2)
aux d=d

# Reaction: id = Increase_in_the_population_of_tumor_cell_during_interphase, name = Increase in the population of tumor cell during interphase

Increase_=compartme*Function_(a4, Tm)

# Reaction: id = Decrease_in_the_population_of_tumor_cell_during_interphase, name = Decrease in the population of tumor cell during interphase

Decrease_=compartme*Functio_3(c1, I, d2, Ti, a1)

# Reaction: id = Increase_in_population_of_tumor_cell_during_mitosis, name = Increase in population of tumor cell during mitosis

Increas_1=compartme*Functio_4(a1, Ti)

# Reaction: id = Decrease_in_the_population_of_tumor_cell_during_mitosis, name = Decrease in the population of tumor cell during mitosis

Decreas_1=compartme*Functio_1(d3, Tm, a4, c3, I, k1, k2, u)

# Reaction: id = induction_of_immune_response_due_to_tumor_cell_formation, name = induction of immune response due to tumor cell formation

induction=compartme*Functio_5(k, p, I, Ti, Tm, n, alpha)

# Reaction: id = Decrease_in_the_popoulation_of_immune_response, name = Decrease in the popoulation of immune response

Decreas_2=compartme*Functio_2(c2, I, c4, Tm, d1, k3, k4, u, Ti)

# Reaction: id = Decrease_in_drug, name = Decrease in drug

Decreas_3=compartme*Functio_6(gamma, u)

# Species:   id = Ti, name = Ti, affected by kineticLaw

init Ti=1.3
dTi/dt=(1/(compartme))*(( 1.0 * Increase_) + (-1.0 * Decrease_))

# Species:   id = Tm, name = Tm, affected by kineticLaw

init Tm=1.2
dTm/dt=(1/(compartme))*(( 1.0 * Increas_1) + (-1.0 * Decreas_1))

# Species:   id = I, name = I, affected by kineticLaw

init I=0.9
dI/dt=(1/(compartme))*(( 1.0 * induction) + (-1.0 * Decreas_2))

# Species:   id = u, name = u, affected by kineticLaw

init u=0.0
du/dt=(1/(compartme))*((-1.0 * Decreas_3))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

