
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Besozzi2012 - Oscillatory regimes in the Ras/cAMP/PKA pathway in S.cerevisiae
#
# is http://identifiers.org/biomodels.db/MODEL1309060000
# is http://identifiers.org/biomodels.db/BIOMD0000000478
# isDescribedBy http://identifiers.org/pubmed/22818197
# isDerivedFrom http://identifiers.org/pubmed/18023904
# isDerivedFrom http://identifiers.org/pubmed/21741466
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment01, name = compartment01, constant
par compartme=1.0

# Parameter:   id =  K0, name = K0, constant
par K0=1.0

# Parameter:   id =  K1, name = K1, constant
par K1=1.0

# Parameter:   id =  K2, name = K2, constant
par K2=1.5

# Parameter:   id =  K3, name = K3, constant
par K3=1.0

# Parameter:   id =  K4, name = K4, constant
par K4=1.0

# Parameter:   id =  K5, name = K5, constant
par K5=1.0

# Parameter:   id =  K6, name = K6, constant
par K6=1.0

# Parameter:   id =  K7, name = K7, constant
par K7=1.0

# Parameter:   id =  K8, name = K8, constant
par K8=0.01

# Parameter:   id =  K9, name = K9, constant
par K9=0.25

# Parameter:   id =  K10, name = K10, constant
par K10=0.001

# Parameter:   id =  K11, name = K11, constant
par K11=2.1E-6

# Parameter:   id =  K12, name = K12, constant
par K12=0.001

# Parameter:   id =  K13, name = K13, constant
par K13=1.0E-5

# Parameter:   id =  K14, name = K14, constant
par K14=1.0E-5

# Parameter:   id =  K15, name = K15, constant
par K15=1.0E-5

# Parameter:   id =  K16, name = K16, constant
par K16=1.0E-5

# Parameter:   id =  K17, name = K17, constant
par K17=0.1

# Parameter:   id =  K18, name = K18, constant
par K18=0.1

# Parameter:   id =  K19, name = K19, constant
par K19=0.1

# Parameter:   id =  K20, name = K20, constant
par K20=0.1

# Parameter:   id =  K21, name = K21, constant
par K21=1.0

# Parameter:   id =  K22, name = K22, constant
par K22=1.0

# Parameter:   id =  K23, name = K23, constant
par K23=0.75

# Parameter:   id =  K24, name = K24, constant
par K24=1.0

# Parameter:   id =  K25, name = K25, constant
par K25=1.0E-6

# Parameter:   id =  K26, name = K26, constant
par K26=0.1

# Parameter:   id =  K27, name = K27, constant
par K27=0.1

# Parameter:   id =  K28, name = K28, constant
par K28=7.5

# Parameter:   id =  K29, name = K29, constant
par K29=1.0E-4

# Parameter:   id =  K30, name = K30, constant
par K30=1.0E-4

# Parameter:   id =  K31, name = K31, constant
par K31=1.0

# Parameter:   id =  K32, name = K32, constant
par K32=1.7

# Parameter:   id =  K33, name = K33, constant
par K33=1.0

# Parameter:   id =  K34, name = K34, constant
par K34=0.01

# Parameter:   id =  K35, name = K35, constant
par K35=0.001

# Parameter:   id =  K36, name = K36, constant
par K36=1.25

# Parameter:   id =  K37, name = K37, constant
par K37=2.5

# Parameter:   id =  K38, name = K38, constant
par K38=10.0

# Reaction: id = R0

R0=K0*Ras2_GDP*Cdc25

# Reaction: id = R1

R1=K1*Ras2_GDP_

# Reaction: id = R2

R2=K2*Ras2_GDP_

# Reaction: id = R3

R3=K3*Ras2_Cdc2*GDP

# Reaction: id = R4

R4=K4*Ras2_Cdc2*GTP

# Reaction: id = R5

R5=K5*Ras2_GTP_

# Reaction: id = R6

R6=K6*Ras2_GTP_

# Reaction: id = R7

R7=K7*Cdc25*Ras2_GTP

# Reaction: id = R8

R8=K8*Ras2_GTP*Ira2

# Reaction: id = R9

R9=K9*Ras2_GT_1

# Reaction: id = R10

R10=K10*Ras2_GTP*CYR1

# Reaction: id = R11

R11=K11*Ras2_GT_2*ATP

# Reaction: id = R12

R12=K12*Ira2*Ras2_GT_2

# Reaction: id = R13

R13=K13*cAMP*PKA

# Reaction: id = R14

R14=K14*cAMP*cAMP_PKA

# Reaction: id = R15

R15=K15*cAMP*IIcAMP_PK

# Reaction: id = R16

R16=K16*cAMP*IIIcAMP_P

# Reaction: id = R17

R17=K17*IVcAMP_PK

# Reaction: id = R18

R18=K18*IIIcAMP_P

# Reaction: id = R19

R19=K19*IIcAMP_PK

# Reaction: id = R20

R20=K20*cAMP_PKA

# Reaction: id = R21

R21=K21*IVcAMP_PK

# Reaction: id = R22

R22=K22*R_2cAMP

# Reaction: id = R23

R23=K23*C*R

# Reaction: id = R24

R24=K24*R_C*(R_C-1)/2

# Reaction: id = R25

R25=K25*C*Pde1

# Reaction: id = R26

R26=K26*cAMP*Pde1f

# Reaction: id = R27

R27=K27*cAMP_Pde1

# Reaction: id = R28

R28=K28*cAMP_Pde1

# Reaction: id = R29

R29=K29*Pde1f*PPA2

# Reaction: id = R30

R30=K30*cAMP*Pde2

# Reaction: id = R31

R31=K31*cAMP_Pde2

# Reaction: id = R32

R32=K32*cAMP_Pde2

# Reaction: id = R33

R33=K33*Cdc25*C

# Reaction: id = R34

R34=K34*PPA2*Cdc25f

# Reaction: id = R35

R35=K35*Ira2*C

# Reaction: id = R36

R36=K36*Ras2_GTP*Ira2P

# Reaction: id = R37

R37=K37*Ras2_GT_3

# Reaction: id = R38

R38=K38*Ira2P

# Species:   id = Ras2_GDP, name = Ras2_GDP, affected by kineticLaw

init Ras2_GDP=20000.0
dRas2_GDP/dt=(1/(compartme))*((-1.0 * R0) + ( 1.0 * R1) + ( 1.0 * R9) + ( 1.0 * R12) + ( 1.0 * R37))

# Species:   id = Cdc25, name = Cdc25, affected by kineticLaw

init Cdc25=300.0
dCdc25/dt=(1/(compartme))*((-1.0 * R0) + ( 1.0 * R1) + ( 1.0 * R6) + (-1.0 * R7) + (-1.0 * R33) + ( 1.0 * R34))

# Species:   id = Ras2_GDP_Cdc25, name = Ras2_GDP_Cdc25, affected by kineticLaw

par Ras2_GDP_=0.0
aux Ras2_GDP_=Ras2_GDP_
dRas2_GDP_/dt=(1/(compartme))*(( 1.0 * R0) + (-1.0 * R1) + (-1.0 * R2) + ( 1.0 * R3))

# Species:   id = Ras2_Cdc25, name = Ras2_Cdc25, affected by kineticLaw

par Ras2_Cdc2=0.0
aux Ras2_Cdc2=Ras2_Cdc2
dRas2_Cdc2/dt=(1/(compartme))*(( 1.0 * R2) + (-1.0 * R3) + (-1.0 * R4) + ( 1.0 * R5))

# Species:   id = GDP, name = GDP, constant
par GDP=1500000.0


# Species:   id = GTP, name = GTP, constant
par GTP=5000000.0


# Species:   id = Ras2_GTP_Cdc25, name = Ras2_GTP_Cdc25, affected by kineticLaw

par Ras2_GTP_=0.0
aux Ras2_GTP_=Ras2_GTP_
dRas2_GTP_/dt=(1/(compartme))*(( 1.0 * R4) + (-1.0 * R5) + (-1.0 * R6) + ( 1.0 * R7))

# Species:   id = Ras2_GTP, name = Ras2_GTP, affected by kineticLaw

init Ras2_GTP=0.0
dRas2_GTP/dt=(1/(compartme))*(( 1.0 * R6) + (-1.0 * R7) + (-1.0 * R8) + (-1.0 * R10) + (-1.0 * R36))

# Species:   id = Ira2, name = Ira2, affected by kineticLaw

init Ira2=200.0
dIra2/dt=(1/(compartme))*((-1.0 * R8) + ( 1.0 * R9) + (-1.0 * R12) + ( 1.0 * R12) + (-1.0 * R35) + ( 1.0 * R38))

# Species:   id = Ras2_GTP_Ira2, name = Ras2_GTP_Ira2, affected by kineticLaw

par Ras2_GT_1=0.0
aux Ras2_GT_1=Ras2_GT_1
dRas2_GT_1/dt=(1/(compartme))*(( 1.0 * R8) + (-1.0 * R9))

# Species:   id = CYR1, name = CYR1, affected by kineticLaw

init CYR1=200.0
dCYR1/dt=(1/(compartme))*((-1.0 * R10) + ( 1.0 * R12))

# Species:   id = Ras2_GTP_CYR1, name = Ras2_GTP_CYR1, affected by kineticLaw

par Ras2_GT_2=0.0
aux Ras2_GT_2=Ras2_GT_2
dRas2_GT_2/dt=(1/(compartme))*(( 1.0 * R10) + (-1.0 * R11) + ( 1.0 * R11) + (-1.0 * R12))

# Species:   id = ATP, name = ATP, constant
par ATP=2.4E7


# Species:   id = cAMP, name = cAMP, affected by kineticLaw

init cAMP=0.0
dcAMP/dt=(1/(compartme))*(( 1.0 * R11) + (-1.0 * R13) + (-1.0 * R14) + (-1.0 * R15) + (-1.0 * R16) + ( 1.0 * R17) + ( 1.0 * R18) + ( 1.0 * R19) + ( 1.0 * R20) + ( 2.0 * R22) + (-1.0 * R26) + ( 1.0 * R27) + (-1.0 * R30) + ( 1.0 * R31))

# Species:   id = PKA, name = PKA, affected by kineticLaw

init PKA=2500.0
dPKA/dt=(1/(compartme))*((-1.0 * R13) + ( 1.0 * R20) + ( 1.0 * R24))

# Species:   id = cAMP_PKA, name = cAMP_PKA, affected by kineticLaw

init cAMP_PKA=0.0
dcAMP_PKA/dt=(1/(compartme))*(( 1.0 * R13) + (-1.0 * R14) + ( 1.0 * R19) + (-1.0 * R20))

# Species:   id = IIcAMP_PKA, name = IIcAMP_PKA, affected by kineticLaw

par IIcAMP_PK=0.0
aux IIcAMP_PK=IIcAMP_PK
dIIcAMP_PK/dt=(1/(compartme))*(( 1.0 * R14) + (-1.0 * R15) + ( 1.0 * R18) + (-1.0 * R19))

# Species:   id = IIIcAMP_PKA, name = IIIcAMP_PKA, affected by kineticLaw

par IIIcAMP_P=0.0
aux IIIcAMP_P=IIIcAMP_P
dIIIcAMP_P/dt=(1/(compartme))*(( 1.0 * R15) + (-1.0 * R16) + ( 1.0 * R17) + (-1.0 * R18))

# Species:   id = IVcAMP_PKA, name = IVcAMP_PKA, affected by kineticLaw

par IVcAMP_PK=0.0
aux IVcAMP_PK=IVcAMP_PK
dIVcAMP_PK/dt=(1/(compartme))*(( 1.0 * R16) + (-1.0 * R17) + (-1.0 * R21))

# Species:   id = C, name = C, affected by kineticLaw

init C=0.0
dC/dt=(1/(compartme))*(( 2.0 * R21) + (-1.0 * R23) + (-1.0 * R25) + ( 1.0 * R25) + (-1.0 * R33) + ( 1.0 * R33) + (-1.0 * R35) + ( 1.0 * R35))

# Species:   id = R_2cAMP, name = R_2cAMP, affected by kineticLaw

init R_2cAMP=0.0
dR_2cAMP/dt=(1/(compartme))*(( 2.0 * R21) + (-1.0 * R22))

# Species:   id = R, name = R, affected by kineticLaw

init R=0.0
dR/dt=(1/(compartme))*(( 1.0 * R22) + (-1.0 * R23))

# Species:   id = R_C, name = R_C, affected by kineticLaw

init R_C=0.0
dR_C/dt=(1/(compartme))*(( 1.0 * R23) + (-2.0 * R24))

# Species:   id = Pde1, name = Pde1, affected by kineticLaw

init Pde1=1400.0
dPde1/dt=(1/(compartme))*((-1.0 * R25) + ( 1.0 * R29))

# Species:   id = Pde1f, name = Pde1f, affected by kineticLaw

init Pde1f=0.0
dPde1f/dt=(1/(compartme))*(( 1.0 * R25) + (-1.0 * R26) + ( 1.0 * R27) + ( 1.0 * R28) + (-1.0 * R29))

# Species:   id = cAMP_Pde1f, name = cAMP_Pde1f, affected by kineticLaw

par cAMP_Pde1=0.0
aux cAMP_Pde1=cAMP_Pde1
dcAMP_Pde1/dt=(1/(compartme))*(( 1.0 * R26) + (-1.0 * R27) + (-1.0 * R28))

# Species:   id = AMP, name = AMP, affected by kineticLaw

init AMP=0.0
dAMP/dt=(1/(compartme))*(( 1.0 * R28) + ( 1.0 * R32))

# Species:   id = PPA2, name = PPA2, affected by kineticLaw

init PPA2=4000.0
dPPA2/dt=(1/(compartme))*((-1.0 * R29) + ( 1.0 * R29) + (-1.0 * R34) + ( 1.0 * R34))

# Species:   id = Pde2, name = Pde2, affected by kineticLaw

init Pde2=6500.0
dPde2/dt=(1/(compartme))*((-1.0 * R30) + ( 1.0 * R31) + ( 1.0 * R32))

# Species:   id = cAMP_Pde2, name = cAMP_Pde2, affected by kineticLaw

init cAMP_Pde2=0.0
dcAMP_Pde2/dt=(1/(compartme))*(( 1.0 * R30) + (-1.0 * R31) + (-1.0 * R32))

# Species:   id = Cdc25f, name = Cdc25f, affected by kineticLaw

init Cdc25f=0.0
dCdc25f/dt=(1/(compartme))*(( 1.0 * R33) + (-1.0 * R34))

# Species:   id = Ira2P, name = Ira2P, affected by kineticLaw

init Ira2P=0.0
dIra2P/dt=(1/(compartme))*(( 1.0 * R35) + (-1.0 * R36) + ( 1.0 * R37) + (-1.0 * R38))

# Species:   id = Ras2_GTP_Ira2P, name = Ras2_GTP_Ira2P, affected by kineticLaw

par Ras2_GT_3=0.0
aux Ras2_GT_3=Ras2_GT_3
dRas2_GT_3/dt=(1/(compartme))*(( 1.0 * R36) + (-1.0 * R37))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

