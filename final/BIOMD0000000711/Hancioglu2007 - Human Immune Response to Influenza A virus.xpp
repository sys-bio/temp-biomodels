
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Hancioglu2007 - Human Immune Response to Influenza A virus Infection
#
# is http://identifiers.org/biomodels.db/MODEL1808280004
# is http://identifiers.org/biomodels.db/BIOMD0000000711
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_Reaction_1__2, name = Function for Reaction 1 [2]
Function_(gammaV,I)=(gammaV*I)


# FunctionDefinition id = Function_for_Reaction_2__2, name = Function for Reaction 2 [2]
Functio_1(gammaVA,S,A,V)=(gammaVA*S*A*V)


# FunctionDefinition id = Function_for_Reaction_3__2, name = Function for Reaction 3 [2]
Functio_2(gammaVH,H,V)=(gammaVH*H*V)


# FunctionDefinition id = Function_for_Reaction_5__1, name = Function for Reaction 5 [1]
Functio_3(aV1,V,aV2)=(aV1*V/(1+aV2*V))


# FunctionDefinition id = Function_for_Reaction_6__1, name = Function for Reaction 6 [1]
Functio_4(bHD,D,H,R)=(bHD*D*(H+R))


# FunctionDefinition id = Function_for_Reaction_8, name = Function for Reaction 8
Functio_5(V,H,gammaHV)=(gammaHV*V*H)


# FunctionDefinition id = Function_for_Reaction_9__1, name = Function for Reaction 9 [1]
Functio_6(bHF,F,H)=(bHF*F*H)


# FunctionDefinition id = Function_for_Reaction_10, name = Function for Reaction 10
Functio_7(bIE,E,I)=(bIE*E*I)


# FunctionDefinition id = Function_for_Reaction_12, name = Function for Reaction 12
Functio_8(bMD,D,bMV,V,M)=((bMD*D+bMV*V)*(1-M))


# FunctionDefinition id = Function_for_Reaction_14, name = Function for Reaction 14
Functio_9(bF,M)=(bF*M)


# FunctionDefinition id = Function_for_Reaction_15, name = Function for Reaction 15
Functi_10(cF,I)=(cF*I)


# FunctionDefinition id = Function_for_Reaction_16, name = Function for Reaction 16
Functi_11(bFH,H,F)=(bFH*H*F)


# FunctionDefinition id = Function_for_Reaction_18, name = Function for Reaction 18
Functi_12(bEM,M,E)=(bEM*M*E)


# FunctionDefinition id = Function_for_Reaction_19, name = Function for Reaction 19
Functi_13(bEI,I,E)=(bEI*I*E)


# FunctionDefinition id = Function_for_Reaction_20, name = Function for Reaction 20
Functi_14(aE,E)=(aE*(E-1))


# FunctionDefinition id = Function_for_Reaction_21, name = Function for Reaction 21
Functi_15(M,P,bPM)=(bPM*M*P)


# FunctionDefinition id = Function_for_Reaction_22, name = Function for Reaction 22
Functi_16(aP,P)=(aP*(P-1))


# FunctionDefinition id = Function_for_Reaction_23, name = Function for Reaction 23
Functi_17(bA,P)=(bA*P)


# FunctionDefinition id = Function_for_Reaction_24, name = Function for Reaction 24
Functi_18(gammaAV,S,A,V)=(gammaAV*S*A*V)


# FunctionDefinition id = Function_for_Reaction_26, name = Function for Reaction 26
Functi_19(r,P,S)=(r*P*(1-S))


# Compartment: id = Respiratory_tract_mucosa, name = Respiratory tract mucosa, constant
par Respirato=1.0

# Parameter:   id =  gammaV, name = gammaV, constant
par gammaV=510.0

# Parameter:   id =  gammaVA, name = gammaVA, constant
par gammaVA=619.2

# Parameter:   id =  gammaVH, name = gammaVH, constant
par gammaVH=1.02

# Parameter:   id =  alphaV, name = alphaV, constant
par alphaV=1.7

# Parameter:   id =  aV1, name = aV1, constant
par aV1=100.0

# Parameter:   id =  aV2, name = aV2, constant
par aV2=23000.0

# Parameter:   id =  bHD, name = bHD, constant
par bHD=4.0

# Parameter:   id =  aR, name = aR, constant
par aR=1.0

# Parameter:   id =  gammaHV, name = gammaHV, constant
par gammaHV=0.34

# Parameter:   id =  bHF, name = bHF, constant
par bHF=0.01

# Parameter:   id =  bIE, name = bIE, constant
par bIE=0.066

# Parameter:   id =  aI, name = aI, constant
par aI=1.5

# Parameter:   id =  bMD, name = bMD, constant
par bMD=1.0

# Parameter:   id =  bMV, name = bMV, constant
par bMV=0.0037

# Parameter:   id =  aM, name = aM, constant
par aM=1.0

# Parameter:   id =  bF, name = bF, constant
par bF=250000.0

# Parameter:   id =  cF, name = cF, constant
par cF=2000.0

# Parameter:   id =  bFH, name = bFH, constant
par bFH=17.0

# Parameter:   id =  aF, name = aF, constant
par aF=8.0

# Parameter:   id =  bEM, name = bEM, constant
par bEM=8.3

# Parameter:   id =  bEI, name = bEI, constant
par bEI=2.72

# Parameter:   id =  aE, name = aE, constant
par aE=0.4

# Parameter:   id =  bPM, name = bPM, constant
par bPM=11.5

# Parameter:   id =  aP, name = aP, constant
par aP=0.4

# Parameter:   id =  bA, name = bA, constant
par bA=0.043

# Parameter:   id =  gammaAV, name = gammaAV, constant
par gammaAV=146.25

# Parameter:   id =  aA, name = aA, constant
par aA=0.043

# Parameter:   id =  r, name = r, constant
par r=3.0E-5

# assignmentRule: variable = Dead_cells__D
Dead_cell=1-Healthy_E-Resistant-Infected_
aux Dead_cell=Dead_cell

# Reaction: id = Secretion_of_Virus__V__by_Infected_epithelial_cells__I, name = Secretion of Virus (V) by Infected epithelial cells (I)

Secretion=Respirato*Function_(gammaV, Infected_)

# Reaction: id = Neutralization_of_Virus__V__by_Antibody__A, name = Neutralization of Virus (V) by Antibody (A)

Neutraliz=Respirato*Functio_1(gammaVA, Antigenic, Antibodie, Viral_Loa)

# Reaction: id = Adsorption_of_Virus__V__by_Healthy_epithelial_cells__H, name = Adsorption of Virus (V) by Healthy epithelial cells (H)

Adsorptio=Respirato*Functio_2(gammaVH, Healthy_E, Viral_Loa)

# Reaction: id = Non_Specific_Removal_of_Virus__V___alphaV, name = Non-Specific Removal of Virus (V) [alphaV]

Non_Speci=Respirato*alphaV*Viral_Loa

# Reaction: id = Non_Specific_Removal_of_Virus__V___aV1_aV2, name = Non-Specific Removal of Virus (V) [aV1 aV2]

Non_Spe_1=Respirato*Functio_3(aV1, Viral_Loa, aV2)

# Reaction: id = Regeneration_of_Healthy_Epithelial_cells__H, name = Regeneration of Healthy Epithelial cells (H)

Regenerat=Respirato*Functio_4(bHD, Dead_cell, Healthy_E, Resistant)

# Reaction: id = R_virus_resistant_state_decay, name = R virus resistant state decay

R_virus_r=Respirato*aR*Resistant

# Reaction: id = Infection_of_Healthy_Epithelial_cells_by__V, name = Infection of Healthy Epithelial cells by (V)

Infection=Respirato*Functio_5(Viral_Loa, Healthy_E, gammaHV)

# Reaction: id = H_virus_resistant_state_induction, name = H virus resistant state induction

H_virus_r=Respirato*Functio_6(bHF, Interfero, Healthy_E)

# Reaction: id = Degradation_of_Infected_Epithelial_cells___E, name = Degradation of Infected Epithelial cells  [E]

Degradati=Respirato*Functio_7(bIE, Effector_, Infected_)

# Reaction: id = Degradation_of_Infected_Epithelial_cells___Cytopathicity_of_V, name = Degradation of Infected Epithelial cells  [Cytopathicity of V]

Degrada_1=Respirato*aI*Infected_

# Reaction: id = Stimulation_of_APC_cells__M__by_Dead_cells__D__and_Virus__V, name = Stimulation of APC cells (M) by Dead cells (D) and Virus (V)

Stimulati=Respirato*Functio_8(bMD, Dead_cell, bMV, Viral_Loa, APC_cells)

# Reaction: id = Stimulates_State_loss_of_APC_cells__M, name = Stimulates State loss of APC cells (M)

Stimulate=Respirato*aM*APC_cells

# Reaction: id = Synthesis_of_Interferons__F___M, name = Synthesis of Interferons (F) [M]

Synthesis=Respirato*Functio_9(bF, APC_cells)

# Reaction: id = Synthesis_of_Interferons__F___I, name = Synthesis of Interferons (F) [I]

Synthes_1=Respirato*Functi_10(cF, Infected_)

# Reaction: id = Binding_of_Healthy_epithelial_cells__H__and_Interferons__F, name = Binding of Healthy epithelial cells (H) and Interferons (F)

Binding_o=Respirato*Functi_11(bFH, Healthy_E, Interfero)

# Reaction: id = Degradation_of_Interferons__F, name = Degradation of Interferons (F)

Degrada_2=Respirato*aF*Interfero

# Reaction: id = Stimulation_of_Effector_cells__E___M, name = Stimulation of Effector cells (E) [M]

Stimula_1=Respirato*Functi_12(bEM, APC_cells, Effector_)

# Reaction: id = Degradation_of_Effector_cells__E___Mod_I, name = Degradation of Effector cells (E) [Mod=I]

Degrada_3=Respirato*Functi_13(bEI, Infected_, Effector_)

# Reaction: id = Degradation_of_Effector_cells__E, name = Degradation of Effector cells (E)
# Local Parameter:   id =  aE, name = aE
par aE_1=0.1


Degrada_4=Respirato*Functi_14(aE_1, Effector_)

# Reaction: id = Synthesis_of_Plasma_cells__P___Mod_M, name = Synthesis of Plasma cells (P) [Mod=M]

Synthes_2=Respirato*Functi_15(APC_cells, Plasma_ce, bPM)

# Reaction: id = Degradation_of_Plasma_cells__P, name = Degradation of Plasma cells (P)

Degrada_5=Respirato*Functi_16(aP, Plasma_ce)

# Reaction: id = Synthesis_of_Antibody__A___Mod_P, name = Synthesis of Antibody (A) [Mod=P]

Synthes_3=Respirato*Functi_17(bA, Plasma_ce)

# Reaction: id = Binding_of_Antibody__A__and_Virus__V, name = Binding of Antibody (A) and Virus (V)

Binding_1=Respirato*Functi_18(gammaAV, Antigenic, Antibodie, Viral_Loa)

# Reaction: id = Degradation_of_Antibody__A, name = Degradation of Antibody (A)

Degrada_6=Respirato*aA*Antibodie

# Reaction: id = Antigenic_Compatibility_variable, name = Antigenic Compatibility variable

Antigen_1=Respirato*Functi_19(r, Plasma_ce, Antigenic)

# Species:   id = Viral_Load__V, name = Viral Load (V), affected by kineticLaw
# Species is changed by 1 event(s)
par Viral_Loa=0.01
aux Viral_Loa=Viral_Loa
dViral_Loa/dt=(1/(Respirato))*(( 1.0 * Secretion) + (-1.0 * Neutraliz) + (-1.0 * Adsorptio) + (-1.0 * Non_Speci) + (-1.0 * Non_Spe_1))

# Species:   id = Healthy_Epithelial_cells__H, name = Healthy Epithelial cells (H), affected by kineticLaw

par Healthy_E=1.0
aux Healthy_E=Healthy_E
dHealthy_E/dt=(1/(Respirato))*(( 1.0 * Regenerat) + ( 1.0 * R_virus_r) + (-1.0 * Infection) + (-1.0 * H_virus_r))

# Species:   id = Infected_Epithelial_cells__I, name = Infected Epithelial cells (I), affected by kineticLaw

par Infected_=0.0
aux Infected_=Infected_
dInfected_/dt=(1/(Respirato))*(( 1.0 * Infection) + (-1.0 * Degradati) + (-1.0 * Degrada_1))

# Species:   id = APC_cells__M, name = APC cells (M), affected by kineticLaw

par APC_cells=0.0
aux APC_cells=APC_cells
dAPC_cells/dt=(1/(Respirato))*(( 1.0 * Stimulati) + (-1.0 * Stimulate))

# Species:   id = Interferons__F, name = Interferons (F), affected by kineticLaw

par Interfero=0.0
aux Interfero=Interfero
dInterfero/dt=(1/(Respirato))*(( 1.0 * Synthesis) + ( 1.0 * Synthes_1) + (-1.0 * Binding_o) + (-1.0 * Degrada_2))

# Species:   id = Resistant_cells__R, name = Resistant cells (R), affected by kineticLaw

par Resistant=0.0
aux Resistant=Resistant
dResistant/dt=(1/(Respirato))*((-1.0 * R_virus_r) + ( 1.0 * H_virus_r))

# Species:   id = Effector_cells__E, name = Effector cells (E), affected by kineticLaw

par Effector_=1.0
aux Effector_=Effector_
dEffector_/dt=(1/(Respirato))*(( 1.0 * Stimula_1) + (-1.0 * Degrada_3) + (-1.0 * Degrada_4))

# Species:   id = Plasma_cells__P, name = Plasma cells (P), affected by kineticLaw

par Plasma_ce=1.0
aux Plasma_ce=Plasma_ce
dPlasma_ce/dt=(1/(Respirato))*(( 1.0 * Synthes_2) + (-1.0 * Degrada_5))

# Species:   id = Antibodies__A, name = Antibodies (A), affected by kineticLaw

par Antibodie=1.0
aux Antibodie=Antibodie
dAntibodie/dt=(1/(Respirato))*(( 1.0 * Synthes_3) + (-1.0 * Binding_1) + (-1.0 * Degrada_6))

# Species:   id = Antigenic_compatibility__S, name = Antigenic compatibility (S), affected by kineticLaw

par Antigenic=0.1
aux Antigenic=Antigenic
dAntigenic/dt=(1/(Respirato))*(( 1.0 * Antigen_1))

# Species:   id = Dead_cells__D, name = Dead cells (D), involved in a rule 

# event : Event_to_keep_viral_load_non_negative
Event_to_=if (Viral_Loa < 0) then (1.5) else (0.2)
global 1 {Event_to_ - 1.1} {Viral_Load__V=0}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

