
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Talemi2014 - Arsenic toxicity and detoxification mechanisms in yeast
#
# is http://identifiers.org/biomodels.db/MODEL1403280000
# is http://identifiers.org/biomodels.db/BIOMD0000000547
# isDescribedBy http://identifiers.org/pubmed/24798644
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_3, name = 2p modified mass action (irrev)
function_(S,M,k,ko)=(k*ko*M*S)


# FunctionDefinition id = function_7, name = 2p modified constant flux (irrev)
functio_1(M,k,ko)=(k*ko*M)


# FunctionDefinition id = function_6, name = Mixed Hill
functio_2(Substrate,k,Mod1,Mod,k1,kb)=(Substrate*(k*Mod1+k1*Mod+kb))


# FunctionDefinition id = function_2, name = 2p 2sub
functio_3(k,ko,sub,sub2)=(k*ko*sub*sub2)


# FunctionDefinition id = function_1, name = corrected modified diffusion
functio_4(V,Mod,k,Ex,In)=((36*pi)^(1/3)*V^(2/3)*Mod*k*(Ex-In))


# FunctionDefinition id = function_8, name = corrected mass action
functio_5(V,k,Sub)=((36*pi)^(1/3)*V^(2/3)*k*Sub)


# FunctionDefinition id = function_4, name = corrected 2p modified mass action
functio_6(ko,Mod,k,V,Sub)=(ko*Mod*k*(36*pi)^(1/3)*V^(2/3)*Sub)


# FunctionDefinition id = function_5, name = Rate Law for v20
functio_7(V,Mod,Vmax,Sub,Km)=((36*pi)^(1/3)*V^(2/3)*Mod*Vmax*Sub/(Km+Sub))


# Compartment: id = compartment_2, name = Medium, constant
par compartme=5.0E-11

# Compartment: id = compartment_3, name = Cell, constant
par compart_1=5.0E-14

# Compartment: id = compartment_1, name = Vac, constant
par compart_2=2.0E-14

# Compartment: id = compartment_4, name = Cell-vac, constant
par compart_3=3.0E-14

# Parameter:   id =  parameter_5, name = AsIIIex_initial, constant
par parameter=100.0

# Parameter:   id =  parameter_6, name = AsIIIex_shock, constant
par paramet_1=1000.0

# Parameter:   id =  parameter_7, name = AsIIIex_t1, constant
par paramet_2=0.0

# Parameter:   id =  parameter_8, name = AsIIex_t2, constant
par paramet_3=3600.0

# Parameter:   id =  parameter_9, name = AsIIIex_tm, constant
par paramet_4=30.0

# Parameter:   id =  parameter_10, name = Asngpermil_tot, defined by a Rule

# Parameter:   id =  parameter_11, name = Asmolweight, constant
par paramet_6=74.9216

# Parameter:   id =  parameter_13, name = Asngpermil_in, defined by a Rule

# Parameter:   id =  parameter_14, name = Asngpermil_pro, defined by a Rule

# Parameter:   id =  parameter_15, name = Asngpermil_GS3, defined by a Rule

# Parameter:   id =  parameter_16, name = Asngpermil_vac, defined by a Rule

# Parameter:   id =  parameter_17, name = Hog1PPfit, defined by a Rule

# Parameter:   id =  parameter_18, name = Fps1Pfit, defined by a Rule

# Parameter:   id =  parameter_1, name = Fps1PPmax, constant
par parame_13=0.0299643

# Parameter:   id =  parameter_2, name = k18, defined by a Rule

# Parameter:   id =  parameter_3, name = k20, defined by a Rule

# Parameter:   id =  parameter_4, name = D_AsIIIin_initial , constant
par parame_16=13.1549

# Parameter:   id =  parameter_12, name = Hog1_SUM, defined by a Rule

# Parameter:   id =  parameter_19, name = GSH_wt, constant
par parame_18=1600.0

# Parameter:   id =  parameter_20, name = GSH_Acr3Hog1D, constant
par parame_19=5.99924

# Parameter:   id =  parameter_21, name = GSH_Acr3, constant
par parame_20=2.82037

# Parameter:   id =  parameter_22, name = GSH_damping_factor, defined by a Rule

# Parameter:   id =  parameter_23, name = ko-8, constant
par parame_22=1.0

# Parameter:   id =  parameter_24, name = Ycf1_increase, constant
par parame_23=20.0

# Parameter:   id =  parameter_25, name = v12_ko, constant
par parame_24=1.0

# Parameter:   id =  parameter_26, name = v4_k, constant
par parame_25=0.0757274

# Parameter:   id =  parameter_27, name = v5_k1, constant
par parame_26=161.334

# Parameter:   id =  parameter_28, name = v4_ko, constant
par parame_27=1.0

# Parameter:   id =  parameter_29, name = v6_k, constant
par parame_28=2.57134E-4

# Parameter:   id =  parameter_30, name = v6_k1, constant
par parame_29=1102.15

# Parameter:   id =  parameter_31, name = v6_kb, constant
par parame_30=0.0730991

# Parameter:   id =  parameter_32, name = v7_k1, constant
par parame_31=0.0719168

# Parameter:   id =  parameter_33, name = v1_k, constant
par parame_32=0.00215551

# Parameter:   id =  parameter_34, name = v14_Vmax, constant
par parame_33=1.0

# Parameter:   id =  parameter_35, name = v14_Km, constant
par parame_34=5.16159E-6

# Parameter:   id =  parameter_36, name = v10_k, constant
par parame_35=3.49703E-6

# Parameter:   id =  parameter_37, name = v11_k, constant
par parame_36=1.92773E-7

# Parameter:   id =  parameter_38, name = v10_ko, constant
par parame_37=1.0

# Parameter:   id =  parameter_39, name = v8_k, constant
par parame_38=0.202797

# Parameter:   id =  parameter_40, name = v9_k1, constant
par parame_39=6.1432

# Parameter:   id =  parameter_41, name = v2_k1, constant
par parame_40=0.00880734

# Parameter:   id =  parameter_42, name = v3_k1, constant
par parame_41=6.56918E-4

# Parameter:   id =  parameter_43, name = v13_k1, constant
par parame_42=9.01422E-13

# Parameter:   id =  Compartment_3, name = Initial for Cell-vac, constant
par Compart_4=3.0E-14

# Parameter:   id =  Metabolite_9, name = Initial for AsIIIin, constant
par Metabolit=13.1549

# Parameter:   id =  Metabolite_6, name = Initial for Acr3, constant
par Metabol_1=3.16038478651879E-4

# Parameter:   id =  Metabolite_5, name = Initial for Fps1, constant
par Metabol_2=0.00168827982445814

# Parameter:   id =  Metabolite_0, name = Initial for AsIIIex, constant
par Metabol_3=100.0

# Parameter:   id =  Compartment_2, name = Initial for Vac, constant
par Compart_5=2.0E-14

# Parameter:   id =  ModelValue_13, name = Initial for Fps1PPmax, constant
par ModelValu=0.0299643

# Parameter:   id =  ModelValue_22, name = Initial for ko-8, constant
par ModelVa_1=1.0

# Parameter:   id =  Asngpermil_ex, name = Asngpermil_ex, defined by a Rule

# assignmentRule: variable = parameter_10
paramet_5=(specie_10/compart_3+specie_11/compart_3+species_8/compart_3)*Compart_4*paramet_6*10^9+species_7/compart_2*Compart_5*paramet_6*10^9
aux paramet_5=paramet_5

# assignmentRule: variable = parameter_13
paramet_7=specie_10/compart_3*Compart_4*paramet_6*10^9
aux paramet_7=paramet_7

# assignmentRule: variable = parameter_14
paramet_8=specie_11/compart_3*Compart_4*paramet_6*10^9
aux paramet_8=paramet_8

# assignmentRule: variable = parameter_15
paramet_9=species_8/compart_3*Compart_4*paramet_6*10^9
aux paramet_9=paramet_9

# assignmentRule: variable = species_6
# the operator compartment_2 is not supported by xpp
# the formula is :  piecew2 *compartment_2
#Rule ignored : there are some unsupported functions !!

# assignmentRule: variable = parameter_16
parame_10=species_7/compart_2*Compart_5*paramet_6*10^9
aux parame_10=parame_10

# assignmentRule: variable = parameter_18
parame_12=100*species_2/compart_1/ModelValu
aux parame_12=parame_12

# assignmentRule: variable = parameter_2
parame_14=parame_42*Metabol_1/Metabolit
aux parame_14=parame_14

# assignmentRule: variable = parameter_3
parame_15= piecew3 
aux parame_15=parame_15

# assignmentRule: variable = parameter_12
parame_17=species_9/compart_1+species_1/compart_1
aux parame_17=parame_17

# assignmentRule: variable = parameter_17
parame_11=100*species_1/compart_1/parame_17
aux parame_11=parame_11

# assignmentRule: variable = parameter_22
parame_21= piecew4 
aux parame_21=parame_21

# assignmentRule: variable = Asngpermil_ex
Asngpermi=species_6/compartme*compart_1*paramet_6*10^9
aux Asngpermi=Asngpermi

# Reaction: id = reaction_1, name = v1

reaction_=functio_4(compart_1, species_3/compart_1, parame_32, species_6/compartme, specie_10/compart_3)

# Reaction: id = reaction_4, name = v4

reactio_1=compart_1*function_(species_9/compart_1, specie_10/compart_3, parame_25, parame_27)

# Reaction: id = reaction_5, name = v5

reactio_2=parame_26*species_1

# Reaction: id = reaction_6, name = v7

reactio_3=parame_31*species_2

# Reaction: id = reaction_7, name = v2

reactio_4=parame_40*specie_10

# Reaction: id = reaction_8, name = v3

reactio_5=parame_41*specie_11

# Reaction: id = reaction_9, name = v8

reactio_6=compart_3*functio_3(parame_38, parame_21, specie_10/compart_3, specie_12/compart_3)

# Reaction: id = reaction_10, name = v10

reactio_7=functio_6(parame_37, species_5/compart_1, parame_35, compart_2, species_8/compart_3)

# Reaction: id = reaction_13, name = v12

reactio_8=compart_1*functio_1(specie_10/compart_3, parame_14, parame_24)

# Reaction: id = reaction_14, name = v13

reactio_9=parame_42*species_4

# Reaction: id = reaction_15, name = v14

reacti_10=functio_7(compart_1, species_4/compart_1, parame_33, specie_10/compart_3, parame_34)

# Reaction: id = reaction_16, name = v6

reacti_11=compart_1*functio_2(species_3/compart_1, parame_28, specie_10/compart_3, species_1/compart_1, parame_29, parame_30)

# Reaction: id = reaction_17, name = v9

reacti_12=parame_39*species_8

# Reaction: id = reaction_18, name = v11

reacti_13=functio_5(compart_2, parame_36, species_7/compart_2)

# Species:   id = species_6, name = AsIIIex, involved in a rule 

# Species:   id = species_5, name = Ycf1
# Warning species is not changed by either rules or reactions

par species_5=6.5755E-16
aux species_5=species_5

# Species:   id = species_10, name = Hog1PP, affected by kineticLaw

init species_1=5.12422021489774E-17
dspecies_1/dt=( 1.0 * reactio_1) + (-1.0 * reactio_2)

# Species:   id = species_9, name = Hog1, affected by kineticLaw

init species_9=8.29875779785102E-15
dspecies_9/dt=(-1.0 * reactio_1) + ( 1.0 * reactio_2)

# Species:   id = species_15, name = Fps1P, affected by kineticLaw

init species_2=1.41558600877709E-15
dspecies_2/dt=(-1.0 * reactio_3) + ( 1.0 * reacti_11)

# Species:   id = species_11, name = Fps1, affected by kineticLaw

init species_3=8.44139912229068E-17
dspecies_3/dt=( 1.0 * reactio_3) + (-1.0 * reacti_11)

# Species:   id = species_14, name = Acr3, affected by kineticLaw

init species_4=1.5801923932594E-17
dspecies_4/dt=( 1.0 * reactio_8) + (-1.0 * reactio_9)

# Species:   id = species_4, name = vAsGS3, affected by kineticLaw

init species_7=3.31525035810391E-12
dspecies_7/dt=( 1.0 * reactio_7) + (-1.0 * reacti_13)

# Species:   id = species_3, name = AsGS3, affected by kineticLaw

par species_8=2.08447005232452E-11
aux species_8=species_8
dspecies_8/dt=( 1.0 * reactio_6) + (-1.0 * reactio_7) + (-1.0 * reacti_12) + ( 1.0 * reacti_13)

# Species:   id = species_1, name = AsIIIin, affected by kineticLaw

par specie_10=3.94647E-13
aux specie_10=specie_10
dspecie_10/dt=( 1.0 * reaction_) + (-1.0 * reactio_4) + ( 1.0 * reactio_5) + (-1.0 * reactio_6) + (-1.0 * reacti_10) + ( 1.0 * reacti_12)

# Species:   id = species_2, name = AsIIIProt, affected by kineticLaw

par specie_11=5.29105658389632E-12
aux specie_11=specie_11
dspecie_11/dt=( 1.0 * reactio_4) + (-1.0 * reactio_5)

# Species:   id = species_7, name = GSH, affected by kineticLaw

par specie_12=4.8E-11
aux specie_12=specie_12
dspecie_12/dt=(-1.0 * reactio_6) + ( 1.0 * reacti_12)


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (t  >  paramet_3) then ((parameter+paramet_1)*exp((paramet_3-t)/paramet_4)) else (parameter+paramet_1*(1-exp((paramet_2-t)/paramet_4)))

piecew2=if (t  <  paramet_2) then (parameter) else ( piecew1 )

piecew3=if (parame_24  >  0) then (parame_32*Metabol_2*(Metabol_3-Metabolit)/(Metabol_1*Metabolit)) else (0)

piecew4=if (ModelVa_1  >  0) then (1) else (0.2175)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

