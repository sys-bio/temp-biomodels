
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Al-Husari2013 - pH and lactate in tumor
#
# isDescribedBy http://identifiers.org/pubmed/23340437
# is http://identifiers.org/biomodels.db/MODEL1909030001
# is http://identifiers.org/biomodels.db/BIOMD0000000805
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = removal, name = removal
removal(pn,v,e)=(pn*v*e)


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = H_antiport, name = H antiport
H_antipor(f1,Hi,He)=(f1*(Hi-He)*piecewise(1,Hi > He,0))


# FunctionDefinition id = mct, name = mct
mct(k3,f,Hi,Li,He,Le)=(k3*f*(Hi*Li-He*Le))


# FunctionDefinition id = glycolysis_H_0, name = glycolysis-H
glycolysi(fg,Hi,v,vv,p)=(p*2*fg/(Hi+1)*piecewise(1,v > vv,0))


# FunctionDefinition id = glycolysis_L_0, name = glycolysis-L
glycoly_1(fg,Hi,v,vv)=(2*fg/(Hi+1)*piecewise(1,v > vv,0))


# Compartment: id = tme, name = tme, constant
par tme=1.0

# Parameter:   id =  lh, name = lh, constant
par lh=0.017174

# Parameter:   id =  f1, name = f1, constant
par f1=17174.0

# Parameter:   id =  k3, name = k3, constant
par k3=5.4316

# Parameter:   id =  d1, name = d1, constant
par d1=7999.6

# Parameter:   id =  p1, name = p1, constant
par p1=20095.0

# Parameter:   id =  p2, name = p2, constant
par p2=0.2857

# Parameter:   id =  fg, name = fg, constant
par fg=0.2823

# Parameter:   id =  p, name = p, constant
par p=14000.0

# Parameter:   id =  vv, name = vv, constant
par vv=0.5

# Parameter:   id =  pHe, name = pHe, defined by a Rule

# Parameter:   id =  pHi, name = pHi, defined by a Rule

# Parameter:   id =  v, name = v, constant
par v=1.49968483550237

# assignmentRule: variable = pHe
pHe=-log(10, He)+7
aux pHe=pHe

# assignmentRule: variable = pHi
pHi=-log(10, Hi)+7
aux pHi=pHi

# Reaction: id = H_leak, name = H leak

H_leak=tme*(lh*He-lh*Hi)

# Reaction: id = H_antiporter, name = H antiporter

H_antip_1=tme*H_antipor(f1, Hi, He)

# Reaction: id = MCT, name = MCT

MCT_1=tme*mct(k3, p, Hi, Li, He, Le)

# Reaction: id = glycolysis_H, name = glycolysis-H

glycoly_2=tme*glycolysi(fg, Hi, v, vv, p)

# Reaction: id = H__source, name = H+ source

H__source=tme*Constant_(d1)

# Reaction: id = removal_of_H, name = removal of H+

removal_o=tme*removal(p1, v, He)

# Reaction: id = lactate_source, name = lactate source
# Local Parameter:   id =  v, name = v
par v_1=1.0


lactate_s=tme*Constant_(v_1)

# Reaction: id = lactate_degradation, name = lactate degradation
# Local Parameter:   id =  k1, name = k1
par k1=1.0


lactate_d=tme*k1*Li

# Reaction: id = removal_of_lactate, name = removal of lactate

removal_1=tme*removal(p2, v, Le)

# Reaction: id = glycolysis_L, name = glycolysis-L

glycoly_3=tme*glycoly_1(fg, Hi, v, vv)

# Species:   id = Hi, name = Hi, affected by kineticLaw

init Hi=0.501187233627272
dHi/dt=(1/(tme))*(( 1.0 * H_leak) + (-1.0 * H_antip_1) + (-1.0 * MCT_1) + ( 1.0 * glycoly_2) + ( 1.0 * H__source))

# Species:   id = He, name = He, affected by kineticLaw

init He=1.0
dHe/dt=(1/(tme))*((-1.0 * H_leak) + ( 1.0 * H_antip_1) + ( 1.0 * MCT_1) + (-1.0 * removal_o))

# Species:   id = Li, name = Li, affected by kineticLaw

init Li=0.00125
dLi/dt=(1/(tme))*((-1.0 * MCT_1) + ( 1.0 * lactate_s) + (-1.0 * lactate_d) + ( 1.0 * glycoly_3))

# Species:   id = Le, name = Le, affected by kineticLaw

init Le=0.00125
dLe/dt=(1/(tme))*(( 1.0 * MCT_1) + (-1.0 * removal_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

