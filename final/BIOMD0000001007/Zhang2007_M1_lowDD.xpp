
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Zhang2007 - Mechanism of DNA damage response (Model1)
#
# unknownQualifier http://identifiers.org/mamo/MAMO_0000046
# isDescribedBy http://identifiers.org/pubmed/17245126
# is http://identifiers.org/biomodels.db/MODEL2105260001
# is http://identifiers.org/biomodels.db/BIOMD0000001007
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = MAX
MAX(a,b)=(piecewise(a,a >= b,b))


# FunctionDefinition id = p53_production_0, name = p53 production
p53_produ(Ks53,MDM2cyt,n,Js53,Ks54)=(Ks53+Ks54*MDM2cyt^n/(Js53^n+MDM2cyt^n))


# FunctionDefinition id = mdm2_production, name = mdm2 production
mdm2_prod(ks2,p53,m,Js2,ks21)=(ks2+ks21*p53^m/(Js2^m+p53^m))


# Compartment: id = cyt, name = cyt, constant
par cyt=1.0

# Compartment: id = nuc, name = nuc, constant
par nuc=1.0

# Parameter:   id =  ks53, name = ks53', constant
par ks53=0.6

# Parameter:   id =  Js53, name = Js53, constant
par Js53=0.45

# Parameter:   id =  kd53, name = kd53', constant
par kd53=0.27

# Parameter:   id =  n, name = n, constant
par n=4.0

# Parameter:   id =  kin, name = kin, constant
par kin=0.41

# Parameter:   id =  kout, name = kout, constant
par kout=0.05

# Parameter:   id =  kd2, name = kd2', constant
par kd2=0.05

# Parameter:   id =  kd2_0, name = kd2, defined by a Rule

# Parameter:   id =  ks2, name = ks2', constant
par ks2=0.15

# Parameter:   id =  Js2, name = Js2, constant
par Js2=0.92

# Parameter:   id =  m, name = m, constant
par m=4.0

# Parameter:   id =  kd53_0, name = kd53, defined by a Rule

# Parameter:   id =  Q, name = Q, constant
par Q=0.83

# Parameter:   id =  J1, name = J1, constant
par J1=0.1

# Parameter:   id =  J2, name = J2, constant
par J2=0.1

# Parameter:   id =  krepair, name = krepair, constant
par krepair=0.08

# Parameter:   id =  u, name = u, defined by a Rule

# Parameter:   id =  r, name = r, defined by a Rule

# Parameter:   id =  v, name = v, defined by a Rule

# Parameter:   id =  q, name = q, defined by a Rule

# Parameter:   id =  G_u_v_q_r, name = G(u,v,q,r), defined by a Rule

# Parameter:   id =  ks53_, name = ks53'', constant
par ks53_=2.56

# Parameter:   id =  kd53_, name = kd53'', constant
par kd53_=8.25

# Parameter:   id =  ks2_, name = ks2'', constant
par ks2_=4.23

# Parameter:   id =  kd2_, name = kd2'', constant
par kd2_=0.79

# Parameter:   id =  dd, name = dd, constant
par dd=2.0

# Parameter:   id =  xyz, name = xyz, defined by a Rule

# Parameter:   id =  Tdam, name = Tdam, constant
par Tdam=50.0

# Parameter:   id =  Dam0, name = Dam0, constant
par Dam0=2.0

# Parameter:   id =  heav_x, name = heav(x), defined by a Rule

# Parameter:   id =  x, name = x, defined by a Rule

# Parameter:   id =  ModelValue_27, name = Initial for Tdam, constant
par ModelValu=50.0

# assignmentRule: variable = u
u=MDM2nuc
aux u=u

# assignmentRule: variable = r
r=J2/p53
aux r=r

# assignmentRule: variable = v
v=Q
aux v=v

# assignmentRule: variable = q
q_1=J1/p53
aux q_1=q_1

# assignmentRule: variable = G_u_v_q_r
G_u_v_q_r=2*u*r/(v-u+v*q_1+u*r+((v-u+v*q_1+u*r)^2-4*u*r*(v-u))^0.5)
aux G_u_v_q_r=G_u_v_q_r

# assignmentRule: variable = kd53_0
kd53_0=kd53+kd53_*G_u_v_q_r
aux kd53_0=kd53_0

# assignmentRule: variable = xyz
xyz=MAX(0, Dam0-krepair*(t-Tdam))
aux xyz=xyz

# assignmentRule: variable = x
x=t-ModelValu
aux x=x

# assignmentRule: variable = heav_x
heav_x= piecew2 
aux heav_x=heav_x

# assignmentRule: variable = DNAdamage
DNAdamage=heav_x*xyz
aux DNAdamage=DNAdamage

# assignmentRule: variable = kd2_0
kd2_0=kd2*(1+DNAdamage)
aux kd2_0=kd2_0

# Reaction: id = p53_production, name = p53 production

p53_pro_1=p53_produ(ks53, MDM2cyt, n, Js53, ks53_)

# Reaction: id = p53_degradation, name = p53 degradation

p53_degra=nuc*kd53_0*p53

# Reaction: id = MDM2cyt_production, name = MDM2cyt production

MDM2cyt_p=mdm2_prod(ks2, p53, m, Js2, ks2_)

# Reaction: id = MDM2cyt_translocation, name = MDM2cyt translocation

MDM2cyt_t=kin*MDM2cyt-kout*MDM2nuc

# Reaction: id = MDM2cyt_degradation, name = MDM2cyt degradation

MDM2cyt_d=cyt*kd2_*MDM2cyt

# Reaction: id = MDM2nuc_degradation, name = MDM2nuc degradation

MDM2nuc_d=nuc*kd2_0*MDM2nuc

# Species:   id = p53, name = p53, affected by kineticLaw

init p53=0.186
dp53/dt=(1/(nuc))*(( 1.0 * p53_pro_1) + (-1.0 * p53_degra))

# Species:   id = MDM2cyt, name = MDM2cyt, affected by kineticLaw

init MDM2cyt=0.158
dMDM2cyt/dt=(1/(cyt))*(( 1.0 * MDM2cyt_p) + (-1.0 * MDM2cyt_t) + (-1.0 * MDM2cyt_d))

# Species:   id = MDM2nuc, name = MDM2nuc, affected by kineticLaw

init MDM2nuc=0.647000000000002
dMDM2nuc/dt=(1/(nuc))*(( 1.0 * MDM2cyt_t) + (-1.0 * MDM2nuc_d))

# Species:   id = DNAdamage, name = DNAdamage, involved in a rule 


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (x  >  0) then (1) else (0)

piecew2=if (x  <  0) then (0) else ( piecew1 )


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

