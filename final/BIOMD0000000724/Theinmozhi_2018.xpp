
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Theinmozhi2018 - Mechanism of PD1 inhibiting TCR signaling in Tumor immune regulation
#
# is http://identifiers.org/biomodels.db/MODEL1812040008
# is http://identifiers.org/biomodels.db/BIOMD0000000724
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = SMM_Enzyme_based, name = SMM Enzyme based
SMM_Enzym(kcat,Enzyme,Substrate,Km)=(kcat*Enzyme*Substrate/(Km+Substrate))


# FunctionDefinition id = Equation_for_PD1_activation, name = Equation for PD1 activation
Equation_(kcat,Enzyme,Substrate,Km,X1,X2,Y1,k)=(kcat*Enzyme*Substrate/(Km+Substrate)*(1-(X1+X2)/(Y1*k)))


# FunctionDefinition id = Equation_for_Enzymatic_Dephosphorylation, name = Equation for Enzymatic Dephosphorylation
Equatio_1(ka,Enzyme,Substrate)=(ka*Enzyme*Substrate)


# Compartment: id = Cell, name = Cell, constant
par Cell=1.0

# Parameter:   id =  Kdpa_yiya, name = Kdpa,yiya, defined by a Rule

# Parameter:   id =  Kdpi_yi, name = Kdpi,yi, defined by a Rule

# Parameter:   id =  Kdpi_yiya, name = Kdpi,yiya, defined by a Rule

# Parameter:   id =  Kdpa_ya, name = Kdpa,ya, defined by a Rule

# Parameter:   id =  Kdpa_pi, name = Kdpa,pi, defined by a Rule

# Parameter:   id =  Kpi_i, name = Kpi,i, constant
par Kpi_i=6.0E-7

# Parameter:   id =  Kpi_ya, name = Kpi,ya, constant
par Kpi_ya=6.0E-5

# Parameter:   id =  Kpa_i, name = Kpa,i, constant
par Kpa_i=1.0E-6

# Parameter:   id =  Kpa_yi, name = Kpa,yi, constant
par Kpa_yi=7.5E-4

# Parameter:   id =  k, name = k, constant
par k=41.0

# Parameter:   id =  Kp_pd1, name = Kp,pd1, constant
par Kp_pd1=7.5

# Parameter:   id =  KMp_pd1, name = KMp,pd1, constant
par KMp_pd1=1000.0

# Parameter:   id =  Ka_shp, name = Ka,shp, constant
par Ka_shp=0.0065

# Parameter:   id =  Kd1_shp, name = Kd1,shp, constant
par Kd1_shp=10.0

# Parameter:   id =  Kd2_shp, name = Kd2,shp, constant
par Kd2_shp=1.0

# Parameter:   id =  Kdp_cp2, name = Kdp,cp2, constant
par Kdp_cp2=5.0E-8

# Parameter:   id =  Kp_cd28, name = Kp,cd28, constant
par Kp_cd28=1.0

# Parameter:   id =  KMp_cd28, name = KMp,cd28, constant
par KMp_cd28=1000.0

# Parameter:   id =  Kdp_cd28, name = Kdp,cd28, constant
par Kdp_cd28=5.0

# Parameter:   id =  KMdp_cd28, name = KMdp,cd28, constant
par KMdp_cd28=500.0

# Parameter:   id =  Ka_pi3k, name = Ka,pi3k, constant
par Ka_pi3k=1.4E-6

# Parameter:   id =  Kd_pi3k, name = Kd,pi3k, constant
par Kd_pi3k=9.0E-4

# Parameter:   id =  Kp_cd3, name = Kp,cd3, constant
par Kp_cd3=3.29

# Parameter:   id =  KMp_cd3, name = KMp,cd3, constant
par KMp_cd3=80.0

# Parameter:   id =  Kdp_cd3, name = Kdp,cd3, constant
par Kdp_cd3=5.0

# Parameter:   id =  KMdp_cd3, name = KMdp,cd3, constant
par KMdp_cd3=150.0

# Parameter:   id =  Ka_zap, name = Ka,zap, constant
par Ka_zap=7.0E-5

# Parameter:   id =  Kd_zap, name = Kd,zap, constant
par Kd_zap=0.001

# Parameter:   id =  Kp1_zap, name = Kp1,zap, constant
par Kp1_zap=2.0E-6

# Parameter:   id =  Kp2_zap, name = Kp2,zap, constant
par Kp2_zap=3.0E-5

# Parameter:   id =  Kp_lat, name = Kp,lat, constant
par Kp_lat=0.001

# Parameter:   id =  Ka_gads, name = Ka,gads, constant
par Ka_gads=5.0E-4

# Parameter:   id =  Kd_gads, name = Kd,gads, constant
par Kd_gads=1.5

# Parameter:   id =  Ka_slp, name = Ka,slp, constant
par Ka_slp=0.015

# Parameter:   id =  Kd_slp, name = Kd,slp, constant
par Kd_slp=0.12

# Parameter:   id =  Kp_slp, name = Kp,slp, constant
par Kp_slp=0.003

# Parameter:   id =  perc_SHP2_bound, name = perc_SHP2_bound, defined by a Rule

# Parameter:   id =  CD3z_phosphorylated, name = CD3z_phosphorylated, defined by a Rule

# Parameter:   id =  CD28_phosphorylated, name = CD28_phosphorylated, defined by a Rule

# Parameter:   id =  perc_SHP2_free, name = perc_SHP2_free, defined by a Rule

# Parameter:   id =  perc_PI3K_free, name = perc_PI3K_free, defined by a Rule

# Parameter:   id =  perc_ZAP70_free, name = perc_ZAP70_free, defined by a Rule

# Parameter:   id =  ZAP70_phos_Y315, name = ZAP70_phos_Y315, defined by a Rule

# Parameter:   id =  ZAP70_phos_Y93, name = ZAP70_phos_Y93, defined by a Rule

# Parameter:   id =  LCK_phos_Y505, name = LCK_phos_Y505, defined by a Rule

# Parameter:   id =  LCK_phos_Y394, name = LCK_phos_Y394, defined by a Rule

# Parameter:   id =  LAT_phosphorylated, name = LAT_phosphorylated, defined by a Rule

# Parameter:   id =  perc_LCK_active, name = perc_LCK_active, defined by a Rule

# Parameter:   id =  perc_LCK_inactive, name = perc_LCK_inactive, defined by a Rule

# Parameter:   id =  LCK_switch, name = LCK_switch, constant
par LCK_switc=0.0

# Parameter:   id =  ModelValue_0, name = Initial for LCK_switch, constant
par ModelValu=0.0

# assignmentRule: variable = SLP76t
SLP76t=SLP76+SLP76a+SLP76i
aux SLP76t=SLP76t

# assignmentRule: variable = Kdpa_yiya
Kdpa_yiya=2.4E-5*ModelValu
aux Kdpa_yiya=Kdpa_yiya

# assignmentRule: variable = ZAP70t
ZAP70t=ZAP70+ZAP70i+ZAP70a1+ZAP70a2
aux ZAP70t=ZAP70t

# assignmentRule: variable = CD28t
CD28t=CD28i+CD28a+PI3Kb
aux CD28t=CD28t

# assignmentRule: variable = Kdpi_yiya
Kdpi_yiya=1.2E-5*ModelValu
aux Kdpi_yiya=Kdpi_yiya

# assignmentRule: variable = LCKactive
LCKactive=LCKya+LCKyiya
aux LCKactive=LCKactive

# assignmentRule: variable = LATt
LATt=LATi+LATa+GADSa+SLP76i+SLP76a
aux LATt=LATt

# assignmentRule: variable = LCKinactive
LCKinacti=LCKi+LCKyi+LCKpi
aux LCKinacti=LCKinacti

# assignmentRule: variable = Kdpa_pi
Kdpa_pi=1.2E-7*ModelValu
aux Kdpa_pi=Kdpa_pi

# assignmentRule: variable = PI3Kt
PI3Kt=PI3K+PI3Kb
aux PI3Kt=PI3Kt

# assignmentRule: variable = CD3t
CD3t=CD3i+CD3a+ZAP70i+ZAP70a1+ZAP70a2
aux CD3t=CD3t

# assignmentRule: variable = Kdpi_yi
Kdpi_yi=2.4E-5*ModelValu
aux Kdpi_yi=Kdpi_yi

# assignmentRule: variable = perc_LCK_inactive
perc_LC_1=LCKinacti/(LCKi+LCKpi+LCKya+LCKyi+LCKyiya)*100
aux perc_LC_1=perc_LC_1

# assignmentRule: variable = perc_LCK_active
perc_LCK_=LCKactive/(LCKi+LCKpi+LCKya+LCKyi+LCKyiya)*100
aux perc_LCK_=perc_LCK_

# assignmentRule: variable = LAT_phosphorylated
LAT_phosp=LATa+GADSa+SLP76i+SLP76a
aux LAT_phosp=LAT_phosp

# assignmentRule: variable = perc_ZAP70_free
perc_ZAP7=ZAP70/(ZAP70+ZAP70i+ZAP70a1+ZAP70a2)*100
aux perc_ZAP7=perc_ZAP7

# assignmentRule: variable = LCK_phos_Y394
LCK_pho_1=LCKya+LCKyiya+LCKpi
aux LCK_pho_1=LCK_pho_1

# assignmentRule: variable = LCK_phos_Y505
LCK_phos_=LCKyi+LCKyiya+LCKpi
aux LCK_phos_=LCK_phos_

# assignmentRule: variable = ZAP70_phos_Y93
ZAP70_p_1=ZAP70a2
aux ZAP70_p_1=ZAP70_p_1

# assignmentRule: variable = CD28_phosphorylated
CD28_phos=PI3Kb+CD28a
aux CD28_phos=CD28_phos

# assignmentRule: variable = ZAP70_phos_Y315
ZAP70_pho=ZAP70a2+ZAP70a2
aux ZAP70_pho=ZAP70_pho

# assignmentRule: variable = LCKt
LCKt=LCKi+LCKya+LCKyi+LCKyiya+LCKpi
aux LCKt=LCKt

# assignmentRule: variable = perc_PI3K_free
perc_PI3K=PI3K/(PI3Kb+PI3K)*100
aux perc_PI3K=perc_PI3K

# assignmentRule: variable = CD3z_phosphorylated
CD3z_phos=CD3a+ZAP70i+ZAP70a1+ZAP70a2
aux CD3z_phos=CD3z_phos

# assignmentRule: variable = GADSt
GADSt=GADS+GADSa+SLP76i+SLP76a
aux GADSt=GADSt

# assignmentRule: variable = Kdpa_ya
Kdpa_ya=6E-6*ModelValu
aux Kdpa_ya=Kdpa_ya

# assignmentRule: variable = CPactive
CPactive=CP1+CP2
aux CPactive=CPactive

# assignmentRule: variable = perc_SHP2_free
perc_SH_1=SHP2/(SHP2+CPactive)*100
aux perc_SH_1=perc_SH_1

# assignmentRule: variable = perc_SHP2_bound
perc_SHP2=CPactive/(SHP2+CPactive)*100
aux perc_SHP2=perc_SHP2

# Reaction: id = LCK_P_LCKyi_inh, name = LCK_P_LCKyi_inh

LCK_P_LCK=Cell*Kpi_i*LCKi

# Reaction: id = LCK_P_LCKya_act, name = LCK_P_LCKya_act

LCK_P_L_1=Cell*Kpa_i*LCKi

# Reaction: id = LCKya_P_LCKyiya_act, name = LCKya_P_LCKyiya_act

LCKya_P_L=Cell*Kpi_ya*LCKya

# Reaction: id = LCKyi_P_LCKpi_inh, name = LCKyi_P_LCKpi_inh

LCKyi_P_L=Cell*Kpa_yi*LCKyi

# Reaction: id = LCKyiya_DP_LCKyi, name = LCKyiya_DP_LCKyi

LCKyiya_D=Cell*Equatio_1(Kdpi_yiya, CPactive, LCKyiya)

# Reaction: id = LCKya_DP_LCKi, name = LCKya_DP_LCKi

LCKya_DP_=Cell*Equatio_1(Kdpa_ya, CPactive, LCKya)

# Reaction: id = LCKyi_DP_LCKi, name = LCKyi_DP_LCKi

LCKyi_DP_=Cell*Equatio_1(Kdpi_yi, CPactive, LCKyi)

# Reaction: id = LCKyiya_DP_LCKya, name = LCKyiya_DP_LCKya

LCKyiya_1=Cell*Equatio_1(Kdpi_yiya, CPactive, LCKyiya)

# Reaction: id = LCKpi_DP_LCKyi, name = LCKpi_DP_LCKyi

LCKpi_DP_=Cell*Equatio_1(Kdpa_pi, CPactive, LCKpi)

# Reaction: id = PD1_P_PD1p1_act, name = PD1_P_PD1p1_act

PD1_P_PD1=Cell*Equation_(Kp_pd1, LCKactive, PD1, KMp_pd1, PD1p1, PD1p2, LCKt, k)

# Reaction: id = PD1p1_P_PD1p2_act, name = PD1p1_P_PD1p2_act

PD1p1_P_P=Cell*SMM_Enzym(Kp_pd1, LCKactive, PD1p1, KMp_pd1)

# Reaction: id = PD1p1_Bd_SHP2, name = PD1p1_Bd_SHP2

PD1p1_Bd_=Cell*(Ka_shp*PD1p1*SHP2-Kd1_shp*CP1)

# Reaction: id = PD1p2_Bd_SHP2, name = PD1p2_Bd_SHP2

PD1p2_Bd_=Cell*(Ka_shp*PD1p2*SHP2-Kd1_shp*CP2)

# Reaction: id = CP2_Diss_SHP2_PD1p1, name = CP2_Diss_SHP2_PD1p1

CP2_Diss_=Cell*Kd2_shp*CP2

# Reaction: id = CP2_DP_CP1, name = CP2_DP_CP1

CP2_DP_CP=Cell*Kdp_cp2*CP2

# Reaction: id = CP1_Diss_PD1_SHP2, name = CP1_Diss_PD1_SHP2

CP1_Diss_=Cell*Kd2_shp*CP1

# Reaction: id = CD28i_P_CD28a, name = CD28i_P_CD28a

CD28i_P_C=Cell*SMM_Enzym(Kp_cd28, LCKactive, CD28i, KMp_cd28)

# Reaction: id = CD28a_DP_CD28i, name = CD28a_DP_CD28i

CD28a_DP_=Cell*SMM_Enzym(Kdp_cd28, CPactive, CD28a, KMdp_cd28)

# Reaction: id = CD28a_Bd_PI3K, name = CD28a_Bd_PI3K

CD28a_Bd_=Cell*(Ka_pi3k*CD28a*PI3K-Kd_pi3k*PI3Kb)

# Reaction: id = CD3i_P_CD3a, name = CD3i_P_CD3a

CD3i_P_CD=Cell*SMM_Enzym(Kp_cd3, LCKactive, CD3i, KMp_cd3)

# Reaction: id = CD3a_DP_CD3i, name = CD3a_DP_CD3i

CD3a_DP_C=Cell*SMM_Enzym(Kdp_cd3, CPactive, CD3a, KMdp_cd3)

# Reaction: id = CD3a_Bd_ZAP70, name = CD3a_Bd_ZAP70

CD3a_Bd_Z=Cell*(Ka_zap*CD3a*ZAP70-Kd_zap*ZAP70i)

# Reaction: id = ZAP70i_P_ZAP70a1, name = ZAP70i_P_ZAP70a1

ZAP70i_P_=Cell*Equatio_1(Kp1_zap, LCKactive, ZAP70i)

# Reaction: id = ZAP70a1_P_ZAP70a2, name = ZAP70a1_P_ZAP70a2

ZAP70a1_P=Cell*Equatio_1(Kp2_zap, LCKactive, ZAP70a1)

# Reaction: id = LATi_P_LATa, name = LATi_P_LATa

LATi_P_LA=Cell*Equatio_1(Kp_lat, ZAP70a2, LATi)

# Reaction: id = LATa_Bd_GADS, name = LATa_Bd_GADS

LATa_Bd_G=Cell*(Ka_gads*LATa*GADS-Kd_gads*GADSa)

# Reaction: id = GADSa_Bd_SLP76, name = GADSa_Bd_SLP76

GADSa_Bd_=Cell*(Ka_slp*GADSa*SLP76-Kd_slp*SLP76i)

# Reaction: id = SLP76i_P_SLC76a, name = SLP76i_P_SLC76a

SLP76i_P_=Cell*Equatio_1(Kp_slp, ZAP70a2, SLP76i)

# Species:   id = LCKi, name = LCKi, affected by kineticLaw

init LCKi=25.0
dLCKi/dt=(1/(Cell))*((-1.0 * LCK_P_LCK) + (-1.0 * LCK_P_L_1) + ( 1.0 * LCKya_DP_) + ( 1.0 * LCKyi_DP_))

# Species:   id = LCKyi, name = LCKyi, affected by kineticLaw

init LCKyi=25.0
dLCKyi/dt=(1/(Cell))*(( 1.0 * LCK_P_LCK) + (-1.0 * LCKyi_P_L) + ( 1.0 * LCKyiya_D) + (-1.0 * LCKyi_DP_) + ( 1.0 * LCKpi_DP_))

# Species:   id = LCKya, name = LCKya, affected by kineticLaw

init LCKya=25.0
dLCKya/dt=(1/(Cell))*(( 1.0 * LCK_P_L_1) + (-1.0 * LCKya_P_L) + (-1.0 * LCKya_DP_) + ( 1.0 * LCKyiya_1))

# Species:   id = LCKyiya, name = LCKyiya, affected by kineticLaw

init LCKyiya=25.0
dLCKyiya/dt=(1/(Cell))*(( 1.0 * LCKya_P_L) + (-1.0 * LCKyiya_D) + (-1.0 * LCKyiya_1))

# Species:   id = LCKpi, name = LCKpi, affected by kineticLaw

init LCKpi=0.0
dLCKpi/dt=(1/(Cell))*(( 1.0 * LCKyi_P_L) + (-1.0 * LCKpi_DP_))

# Species:   id = LCKt, name = LCKt, involved in a rule 

# Species:   id = LCKactive, name = LCKactive, involved in a rule 

# Species:   id = PD1, name = PD1, affected by kineticLaw

init PD1=500.0
dPD1/dt=(1/(Cell))*((-1.0 * PD1_P_PD1) + ( 1.0 * CP1_Diss_))

# Species:   id = PD1p1, name = PD1p1, affected by kineticLaw

init PD1p1=0.0
dPD1p1/dt=(1/(Cell))*(( 1.0 * PD1_P_PD1) + (-1.0 * PD1p1_P_P) + (-1.0 * PD1p1_Bd_) + ( 1.0 * CP2_Diss_))

# Species:   id = PD1p2, name = PD1p2, affected by kineticLaw

init PD1p2=0.0
dPD1p2/dt=(1/(Cell))*(( 1.0 * PD1p1_P_P) + (-1.0 * PD1p2_Bd_))

# Species:   id = CP1, name = CP1, affected by kineticLaw

init CP1=0.0
dCP1/dt=(1/(Cell))*(( 1.0 * PD1p1_Bd_) + ( 1.0 * CP2_DP_CP) + (-1.0 * CP1_Diss_))

# Species:   id = SHP2, name = SHP2, affected by kineticLaw

init SHP2=300.0
dSHP2/dt=(1/(Cell))*((-1.0 * PD1p1_Bd_) + (-1.0 * PD1p2_Bd_) + ( 1.0 * CP2_Diss_) + ( 1.0 * CP1_Diss_))

# Species:   id = CP2, name = CP2, affected by kineticLaw

init CP2=0.0
dCP2/dt=(1/(Cell))*(( 1.0 * PD1p2_Bd_) + (-1.0 * CP2_Diss_) + (-1.0 * CP2_DP_CP))

# Species:   id = CPactive, name = CPactive, involved in a rule 

# Species:   id = CD28a, name = CD28a, affected by kineticLaw

init CD28a=0.0
dCD28a/dt=(1/(Cell))*(( 1.0 * CD28i_P_C) + (-1.0 * CD28a_DP_) + (-1.0 * CD28a_Bd_))

# Species:   id = CD28i, name = CD28i, affected by kineticLaw

init CD28i=250.0
dCD28i/dt=(1/(Cell))*((-1.0 * CD28i_P_C) + ( 1.0 * CD28a_DP_))

# Species:   id = PI3K, name = PI3K, affected by kineticLaw

init PI3K=500.0
dPI3K/dt=(1/(Cell))*((-1.0 * CD28a_Bd_))

# Species:   id = PI3Kb, name = PI3Kb, affected by kineticLaw

init PI3Kb=0.0
dPI3Kb/dt=(1/(Cell))*(( 1.0 * CD28a_Bd_))

# Species:   id = CD28t, name = CD28t, involved in a rule 

# Species:   id = CD3a, name = CD3a, affected by kineticLaw

init CD3a=0.0
dCD3a/dt=(1/(Cell))*(( 1.0 * CD3i_P_CD) + (-1.0 * CD3a_DP_C) + (-1.0 * CD3a_Bd_Z))

# Species:   id = CD3i, name = CD3i, affected by kineticLaw

init CD3i=50.0
dCD3i/dt=(1/(Cell))*((-1.0 * CD3i_P_CD) + ( 1.0 * CD3a_DP_C))

# Species:   id = ZAP70a1, name = ZAP70a1, affected by kineticLaw

init ZAP70a1=0.0
dZAP70a1/dt=(1/(Cell))*(( 1.0 * ZAP70i_P_) + (-1.0 * ZAP70a1_P))

# Species:   id = ZAP70i, name = ZAP70i, affected by kineticLaw

init ZAP70i=0.0
dZAP70i/dt=(1/(Cell))*(( 1.0 * CD3a_Bd_Z) + (-1.0 * ZAP70i_P_))

# Species:   id = ZAP70, name = ZAP70, affected by kineticLaw

init ZAP70=300.0
dZAP70/dt=(1/(Cell))*((-1.0 * CD3a_Bd_Z))

# Species:   id = ZAP70a2, name = ZAP70a2, affected by kineticLaw

init ZAP70a2=0.0
dZAP70a2/dt=(1/(Cell))*(( 1.0 * ZAP70a1_P))

# Species:   id = PI3Kt, name = PI3Kt, involved in a rule 

# Species:   id = ZAP70t, name = ZAP70t, involved in a rule 

# Species:   id = LATa, name = LATa, affected by kineticLaw

init LATa=0.0
dLATa/dt=(1/(Cell))*(( 1.0 * LATi_P_LA) + (-1.0 * LATa_Bd_G))

# Species:   id = LATi, name = LATi, affected by kineticLaw

init LATi=300.0
dLATi/dt=(1/(Cell))*((-1.0 * LATi_P_LA))

# Species:   id = LATt, name = LATt, involved in a rule 

# Species:   id = GADS, name = GADS, affected by kineticLaw

init GADS=300.0
dGADS/dt=(1/(Cell))*((-1.0 * LATa_Bd_G))

# Species:   id = SLP76, name = SLP76, affected by kineticLaw

init SLP76=300.0
dSLP76/dt=(1/(Cell))*((-1.0 * GADSa_Bd_))

# Species:   id = SLP76i, name = SLP76i, affected by kineticLaw

init SLP76i=0.0
dSLP76i/dt=(1/(Cell))*(( 1.0 * GADSa_Bd_) + (-1.0 * SLP76i_P_))

# Species:   id = GADSt, name = GADSt, involved in a rule 

# Species:   id = SLP76t, name = SLP76t, involved in a rule 

# Species:   id = CD3t, name = CD3t, involved in a rule 

# Species:   id = SLP76a, name = SLP76a, affected by kineticLaw

init SLP76a=0.0
dSLP76a/dt=(1/(Cell))*(( 1.0 * SLP76i_P_))

# Species:   id = GADSa, name = GADSa, affected by kineticLaw

init GADSa=0.0
dGADSa/dt=(1/(Cell))*(( 1.0 * LATa_Bd_G) + (-1.0 * GADSa_Bd_))

# Species:   id = LCKinactive, name = LCKinactive, involved in a rule 

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

