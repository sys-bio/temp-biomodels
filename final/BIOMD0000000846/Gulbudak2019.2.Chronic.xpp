
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Gulbudak2019.2 - Heterogeneous viral strategies promote coexistence in virus-microbe systems (Chronic)
#
# isDescribedBy http://identifiers.org/pubmed/30389532
# is http://identifiers.org/biomodels.db/MODEL1911100004
# is http://identifiers.org/biomodels.db/BIOMD0000000846
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Function_for_Susceptible_Logistic_Growth, name = Function_for_Susceptible_Logistic_Growth
Function_(r,S,N,K)=(r*S*(1-N/K))


# FunctionDefinition id = Function_for_Chronic_Logistic_Growth, name = Function_for_Chronic_Logistic_Growth
Functio_1(r_tilde,C,N,K)=(r_tilde*C*(1-N/K))


# FunctionDefinition id = Function_for_Virus_Chronic_Release_From_Chronic_Infected, name = Function_for_Virus_Chronic_Release_From_Chronic_Infected
Functio_2(alpha,C)=(alpha*C)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  r, name = r, constant
par r=0.339

# Parameter:   id =  K, name = K, constant
par K=8.947E8

# Parameter:   id =  d, name = d, defined by a Rule

# Parameter:   id =  phi, name = phi, defined by a Rule

# Parameter:   id =  beta, name = beta, constant
par beta=20.0

# Parameter:   id =  eta, name = eta, constant
par eta=1.5

# Parameter:   id =  mu, name = mu, constant
par mu=0.0866

# Parameter:   id =  r_tilde, name = r_tilde, constant
par r_tilde=0.2

# Parameter:   id =  phi_tilde, name = phi_tilde, constant
par phi_tilde=5.0E-12

# Parameter:   id =  alpha, name = alpha, constant
par alpha=0.1

# Parameter:   id =  d_tilde, name = d_tilde, defined by a Rule

# Parameter:   id =  N, name = N, defined by a Rule

# assignmentRule: variable = d
d=1/24
aux d=d

# assignmentRule: variable = phi
phi=0.55*10^(-9.5)
aux phi=phi

# assignmentRule: variable = d_tilde
d_tilde=1/20
aux d_tilde=d_tilde

# assignmentRule: variable = N
N=S+C
aux N=N

# Reaction: id = Susceptible_Logistic_Growth, name = Susceptible_Logistic_Growth

Susceptib=compartme*Function_(r, S, N, K)

# Reaction: id = Susceptible_Absorption_Virus, name = Susceptible_Absorption_Virus

Suscept_1=compartme*phi_tilde*S*V_C

# Reaction: id = Susceptible_Death, name = Susceptible_Death

Suscept_2=compartme*d*S

# Reaction: id = Chronic_Infected_Death, name = Chronic_Infected_Death

Chronic_I=compartme*d_tilde*C

# Reaction: id = Chronic_Infected_Logistic_Growth, name = Chronic_Infected_Logistic_Growth

Chronic_1=compartme*Functio_1(r_tilde, C, N, K)

# Reaction: id = Virus_Chronic_Release_From_Chronic_Infected, name = Virus_Chronic_Release_From_Chronic_Infected

Virus_Chr=compartme*Functio_2(alpha, C)

# Reaction: id = Virus_Chronic_Decay, name = Virus_Chronic_Decay

Virus_C_1=compartme*mu*V_C

# Species:   id = S, name = S, affected by kineticLaw

init S=8.3E8
dS/dt=(1/(compartme))*(( 1.0 * Susceptib) + (-1.0 * Suscept_1) + (-1.0 * Suscept_2))

# Species:   id = C, name = C, affected by kineticLaw

init C=0.0
dC/dt=(1/(compartme))*(( 1.0 * Suscept_1) + (-1.0 * Chronic_I) + ( 1.0 * Chronic_1))

# Species:   id = V_C, name = V_C, affected by kineticLaw

init V_C=3.32E7
dV_C/dt=(1/(compartme))*((-1.0 * Suscept_1) + ( 1.0 * Virus_Chr) + (-1.0 * Virus_C_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

