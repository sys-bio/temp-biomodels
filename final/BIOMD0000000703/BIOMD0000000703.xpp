
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Diedrichs2018 - A data-entrained computational model for testing the regulatory logic of the vertebrate unfolded protein response
#
# is http://identifiers.org/biomodels.db/MODEL1803300000
# isDescribedBy http://identifiers.org/pubmed/29668363
# is http://identifiers.org/biomodels.db/BIOMD0000000703
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Rate_Law_for_b_syn_1, name = Rate Law for b syn_1
Rate_Law_(A4,A4_star,A6,A6_star,Ip,Ip_star,KA4,KA6,KX,Kb4,Kb6,Kth4,Kth6,alphaA4,alphaA6,alphaI,alphaX,b_star,betaI,kdb,nA,nA4,nA6,x,x_star)=(kdb*(1+alphaI*(Ip-Ip_star))/(1+betaI*(Ip-Ip_star))*b_star+alphaA6*(1+Kb6*A4)*(A6-A6_star)^nA6/((A6-A6_star)^nA6+KA6^nA6*(1+Kth6*A4^nA))+alphaA4*(1+Kb4*A6)*(A4-A4_star)^nA4/((A4-A4_star)^nA4+KA4^nA4*(1+Kth4*A6)^nA4)+alphaX*(x-x_star)/(x-x_star+KX))


# FunctionDefinition id = Rate_Law_for_b_degr_1, name = Rate Law for b degr_1
Rate_La_1(Ip,Ip_star,alphaI,b,betaI,kdb)=(kdb*(1+alphaI*(Ip-Ip_star))/(1+betaI*(Ip-Ip_star))*b)


# FunctionDefinition id = Rate_Law_for_A6_syn_1, name = Rate Law for A6 syn_1
Rate_La_2(A6,A6_star,A6tot_norm,B,KBA6,U,U_star,kcl,kdA6)=(kdA6*A6_star+kcl*(U-U_star)*(A6tot_norm-A6)/(1+B/KBA6))


# FunctionDefinition id = Rate_Law_for_U_degr_1, name = Rate Law for U degr_1
Rate_La_3(B,Ip,Ip_star,KII,U,delta)=(delta*U/(1+KII*(Ip-Ip_star))*B)


# FunctionDefinition id = Rate_Law_for_A4_syn_1, name = Rate Law for A4 syn_1
Rate_La_4(A4_star,Ep,U,U_star,gamma,kdA4)=(kdA4*A4_star+gamma*(U-U_star)*Ep)


# FunctionDefinition id = Rate_Law_for_c_syn_1, name = Rate Law for c syn_1
Rate_La_5(A4,A4_star,A6,KA4c,Kc4,Kth4c,c_star,kdc,muA4,n)=(kdc*c_star+muA4*(1+Kc4*A6)*(A4-A4_star)^n/((A4-A4_star)^n+KA4c^n*(1+Kth4c*A6)^n))


# FunctionDefinition id = Rate_Law_for_C_syn_1, name = Rate Law for C syn_1
Rate_La_6(C_star,Ep,Ep_star,c,c_star,kdC,ktC)=((kdC*C_star/c_star+ktC*(Ep-Ep_star))*c)


# FunctionDefinition id = Rate_Law_for_g_syn_1, name = Rate Law for g syn_1
Rate_La_7(A4,A4_star,C,C_star,KA4g,KC,Kth4g,etaC,g_star,kdg)=(kdg*g_star+etaC*(A4-A4_star+KA4g*(A4-A4_star)*(C-C_star))/(A4-A4_star+Kth4g*(A4-A4_star)*(C-C_star)+KC))


# FunctionDefinition id = Rate_Law_for_G_syn_1, name = Rate Law for G syn_1
Rate_La_8(Ep,Ep_star,G_star,g,g_star,kdG,ktG)=((kdG*G_star/g_star+ktG*(Ep-Ep_star))*g)


# FunctionDefinition id = Rate_Law_for_Ep_degr_1, name = Rate Law for Ep degr_1
Rate_La_9(Ep,G,G_star,Kdeph,kdeph1,kdeph2)=((kdeph1+kdeph2*(G-G_star))*Ep/(Kdeph+Ep))


# FunctionDefinition id = Rate_Law_for_U_syn_1, name = Rate Law for U syn_1
Rate_L_10(Ep,Ip,Ip_star,KE,KUI,KUU,Stress,U,ksU,n)=((ksU/(1+KUI*(Ip-Ip_star))+Stress)/(1+Ep/KE+(U/KUU)^n))


# FunctionDefinition id = Rate_Law_for_Btot_syn_1, name = Rate Law for Btot syn_1
Rate_L_11(Btot_star,b,b_star,kdB)=(kdB*Btot_star/b_star*b)


# FunctionDefinition id = Rate_Law_for_Ep_syn_1, name = Rate Law for Ep syn_1
Rate_L_12(Ep,Etot_norm,Kph,Pp,kph)=(kph*(Etot_norm-Ep)*Pp/(Kph+(Etot_norm-Ep)))


# FunctionDefinition id = Rate_Law_for_x_syn_1, name = Rate Law for x syn_1
Rate_L_13(Ip,Kx,ksp,x,xtot_norm)=(ksp*Ip*(xtot_norm-x)/(Kx+xtot_norm-x))


# Compartment: id = ER, name = ER, constant
par ER=1.0

# Parameter:   id =  B, name = B, defined by a Rule

# Parameter:   id =  KBU, name = KBU, constant
par KBU=0.8

# Parameter:   id =  KBP, name = KBP, constant
par KBP=0.01

# Parameter:   id =  KBA6, name = KBA6, constant
par KBA6=1.6E-5

# Parameter:   id =  A6tot_norm, name = A6tot_norm, constant
par A6tot_nor=15.0

# Parameter:   id =  CHOP_BiP_ratio, name = CHOP/BiP ratio, defined by a Rule

# Parameter:   id =  G_star, name = G_star, constant
par G_star=1.0

# Parameter:   id =  C_star, name = C_star, constant
par C_star=1.0

# Parameter:   id =  A4_star, name = A4_star, constant
par A4_star=1.0

# Parameter:   id =  U_star, name = U_star, constant
par U_star=1.0

# Parameter:   id =  A6_star, name = A6_star, constant
par A6_star=1.0

# Parameter:   id =  b_star, name = b_star, constant
par b_star=1.0

# Parameter:   id =  c_star, name = c_star, constant
par c_star_1=1.0

# Parameter:   id =  g_star, name = g_star, constant
par g_star_1=1.0

# Parameter:   id =  Btot_star, name = Btot_star, constant
par Btot_star=1.0

# Parameter:   id =  kdB, name = kdB, constant
par kdB=2.514E-4

# Parameter:   id =  kdb, name = kdb, constant
par kdb_1=0.001284

# Parameter:   id =  kdA4, name = kdA4, constant
par kdA4=0.00384

# Parameter:   id =  kdA6, name = kdA6, constant
par kdA6=0.00384

# Parameter:   id =  kdc, name = kdc, constant
par kdc=0.00393

# Parameter:   id =  kdC, name = kdC, constant
par kdC_1=0.005478

# Parameter:   id =  kdg, name = kdg, constant
par kdg=0.003468

# Parameter:   id =  kdG, name = kdG, constant
par kdG_1=0.003852

# Parameter:   id =  Ep_star, name = Ep_star, constant
par Ep_star=1.0

# Parameter:   id =  Stress, name = Stress, constant
par Stress=2.0

# Parameter:   id =  Etot_norm, name = Etot_norm, constant
par Etot_norm=20.0

# Parameter:   id =  f, name = f, constant
par f=0.02

# Parameter:   id =  x_star, name = x_star, constant
par x_star=1.0

# Parameter:   id =  xtot_norm, name = xtot_norm, constant
par xtot_norm=16.0

# Parameter:   id =  kdx, name = kdx, constant
par kdx=0.006546

# Parameter:   id =  KUP, name = KUP, defined by a Rule

# Parameter:   id =  KBI, name = KBI, constant
par KBI=0.01

# Parameter:   id =  KUI, name = KUI, defined by a Rule

# Parameter:   id =  Pp, name = Pp, defined by a Rule

# Parameter:   id =  Ip, name = Ip, defined by a Rule

# Parameter:   id =  KOperk, name = KOperk, constant
par KOperk=1.0

# Parameter:   id =  KOire1, name = KOire1, constant
par KOire1=1.0

# Parameter:   id =  fi, name = fi, constant
par fi=0.01

# Parameter:   id =  alphaI, name = alphaI, constant
par alphaI=0.2

# Parameter:   id =  Ip_star, name = Ip_star, constant
par Ip_star=1.0

# Parameter:   id =  betaI, name = betaI, constant
par betaI=0.1

# assignmentRule: variable = B
B=Btot/(1+U/KBU)
aux B=B

# assignmentRule: variable = CHOP_BiP_ratio
CHOP_BiP_=C_1/Btot
aux CHOP_BiP_=CHOP_BiP_

# assignmentRule: variable = KUP
KUP=(1/f-1)*U_star/(1+Btot_star/KBP*1/(1+U_star/KBU))
aux KUP=KUP

# assignmentRule: variable = KUI
KUI=(1/fi-1)*U_star/(1+Btot_star/KBI*1/(1+U_star/KBU))
aux KUI=KUI

# assignmentRule: variable = Pp
Pp=KOperk*1/f*U/(KUP+KUP/KBP*B+U)
aux Pp=Pp

# assignmentRule: variable = Ip
Ip=KOire1*1/fi*U/(KUI+KUI/KBI*B+U)
aux Ip=Ip

# Reaction: id = Btot_degr, name = Btot degr

Btot_degr=ER*kdB*Btot

# Reaction: id = b_syn, name = b syn
# Local Parameter:   id =  KA4, name = KA4
par KA4=3.0

# Local Parameter:   id =  KA6, name = KA6
par KA6=3.0

# Local Parameter:   id =  KX, name = KX
par KX=8.0

# Local Parameter:   id =  Kb4, name = Kb4
par Kb4=0.5

# Local Parameter:   id =  Kb6, name = Kb6
par Kb6=0.56

# Local Parameter:   id =  Kth4, name = Kth4
par Kth4=0.167

# Local Parameter:   id =  Kth6, name = Kth6
par Kth6=1.0E-5

# Local Parameter:   id =  alphaA4, name = alphaA4
par alphaA4=0.007

# Local Parameter:   id =  alphaA6, name = alphaA6
par alphaA6=0.012

# Local Parameter:   id =  alphaX, name = alphaX
par alphaX=0.002

# Local Parameter:   id =  nA, name = nA
par nA=7.0

# Local Parameter:   id =  nA4, name = nA4
par nA4=2.0

# Local Parameter:   id =  nA6, name = nA6
par nA6=2.0


b_syn=ER*Rate_Law_(A4, A4_star, A6, A6_star, Ip, Ip_star, KA4, KA6, KX, Kb4, Kb6, Kth4, Kth6, alphaA4, alphaA6, alphaI, alphaX, b_star, betaI, kdb_1, nA, nA4, nA6, x, x_star)

# Reaction: id = b_degr, name = b degr

b_degr=ER*Rate_La_1(Ip, Ip_star, alphaI, b_1, betaI, kdb_1)

# Reaction: id = A6_degr, name = A6 degr

A6_degr=ER*kdA6*A6

# Reaction: id = A6_syn, name = A6 syn
# Local Parameter:   id =  kcl, name = kcl
par kcl=4.0


A6_syn=ER*Rate_La_2(A6, A6_star, A6tot_nor, B, KBA6, U, U_star, kcl, kdA6)

# Reaction: id = U_degr, name = U degr
# Local Parameter:   id =  KII, name = KII
par KII=0.01

# Local Parameter:   id =  delta, name = delta
par delta=1.5


U_degr=ER*Rate_La_3(B, Ip, Ip_star, KII, U, delta)

# Reaction: id = A4_syn, name = A4 syn
# Local Parameter:   id =  gamma, name = gamma
par gamma=0.001


A4_syn=ER*Rate_La_4(A4_star, Ep, U, U_star, gamma, kdA4)

# Reaction: id = A4_degr, name = A4 degr

A4_degr=ER*kdA4*A4

# Reaction: id = c_syn, name = c syn
# Local Parameter:   id =  KA4c, name = KA4c
par KA4c=2.0

# Local Parameter:   id =  Kc4, name = Kc4
par Kc4=0.56

# Local Parameter:   id =  Kth4c, name = Kth4c
par Kth4c=0.25

# Local Parameter:   id =  muA4, name = muA4
par muA4=0.1

# Local Parameter:   id =  n, name = n
par n=2.0


c_syn=ER*Rate_La_5(A4, A4_star, A6, KA4c, Kc4, Kth4c, c_star_1, kdc, muA4, n)

# Reaction: id = c_degr, name = c degr

c_degr=ER*kdc*c

# Reaction: id = C_syn, name = C syn
# Local Parameter:   id =  ktC, name = ktC
par ktC=1.0E-4


C_syn_1=ER*Rate_La_6(C_star, Ep, Ep_star, c, c_star_1, kdC_1, ktC)

# Reaction: id = C_degr, name = C degr

C_degr_1=ER*kdC_1*C_1

# Reaction: id = g_syn, name = g syn
# Local Parameter:   id =  KA4g, name = KA4g
par KA4g=0.75

# Local Parameter:   id =  KC, name = KC
par KC=5.0

# Local Parameter:   id =  Kth4g, name = Kth4g
par Kth4g=0.1

# Local Parameter:   id =  etaC, name = etaC
par etaC=0.012


g_syn=ER*Rate_La_7(A4, A4_star, C_1, C_star, KA4g, KC, Kth4g, etaC, g_star_1, kdg)

# Reaction: id = g_degr, name = g degr

g_degr=ER*kdg*g

# Reaction: id = G_syn, name = G syn
# Local Parameter:   id =  ktG, name = ktG
par ktG=0.0015


G_syn_1=ER*Rate_La_8(Ep, Ep_star, G_star, g, g_star_1, kdG_1, ktG)

# Reaction: id = G_degr, name = G degr

G_degr_1=ER*kdG_1*G_1

# Reaction: id = Ep_degr, name = Ep degr
# Local Parameter:   id =  Kdeph, name = Kdeph
par Kdeph=7.0

# Local Parameter:   id =  kdeph1, name = kdeph1
par kdeph1=0.03

# Local Parameter:   id =  kdeph2, name = kdeph2
par kdeph2=0.08


Ep_degr=ER*Rate_La_9(Ep, G_1, G_star, Kdeph, kdeph1, kdeph2)

# Reaction: id = U_syn, name = U syn
# Local Parameter:   id =  KE, name = KE
par KE=3.0

# Local Parameter:   id =  KUI, name = KUI
par KUI_1=0.01

# Local Parameter:   id =  KUU, name = KUU
par KUU=6.0

# Local Parameter:   id =  ksU, name = ksU
par ksU=0.89

# Local Parameter:   id =  n, name = n
par n_1=4.0


U_syn=ER*Rate_L_10(Ep, Ip, Ip_star, KE, KUI_1, KUU, Stress, U, ksU, n_1)

# Reaction: id = Btot_syn, name = Btot syn

Btot_syn=ER*Rate_L_11(Btot_star, b_1, b_star, kdB)

# Reaction: id = Ep_syn, name = Ep syn
# Local Parameter:   id =  Kph, name = Kph
par Kph=14.0

# Local Parameter:   id =  kph, name = kph
par kph_1=0.00651


Ep_syn=ER*Rate_L_12(Ep, Etot_norm, Kph, Pp, kph_1)

# Reaction: id = x_degr, name = x degr

x_degr=ER*kdx*x

# Reaction: id = x_syn, name = x syn
# Local Parameter:   id =  Kx, name = Kx
par Kx_1=3.0

# Local Parameter:   id =  ksp, name = ksp
par ksp=0.00785


x_syn=ER*Rate_L_13(Ip, Kx_1, ksp, x, xtot_norm)

# Species:   id = U, name = U, affected by kineticLaw

init U=1.0
dU/dt=(1/(ER))*((-1.0 * U_degr) + ( 1.0 * U_syn))

# Species:   id = A6, name = A6, affected by kineticLaw

init A6=1.0
dA6/dt=(1/(ER))*((-1.0 * A6_degr) + ( 1.0 * A6_syn))

# Species:   id = b, name = b, affected by kineticLaw

par b_1=1.0
aux b_1=b_1
db_1/dt=(1/(ER))*(( 1.0 * b_syn) + (-1.0 * b_degr))

# Species:   id = Btot, name = Btot, affected by kineticLaw

init Btot=1.0
dBtot/dt=(1/(ER))*((-1.0 * Btot_degr) + ( 1.0 * Btot_syn))

# Species:   id = A4, name = A4, affected by kineticLaw

init A4=1.0
dA4/dt=(1/(ER))*(( 1.0 * A4_syn) + (-1.0 * A4_degr))

# Species:   id = c, name = c, affected by kineticLaw

init c=1.0
dc/dt=(1/(ER))*(( 1.0 * c_syn) + (-1.0 * c_degr))

# Species:   id = C, name = C, affected by kineticLaw

par C_1=1.0
aux C_1=C_1
dC_1/dt=(1/(ER))*(( 1.0 * C_syn_1) + (-1.0 * C_degr_1))

# Species:   id = g, name = g, affected by kineticLaw

init g=1.0
dg/dt=(1/(ER))*(( 1.0 * g_syn) + (-1.0 * g_degr))

# Species:   id = G, name = G, affected by kineticLaw

par G_1=1.0
aux G_1=G_1
dG_1/dt=(1/(ER))*(( 1.0 * G_syn_1) + (-1.0 * G_degr_1))

# Species:   id = Ep, name = Ep, affected by kineticLaw

init Ep=1.0
dEp/dt=(1/(ER))*((-1.0 * Ep_degr) + ( 1.0 * Ep_syn))

# Species:   id = x, name = x, affected by kineticLaw

init x=1.0
dx/dt=(1/(ER))*((-1.0 * x_degr) + ( 1.0 * x_syn))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

