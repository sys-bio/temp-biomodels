
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Deineko2003_CellCycle
#
# is http://identifiers.org/biomodels.db/MODEL1475866846
# is http://identifiers.org/biomodels.db/BIOMD0000000208
# isDescribedBy http://identifiers.org/pubmed/14582399
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  emax, name = emax, constant
par emax=2.0

# Parameter:   id =  k1, name = k1, constant
par k1=1.0

# Parameter:   id =  k1_prime, name = k1_prime, constant
par k1_prime=1.0

# Parameter:   id =  k1_double_prime, name = k1_double_prime, constant
par k1_double=10.0

# Parameter:   id =  phi1, name = phi1, constant
par phi1=0.1

# Parameter:   id =  k2, name = k2, constant
par k2=1.0

# Parameter:   id =  k3, name = k3, constant
par k3=0.4

# Parameter:   id =  phi2, name = phi2, constant
par phi2=0.01

# Parameter:   id =  phi3, name = phi3, constant
par phi3=0.1

# Parameter:   id =  k4, name = k4, constant
par k4=0.09

# Parameter:   id =  k4_double_prime, name = k4_double_prime, constant
par k4_double=0.1

# Parameter:   id =  k4i, name = k4i, constant
par k4i=1.0

# Parameter:   id =  k4a, name = k4a, constant
par k4a=2.0

# Parameter:   id =  phi4i, name = phi4i, constant
par phi4i=0.01

# Parameter:   id =  phi4a, name = phi4a, constant
par phi4a=0.01

# Parameter:   id =  k6, name = k6, constant
par k6=0.0

# Parameter:   id =  F6, name = F6, defined by a Rule

# Parameter:   id =  phi6, name = phi6, constant
par phi6=0.1

# assignmentRule: variable = F6
F6= piecew1 
aux F6=F6

# Reaction: id = R1

R1=emax*k1*y1/(k1*y1+(k1_prime+k1_double*y1)*y2)

# Reaction: id = R2

R2=phi1*y1

# Reaction: id = R3

R3=k2*y1

# Reaction: id = R4

R4=k3*y2*y5

# Reaction: id = R5

R5=phi2*y2

# Reaction: id = R6

R6=phi3*y3

# Reaction: id = R7

R7=k4*y1

# Reaction: id = R8

R8=k4_double*y6

# Reaction: id = R9

R9=k4i*y4*y5

# Reaction: id = R10

R10=k4a*y5

# Reaction: id = R11

R11=phi4i*y4

# Reaction: id = R12

R12=phi4a*y5

# Reaction: id = R13

R13=k6*y1

# Reaction: id = R14

R14=F6

# Reaction: id = R15

R15=phi6*y6

# Species:   id = y1, name = E2F, affected by kineticLaw

init y1=0.014
dy1/dt=(1/(compartme))*(( 1.0 * R1) + (-1.0 * R2))

# Species:   id = y2, name = pRB, affected by kineticLaw

init y2=0.006
dy2/dt=(1/(compartme))*(( 1.0 * R3) + (-1.0 * R4) + (-1.0 * R5))

# Species:   id = y3, name = Phosphorylated pRB, affected by kineticLaw

init y3=0.0
dy3/dt=(1/(compartme))*(( 1.0 * R4) + (-1.0 * R6))

# Species:   id = y4, name = inactive cycE_cdk2, affected by kineticLaw

init y4=0.0
dy4/dt=(1/(compartme))*(( 1.0 * R7) + ( 1.0 * R8) + (-1.0 * R9) + ( 1.0 * R10) + (-1.0 * R11))

# Species:   id = y5, name = active cycE_cdk2, affected by kineticLaw

init y5=1.0E-4
dy5/dt=(1/(compartme))*(( 1.0 * R9) + (-1.0 * R10) + (-1.0 * R12))

# Species:   id = y6, name = AP-1, affected by kineticLaw

init y6=0.0
dy6/dt=(1/(compartme))*(( 1.0 * R13) + ( 1.0 * R14) + (-1.0 * R15))


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (t  <=  60) then (0.044) else (0)


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

