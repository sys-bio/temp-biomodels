
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Srividhya2006_CellCycle
#
# is http://identifiers.org/biomodels.db/MODEL1502077979
# is http://identifiers.org/biomodels.db/BIOMD0000000196
# isDescribedBy http://identifiers.org/pubmed/16473373
# isDerivedFrom http://identifiers.org/pubmed/11371173
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Mass_Action_0, name = Mass_Action_0
Mass_Acti(k1)=(k1)


# FunctionDefinition id = Mass_Action_2, name = Mass_Action_2
Mass_Ac_1(k1,S1,S2)=(k1*S1*S2)


# FunctionDefinition id = Mass_Action_1, name = Mass_Action_1
Mass_Ac_2(k1,S1)=(k1*S1)


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Parameter:   id =  vf, name = vf, constant
par vf=0.215

# Parameter:   id =  kf, name = kf, constant
par kf=1.0

# Parameter:   id =  kc, name = kc, constant
par kc=0.05

# Parameter:   id =  Bc, name = Bc, constant
par Bc=3.5

# Parameter:   id =  kd, name = kd, constant
par kd=0.2

# Parameter:   id =  B2, name = B2, constant
par B2=3.3

# Parameter:   id =  vM1, name = vM1, constant
par vM1=0.7

# Parameter:   id =  a1, name = a1, constant
par a1=1.2

# Parameter:   id =  Ka, name = Ka, constant
par Ka=0.5

# Parameter:   id =  j1, name = j1, constant
par j1=0.01

# Parameter:   id =  B1, name = B1, constant
par B1=5.0

# Parameter:   id =  vM1_2, name = v'M1, constant
par vM1_2=0.55

# Parameter:   id =  j1_2, name = j'1, constant
par j1_2=0.01

# Parameter:   id =  vM2, name = vM2, constant
par vM2=0.41

# Parameter:   id =  a2, name = a2, constant
par a2=1.0

# Parameter:   id =  j2, name = j2, constant
par j2=0.01

# Parameter:   id =  vM2_2, name = v'M2, constant
par vM2_2=1.0

# Parameter:   id =  j3, name = j'3, constant
par j3=0.01

# Parameter:   id =  j2_2, name = j'2, constant
par j2_2=0.01

# Parameter:   id =  vM3, name = vM3, constant
par vM3=1.0

# Parameter:   id =  j3_2, name = j3, constant
par j3_2=0.01

# Parameter:   id =  vM3_2, name = v'M3, constant
par vM3_2=1.0

# Parameter:   id =  B3, name = B3, constant
par B3=1.0

# Parameter:   id =  vM4, name = vM4, constant
par vM4=0.7

# Parameter:   id =  a4, name = a4, constant
par a4=2.0

# Parameter:   id =  tau, name = tau, constant
par tau=5.0

# Parameter:   id =  j4, name = j4, constant
par j4=0.01

# Parameter:   id =  vM4_2, name = v'M4, constant
par vM4_2=1.0

# Parameter:   id =  j4_2, name = j'4, constant
par j4_2=0.01

# Parameter:   id =  mu, name = mu, constant
par mu=0.01

# Parameter:   id =  a, name = a, constant
par a=10.0

# Parameter:   id =  totcdc25, name = totcdc25, constant
par totcdc25=1.0

# Parameter:   id =  totwee1, name = totwee1, constant
par totwee1=1.0

# Parameter:   id =  totAPC, name = totAPC, constant
par totAPC=1.0

# Parameter:   id =  c, name = totcdk, constant
par c=1.1

# assignmentRule: variable = x4
x4=totcdc25-y4
aux x4=x4

# assignmentRule: variable = y5
y5=totwee1-x5
aux y5=y5

# assignmentRule: variable = y6
y6=totAPC-x6
aux y6=y6

# assignmentRule: variable = x2
x2=c-Pre_MPF-x3
aux x2=x2

# Reaction: id = cyclinsythesis, name = cyclin  synthesis

cyclinsyt=Mass_Acti(vf)

# Reaction: id = cyclincdkcomplexformation, name = cyclin/cdk complex formation

cyclincdk=Mass_Ac_1(kf, x1, x2)

# Reaction: id = cyclindegradation, name = cyclin degradation

cyclindeg=x1*(kc+Bc*x6)

# Reaction: id = MPFdissociation, name = MPF cyclin subunit degradation

MPFdissoc=kd*(1+B2*x6)*x3

# Reaction: id = PreMPFMPFtransition, name = Pre-MPF -> MPF transition

PreMPFMPF=vM1*(1+a1*x4/(Ka+x4))*Pre_MPF/(j1+Pre_MPF)

# Reaction: id = MPFPreMPFtransition, name = MPF -> Pre-MPF transition

MPFPreMPF=vM1_2*(1+B1*x5/(Ka+x5))*x3/(j1_2+x3)

# Reaction: id = cdc25phosphorylation, name = cdc25 phosphorylation

cdc25phos=vM2*(1+a2*m*x3/(Ka+m*x3))*(1-x4)/(j2+1-x4)

# Reaction: id = cdc25dephosphorylation, name = cdc25 dephosphorylation

cdc25deph=vM2_2*x4/(j2_2+x4)

# Reaction: id = wee1dephosphorylation, name = wee1 dephosphorylation

wee1depho=vM3*(1-x5)/(j3_2+1-x5)

# Reaction: id = wee1phosphorylation, name = wee1 phosphorylation

wee1phosp=vM3_2*(1+B3*m*x3/(Ka+m*x3))*x5/(j3+x5)

# Reaction: id = _2, name = APC phosphorylation

_2=vM4*(1+a4*m*delay(x3, tau)/(Ka+m*delay(x3, tau)))*(1-x6)/(j4+(1-x6))

# Reaction: id = APCdephosphorylation, name = APC dephosphorylation

APCdephos=vM4_2*x6/(j4_2+x6)

# Reaction: id = cellmass, name = cell growth

cellmass=mu*m*(1-m/a)

# Species:   id = x1, name = cyclin, affected by kineticLaw

init x1=0.01
dx1/dt=(1/(cell))*(( 1.0 * cyclinsyt) + (-1.0 * cyclincdk) + (-1.0 * cyclindeg))

# Species:   id = x2, name = free CDK, involved in a rule 

# Species:   id = x3, name = MPF, affected by kineticLaw

init x3=0.1
dx3/dt=(1/(cell))*((-1.0 * MPFdissoc) + ( 1.0 * PreMPFMPF) + (-1.0 * MPFPreMPF))

# Species:   id = x4, name = cdc25_P, involved in a rule 

# Species:   id = x5, name = Wee1, affected by kineticLaw

init x5=0.1
dx5/dt=(1/(cell))*(( 1.0 * wee1depho) + (-1.0 * wee1phosp))

# Species:   id = x6, name = APC_P, affected by kineticLaw

init x6=0.1
dx6/dt=(1/(cell))*(( 1.0 * _2) + (-1.0 * APCdephos))

# Species:   id = m, name = cell_mass, affected by kineticLaw
# Species is changed by 1 event(s)
init m=0.473
dm/dt=(1/(cell))*(( 1.0 * cellmass))

# Species:   id = y4, name = cdc25, affected by kineticLaw

init y4=0.9
dy4/dt=(1/(cell))*((-1.0 * cdc25phos) + ( 1.0 * cdc25deph))

# Species:   id = y5, name = Wee1_P, involved in a rule 

# Species:   id = y6, name = APC, involved in a rule 

# Species:   id = Pre_MPF, name = Pre_MPF, affected by kineticLaw

init Pre_MPF=0.2
dPre_MPF/dt=(1/(cell))*(( 1.0 * cyclincdk) + (-1.0 * PreMPFMPF) + ( 1.0 * MPFPreMPF))

# event : event1
event1=if (x3 < 0.2) then (1.5) else (0.2)
global 1 {event1 - 1.1} {m=m/2}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

