
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Gerard2009 - An Integrated Mammalian Cell Cycle Model
#
# isDescribedBy http://identifiers.org/pubmed/20007375
# isDescribedBy http://identifiers.org/doi/10.1073/pnas.0903827106
# is http://identifiers.org/biomodels.db/MODEL1812210001
# is http://identifiers.org/biomodels.db/BIOMD0000000730
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = scaled_Michaelis_Menten_1_1, name = scaled Michaelis-Menten 1_1
scaled_Mi(GF,Kagf,eps,vsap1)=(vsap1*GF/(Kagf+GF)*eps)


# FunctionDefinition id = function_for_1k_1M_1, name = function for 1k 1M_1
function_(AP1,eps,kdap1)=(kdap1*AP1*eps)


# FunctionDefinition id = function_for_1k_1, name = function for 1k_1
functio_1(eps,vsprb)=(vsprb*eps)


# FunctionDefinition id = function_for_1k_2M_1, name = function for 1k 2M_1
functio_2(E2F,eps,kpc1,pRB)=(kpc1*pRB*E2F*eps)


# FunctionDefinition id = function_for_1k_1M_2, name = function for 1k 1M_2
functio_3(eps,kpc2,pRBc1)=(kpc2*pRBc1*eps)


# FunctionDefinition id = modified_Michaelis_Menten_2_1, name = modified Michaelis Menten 2_1
modified_(K1,Md,Mdp27,V1,eps,pRB)=(V1*pRB/(K1+pRB)*(Md+Mdp27)*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_1, name = scaled Michaelis Menten 2_1
scaled__1(K2,V2,eps,pRBp)=(V2*pRBp/(K2+pRBp)*eps)


# FunctionDefinition id = function_for_1k_1M_3, name = function for 1k 1M_3
functio_4(eps,kdprb,pRBp)=(kdprb*pRBp*eps)


# FunctionDefinition id = modified_Michaelis_Menten_1_1, name = modified Michaelis Menten 1_1
modifie_1(K3,Me,V3,eps,pRBp)=(V3*pRBp/(K3+pRBp)*Me*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_2, name = scaled Michaelis Menten 2_2
scaled__2(K4,V4,eps,pRBpp)=(V4*pRBpp/(K4+pRBpp)*eps)


# FunctionDefinition id = function_for_1k_2M_2, name = function for 1k 2M_2
functio_5(E2F,eps,kpc3,pRBp)=(kpc3*pRBp*E2F*eps)


# FunctionDefinition id = function_for_1k_1M_4, name = function for 1k 1M_4
functio_6(eps,kpc4,pRBc2)=(kpc4*pRBc2*eps)


# FunctionDefinition id = function_for_1k_1M_5, name = function for 1k 1M_5
functio_7(eps,kdprbp,pRBp)=(kdprbp*pRBp*eps)


# FunctionDefinition id = function_for_1k_1M_6, name = function for 1k 1M_6
functio_8(eps,kdprbpp,pRBpp)=(kdprbpp*pRBpp*eps)


# FunctionDefinition id = function_for_1k_2, name = function for 1k_2
functio_9(eps,vse2f)=(vse2f*eps)


# FunctionDefinition id = modified_Michaelis_Menten_1_2, name = modified Michaelis Menten 1_2
modifie_2(E2F,K1e2f,Ma,V1e2f,eps)=(V1e2f*E2F/(K1e2f+E2F)*Ma*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_3, name = scaled Michaelis Menten 2_3
scaled__3(E2Fp,K2e2f,V2e2f,eps)=(V2e2f*E2Fp/(K2e2f+E2Fp)*eps)


# FunctionDefinition id = function_for_1k_1M_7, name = function for 1k 1M_7
functi_10(E2F,eps,kde2f)=(kde2f*E2F*eps)


# FunctionDefinition id = function_for_1k_1M_8, name = function for 1k 1M_8
functi_11(E2Fp,eps,kde2fp)=(kde2fp*E2Fp*eps)


# FunctionDefinition id = function_for_1k_1M_9, name = function for 1k 1M_9
functi_12(AP1,eps,kcd1)=(kcd1*AP1*eps)


# FunctionDefinition id = double_michaelis_menten_like_1, name = double michaelis menten like_1
double_mi(E2F,Ki7,Ki8,eps,kcd2,pRB,pRBp)=(kcd2*E2F*Ki7/(Ki7+pRB)*Ki8/(Ki8+pRBp)*eps)


# FunctionDefinition id = function_for_Cd_to_Mdi_1, name = function for Cd to Mdi_1
functi_13(Cd,Cdk4_tot,Md,Mdi,Mdp27,eps,kcom1)=(kcom1*Cd*(Cdk4_tot-(Mdi+Md+Mdp27))*eps)


# FunctionDefinition id = function_for_1k_1M_10, name = function for 1k 1M_10
functi_14(Mdi,eps,kdecom1)=(kdecom1*Mdi*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_4, name = scaled Michaelis Menten 2_4
scaled__4(Cd,Kdd,Vdd,eps)=(Vdd*Cd/(Kdd+Cd)*eps)


# FunctionDefinition id = function_for_1k_1M_11, name = function for 1k 1M_11
functi_15(Cd,eps,kddd)=(kddd*Cd*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_5, name = scaled Michaelis Menten 2_5
scaled__5(K2d,Md,Vm2d,eps)=(Vm2d*Md/(K2d+Md)*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_6, name = scaled Michaelis Menten 2_6
scaled__6(K1d,Mdi,Vm1d,eps)=(Vm1d*Mdi/(K1d+Mdi)*eps)


# FunctionDefinition id = function_for_1k_2M_3, name = function for 1k 2M_3
functi_16(Md,eps,kc1,p27)=(kc1*Md*p27*eps)


# FunctionDefinition id = function_for_1k_1M_12, name = function for 1k 1M_12
functi_17(Mdp27,eps,kc2)=(kc2*Mdp27*eps)


# FunctionDefinition id = double_michaelis_menten_like_2_0, name = double michaelis menten like_2
double__1(E2F,Ki10,Ki9,eps,kce,pRB,pRBp)=(kce*E2F*Ki9/(Ki9+pRB)*Ki10/(Ki10+pRBp)*eps)


# FunctionDefinition id = function_for_M__to_M_i_1, name = function for M_ to M_i_1
functi_18(Cdk2_tot,Ce,Ma,Mai,Map27,Me,Mei,Mep27,eps,kcom2)=(kcom2*Ce*(Cdk2_tot-(Mei+Me+Mep27+Mai+Ma+Map27))*eps)


# FunctionDefinition id = function_for_1k_1M_13, name = function for 1k 1M_13
functi_19(Mei,eps,kdecom2)=(kdecom2*Mei*eps)


# FunctionDefinition id = double_michaelis_menten_like_2_1, name = double michaelis menten like 2_1
double__2(Ce,Kdceskp2,Kde,Skp2,Vde,eps)=(Vde*Skp2/(Kdceskp2+Skp2)*Ce/(Kde+Ce)*eps)


# FunctionDefinition id = function_for_1k_1M_14, name = function for 1k 1M_14
functi_20(Ce,eps,kdde)=(kdde*Ce*eps)


# FunctionDefinition id = function_for_M_i_to_M__1, name = function for M_i to M__1
functi_21(K2e,Me,Vm2e,Wee1,eps,ib1)=(Vm2e*(Wee1+ib1)*Me/(K2e+Me)*eps)


# FunctionDefinition id = modified_Michaelis_Menten_1_3, name = modified Michaelis Menten 1_3
modifie_3(K1e,Mei,Pe,Vm1e,eps)=(Vm1e*Mei/(K1e+Mei)*Pe*eps)


# FunctionDefinition id = function_for_1k_2M_4, name = function for 1k 2M_4
functi_22(Me,eps,kc3,p27)=(kc3*Me*p27*eps)


# FunctionDefinition id = function_for_1k_1M_15, name = function for 1k 1M_15
functi_23(Mep27,eps,kc4)=(kc4*Mep27*eps)


# FunctionDefinition id = function_for_1k_3, name = function for 1k_3
functi_24(eps,vsskp2)=(vsskp2*eps)


# FunctionDefinition id = double_michaelis_menten_like_2_2, name = double michaelis menten like 2_2
double__3(Cdh1a,Kcdh1,Kdskp2,Skp2,Vdskp2,eps)=(Vdskp2*Skp2/(Kdskp2+Skp2)*Cdh1a/(Kcdh1+Cdh1a)*eps)


# FunctionDefinition id = function_for_1k_1M_16, name = function for 1k 1M_16
functi_25(Skp2,eps,kddskp2)=(kddskp2*Skp2*eps)


# FunctionDefinition id = function_for_1k_4, name = function for 1k_4
functi_26(eps,vspei)=(vspei*eps)


# FunctionDefinition id = function_for_Pe_to_Pei_1, name = function for Pe to Pei_1
functi_27(Chk1,K6e,Pe,V6e,eps,xe1,xe2)=(V6e*(xe1+xe2*Chk1)*Pe/(K6e+Pe)*eps)


# FunctionDefinition id = function_for_M_i_to_M__2, name = function for M_i to M__2
functi_28(K5e,Me,Pei,Vm5e,ae,eps)=(Vm5e*(Me+ae)*Pei/(K5e+Pei)*eps)


# FunctionDefinition id = function_for_1k_1M_17, name = function for 1k 1M_17
functi_29(Pei,eps,kdpei)=(kdpei*Pei*eps)


# FunctionDefinition id = function_for_1k_1M_18, name = function for 1k 1M_18
functi_30(Pe,eps,kdpe)=(kdpe*Pe*eps)


# FunctionDefinition id = double_michaelis_menten_like_3, name = double michaelis menten like_3
double__4(E2F,Ki11,Ki12,eps,kca,pRB,pRBp)=(kca*E2F*Ki11/(Ki11+pRB)*Ki12/(Ki12+pRBp)*eps)


# FunctionDefinition id = function_for_M__to_M_i_2, name = function for M_ to M_i_2
functi_31(Ca,Cdk2_tot,Ma,Mai,Map27,Me,Mei,Mep27,eps,kcom3)=(kcom3*Ca*(Cdk2_tot-(Mei+Me+Mep27+Mai+Ma+Map27))*eps)


# FunctionDefinition id = function_for_1k_1M_19, name = function for 1k 1M_19
functi_32(Mai,eps,kdecom3)=(kdecom3*Mai*eps)


# FunctionDefinition id = double_michaelis_menten_like_2_3, name = double michaelis menten like 2_3
double__5(Ca,Cdc20a,Kacdc20,Kda,Vda,eps)=(Vda*Ca/(Kda+Ca)*Cdc20a/(Kacdc20+Cdc20a)*eps)


# FunctionDefinition id = function_for_1k_1M_20, name = function for 1k 1M_20
functi_33(Ca,eps,kdda)=(kdda*Ca*eps)


# FunctionDefinition id = function_for_M_i_to_M__3, name = function for M_i to M__3
functi_34(K2a,Ma,Vm2a,Wee1,eps,ib2)=(Vm2a*(Wee1+ib2)*Ma/(K2a+Ma)*eps)


# FunctionDefinition id = modified_Michaelis_Menten_1_4, name = modified Michaelis Menten 1_4
modifie_4(K1a,Mai,Pa,Vm1a,eps)=(Vm1a*Mai/(K1a+Mai)*Pa*eps)


# FunctionDefinition id = function_for_1k_2M_5, name = function for 1k 2M_5
functi_35(Ma,eps,kc5,p27)=(kc5*Ma*p27*eps)


# FunctionDefinition id = function_for_1k_1M_21, name = function for 1k 1M_21
functi_36(Map27,eps,kc6)=(kc6*Map27*eps)


# FunctionDefinition id = function_for_1k_5, name = function for 1k_5
functi_37(eps,vs1p27)=(vs1p27*eps)


# FunctionDefinition id = double_michaelis_menten_like_4, name = double michaelis menten like_4
double__6(E2F,Ki13,Ki14,eps,pRB,pRBp,vs2p27)=(vs2p27*E2F*Ki13/(Ki13+pRB)*Ki14/(Ki14+pRBp)*eps)


# FunctionDefinition id = function_for_1k_2M_6, name = function for 1k 2M_6
functi_38(Mb,eps,kc7,p27)=(kc7*Mb*p27*eps)


# FunctionDefinition id = function_for_1k_1M_22, name = function for 1k 1M_22
functi_39(Mbp27,eps,kc8)=(kc8*Mbp27*eps)


# FunctionDefinition id = modified_Michaelis_Menten_1_5, name = modified Michaelis Menten 1_5
modifie_5(K1p27,Me,V1p27,eps,p27)=(V1p27*p27/(K1p27+p27)*Me*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_7, name = scaled Michaelis Menten 2_7
scaled__7(K2p27,V2p27,eps,p27p)=(V2p27*p27p/(K2p27+p27p)*eps)


# FunctionDefinition id = function_for_1k_1M_23, name = function for 1k 1M_23
functi_40(eps,kddp27,p27)=(kddp27*p27*eps)


# FunctionDefinition id = double_michaelis_menten_like_2_4, name = double michaelis menten like 2_4
double__7(Kdp27p,Kdp27skp2,Skp2,Vdp27p,eps,p27p)=(Vdp27p*Skp2/(Kdp27skp2+Skp2)*p27p/(Kdp27p+p27p)*eps)


# FunctionDefinition id = function_for_1k_1M_24, name = function for 1k 1M_24
functi_41(eps,kddp27p,p27p)=(kddp27p*p27p*eps)


# FunctionDefinition id = modified_Michaelis_Menten_2_2, name = modified Michaelis Menten 2_2
modifie_6(Cdh1a,K2cdh1,Ma,Mb,V2cdh1,eps)=(V2cdh1*Cdh1a/(K2cdh1+Cdh1a)*(Ma+Mb)*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_8, name = scaled Michaelis Menten 2_8
scaled__8(Cdh1i,K1cdh1,V1cdh1,eps)=(V1cdh1*Cdh1i/(K1cdh1+Cdh1i)*eps)


# FunctionDefinition id = function_for_1k_1M_25, name = function for 1k 1M_25
functi_42(Cdh1i,eps,kdcdh1i)=(kdcdh1i*Cdh1i*eps)


# FunctionDefinition id = function_for_1k_1M_26, name = function for 1k 1M_26
functi_43(Cdh1a,eps,kdcdh1a)=(kdcdh1a*Cdh1a*eps)


# FunctionDefinition id = function_for_1k_6, name = function for 1k_6
functi_44(eps,vscdh1a)=(vscdh1a*eps)


# FunctionDefinition id = function_for_Pe_to_Pei_2, name = function for Pe to Pei_2
functi_45(Chk1,K6a,Pa,V6a,eps,xa1,xa2)=(V6a*(xa1+xa2*Chk1)*Pa/(K6a+Pa)*eps)


# FunctionDefinition id = function_for_M_i_to_M__4, name = function for M_i to M__4
functi_46(K5a,Ma,Pai,Vm5a,aa,eps)=(Vm5a*(Ma+aa)*Pai/(K5a+Pai)*eps)


# FunctionDefinition id = function_for_1k_1M_27, name = function for 1k 1M_27
functi_47(Pai,eps,kdpai)=(kdpai*Pai*eps)


# FunctionDefinition id = function_for_1k_7, name = function for 1k_7
functi_48(eps,vspai)=(vspai*eps)


# FunctionDefinition id = function_for_1k_1M_28, name = function for 1k 1M_28
functi_49(Pa,eps,kdpa)=(kdpa*Pa*eps)


# FunctionDefinition id = function_for_1k_8, name = function for 1k_8
functi_50(eps,vcb)=(vcb*eps)


# FunctionDefinition id = function_for_Cd_to_Mdi_2, name = function for Cd to Mdi_2
functi_51(Cb,Cdk1_tot,Mb,Mbi,Mbp27,eps,kcom4)=(kcom4*Cb*(Cdk1_tot-(Mbi+Mb+Mbp27))*eps)


# FunctionDefinition id = function_for_1k_1M_29, name = function for 1k 1M_29
functi_52(Mbi,eps,kdecom4)=(kdecom4*Mbi*eps)


# FunctionDefinition id = double_michaelis_menten_like_2_5, name = double michaelis menten like 2_5
double__8(Cb,Cdc20a,Kdb,Kdbcdc20,Vdb,eps)=(Vdb*Cb/(Kdb+Cb)*Cdc20a/(Kdbcdc20+Cdc20a)*eps)


# FunctionDefinition id = function_for_1k_1M_30, name = function for 1k 1M_30
functi_53(Cb,eps,kddb)=(kddb*Cb*eps)


# FunctionDefinition id = double_michaelis_menten_like_2_6, name = double michaelis menten like 2_6
double__9(Cb,Cdh1a,Kdb,Kdbcdh1,Vdb,eps)=(Vdb*Cb/(Kdb+Cb)*Cdh1a/(Kdbcdh1+Cdh1a)*eps)


# FunctionDefinition id = function_for_M_i_to_M__5, name = function for M_i to M__5
functi_54(K2b,Mb,Vm2b,Wee1,eps,ib3)=(Vm2b*(Wee1+ib3)*Mb/(K2b+Mb)*eps)


# FunctionDefinition id = modified_Michaelis_Menten_1_6, name = modified Michaelis Menten 1_6
modifie_7(K1b,Mbi,Pb,Vm1b,eps)=(Vm1b*Mbi/(K1b+Mbi)*Pb*eps)


# FunctionDefinition id = function_for_1k_9, name = function for 1k_9
functi_55(eps,vscdc20i)=(vscdc20i*eps)


# FunctionDefinition id = modified_Michaelis_Menten_1_7, name = modified Michaelis Menten 1_7
modifie_8(Cdc20i,K3b,Mb,Vm3b,eps)=(Vm3b*Cdc20i/(K3b+Cdc20i)*Mb*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_9, name = scaled Michaelis Menten 2_9
scaled__9(Cdc20a,K4b,Vm4b,eps)=(Vm4b*Cdc20a/(K4b+Cdc20a)*eps)


# FunctionDefinition id = function_for_1k_1M_31, name = function for 1k 1M_31
functi_56(Cdc20i,eps,kdcdc20i)=(kdcdc20i*Cdc20i*eps)


# FunctionDefinition id = function_for_1k_1M_32, name = function for 1k 1M_32
functi_57(Cdc20a,eps,kdcdc20a)=(kdcdc20a*Cdc20a*eps)


# FunctionDefinition id = function_for_1k_10, name = function for 1k_10
functi_58(eps,vspbi)=(vspbi*eps)


# FunctionDefinition id = function_for_Pe_to_Pei_3, name = function for Pe to Pei_3
functi_59(Chk1,K6b,Pb,V6b,eps,xb1,xb2)=(V6b*(xb1+xb2*Chk1)*Pb/(K6b+Pb)*eps)


# FunctionDefinition id = function_for_M_i_to_M__6, name = function for M_i to M__6
functi_60(K5b,Mb,Pbi,Vm5b,ab,eps)=(Vm5b*(Mb+ab)*Pbi/(K5b+Pbi)*eps)


# FunctionDefinition id = function_for_1k_1M_33, name = function for 1k 1M_33
functi_61(Pbi,eps,kdpbi)=(kdpbi*Pbi*eps)


# FunctionDefinition id = function_for_1k_1M_34, name = function for 1k 1M_34
functi_62(Pb,eps,kdpb)=(kdpb*Pb*eps)


# FunctionDefinition id = function_for_1k_11, name = function for 1k_11
functi_63(eps,vswee1)=(vswee1*eps)


# FunctionDefinition id = function_for_1k_1M_35, name = function for 1k 1M_35
functi_64(Mw,eps,ksW)=(ksW*Mw*eps)


# FunctionDefinition id = function_for_M_i_to_M__7, name = function for M_i to M__7
functi_65(K7b,Mb,Vm7b,Wee1,eps,ib)=(Vm7b*(Mb+ib)*Wee1/(K7b+Wee1)*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_10, name = scaled Michaelis Menten 2_10
scaled_10(K8b,Vm8b,Wee1p,eps)=(Vm8b*Wee1p/(K8b+Wee1p)*eps)


# FunctionDefinition id = function_for_1k_1M_36, name = function for 1k 1M_36
functi_66(Wee1,eps,kdwee1)=(kdwee1*Wee1*eps)


# FunctionDefinition id = function_for_1k_1M_37, name = function for 1k 1M_37
functi_67(Wee1p,eps,kdwee1p)=(kdwee1p*Wee1p*eps)


# FunctionDefinition id = function_for_Cdc45_synthesis_1, name = function for Cdc45 synthesis_1
functi_68(Cdc45,Cdc45_tot,K1cdc45,Me,V1cdc45,eps)=(V1cdc45*Me*(Cdc45_tot-Cdc45)/(K1cdc45+Cdc45_tot-Cdc45)*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_11, name = scaled Michaelis Menten 2_11
scaled_11(Cdc45,K2cdc45,V2cdc45,eps)=(V2cdc45*Cdc45/(K2cdc45+Cdc45)*eps)


# FunctionDefinition id = function_for_1k_M_tot___M___M2_1, name = function for 1k M_tot - M , M2_1
functi_69(Cdc45,Pol,Pol_tot,eps,kspol)=(kspol*(Pol_tot-Pol)*Cdc45*eps)


# FunctionDefinition id = function_for_1k_1M_38, name = function for 1k 1M_38
functi_70(Pol,eps,kdpol)=(kdpol*Pol*eps)


# FunctionDefinition id = function_for_1k_1M_39, name = function for 1k 1M_39
functi_71(Pol,eps,ksprim)=(ksprim*Pol*eps)


# FunctionDefinition id = function_for_1k_1M_40, name = function for 1k 1M_40
functi_72(Primer,eps,kdprim)=(kdprim*Primer*eps)


# FunctionDefinition id = function_for_1k_M_tot___M___M2_2, name = function for 1k M_tot - M , M2_2
functi_73(ATR,ATR_tot,Primer,eps,kaatr)=(kaatr*(ATR_tot-ATR)*Primer*eps)


# FunctionDefinition id = function_for_1k_1M_41, name = function for 1k 1M_41
functi_74(ATR,eps,kdatr)=(kdatr*ATR*eps)


# FunctionDefinition id = function_for_Cdc45_synthesis_2, name = function for Cdc45 synthesis_2
functi_75(ATR,Chk1,Chk1_tot,K1chk,V1chk,eps)=(V1chk*ATR*(Chk1_tot-Chk1)/(K1chk+Chk1_tot-Chk1)*eps)


# FunctionDefinition id = scaled_Michaelis_Menten_2_12, name = scaled Michaelis Menten 2_12
scaled_12(Chk1,K2chk,V2chk,eps)=(V2chk*Chk1/(K2chk+Chk1)*eps)


# Compartment: id = cell, name = cell, constant
par cell=1.0

# Parameter:   id =  GF, name = GF, constant
par GF=1.0

# Parameter:   id =  Kagf, name = Kagf, constant
par Kagf=0.1

# Parameter:   id =  kdap1, name = kdap1, constant
par kdap1=0.15

# Parameter:   id =  eps, name = eps, constant
par eps=17.0

# Parameter:   id =  vsap1, name = vsap1, constant
par vsap1=1.0

# Parameter:   id =  kde2f, name = kde2f, constant
par kde2f=0.002

# Parameter:   id =  kde2fp, name = kde2fp, constant
par kde2fp=1.1

# Parameter:   id =  kdprb, name = kdprb, constant
par kdprb=0.01

# Parameter:   id =  kdprbp, name = kdprbp, constant
par kdprbp=0.06

# Parameter:   id =  kdprbpp, name = kdprbpp, constant
par kdprbpp=0.04

# Parameter:   id =  kpc1, name = kpc1, constant
par kpc1=0.05

# Parameter:   id =  kpc2, name = kpc2, constant
par kpc2=0.5

# Parameter:   id =  kpc3, name = kpc3, constant
par kpc3=0.025

# Parameter:   id =  kpc4, name = kpc4, constant
par kpc4=0.5

# Parameter:   id =  K1, name = K1, constant
par K1=0.1

# Parameter:   id =  K2, name = K2, constant
par K2=0.1

# Parameter:   id =  K3, name = K3, constant
par K3=0.1

# Parameter:   id =  K4, name = K4, constant
par K4=0.1

# Parameter:   id =  V1, name = V1, constant
par V1=2.2

# Parameter:   id =  V2, name = V2, constant
par V2=2.0

# Parameter:   id =  V3, name = V3, constant
par V3=1.0

# Parameter:   id =  V4, name = V4, constant
par V4=2.0

# Parameter:   id =  K1e2f, name = K1e2f, constant
par K1e2f=5.0

# Parameter:   id =  K2e2f, name = K2e2f, constant
par K2e2f=5.0

# Parameter:   id =  V1e2f, name = V1e2f, constant
par V1e2f=4.0

# Parameter:   id =  V2e2f, name = V2e2f, constant
par V2e2f=0.75

# Parameter:   id =  vse2f, name = vse2f, constant
par vse2f=0.15

# Parameter:   id =  vsprb, name = vsprb, constant
par vsprb=0.8

# Parameter:   id =  Cdk4_tot, name = Cdk4_tot, constant
par Cdk4_tot=1.5

# Parameter:   id =  Ki7, name = Ki7, constant
par Ki7=0.1

# Parameter:   id =  Ki8, name = Ki8, constant
par Ki8=2.0

# Parameter:   id =  kcd1, name = kcd1, constant
par kcd1=0.4

# Parameter:   id =  kcd2, name = kcd2, constant
par kcd2=0.005

# Parameter:   id =  kdecom1, name = kdecom1, constant
par kdecom1=0.1

# Parameter:   id =  kcom1, name = kcom1, constant
par kcom1=0.175

# Parameter:   id =  kc1, name = kc1, constant
par kc1=0.15

# Parameter:   id =  kc2, name = kc2, constant
par kc2=0.05

# Parameter:   id =  kddd, name = kddd, constant
par kddd=0.005

# Parameter:   id =  Kdd, name = Kdd, constant
par Kdd=0.1

# Parameter:   id =  K1d, name = K1d, constant
par K1d=0.1

# Parameter:   id =  K2d, name = K2d, constant
par K2d=0.1

# Parameter:   id =  Vdd, name = Vdd, constant
par Vdd=5.0

# Parameter:   id =  Vm1d, name = Vm1d, constant
par Vm1d=1.0

# Parameter:   id =  Vm2d, name = Vm2d, constant
par Vm2d=0.2

# Parameter:   id =  ae, name = ae, constant
par ae=0.25

# Parameter:   id =  Cdk2_tot, name = Cdk2_tot, constant
par Cdk2_tot=2.0

# Parameter:   id =  ib1, name = ib1, constant
par ib1=0.5

# Parameter:   id =  Ki9, name = Ki9, constant
par Ki9=0.1

# Parameter:   id =  Ki10, name = Ki10, constant
par Ki10=2.0

# Parameter:   id =  kce, name = kce, constant
par kce=0.25

# Parameter:   id =  kc3, name = kc3, constant
par kc3=0.2

# Parameter:   id =  kc4, name = kc4, constant
par kc4=0.1

# Parameter:   id =  kdecom2, name = kdecom2, constant
par kdecom2=0.1

# Parameter:   id =  kcom2, name = kcom2, constant
par kcom2=0.2

# Parameter:   id =  kdde, name = kdde, constant
par kdde=0.005

# Parameter:   id =  kddskp2, name = kddskp2, constant
par kddskp2=0.005

# Parameter:   id =  kdpe, name = kdpe, constant
par kdpe=0.075

# Parameter:   id =  kdpei, name = kdpei, constant
par kdpei=0.15

# Parameter:   id =  Kde, name = Kde, constant
par Kde=0.1

# Parameter:   id =  Kdceskp2, name = Kdceskp2, constant
par Kdceskp2=2.0

# Parameter:   id =  Kdskp2, name = Kdskp2, constant
par Kdskp2=0.5

# Parameter:   id =  Kcdh1, name = Kcdh1, constant
par Kcdh1=0.4

# Parameter:   id =  K1e, name = K1e, constant
par K1e=0.1

# Parameter:   id =  K2e, name = K2e, constant
par K2e=0.1

# Parameter:   id =  K5e, name = K5e, constant
par K5e=0.1

# Parameter:   id =  K6e, name = K6e, constant
par K6e=0.1

# Parameter:   id =  Vde, name = Vde, constant
par Vde=3.0

# Parameter:   id =  Vdskp2, name = Vdskp2, constant
par Vdskp2=1.1

# Parameter:   id =  Vm1e, name = Vm1e, constant
par Vm1e=2.0

# Parameter:   id =  Vm2e, name = Vm2e, constant
par Vm2e=1.4

# Parameter:   id =  Vm5e, name = Vm5e, constant
par Vm5e=5.0

# Parameter:   id =  V6e, name = V6e, constant
par V6e=0.8

# Parameter:   id =  vspei, name = vspei, constant
par vspei=0.13

# Parameter:   id =  vsskp2, name = vsskp2, constant
par vsskp2=0.15

# Parameter:   id =  xe1, name = xe1, constant
par xe1=1.0

# Parameter:   id =  xe2, name = xe2, constant
par xe2=1.0

# Parameter:   id =  aa, name = aa, constant
par aa=0.2

# Parameter:   id =  ib2, name = ib2, constant
par ib2=0.5

# Parameter:   id =  Ki11, name = Ki11, constant
par Ki11=0.1

# Parameter:   id =  Ki12, name = Ki12, constant
par Ki12=2.0

# Parameter:   id =  Ki13, name = Ki13, constant
par Ki13=0.1

# Parameter:   id =  Ki14, name = Ki14, constant
par Ki14=2.0

# Parameter:   id =  kca, name = kca, constant
par kca=0.0375

# Parameter:   id =  kdecom3, name = kdecom3, constant
par kdecom3=0.1

# Parameter:   id =  kcom3, name = kcom3, constant
par kcom3=0.2

# Parameter:   id =  kc5, name = kc5, constant
par kc5=0.15

# Parameter:   id =  kc6, name = kc6, constant
par kc6=0.125

# Parameter:   id =  kdda, name = kdda, constant
par kdda=0.005

# Parameter:   id =  kddp27, name = kddp27, constant
par kddp27=0.06

# Parameter:   id =  kddp27p, name = kddp27p, constant
par kddp27p=0.01

# Parameter:   id =  kdcdh1a, name = kdcdh1a, constant
par kdcdh1a=0.1

# Parameter:   id =  kdcdh1i, name = kdcdh1i, constant
par kdcdh1i=0.2

# Parameter:   id =  kdpa, name = kdpa, constant
par kdpa=0.075

# Parameter:   id =  kdpai, name = kdpai, constant
par kdpai=0.15

# Parameter:   id =  Kda, name = Kda, constant
par Kda=1.1

# Parameter:   id =  Kdp27p, name = Kdp27p, constant
par Kdp27p=0.1

# Parameter:   id =  Kdp27skp2, name = Kdp27skp2, constant
par Kdp27skp2=0.1

# Parameter:   id =  Kacdc20, name = Kacdc20, constant
par Kacdc20=2.0

# Parameter:   id =  K1a, name = K1a, constant
par K1a=0.1

# Parameter:   id =  K2a, name = K2a, constant
par K2a=0.1

# Parameter:   id =  K1cdh1, name = K1cdh1, constant
par K1cdh1=0.01

# Parameter:   id =  K2cdh1, name = K2cdh1, constant
par K2cdh1=0.01

# Parameter:   id =  K5a, name = K5a, constant
par K5a=0.1

# Parameter:   id =  K6a, name = K6a, constant
par K6a=0.1

# Parameter:   id =  K1p27, name = K1p27, constant
par K1p27=0.5

# Parameter:   id =  K2p27, name = K2p27, constant
par K2p27=0.5

# Parameter:   id =  Vdp27p, name = Vdp27p, constant
par Vdp27p=5.0

# Parameter:   id =  Vda, name = Vda, constant
par Vda=2.5

# Parameter:   id =  Vm1a, name = Vm1a, constant
par Vm1a=2.0

# Parameter:   id =  Vm2a, name = Vm2a, constant
par Vm2a=1.85

# Parameter:   id =  Vm5a, name = Vm5a, constant
par Vm5a=4.0

# Parameter:   id =  V6a, name = V6a, constant
par V6a=1.0

# Parameter:   id =  vscdh1a, name = vscdh1a, constant
par vscdh1a=0.11

# Parameter:   id =  vspai, name = vspai, constant
par vspai=0.105

# Parameter:   id =  vs1p27, name = vs1p27, constant
par vs1p27=0.8

# Parameter:   id =  vs2p27, name = vs2p27, constant
par vs2p27=0.1

# Parameter:   id =  V1cdh1, name = V1cdh1, constant
par V1cdh1=1.25

# Parameter:   id =  V2cdh1, name = V2cdh1, constant
par V2cdh1=8.0

# Parameter:   id =  V1p27, name = V1p27, constant
par V1p27=100.0

# Parameter:   id =  V2p27, name = V2p27, constant
par V2p27=0.1

# Parameter:   id =  xa1, name = xa1, constant
par xa1=1.0

# Parameter:   id =  xa2, name = xa2, constant
par xa2=1.0

# Parameter:   id =  ab, name = ab, constant
par ab=0.11

# Parameter:   id =  Cdk1_tot, name = Cdk1_tot, constant
par Cdk1_tot=0.5

# Parameter:   id =  ib, name = ib, constant
par ib=0.75

# Parameter:   id =  ib3, name = ib3, constant
par ib3=0.5

# Parameter:   id =  kc7, name = kc7, constant
par kc7=0.12

# Parameter:   id =  kc8, name = kc8, constant
par kc8=0.2

# Parameter:   id =  kdecom4, name = kdecom4, constant
par kdecom4=0.1

# Parameter:   id =  kcom4, name = kcom4, constant
par kcom4=0.25

# Parameter:   id =  kdcdc20a, name = kdcdc20a, constant
par kdcdc20a=0.05

# Parameter:   id =  kdcdc20i, name = kdcdc20i, constant
par kdcdc20i=0.14

# Parameter:   id =  kddb, name = kddb, constant
par kddb=0.005

# Parameter:   id =  kdpb, name = kdpb, constant
par kdpb=0.1

# Parameter:   id =  kdpbi, name = kdpbi, constant
par kdpbi=0.2

# Parameter:   id =  kdwee1, name = kdwee1, constant
par kdwee1=0.1

# Parameter:   id =  kdwee1p, name = kdwee1p, constant
par kdwee1p=0.2

# Parameter:   id =  Kdb, name = Kdb, constant
par Kdb=0.005

# Parameter:   id =  Kdbcdc20, name = Kdbcdc20, constant
par Kdbcdc20=0.2

# Parameter:   id =  Kdbcdh1, name = Kdbcdh1, constant
par Kdbcdh1=0.1

# Parameter:   id =  ksW, name = ksW, constant
par ksW=5.0

# Parameter:   id =  K1b, name = K1b, constant
par K1b=0.1

# Parameter:   id =  K2b, name = K2b, constant
par K2b=0.1

# Parameter:   id =  K3b, name = K3b, constant
par K3b=0.1

# Parameter:   id =  K4b, name = K4b, constant
par K4b=0.1

# Parameter:   id =  K5b, name = K5b, constant
par K5b=0.1

# Parameter:   id =  K6b, name = K6b, constant
par K6b=0.1

# Parameter:   id =  K7b, name = K7b, constant
par K7b=0.1

# Parameter:   id =  K8b, name = K8b, constant
par K8b=0.1

# Parameter:   id =  vcb, name = vcb, constant
par vcb=0.05

# Parameter:   id =  Vdb, name = Vdb, constant
par Vdb=0.06

# Parameter:   id =  Vm1b, name = Vm1b, constant
par Vm1b=3.9

# Parameter:   id =  Vm2b, name = Vm2b, constant
par Vm2b=2.1

# Parameter:   id =  vscdc20i, name = vscdc20i, constant
par vscdc20i=0.1

# Parameter:   id =  Vm3b, name = Vm3b, constant
par Vm3b=8.0

# Parameter:   id =  Vm4b, name = Vm4b, constant
par Vm4b=0.7

# Parameter:   id =  Vm5b, name = Vm5b, constant
par Vm5b=5.0

# Parameter:   id =  V6b, name = V6b, constant
par V6b=1.0

# Parameter:   id =  Vm7b, name = Vm7b, constant
par Vm7b=1.2

# Parameter:   id =  Vm8b, name = Vm8b, constant
par Vm8b=1.0

# Parameter:   id =  vspbi, name = vspbi, constant
par vspbi=0.12

# Parameter:   id =  vswee1, name = vswee1, constant
par vswee1=0.06

# Parameter:   id =  xb1, name = xb1, constant
par xb1=1.0

# Parameter:   id =  xb2, name = xb2, constant
par xb2=1.0

# Parameter:   id =  ATR_tot, name = ATR_tot, constant
par ATR_tot=0.5

# Parameter:   id =  Chk1_tot, name = Chk1_tot, constant
par Chk1_tot=0.5

# Parameter:   id =  Cdc45_tot, name = Cdc45_tot, constant
par Cdc45_tot=0.5

# Parameter:   id =  kaatr, name = kaatr, constant
par kaatr=0.022

# Parameter:   id =  kdatr, name = kdatr, constant
par kdatr=0.15

# Parameter:   id =  kdpol, name = kdpol, constant
par kdpol=0.2

# Parameter:   id =  kdprim, name = kdprim, constant
par kdprim=0.15

# Parameter:   id =  kspol, name = kspol, constant
par kspol=0.8

# Parameter:   id =  ksprim, name = ksprim, constant
par ksprim=0.05

# Parameter:   id =  K1cdc45, name = K1cdc45, constant
par K1cdc45=0.02

# Parameter:   id =  K2cdc45, name = K2cdc45, constant
par K2cdc45=0.02

# Parameter:   id =  K1chk, name = K1chk, constant
par K1chk=0.5

# Parameter:   id =  K2chk, name = K2chk, constant
par K2chk=0.5

# Parameter:   id =  Pol_tot, name = Pol_tot, constant
par Pol_tot=0.5

# Parameter:   id =  V1cdc45, name = V1cdc45, constant
par V1cdc45=0.8

# Parameter:   id =  V2cdc45, name = V2cdc45, constant
par V2cdc45=0.12

# Parameter:   id =  V1chk, name = V1chk, constant
par V1chk=4.0

# Parameter:   id =  V2chk, name = V2chk, constant
par V2chk=0.1

# Parameter:   id =  Kdw, name = Kdw, constant
par Kdw=0.5

# Parameter:   id =  Kiw, name = Kiw, constant
par Kiw=0.001

# Parameter:   id =  n, name = n, constant
par n=4.0

# Parameter:   id =  vdw, name = vdw, constant
par vdw=0.5

# Parameter:   id =  vsw, name = vsw, constant
par vsw=0.0

# Reaction: id = AP1_simulation_by_growth_factor, name = AP1 simulation by growth factor

AP1_simul=cell*scaled_Mi(GF, Kagf, eps, vsap1)

# Reaction: id = AP1_decay, name = AP1 decay

AP1_decay=cell*function_(AP1, eps, kdap1)

# Reaction: id = pRB_synthesis, name = pRB synthesis

pRB_synth=cell*functio_1(eps, vsprb)

# Reaction: id = pRB_and_E2F_complex_formation, name = pRB and E2F complex formation

pRB_and_E=cell*functio_2(E2F, eps, kpc1, pRB)

# Reaction: id = pRB_and_E2f_complex_dissociation, name = pRB and E2f complex dissociation

pRB_and_1=cell*functio_3(eps, kpc2, pRBc1)

# Reaction: id = pRB_phosphorylation_through_cyclin_D, name = pRB phosphorylation through cyclin D

pRB_phosp=cell*modified_(K1, Md, Mdp27, V1, eps, pRB)

# Reaction: id = pRBp_dephosphorylation, name = pRBp dephosphorylation

pRBp_deph=cell*scaled__1(K2, V2, eps, pRBp)

# Reaction: id = pRB_decay, name = pRB decay

pRB_decay=cell*functio_4(eps, kdprb, pRBp)

# Reaction: id = pRBp_phosphorylation, name = pRBp phosphorylation

pRBp_phos=cell*modifie_1(K3, Me, V3, eps, pRBp)

# Reaction: id = pRBpp_dephosphorylation, name = pRBpp dephosphorylation

pRBpp_dep=cell*scaled__2(K4, V4, eps, pRBpp)

# Reaction: id = pRBp_and_E2F_complex_formation, name = pRBp and E2F complex formation

pRBp_and_=cell*functio_5(E2F, eps, kpc3, pRBp)

# Reaction: id = PRBp_and_E2F_complex_dissociation, name = PRBp and E2F complex dissociation

PRBp_an_1=cell*functio_6(eps, kpc4, pRBc2)

# Reaction: id = pRBp_decay, name = pRBp decay

pRBp_deca=cell*functio_7(eps, kdprbp, pRBp)

# Reaction: id = pRBpp_decay, name = pRBpp decay

pRBpp_dec=cell*functio_8(eps, kdprbpp, pRBpp)

# Reaction: id = E2F_synthesis, name = E2F synthesis

E2F_synth=cell*functio_9(eps, vse2f)

# Reaction: id = E2F_phosphorylation, name = E2F phosphorylation

E2F_phosp=cell*modifie_2(E2F, K1e2f, Ma, V1e2f, eps)

# Reaction: id = E2Fp_dephosphorylation, name = E2Fp dephosphorylation

E2Fp_deph=cell*scaled__3(E2Fp, K2e2f, V2e2f, eps)

# Reaction: id = E2F_decay, name = E2F decay

E2F_decay=cell*functi_10(E2F, eps, kde2f)

# Reaction: id = E2Fp_decay, name = E2Fp decay

E2Fp_deca=cell*functi_11(E2Fp, eps, kde2fp)

# Reaction: id = Cd_synthesis, name = Cd synthesis

Cd_synthe=cell*functi_12(AP1, eps, kcd1)

# Reaction: id = Cd_synthesis_through_E2F, name = Cd synthesis through E2F

Cd_synt_1=cell*double_mi(E2F, Ki7, Ki8, eps, kcd2, pRB, pRBp)

# Reaction: id = Cd_cdk4_6_complex_formation, name = Cd cdk4/6 complex formation

Cd_cdk4_6=cell*functi_13(Cd, Cdk4_tot, Md, Mdi, Mdp27, eps, kcom1)

# Reaction: id = Cd_cdk4_6_complex_dissociation, name = Cd cdk4/6 complex dissociation

Cd_cdk4_1=cell*functi_14(Mdi, eps, kdecom1)

# Reaction: id = Cd_degradation, name = Cd degradation

Cd_degrad=cell*scaled__4(Cd, Kdd, Vdd, eps)

# Reaction: id = Cd_decay, name = Cd decay

Cd_decay=cell*functi_15(Cd, eps, kddd)

# Reaction: id = Md_complex_inactivation, name = Md complex inactivation

Md_comple=cell*scaled__5(K2d, Md, Vm2d, eps)

# Reaction: id = Md_complex_activation, name = Md complex activation

Md_comp_1=cell*scaled__6(K1d, Mdi, Vm1d, eps)

# Reaction: id = Md_p27_complex_formation, name = Md p27 complex formation

Md_p27_co=cell*functi_16(Md, eps, kc1, p27)

# Reaction: id = Md_p27_complex_dissociation, name = Md p27 complex dissociation

Md_p27__1=cell*functi_17(Mdp27, eps, kc2)

# Reaction: id = Ce_synthesis, name = Ce synthesis

Ce_synthe=cell*double__1(E2F, Ki10, Ki9, eps, kce, pRB, pRBp)

# Reaction: id = Ce_cdk2_complex_formation, name = Ce cdk2 complex formation

Ce_cdk2_c=cell*functi_18(Cdk2_tot, Ce, Ma, Mai, Map27, Me, Mei, Mep27, eps, kcom2)

# Reaction: id = Ce_cdk2_complex_dissociation, name = Ce cdk2 complex dissociation

Ce_cdk2_1=cell*functi_19(Mei, eps, kdecom2)

# Reaction: id = Ce_degradation_through_Skp2, name = Ce degradation through Skp2

Ce_degrad=cell*double__2(Ce, Kdceskp2, Kde, Skp2, Vde, eps)

# Reaction: id = Ce_decay, name = Ce decay

Ce_decay=cell*functi_20(Ce, eps, kdde)

# Reaction: id = Me_complex_deactivation, name = Me complex deactivation

Me_comple=cell*functi_21(K2e, Me, Vm2e, Wee1, eps, ib1)

# Reaction: id = Me_complex_activation, name = Me complex activation

Me_comp_1=cell*modifie_3(K1e, Mei, Pe, Vm1e, eps)

# Reaction: id = Me_p27_complex_formation, name = Me p27 complex formation

Me_p27_co=cell*functi_22(Me, eps, kc3, p27)

# Reaction: id = Me_p27_complex_dissociation, name = Me p27 complex dissociation

Me_p27__1=cell*functi_23(Mep27, eps, kc4)

# Reaction: id = Skp2_synthesis, name = Skp2 synthesis

Skp2_synt=cell*functi_24(eps, vsskp2)

# Reaction: id = Skp2_degradation_through_Cdh1, name = Skp2 degradation through Cdh1

Skp2_degr=cell*double__3(Cdh1a, Kcdh1, Kdskp2, Skp2, Vdskp2, eps)

# Reaction: id = Skp2_decay, name = Skp2 decay

Skp2_deca=cell*functi_25(Skp2, eps, kddskp2)

# Reaction: id = inactive_dephosphorylated_cdc25_synthesis, name = inactive dephosphorylated cdc25 synthesis

inactive_=cell*functi_26(eps, vspei)

# Reaction: id = Cdc25_deactivation_through_dephosphorylation, name = Cdc25 deactivation through dephosphorylation

Cdc25_dea=cell*functi_27(Chk1, K6e, Pe, V6e, eps, xe1, xe2)

# Reaction: id = Cdc25_activation_through_phosphorylation, name = Cdc25 activation through phosphorylation

Cdc25_act=cell*functi_28(K5e, Me, Pei, Vm5e, ae, eps)

# Reaction: id = inactive_Cdc25_decay, name = inactive Cdc25 decay

inactiv_1=cell*functi_29(Pei, eps, kdpei)

# Reaction: id = active_Cdc2__decay, name = active Cdc2  decay

active_Cd=cell*functi_30(Pe, eps, kdpe)

# Reaction: id = Ca_synthesis_through_E2F, name = Ca synthesis through E2F

Ca_synthe=cell*double__4(E2F, Ki11, Ki12, eps, kca, pRB, pRBp)

# Reaction: id = Ca_cdk2_complex_formation, name = Ca cdk2 complex formation

Ca_cdk2_c=cell*functi_31(Ca, Cdk2_tot, Ma, Mai, Map27, Me, Mei, Mep27, eps, kcom3)

# Reaction: id = Ca_cdk2_complex_dissociation, name = Ca cdk2 complex dissociation

Ca_cdk2_1=cell*functi_32(Mai, eps, kdecom3)

# Reaction: id = Ca_degradation, name = Ca degradation

Ca_degrad=cell*double__5(Ca, Cdc20a, Kacdc20, Kda, Vda, eps)

# Reaction: id = Ca_decay, name = Ca decay

Ca_decay=cell*functi_33(Ca, eps, kdda)

# Reaction: id = Ma_inactivation, name = Ma inactivation

Ma_inacti=cell*functi_34(K2a, Ma, Vm2a, Wee1, eps, ib2)

# Reaction: id = Ma_activation, name = Ma activation

Ma_activa=cell*modifie_4(K1a, Mai, Pa, Vm1a, eps)

# Reaction: id = Ma_p27_complex_formation, name = Ma p27 complex formation

Ma_p27_co=cell*functi_35(Ma, eps, kc5, p27)

# Reaction: id = Ma_p27_complex_dissociation, name = Ma p27 complex dissociation

Ma_p27__1=cell*functi_36(Map27, eps, kc6)

# Reaction: id = p27_synthesis, name = p27 synthesis

p27_synth=cell*functi_37(eps, vs1p27)

# Reaction: id = p27_synthesis_through_E2F, name = p27 synthesis through E2F

p27_syn_1=cell*double__6(E2F, Ki13, Ki14, eps, pRB, pRBp, vs2p27)

# Reaction: id = Mb_p27_complex_formation, name = Mb p27 complex formation

Mb_p27_co=cell*functi_38(Mb, eps, kc7, p27)

# Reaction: id = Mb_p26_complex_dissociation, name = Mb p26 complex dissociation

Mb_p26_co=cell*functi_39(Mbp27, eps, kc8)

# Reaction: id = p27_phosphorylation, name = p27 phosphorylation

p27_phosp=cell*modifie_5(K1p27, Me, V1p27, eps, p27)

# Reaction: id = p27_dephosphorylation, name = p27 dephosphorylation

p27_depho=cell*scaled__7(K2p27, V2p27, eps, p27p)

# Reaction: id = p27_decay, name = p27 decay

p27_decay=cell*functi_40(eps, kddp27, p27)

# Reaction: id = p27_degradation, name = p27 degradation

p27_degra=cell*double__7(Kdp27p, Kdp27skp2, Skp2, Vdp27p, eps, p27p)

# Reaction: id = p27p_decay, name = p27p decay

p27p_deca=cell*functi_41(eps, kddp27p, p27p)

# Reaction: id = cdh1_inactivation, name = cdh1 inactivation

cdh1_inac=cell*modifie_6(Cdh1a, K2cdh1, Ma, Mb, V2cdh1, eps)

# Reaction: id = cdh1_activation, name = cdh1 activation

cdh1_acti=cell*scaled__8(Cdh1i, K1cdh1, V1cdh1, eps)

# Reaction: id = inactive_cdh1_decay, name = inactive cdh1 decay

inactiv_2=cell*functi_42(Cdh1i, eps, kdcdh1i)

# Reaction: id = active_cdh1_decay, name = active cdh1 decay

active__1=cell*functi_43(Cdh1a, eps, kdcdh1a)

# Reaction: id = active_cdh1_synthesis, name = active cdh1 synthesis

active__2=cell*functi_44(eps, vscdh1a)

# Reaction: id = cdc25_inactivation, name = cdc25 inactivation

cdc25_ina=cell*functi_45(Chk1, K6a, Pa, V6a, eps, xa1, xa2)

# Reaction: id = cdc25_activation, name = cdc25 activation

cdc25_a_1=cell*functi_46(K5a, Ma, Pai, Vm5a, aa, eps)

# Reaction: id = inactive_cdc25_decay, name = inactive cdc25 decay

inactiv_3=cell*functi_47(Pai, eps, kdpai)

# Reaction: id = inactive_cdc25_syntehsis, name = inactive cdc25 syntehsis

inactiv_4=cell*functi_48(eps, vspai)

# Reaction: id = active_cdc25_decay, name = active cdc25 decay

active__3=cell*functi_49(Pa, eps, kdpa)

# Reaction: id = Cb_synthesis, name = Cb synthesis

Cb_synthe=cell*functi_50(eps, vcb)

# Reaction: id = Cb_degradation, name = Cb degradation

Cb_degrad=cell*functi_51(Cb, Cdk1_tot, Mb, Mbi, Mbp27, eps, kcom4)

# Reaction: id = Mbi_complex_dissociation, name = Mbi complex dissociation

Mbi_compl=cell*functi_52(Mbi, eps, kdecom4)

# Reaction: id = Cb_degradation_through_Cdc20, name = Cb degradation through Cdc20

Cb_degr_1=cell*double__8(Cb, Cdc20a, Kdb, Kdbcdc20, Vdb, eps)

# Reaction: id = Cb_decay, name = Cb decay

Cb_decay=cell*functi_53(Cb, eps, kddb)

# Reaction: id = Cb_degradation_through_cdh1, name = Cb degradation through cdh1

Cb_degr_2=cell*double__9(Cb, Cdh1a, Kdb, Kdbcdh1, Vdb, eps)

# Reaction: id = Mb_inactivation, name = Mb inactivation

Mb_inacti=cell*functi_54(K2b, Mb, Vm2b, Wee1, eps, ib3)

# Reaction: id = Mv_activation, name = Mv activation

Mv_activa=cell*modifie_7(K1b, Mbi, Pb, Vm1b, eps)

# Reaction: id = inactive_cdc20_synthesis, name = inactive cdc20 synthesis

inactiv_5=cell*functi_55(eps, vscdc20i)

# Reaction: id = cdc20_activation, name = cdc20 activation

cdc20_act=cell*modifie_8(Cdc20i, K3b, Mb, Vm3b, eps)

# Reaction: id = Cdc20_deactivation, name = Cdc20 deactivation

Cdc20_dea=cell*scaled__9(Cdc20a, K4b, Vm4b, eps)

# Reaction: id = inactive_cdc20_decay, name = inactive cdc20 decay

inactiv_6=cell*functi_56(Cdc20i, eps, kdcdc20i)

# Reaction: id = actice_cdc20_decay, name = actice cdc20 decay

actice_cd=cell*functi_57(Cdc20a, eps, kdcdc20a)

# Reaction: id = inactive_cdc25_synthesis, name = inactive cdc25 synthesis

inactiv_7=cell*functi_58(eps, vspbi)

# Reaction: id = cdc25_deactivation_2, name = cdc25 deactivation 2

cdc25_d_1=cell*functi_59(Chk1, K6b, Pb, V6b, eps, xb1, xb2)

# Reaction: id = cdc25_activation_2, name = cdc25 activation 2

cdc25_a_2=cell*functi_60(K5b, Mb, Pbi, Vm5b, ab, eps)

# Reaction: id = inactive_cdc25_decay_2, name = inactive cdc25 decay 2

inactiv_8=cell*functi_61(Pbi, eps, kdpbi)

# Reaction: id = active_cdc25_decay_2, name = active cdc25 decay 2

active__4=cell*functi_62(Pb, eps, kdpb)

# Reaction: id = Wee1_synthesis, name = Wee1 synthesis

Wee1_synt=cell*functi_63(eps, vswee1)

# Reaction: id = Wee1_translation, name = Wee1 translation

Wee1_tran=cell*functi_64(Mw, eps, ksW)

# Reaction: id = Wee1_phosphorylation, name = Wee1 phosphorylation

Wee1_phos=cell*functi_65(K7b, Mb, Vm7b, Wee1, eps, ib)

# Reaction: id = Wee1_dephosphorylation, name = Wee1 dephosphorylation

Wee1_deph=cell*scaled_10(K8b, Vm8b, Wee1p, eps)

# Reaction: id = Wee1_decay, name = Wee1 decay

Wee1_deca=cell*functi_66(Wee1, eps, kdwee1)

# Reaction: id = Wee1p_decay, name = Wee1p decay

Wee1p_dec=cell*functi_67(Wee1p, eps, kdwee1p)

# Reaction: id = Cdc45_synthesis, name = Cdc45 synthesis

Cdc45_syn=cell*functi_68(Cdc45, Cdc45_tot, K1cdc45, Me, V1cdc45, eps)

# Reaction: id = Cdc45_decay, name = Cdc45 decay

Cdc45_dec=cell*scaled_11(Cdc45, K2cdc45, V2cdc45, eps)

# Reaction: id = Polymerase_activation, name = Polymerase activation

Polymeras=cell*functi_69(Cdc45, Pol, Pol_tot, eps, kspol)

# Reaction: id = Polymerase_deactivation, name = Polymerase deactivation

Polymer_1=cell*functi_70(Pol, eps, kdpol)

# Reaction: id = RNA_Primer_synthesis, name = RNA Primer synthesis

RNA_Prime=cell*functi_71(Pol, eps, ksprim)

# Reaction: id = RNA_Primer_degradation, name = RNA Primer degradation

RNA_Pri_1=cell*functi_72(Primer, eps, kdprim)

# Reaction: id = ATR_activation_by_Primer, name = ATR activation by Primer

ATR_activ=cell*functi_73(ATR, ATR_tot, Primer, eps, kaatr)

# Reaction: id = Atr_deactivation_by_Primer, name = Atr deactivation by Primer

Atr_deact=cell*functi_74(ATR, eps, kdatr)

# Reaction: id = Chk1_synthesis, name = Chk1 synthesis

Chk1_synt=cell*functi_75(ATR, Chk1, Chk1_tot, K1chk, V1chk, eps)

# Reaction: id = Chk1_decay, name = Chk1 decay

Chk1_deca=cell*scaled_12(Chk1, K2chk, V2chk, eps)

# Species:   id = pRB, name = pRB, affected by kineticLaw

init pRB=1.0
dpRB/dt=(1/(cell))*(( 1.0 * pRB_synth) + (-1.0 * pRB_and_E) + ( 1.0 * pRB_and_1) + (-1.0 * pRB_phosp) + ( 1.0 * pRBp_deph) + (-1.0 * pRB_decay))

# Species:   id = pRBp, name = pRBp, affected by kineticLaw

init pRBp=0.25
dpRBp/dt=(1/(cell))*(( 1.0 * pRB_phosp) + (-1.0 * pRBp_deph) + (-1.0 * pRBp_phos) + ( 1.0 * pRBpp_dep) + (-1.0 * pRBp_and_) + ( 1.0 * PRBp_an_1) + (-1.0 * pRBp_deca))

# Species:   id = pRBpp, name = pRBpp, affected by kineticLaw

init pRBpp=0.1
dpRBpp/dt=(1/(cell))*(( 1.0 * pRBp_phos) + (-1.0 * pRBpp_dep) + (-1.0 * pRBpp_dec))

# Species:   id = E2F, name = E2F, affected by kineticLaw

init E2F=0.1
dE2F/dt=(1/(cell))*((-1.0 * pRB_and_E) + ( 1.0 * pRB_and_1) + (-1.0 * pRBp_and_) + ( 1.0 * PRBp_an_1) + ( 1.0 * E2F_synth) + (-1.0 * E2F_phosp) + ( 1.0 * E2Fp_deph) + (-1.0 * E2F_decay))

# Species:   id = E2Fp, name = E2Fp, affected by kineticLaw

init E2Fp=0.001
dE2Fp/dt=(1/(cell))*(( 1.0 * E2F_phosp) + (-1.0 * E2Fp_deph) + (-1.0 * E2Fp_deca))

# Species:   id = pRBc1, name = pRBc1, affected by kineticLaw

init pRBc1=0.1
dpRBc1/dt=(1/(cell))*(( 1.0 * pRB_and_E) + (-1.0 * pRB_and_1))

# Species:   id = pRBc2, name = pRBc2, affected by kineticLaw

init pRBc2=0.05
dpRBc2/dt=(1/(cell))*(( 1.0 * pRBp_and_) + (-1.0 * PRBp_an_1))

# Species:   id = Cd, name = Cd, affected by kineticLaw

init Cd=0.01
dCd/dt=(1/(cell))*(( 1.0 * Cd_synthe) + ( 1.0 * Cd_synt_1) + (-1.0 * Cd_cdk4_6) + ( 1.0 * Cd_cdk4_1) + (-1.0 * Cd_degrad) + (-1.0 * Cd_decay))

# Species:   id = Mdi, name = Mdi, affected by kineticLaw

init Mdi=0.01
dMdi/dt=(1/(cell))*(( 1.0 * Cd_cdk4_6) + (-1.0 * Cd_cdk4_1) + ( 1.0 * Md_comple) + (-1.0 * Md_comp_1))

# Species:   id = Md, name = Md, affected by kineticLaw

init Md=0.01
dMd/dt=(1/(cell))*((-1.0 * Md_comple) + ( 1.0 * Md_comp_1) + (-1.0 * Md_p27_co) + ( 1.0 * Md_p27__1))

# Species:   id = Mdp27, name = Mdp27, affected by kineticLaw

init Mdp27=0.01
dMdp27/dt=(1/(cell))*(( 1.0 * Md_p27_co) + (-1.0 * Md_p27__1))

# Species:   id = Ce, name = Ce, affected by kineticLaw

init Ce=0.01
dCe/dt=(1/(cell))*(( 1.0 * Ce_synthe) + (-1.0 * Ce_cdk2_c) + ( 1.0 * Ce_cdk2_1) + (-1.0 * Ce_degrad) + (-1.0 * Ce_decay))

# Species:   id = Mei, name = Mei, affected by kineticLaw

init Mei=0.01
dMei/dt=(1/(cell))*(( 1.0 * Ce_cdk2_c) + (-1.0 * Ce_cdk2_1) + ( 1.0 * Me_comple) + (-1.0 * Me_comp_1))

# Species:   id = Me, name = Me, affected by kineticLaw

init Me=0.01
dMe/dt=(1/(cell))*((-1.0 * Me_comple) + ( 1.0 * Me_comp_1) + (-1.0 * Me_p27_co) + ( 1.0 * Me_p27__1))

# Species:   id = Skp2, name = Skp2, affected by kineticLaw

init Skp2=0.01
dSkp2/dt=(1/(cell))*(( 1.0 * Skp2_synt) + (-1.0 * Skp2_degr) + (-1.0 * Skp2_deca))

# Species:   id = Mep27, name = Mep27, affected by kineticLaw

init Mep27=0.01
dMep27/dt=(1/(cell))*(( 1.0 * Me_p27_co) + (-1.0 * Me_p27__1))

# Species:   id = Pei, name = Pei, affected by kineticLaw

init Pei=0.01
dPei/dt=(1/(cell))*(( 1.0 * inactive_) + ( 1.0 * Cdc25_dea) + (-1.0 * Cdc25_act) + (-1.0 * inactiv_1))

# Species:   id = Pe, name = Pe, affected by kineticLaw

init Pe=0.01
dPe/dt=(1/(cell))*((-1.0 * Cdc25_dea) + ( 1.0 * Cdc25_act) + (-1.0 * active_Cd))

# Species:   id = Ca, name = Ca, affected by kineticLaw

init Ca=0.01
dCa/dt=(1/(cell))*(( 1.0 * Ca_synthe) + (-1.0 * Ca_cdk2_c) + ( 1.0 * Ca_cdk2_1) + (-1.0 * Ca_degrad) + (-1.0 * Ca_decay))

# Species:   id = Mai, name = Mai, affected by kineticLaw

init Mai=0.01
dMai/dt=(1/(cell))*(( 1.0 * Ca_cdk2_c) + (-1.0 * Ca_cdk2_1) + ( 1.0 * Ma_inacti) + (-1.0 * Ma_activa))

# Species:   id = Ma, name = Ma, affected by kineticLaw

init Ma=0.01
dMa/dt=(1/(cell))*((-1.0 * Ma_inacti) + ( 1.0 * Ma_activa) + (-1.0 * Ma_p27_co) + ( 1.0 * Ma_p27__1))

# Species:   id = Map27, name = Map27, affected by kineticLaw

init Map27=0.01
dMap27/dt=(1/(cell))*(( 1.0 * Ma_p27_co) + (-1.0 * Ma_p27__1))

# Species:   id = p27, name = p27, affected by kineticLaw

init p27=0.25
dp27/dt=(1/(cell))*((-1.0 * Md_p27_co) + ( 1.0 * Md_p27__1) + (-1.0 * Me_p27_co) + ( 1.0 * Me_p27__1) + (-1.0 * Ma_p27_co) + ( 1.0 * Ma_p27__1) + ( 1.0 * p27_synth) + ( 1.0 * p27_syn_1) + (-1.0 * Mb_p27_co) + ( 1.0 * Mb_p26_co) + (-1.0 * p27_phosp) + ( 1.0 * p27_depho) + (-1.0 * p27_decay))

# Species:   id = p27p, name = p27p, affected by kineticLaw

init p27p=0.01
dp27p/dt=(1/(cell))*(( 1.0 * p27_phosp) + (-1.0 * p27_depho) + (-1.0 * p27_degra) + (-1.0 * p27p_deca))

# Species:   id = Cdh1i, name = Cdh1i, affected by kineticLaw

init Cdh1i=0.01
dCdh1i/dt=(1/(cell))*(( 1.0 * cdh1_inac) + (-1.0 * cdh1_acti) + (-1.0 * inactiv_2))

# Species:   id = Cdh1a, name = Cdh1a, affected by kineticLaw

init Cdh1a=0.01
dCdh1a/dt=(1/(cell))*((-1.0 * cdh1_inac) + ( 1.0 * cdh1_acti) + (-1.0 * active__1) + ( 1.0 * active__2))

# Species:   id = Pai, name = Pai, affected by kineticLaw

init Pai=0.01
dPai/dt=(1/(cell))*(( 1.0 * cdc25_ina) + (-1.0 * cdc25_a_1) + (-1.0 * inactiv_3) + ( 1.0 * inactiv_4))

# Species:   id = Pa, name = Pa, affected by kineticLaw

init Pa=0.01
dPa/dt=(1/(cell))*((-1.0 * cdc25_ina) + ( 1.0 * cdc25_a_1) + (-1.0 * active__3))

# Species:   id = Cb, name = Cb, affected by kineticLaw

init Cb=0.01
dCb/dt=(1/(cell))*(( 1.0 * Cb_synthe) + (-1.0 * Cb_degrad) + ( 1.0 * Mbi_compl) + (-1.0 * Cb_degr_1) + (-1.0 * Cb_decay) + (-1.0 * Cb_degr_2))

# Species:   id = Mbi, name = Mbi, affected by kineticLaw

init Mbi=0.01
dMbi/dt=(1/(cell))*(( 1.0 * Cb_degrad) + (-1.0 * Mbi_compl) + ( 1.0 * Mb_inacti) + (-1.0 * Mv_activa))

# Species:   id = Mb, name = Mb, affected by kineticLaw

init Mb=0.01
dMb/dt=(1/(cell))*((-1.0 * Mb_p27_co) + ( 1.0 * Mb_p26_co) + (-1.0 * Mb_inacti) + ( 1.0 * Mv_activa))

# Species:   id = Mbp27, name = Mbp27, affected by kineticLaw

init Mbp27=0.01
dMbp27/dt=(1/(cell))*(( 1.0 * Mb_p27_co) + (-1.0 * Mb_p26_co))

# Species:   id = Cdc20i, name = Cdc20i, affected by kineticLaw

init Cdc20i=0.01
dCdc20i/dt=(1/(cell))*(( 1.0 * inactiv_5) + (-1.0 * cdc20_act) + ( 1.0 * Cdc20_dea) + (-1.0 * inactiv_6))

# Species:   id = Cdc20a, name = Cdc20a, affected by kineticLaw

init Cdc20a=0.01
dCdc20a/dt=(1/(cell))*(( 1.0 * cdc20_act) + (-1.0 * Cdc20_dea) + (-1.0 * actice_cd))

# Species:   id = Pbi, name = Pbi, affected by kineticLaw

init Pbi=0.01
dPbi/dt=(1/(cell))*(( 1.0 * inactiv_7) + ( 1.0 * cdc25_d_1) + (-1.0 * cdc25_a_2) + (-1.0 * inactiv_8))

# Species:   id = Pb, name = Pb, affected by kineticLaw

init Pb=0.1
dPb/dt=(1/(cell))*((-1.0 * cdc25_d_1) + ( 1.0 * cdc25_a_2) + (-1.0 * active__4))

# Species:   id = Wee1, name = Wee1, affected by kineticLaw

init Wee1=0.1
dWee1/dt=(1/(cell))*(( 1.0 * Wee1_synt) + ( 1.0 * Wee1_tran) + (-1.0 * Wee1_phos) + ( 1.0 * Wee1_deph) + (-1.0 * Wee1_deca))

# Species:   id = Wee1p, name = Wee1p, affected by kineticLaw

init Wee1p=0.01
dWee1p/dt=(1/(cell))*(( 1.0 * Wee1_phos) + (-1.0 * Wee1_deph) + (-1.0 * Wee1p_dec))

# Species:   id = Pol, name = Pol, affected by kineticLaw

init Pol=0.01
dPol/dt=(1/(cell))*(( 1.0 * Polymeras) + (-1.0 * Polymer_1))

# Species:   id = Cdc45, name = Cdc45, affected by kineticLaw

init Cdc45=0.01
dCdc45/dt=(1/(cell))*(( 1.0 * Cdc45_syn) + (-1.0 * Cdc45_dec) + (-1.0 * Polymeras) + ( 1.0 * Polymer_1))

# Species:   id = Primer, name = Primer, affected by kineticLaw

init Primer=0.01
dPrimer/dt=(1/(cell))*(( 1.0 * RNA_Prime) + (-1.0 * RNA_Pri_1) + (-1.0 * ATR_activ) + ( 1.0 * Atr_deact))

# Species:   id = Chk1, name = Chk1, affected by kineticLaw

init Chk1=0.01
dChk1/dt=(1/(cell))*(( 1.0 * Chk1_synt) + (-1.0 * Chk1_deca))

# Species:   id = ATR, name = ATR, affected by kineticLaw

init ATR=0.01
dATR/dt=(1/(cell))*(( 1.0 * ATR_activ) + (-1.0 * Atr_deact))

# Species:   id = AP1, name = AP1, affected by kineticLaw

init AP1=0.01
dAP1/dt=(1/(cell))*(( 1.0 * AP1_simul) + (-1.0 * AP1_decay))

# Species:   id = Mw, name = Mw
# Warning species is not changed by either rules or reactions

par Mw=0.0
aux Mw=Mw

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

