
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Barros2021 - CARTmath, Mathematical Model of CAR-T Immunotherapy in Raji Cell Line
#
# unknownQualifier http://identifiers.org/mamo/MAMO_0000046
# isDescribedBy http://identifiers.org/pubmed/34208323
# is http://identifiers.org/biomodels.db/MODEL2107220002
# is http://identifiers.org/biomodels.db/BIOMD0000001020
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = function_for_R3_R5, name = function for R3_R5
function_(par,T,Cm)=(par*T*Cm)


# FunctionDefinition id = function_for_R7, name = function for R7
functio_1(par,T,b)=(par*T*(1-b*T))


# FunctionDefinition id = function_for_indirect_stimulation, name = function for indirect stimulation
functio_2(par,modifier)=(par*modifier)


# Compartment: id = compartment, name = compartment, constant
par compartme=1.0

# Parameter:   id =  phi, name = phi, constant
par phi=0.83

# Parameter:   id =  pi, name = pi, constant
par pi_ren=0.8300536

# Parameter:   id =  epsilon, name = epsilon, constant
par epsilon=1.59795

# Parameter:   id =  theta, name = theta, constant
par theta=2.3E-4

# Parameter:   id =  alpha, name = alpha, defined by a Rule

# Parameter:   id =  mu, name = mu, constant
par mu=6.89E-7

# Parameter:   id =  rho, name = rho, constant
par rho=0.5071721

# Parameter:   id =  beta, name = beta, constant
par beta=0.0

# Parameter:   id =  gamma, name = gamma, constant
par gamma=3.365388E-8

# Parameter:   id =  Raji_IDO_CAT19, name = Raji-IDO+CAT19, constant
par Raji_IDO_=0.0

# Parameter:   id =  Raji_IDO_CART_19_1MT, name = Raji-IDO+CART-19+1MT, constant
par Raji_ID_1=0.0

# Parameter:   id =  ModelValue_10, name = Initial for Raji-IDO+CART-19+1MT, constant
par ModelValu=0.0

# Parameter:   id =  ModelValue_9, name = Initial for Raji-IDO+CAT19, constant
par ModelVa_1=0.0

# assignmentRule: variable = alpha
alpha= piecew2 
aux alpha=alpha

# Reaction: id = R3_Cm_activation_into_Ct, name = R3_Cm activation into Ct

R3_Cm_act=compartme*function_(theta, T_renamed, Cm)

# Reaction: id = R6_Ct_expansion, name = R6_Ct expansion

R6_Ct_exp=compartme*functio_2(phi, Ct)

# Reaction: id = R4_Ct_natural_death, name = R4_Ct natural death

R4_Ct_nat=compartme*pi_ren*Ct

# Reaction: id = R5_Ct_inhibiton_by_Tumor, name = R5_Ct inhibiton by Tumor

R5_Ct_inh=compartme*function_(alpha, T_renamed, Ct)

# Reaction: id = R1_Cm_formation, name = R1_Cm formation

R1_Cm_for=compartme*functio_2(epsilon, Ct)

# Reaction: id = R2_Cm_death, name = R2_Cm death

R2_Cm_dea=compartme*mu*Cm

# Reaction: id = R7_Tumor_proliferation, name = R7_Tumor proliferation

R7_Tumor_=compartme*functio_1(rho, T_renamed, beta)

# Reaction: id = R8_Tumor_death_by_Ct, name = R8_Tumor death by Ct

R8_Tumor_=compartme*function_(gamma, Ct, T_renamed)

# Species:   id = Cm, name = Cm, affected by kineticLaw

init Cm=0.0
dCm/dt=(1/(compartme))*((-1.0 * R3_Cm_act) + ( 1.0 * R1_Cm_for) + (-1.0 * R2_Cm_dea))

# Species:   id = Ct, name = Ct, affected by kineticLaw
# Species is changed by 1 event(s)
init Ct=0.0
dCt/dt=(1/(compartme))*(( 1.0 * R3_Cm_act) + ( 1.0 * R6_Ct_exp) + (-1.0 * R4_Ct_nat) + (-1.0 * R5_Ct_inh))

# Species:   id = T, name = T, affected by kineticLaw

par T_renamed=3000000.0
aux T_renamed=T_renamed
dT_renamed/dt=(1/(compartme))*(( 1.0 * R7_Tumor_) + (-1.0 * R8_Tumor_))

# event : event1
event1=if (t >= 7) then (1.5) else (0.2)
global 1 {event1 - 1.1} {Ct=10000000}


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (ModelValu  ==  1) then (1.26166E-8) else (1.248506E-8)

piecew2=if (ModelVa_1  ==  1) then (1.461699E-8) else ( piecew1 )


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

