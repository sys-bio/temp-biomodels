
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = McDougal2017 - Metabolism in ischemic cardiomyocytes
#
# isDescribedBy http://identifiers.org/pubmed/28487363
# is http://identifiers.org/biomodels.db/MODEL1912160001
# is http://identifiers.org/biomodels.db/BIOMD0000000961
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = Constant_flux__irreversible, name = Constant flux (irreversible)
Constant_(v)=(v)


# FunctionDefinition id = Function_for_Triosephosphate_Isomerase, name = Function for Triosephosphate Isomerase
Function_(Kmf_tpi,Vf_tpi,c1,s67,switch_kashi)=(Vf_tpi*s67/(Kmf_tpi+s67)*switch_kashi/c1)


# FunctionDefinition id = Function_for_re48, name = Function for re48
Functio_1(K_up,Km_AMP_2,X_up,c1,f_up_eq,h,s35,s72,s73)=(X_up*(K_up*s72-s73*f_up_eq)/(1+Km_AMP_2^h/s35^h)/c1)


# FunctionDefinition id = Function_for_re58, name = Function for re58
Functio_2(Km_G1P,Km_GBP,Kmf_GBPS,Kmr_GBPS,Vf_GBPS,Vr_GBPS,c1,s68,s69,s72,s79,switch_kashi)=((Vf_GBPS*s68/(Kmf_GBPS*(1+Km_G1P/s72))-Vr_GBPS*s69/(Kmr_GBPS*(1+Km_GBP/s79)))/(1+s68/Kmf_GBPS+s69/Kmr_GBPS)*switch_kashi/c1)


# FunctionDefinition id = Function_for_Glyceraldehyde_3_Phosphate_Dehydrogenase, name = Function for Glyceraldehyde 3-Phosphate Dehydrogenase [1]
Functio_3(Km_NAD,Kmf_gapdh,Vf_gapdh,c1,s59,s62,switch_kashi)=(Vf_gapdh*s59/(Kmf_gapdh+s59)/(1+Km_NAD/s62)*switch_kashi/c1)


# FunctionDefinition id = Function_for_G6P_Dehydrogenase, name = Function for G6P Dehydrogenase [1]
Functio_4(c1,rateOf_re37,switch_kashi,v_PGI_ss)=(0.095*rateOf_re37/v_PGI_ss*switch_kashi/c1)


# FunctionDefinition id = Function_for_re60, name = Function for re60
Functio_5(PS_ec,s65,s82)=(PS_ec*(s82-s65))


# FunctionDefinition id = Function_for_Glycogen_Synthase_I_form, name = Function for Glycogen Synthase I-form [1]
Functio_6(Km_AMP_2,Kmf_gs,Vf_gs,c1,h,s35,s73)=(Vf_gs*s73/((Kmf_gs+s73)*(1+Km_AMP_2^h/s35^h))/c1)


# FunctionDefinition id = Function_for_Lactate_Flux__in, name = Function for Lactate Flux (in) [1]
Functio_7(Km,Vmax,s39)=(Vmax*s39/(Km+s39))


# FunctionDefinition id = Function_for_re54, name = Function for re54
Functio_8(Kia_NADH,Km_DHAP,Km_NADH,c1,s63,s67,vf)=(vf*s67*s63/(Kia_NADH*Km_DHAP+Km_DHAP*s63+Km_NADH*s67+s67*s63)/c1)


# FunctionDefinition id = Function_for_re59, name = Function for re59
Functio_9(c1,rateOf_re58)=(rateOf_re58/c1)


# FunctionDefinition id = Function_for_re61, name = Function for re61
Functi_10(PS_ve,s81,s82)=(PS_ve*(s81-s82))


# FunctionDefinition id = Function_for_re22, name = Function for re22
Functi_11(H_active,K_Lac,X_Lac,c1,s38,s52)=(X_Lac*(1/K_Lac*s38*H_active-s52)/c1)


# FunctionDefinition id = Function_for_re62, name = Function for re62
Functi_12(c1,k_a,k_d,s65,s83,s84)=((k_a*s83*s65-k_d*s84)/c1)


# FunctionDefinition id = Function_for_Phosphfructokinase, name = Function for Phosphfructokinase [1]
Functi_13(Km_ATP,Kmf_pfk,Vf_pfk,c1,s30,s58,switch_kashi)=(Vf_pfk*s58/(Kmf_pfk+s58)/(1+Km_ATP/s30)*switch_kashi/c1)


# FunctionDefinition id = Function_for_re55, name = Function for re55
Functi_14(c1,rateOf_re54)=(rateOf_re54/c1)


# FunctionDefinition id = Function_for_Adenylate_Kinase, name = Function for Adenylate Kinase [1]
Functi_15(K_AK,X_AK,c1,s30,s31,s35)=(X_AK*(K_AK*s31*s31-s35*s30)/c1)


# FunctionDefinition id = Function_for_Phosphoglucomutase, name = Function for Phosphoglucomutase [1]
Functi_16(Kmf_pgm,Kmr_pgm,Vf_pgm,Vr_pgm,c1,s57,s72,switch_GSGP)=((Vf_pgm*s72/Kmf_pgm-Vr_pgm*s57/Kmr_pgm)/(1+s72/Kmf_pgm+s57/Kmr_pgm)*switch_GSGP/c1)


# FunctionDefinition id = Function_for_Mitochondrial_Oxidation_of_Pyruvate, name = Function for Mitochondrial Oxidation of Pyruvate
Functi_17(Km_ADP,Km_O2,c1,rateOf_re46,s31,s65)=(rateOf_re46*s31/(s31+Km_ADP)*s65/(s65+Km_O2)/c1)


# FunctionDefinition id = Function_for_Hexokinase, name = Function for Hexokinase [1]
Functi_18(Km_ATP,Kmf_hk,Kmr_hk,Vf_hk,Vr_hk,c1,s30,s56,s57,switch_kashi)=((Vf_hk*s56/(Kmf_hk*(1+Km_ATP/s30))-Vr_hk*s57/Kmr_hk)/(1+s56/Kmf_hk+s57/Kmr_hk)*switch_kashi/c1)


# FunctionDefinition id = Function_for_ATPase__ATP_Consumption, name = Function for ATPase (ATP Consumption)
Functi_19(VR_cellcyto,X_atpase,c1,level,s30)=(level*VR_cellcyto*X_atpase*1/(1+exp((-(s30-0.001))/0.0001))/c1)


# FunctionDefinition id = Function_for_Glycogen_Synthase_D_form, name = Function for Glycogen Synthase D-form [1]
Functi_20(Km_AMP_2,Kmf_gs,Vf_gs,c1,h,s35,s73)=(Vf_gs*s73/((Kmf_gs+s73)*(1+Km_AMP_2^h/s35^h))/c1)


# FunctionDefinition id = Function_for_Fructose_bisphosphate_Aldolase, name = Function for Fructose-bisphosphate Aldolase [1]
Functi_21(Kmf_fbp,Vf_fbp,c1,s66,switch_kashi)=(Vf_fbp*s66/(Kmf_fbp+s66)*switch_kashi/c1)


# FunctionDefinition id = Function_for_Lactate_Flux__out, name = Function for Lactate Flux (out) [1]
Functi_22(Km,Vmax,s38)=(Vmax*s38/(Km+s38))


# FunctionDefinition id = Function_for_Phosphoglycerate_Mutase, name = Function for Phosphoglycerate Mutase_1
Functi_23(Kmf_pgm,Kmr_pgm,Vf_pgm,Vr_pgm,c1,s69,s70,switch_kashi)=((Vf_pgm*s69*1/(1+exp((-(s69-0.0001))/1E-5))/Kmf_pgm-Vr_pgm*s70*1/(1+exp((-(s70-0.0001))/1E-5))/Kmr_pgm)/(1+s69/Kmf_pgm+s70/Kmr_pgm)*switch_kashi/c1)


# FunctionDefinition id = Function_for_Pyruvate_Kinase, name = Function for Pyruvate Kinase_1
Functi_24(Km_adp,Kmf_pk,Kmr_pk,Vf_pk,Vr_pk,c1,s31,s60,s61,switch_kashi)=((Vf_pk*s60*1/(1+exp((-(s60-0.0001))/1E-5))/(Kmf_pk*(1+Km_adp/s31))-Vr_pk*s61*1/(1+exp((-(s61-0.0001))/1E-5))/Kmr_pk)/(1+s60/Kmf_pk+s61/Kmr_pk)*switch_kashi/c1)


# FunctionDefinition id = Function_for_Glycogen_Phosphorylase, name = Function for Glycogen Phosphorylase [1]
Functi_25(Km_AMP_2,Kmf_gp,Kmr_gp,Vf_gp,Vr_gp,c1,h,s35,s36,s72)=((Vf_gp*s36/Kmf_gp-Vr_gp*s72/Kmr_gp)/((1+s36/Kmf_gp+s72/Kmr_gp)*(1+Km_AMP_2^h/s35^h))/c1)


# FunctionDefinition id = Function_for_Lactate_Dehydrogenase, name = Function for Lactate Dehydrogenase [1]
Functi_26(Km_NADH,Kmf_ldh,Vf_ldh,c1,s61,s63,switch_LDH)=(Vf_ldh*s61/(Kmf_ldh+s61)/(1+Km_NADH/s63)*switch_LDH/c1)


# FunctionDefinition id = Function_for_Phosphoglycerate_Kinase, name = Function for Phosphoglycerate Kinase_1
Functi_27(Km_adp,Km_atp,Kmf_pgk,Kmr_pgk,Vf_pgk,Vr_pgk,c1,s30,s31,s68,s69,switch_kashi)=((Vf_pgk*s68*1/(1+exp((-(s68-0.0001))/1E-5))/(Kmf_pgk*(1+Km_adp/s31))-Vr_pgk*s69*1/(1+exp((-(s69-0.0001))/1E-5))/(Kmr_pgk*(1+Km_atp/s30)))/(1+s68/Kmf_pgk+s69/Kmr_pgk)*switch_kashi/c1)


# FunctionDefinition id = Function_for_Phosphoglucose_Isomerase__forward, name = Function for Phosphoglucose Isomerase (forward) [1]
Functi_28(Kmf_pgi,Kmr_pgi,Vf_pgi,Vr_pgi,c1,s57,s58,switch_kashi)=((Vf_pgi*s57/Kmf_pgi-Vr_pgi*s58/Kmr_pgi)/(1+s57/Kmf_pgi+s58/Kmr_pgi)*switch_kashi/c1)


# FunctionDefinition id = Function_for_Enolase, name = Function for Enolase_1
Functi_29(Kmf_eno,Kmr_eno,Vf_eno,Vr_eno,c1,s60,s70,switch_kashi)=((Vf_eno*s70*1/(1+exp((-(s70-0.0001))/1E-5))/Kmf_eno-Vr_eno*s60*1/(1+exp((-(s60-0.0001))/1E-5))/Kmr_eno)/(1+s70/Kmf_eno+s60/Kmr_eno)*switch_kashi/c1)


# Compartment: id = c1, name = cell, constant
par c1=1.0

# Compartment: id = c2, name = extracellular, constant
par c2=0.240633296

# Compartment: id = c3, name = vessel, constant
par c3=0.06842

# Compartment: id = default, name = default, constant
par default=1.0

# Parameter:   id =  J_NHE, name = J_NHE, defined by a Rule

# Parameter:   id =  J_CHE, name = J_CHE, defined by a Rule

# Parameter:   id =  J_NHS, name = J_NHS, defined by a Rule

# Parameter:   id =  J_AE, name = J_AE, defined by a Rule

# Parameter:   id =  beta_i, name = beta_i, defined by a Rule

# Parameter:   id =  beta_CO2, name = beta_CO2, defined by a Rule

# Parameter:   id =  H_active, name = H_active, defined by a Rule

# Parameter:   id =  pH_o, name = pH_o, constant
par pH_o=7.4

# Parameter:   id =  HCO3_o, name = HCO3_o, constant
par HCO3_o=23.0

# Parameter:   id =  HCO3_i, name = HCO3_i, defined by a Rule

# Parameter:   id =  switch_kashi, name = switch_kashi, constant
par switch_ka=1.0

# Parameter:   id =  h, name = h, constant
par h=1.5

# Parameter:   id =  Km_AMP_2, name = Km_AMP_2, constant
par Km_AMP_2=0.016

# Parameter:   id =  switch_GSGP, name = switch_GSGP, constant
par switch_GS=1.0

# Parameter:   id =  switch_LDH, name = switch_LDH, constant
par switch_LD=1.0

# Parameter:   id =  level, name = level, constant
par level=1.0

# Parameter:   id =  rateOf_re15, name = rateOf_re15, defined by a Rule

# Parameter:   id =  rateOf_re20, name = rateOf_re20, defined by a Rule

# Parameter:   id =  rateOf_re37, name = rateOf_re37, defined by a Rule

# Parameter:   id =  rateOf_re54, name = rateOf_re54, defined by a Rule

# Parameter:   id =  rateOf_re46, name = rateOf_re46, defined by a Rule

# Parameter:   id =  rateOf_re58, name = rateOf_re58, defined by a Rule

# Parameter:   id =  lowO2, name = lowO2, constant
par lowO2=0.0175

# Parameter:   id =  K_AK, name = K_AK, constant
par K_AK=1.0

# Parameter:   id =  X_AK, name = X_AK, constant
par X_AK=10000.0

# Parameter:   id =  VR_cellcyto, name = VR_cellcyto, constant
par VR_cellcy=1.4703

# Parameter:   id =  X_atpase, name = X_atpase, constant
par X_atpase=0.39

# Parameter:   id =  K_CK, name = K_CK, constant
par K_CK=1660000.0

# Parameter:   id =  X_CK, name = X_CK, constant
par X_CK=10000.0

# Parameter:   id =  Kmf_eno, name = Kmf_eno, constant
par Kmf_eno=0.045

# Parameter:   id =  Kmr_eno, name = Kmr_eno, constant
par Kmr_eno=0.089

# Parameter:   id =  Vf_eno, name = Vf_eno, constant
par Vf_eno=1.85

# Parameter:   id =  Vr_eno, name = Vr_eno, constant
par Vr_eno=2.0

# Parameter:   id =  Kmf_fbp, name = Kmf_fbp, constant
par Kmf_fbp=0.038

# Parameter:   id =  Vf_fbp, name = Vf_fbp, constant
par Vf_fbp=0.991667

# Parameter:   id =  Km_NAD, name = Km_NAD, constant
par Km_NAD=0.058

# Parameter:   id =  Kmf_gapdh, name = Kmf_gapdh, constant
par Kmf_gapdh=0.042

# Parameter:   id =  Vf_gapdh, name = Vf_gapdh, constant
par Vf_gapdh=5.35

# Parameter:   id =  Kmf_gp, name = Kmf_gp, constant
par Kmf_gp=0.1

# Parameter:   id =  Kmr_gp, name = Kmr_gp, constant
par Kmr_gp=5.0

# Parameter:   id =  Vf_gp, name = Vf_gp, constant
par Vf_gp=0.781667

# Parameter:   id =  Vr_gp, name = Vr_gp, constant
par Vr_gp=55.8333

# Parameter:   id =  Kmf_gs_I_form, name = Kmf_gs_I_form, constant
par Kmf_gs_I_=0.08

# Parameter:   id =  Vf_gs_I_form, name = Vf_gs_I_form, constant
par Vf_gs_I_f=0.146833

# Parameter:   id =  Kmf_gs_D_form, name = Kmf_gs_D_form, constant
par Kmf_gs_D_=1.42

# Parameter:   id =  Vf_gs_D_form, name = Vf_gs_D_form, constant
par Vf_gs_D_f=0.146833

# Parameter:   id =  Km_ATP_hk, name = Km_ATP_hk, constant
par Km_ATP_hk=0.236

# Parameter:   id =  Kmf_hk, name = Kmf_hk, constant
par Kmf_hk=0.072

# Parameter:   id =  Kmr_hk, name = Kmr_hk, constant
par Kmr_hk=0.042

# Parameter:   id =  Vf_hk, name = Vf_hk, constant
par Vf_hk=0.55

# Parameter:   id =  Vr_hk, name = Vr_hk, constant
par Vr_hk=1.06E-4

# Parameter:   id =  Km_NADH, name = Km_NADH, constant
par Km_NADH=0.001

# Parameter:   id =  Kmf_ldh, name = Kmf_ldh, constant
par Kmf_ldh=0.125

# Parameter:   id =  Vf_ldh, name = Vf_ldh, constant
par Vf_ldh=23.9333

# Parameter:   id =  Km_Lac_flux_in, name = Km_Lac_flux_in, constant
par Km_Lac_fl=2.2

# Parameter:   id =  Vmax_Lac_flux_in, name = Vmax_Lac_flux_in, constant
par Vmax_Lac_=0.04817

# Parameter:   id =  Km_Lac_flux_out, name = Km_Lac_flux_out, constant
par Km_Lac__1=6.92

# Parameter:   id =  Vmax_Lac_flux_out, name = Vmax_Lac_flux_out, constant
par Vmax_La_1=0.1817

# Parameter:   id =  Km_ADP, name = Km_ADP, constant
par Km_ADP=0.00107

# Parameter:   id =  Km_O2, name = Km_O2, constant
par Km_O2=0.00297

# Parameter:   id =  Km_ATP_pfk, name = Km_ATP_pfk, constant
par Km_ATP_pf=0.127

# Parameter:   id =  Kmf_pfk, name = Kmf_pfk, constant
par Kmf_pfk=0.224

# Parameter:   id =  Vf_pfk, name = Vf_pfk, constant
par Vf_pfk=1.32833

# Parameter:   id =  Kmf_pgm, name = Kmf_pgm, constant
par Kmf_pgm=0.045

# Parameter:   id =  Kmr_pgm, name = Kmr_pgm, constant
par Kmr_pgm=0.67

# Parameter:   id =  Vf_pgm, name = Vf_pgm, constant
par Vf_pgm=1.93333

# Parameter:   id =  Vr_pgm, name = Vr_pgm, constant
par Vr_pgm=1.12

# Parameter:   id =  Kmf_pgi, name = Kmf_pgi, constant
par Kmf_pgi=0.425

# Parameter:   id =  Kmr_pgi, name = Kmr_pgi, constant
par Kmr_pgi=0.175

# Parameter:   id =  Vf_pgi, name = Vf_pgi, constant
par Vf_pgi=10.0667

# Parameter:   id =  Vr_pgi, name = Vr_pgi, constant
par Vr_pgi=9.6

# Parameter:   id =  Km_ADP_pgk, name = Km_ADP_pgk, constant
par Km_ADP_pg=0.008

# Parameter:   id =  Km_ATP_pgk, name = Km_ATP_pgk, constant
par Km_ATP_pg=0.565

# Parameter:   id =  Kmf_pgk, name = Kmf_pgk, constant
par Kmf_pgk=0.021

# Parameter:   id =  Kmr_pgk, name = Kmr_pgk, constant
par Kmr_pgk=0.51

# Parameter:   id =  Vf_pgk, name = Vf_pgk, constant
par Vf_pgk=251.0

# Parameter:   id =  Vr_pgk, name = Vr_pgk, constant
par Vr_pgk=15.9833

# Parameter:   id =  Kmf_pglym, name = Kmf_pglym, constant
par Kmf_pglym=0.145

# Parameter:   id =  Kmr_pglym, name = Kmr_pglym, constant
par Kmr_pglym=0.139

# Parameter:   id =  Vf_pglym, name = Vf_pglym, constant
par Vf_pglym=11.2333

# Parameter:   id =  Vr_pglym, name = Vr_pglym, constant
par Vr_pglym=48.0

# Parameter:   id =  Km_ADP_pk, name = Km_ADP_pk, constant
par Km_ADP_pk=0.00268

# Parameter:   id =  Kmf_pk, name = Kmf_pk, constant
par Kmf_pk=0.11

# Parameter:   id =  Kmr_pk, name = Kmr_pk, constant
par Kmr_pk=10.0

# Parameter:   id =  Vf_pk, name = Vf_pk, constant
par Vf_pk=9.43333

# Parameter:   id =  Vr_pk, name = Vr_pk, constant
par Vr_pk=0.00105

# Parameter:   id =  K_Lac, name = K_Lac, constant
par K_Lac=0.12589

# Parameter:   id =  X_Lac, name = X_Lac, constant
par X_Lac=10000.0

# Parameter:   id =  K_up, name = K_up, constant
par K_up=4.36

# Parameter:   id =  X_up, name = X_up, constant
par X_up=10000.0

# Parameter:   id =  f_up_eq, name = f_up_eq, constant
par f_up_eq=8808.0

# Parameter:   id =  Kia_NADH, name = Kia_NADH, constant
par Kia_NADH=0.00107

# Parameter:   id =  Km_DHAP, name = Km_DHAP, constant
par Km_DHAP=0.3

# Parameter:   id =  Km_NADH_re54, name = Km_NADH_re54, constant
par Km_NADH_r=0.00284

# Parameter:   id =  Km_G1P, name = Km_G1P, constant
par Km_G1P=0.008

# Parameter:   id =  Km_GBP, name = Km_GBP, constant
par Km_GBP=0.565

# Parameter:   id =  Kmf_GBPS, name = Kmf_GBPS, constant
par Kmf_GBPS=0.021

# Parameter:   id =  Kmr_GBPS, name = Kmr_GBPS, constant
par Kmr_GBPS=0.51

# Parameter:   id =  Vf_GBPS, name = Vf_GBPS, constant
par Vf_GBPS=10.0

# Parameter:   id =  Vr_GBPS, name = Vr_GBPS, constant
par Vr_GBPS=6.0

# Parameter:   id =  PS_ec, name = PS_ec, constant
par PS_ec=10.0

# Parameter:   id =  PS_ve, name = PS_ve, constant
par PS_ve=50.0

# Parameter:   id =  k_a, name = k_a, constant
par k_a=15400.0

# Parameter:   id =  k_d, name = k_d, constant
par k_d=60.0

# Parameter:   id =  Kmf_tpi, name = Kmf_tpi, constant
par Kmf_tpi=1.53

# Parameter:   id =  Vf_tpi, name = Vf_tpi, constant
par Vf_tpi=5.93333

# Parameter:   id =  v_PGI_ss, name = v_PGI_ss, constant
par v_PGI_ss=0.22

# assignmentRule: variable = J_NHE
# the operator E4 is not supported by xpp
# the formula is : 1/60*(20.6092567224*s22^4-606.5562860276*s22^3+6701.065336577*s22^2-3.29305476482116E4*s22+6.07279345421164E4)
# the operator E4 is not supported by xpp
# the formula is : 1/60*(20.6092567224*s22^4-606.5562860276*s22^3+6701.065336577*s22^2-3.29305476482116E4*s22+6.07279345421164E4)
#Rule ignored : there are some unsupported functions !!

# assignmentRule: variable = J_CHE
J_CHE=1/60*((-0.272561314)*s22^4+12.313011154*s22^3-181.7704305807*s22^2+1108.6191429405*s22-2422.8396631585)
aux J_CHE=J_CHE

# assignmentRule: variable = J_NHS
J_NHS=1/60*(2.3290050022*s22^3-45.1765173617*s22^2+286.7706982101*s22-592.1682240141)
aux J_NHS=J_NHS

# assignmentRule: variable = J_AE
J_AE=1/60*((-15.2266606471)*s22^4+302.2590169999*s22^3-1823.1533057568*s22^2+1976.4960115099*s22+8383.533719598)
aux J_AE=J_AE

# assignmentRule: variable = rateOf_re37
rateOf__2=re37
aux rateOf__2=rateOf__2

# assignmentRule: variable = rateOf_re54
rateOf__3=re54
aux rateOf__3=rateOf__3

# assignmentRule: variable = rateOf_re20
rateOf__1=re20
aux rateOf__1=rateOf__1

# assignmentRule: variable = H_active
H_active=1000*10^(-s22)
aux H_active=H_active

# assignmentRule: variable = rateOf_re15
rateOf_re=re15
aux rateOf_re=rateOf_re

# assignmentRule: variable = rateOf_re46
rateOf__4=re46
aux rateOf__4=rateOf__4

# assignmentRule: variable = rateOf_re58
rateOf__5=re58
aux rateOf__5=rateOf__5

# assignmentRule: variable = HCO3_i
HCO3_i=HCO3_o*10^(s22-pH_o)
aux HCO3_i=HCO3_i

# assignmentRule: variable = beta_CO2
beta_CO2=2.3*HCO3_i
aux beta_CO2=beta_CO2

# assignmentRule: variable = beta_i
beta_i=(-28)*s22+222.6
aux beta_i=beta_i

# Reaction: id = re2, name = re2

re2=Constant_(J_NHE)

# Reaction: id = re3, name = re3

re3=Constant_(J_NHS)

# Reaction: id = re4, name = re4

re4=Constant_(J_NHS)

# Reaction: id = re5, name = re5

re5=Constant_(J_AE)

# Reaction: id = re6, name = re6

re6=Constant_(J_AE)

# Reaction: id = re7, name = re7

re7=Constant_(J_CHE)

# Reaction: id = re8, name = re8

re8=Constant_(J_CHE)

# Reaction: id = re11, name = ATPase (ATP Consumption)

re11=c1*Functi_19(VR_cellcy, X_atpase, c1, level, s30)

# Reaction: id = re12, name = Creatine Kinase
# Local Parameter:   id =  k1, name = k1
par k1=0.1


re12=c1*k1*s31*s33

# Reaction: id = re13, name = Adenylate Kinase

re13=c1*Functi_15(K_AK, X_AK, c1, s30, s31, s35)

# Reaction: id = re15, name = Lactate Flux (in)

re15=Functio_7(Km_Lac_fl, Vmax_Lac_, s39)

# Reaction: id = re16, name = co-Lactate Flux (in)

re16=Constant_(rateOf_re)

# Reaction: id = re20, name = Lactate Flux (out)

re20=Functi_22(Km_Lac__1, Vmax_La_1, s38)

# Reaction: id = re21, name = co-Lactate Flux (out)

re21=Constant_(rateOf__1)

# Reaction: id = re22, name = re22

re22=c1*Functi_11(H_active, K_Lac, X_Lac, c1, s38, s52)

# Reaction: id = re36, name = Hexokinase

re36=c1*Functi_18(Km_ATP_hk, Kmf_hk, Kmr_hk, Vf_hk, Vr_hk, c1, s30, s56, s57, switch_ka)

# Reaction: id = re37, name = Phosphoglucose Isomerase (forward)

re37=c1*Functi_28(Kmf_pgi, Kmr_pgi, Vf_pgi, Vr_pgi, c1, s57, s58, switch_ka)

# Reaction: id = re39, name = Phosphfructokinase

re39=c1*Functi_13(Km_ATP_pf, Kmf_pfk, Vf_pfk, c1, s30, s58, switch_ka)

# Reaction: id = re40, name = Fructose-bisphosphate Aldolase

re40=c1*Functi_21(Kmf_fbp, Vf_fbp, c1, s66, switch_ka)

# Reaction: id = re41, name = Triosephosphate Isomerase

re41=c1*Function_(Kmf_tpi, Vf_tpi, c1, s67, switch_ka)

# Reaction: id = re42, name = Glyceraldehyde 3-Phosphate Dehydrogenase

re42=c1*Functio_3(Km_NAD, Kmf_gapdh, Vf_gapdh, c1, s59, s62, switch_ka)

# Reaction: id = re43, name = Phosphoglycerate Kinase

re43=c1*Functi_27(Km_ADP_pg, Km_ATP_pg, Kmf_pgk, Kmr_pgk, Vf_pgk, Vr_pgk, c1, s30, s31, s68, s69, switch_ka)

# Reaction: id = re44, name = Phosphoglycerate Mutase

re44=c1*Functi_23(Kmf_pglym, Kmr_pglym, Vf_pglym, Vr_pglym, c1, s69, s70, switch_ka)

# Reaction: id = re45, name = Enolase

re45=c1*Functi_29(Kmf_eno, Kmr_eno, Vf_eno, Vr_eno, c1, s60, s70, switch_ka)

# Reaction: id = re46, name = Pyruvate Kinase

re46=c1*Functi_24(Km_ADP_pk, Kmf_pk, Kmr_pk, Vf_pk, Vr_pk, c1, s31, s60, s61, switch_ka)

# Reaction: id = re47, name = Phosphoglucomutase

re47=c1*Functi_16(Kmf_pgm, Kmr_pgm, Vf_pgm, Vr_pgm, c1, s57, s72, switch_GS)

# Reaction: id = re48, name = re48

re48=c1*Functio_1(K_up, Km_AMP_2, X_up, c1, f_up_eq, h, s35, s72, s73)

# Reaction: id = re49, name = Glycogen Synthase D-form

re49=c1*Functi_20(Km_AMP_2, Kmf_gs_D_, Vf_gs_D_f, c1, h, s35, s73)

# Reaction: id = re50, name = Glycogen Phosphorylase

re50=c1*Functi_25(Km_AMP_2, Kmf_gp, Kmr_gp, Vf_gp, Vr_gp, c1, h, s35, s36, s72)

# Reaction: id = re51, name = Lactate Dehydrogenase

re51=c1*Functi_26(Km_NADH, Kmf_ldh, Vf_ldh, c1, s61, s63, switch_LD)

# Reaction: id = re52, name = G6P Dehydrogenase

re52=c1*Functio_4(c1, rateOf__2, switch_ka, v_PGI_ss)

# Reaction: id = re53, name = Glycogen Synthase I-form

re53=c1*Functio_6(Km_AMP_2, Kmf_gs_I_, Vf_gs_I_f, c1, h, s35, s73)

# Reaction: id = re54, name = re54
# Local Parameter:   id =  vf, name = vf
par vf=20.0


re54=c1*Functio_8(Kia_NADH, Km_DHAP, Km_NADH_r, c1, s63, s67, vf)

# Reaction: id = re55, name = re55

re55=c1*Functi_14(c1, rateOf__3)

# Reaction: id = re56, name = Mitochondrial Oxidation of Pyruvate

re56=c1*Functi_17(Km_ADP, Km_O2, c1, rateOf__4, s31, s65)

# Reaction: id = re58, name = re58

re58=c1*Functio_2(Km_G1P, Km_GBP, Kmf_GBPS, Kmr_GBPS, Vf_GBPS, Vr_GBPS, c1, s68, s69, s72, s79, switch_ka)

# Reaction: id = re59, name = re59

re59=c1*Functio_9(c1, rateOf__5)

# Reaction: id = re60, name = re60

re60=Functio_5(PS_ec, s65, s82)

# Reaction: id = re61, name = re61

re61=Functi_10(PS_ve, s81, s82)

# Reaction: id = re62, name = re62

re62=c1*Functi_12(c1, k_a, k_d, s65, s83, s84)

# Species:   id = s1, name = H_super__plus__endsuper__sub_i_endsub_, affected by kineticLaw

init s1=7.94E-5
ds1/dt=(1/(c1))*(( 1.0 * re11) + ( 1.0 * re16) + (-1.0 * re21) + (-1.0 * re22) + ( 1.0 * re36) + ( 1.0 * re39) + ( 1.0 * re42) + (-1.0 * re46) + (-1.0 * re51))

# Species:   id = s2, name = H_super__plus__endsuper__sub_o_endsub_, affected by kineticLaw

init s2=1.0E-12
ds2/dt=(1/(default))*((-1.0 * re16) + ( 1.0 * re21))

# Species:   id = s7, name = OH_super__minus__endsuper__sub_i_endsub_, affected by kineticLaw

init s7=1.0E-12
ds7/dt=(1/(c1))*((-1.0 * re8))

# Species:   id = s8, name = OH_super__minus__endsuper__sub_o_endsub_, affected by kineticLaw

init s8=1.0E-12
ds8/dt=(1/(default))*(( 1.0 * re8))

# Species:   id = s22, name = pH_sub_i_endsub_, constant
par s22=7.1


# Species:   id = s24, name = Na_super__plus__endsuper__sub_i_endsub_, affected by kineticLaw

init s24=5.0
ds24/dt=(1/(c1))*(( 1.0 * re2) + ( 1.0 * re3))

# Species:   id = s25, name = Na_super__plus__endsuper__sub_o_endsub_, affected by kineticLaw

init s25=1.0E-12
ds25/dt=(1/(default))*((-1.0 * re2) + (-1.0 * re3))

# Species:   id = s26, name = HCO_sub_3_endsub__super__minus__endsuper__sub_i_endsub_, affected by kineticLaw

init s26=25.0
ds26/dt=(1/(c1))*(( 1.0 * re4) + (-1.0 * re5))

# Species:   id = s27, name = HCO_sub_3_endsub__super__minus__endsuper__sub_o_endsub_, affected by kineticLaw

init s27=1.0E-12
ds27/dt=(1/(default))*((-1.0 * re4) + ( 1.0 * re5))

# Species:   id = s28, name = Cl_super__minus__endsuper__sub_i_endsub_, affected by kineticLaw

init s28=1.0E-12
ds28/dt=(1/(c1))*(( 1.0 * re6) + ( 1.0 * re7))

# Species:   id = s29, name = Cl_super__minus__endsuper__sub_o_endsub_, affected by kineticLaw

init s29=1.0E-12
ds29/dt=(1/(default))*((-1.0 * re6) + (-1.0 * re7))

# Species:   id = s30, name = ATP, affected by kineticLaw

init s30=7.0
ds30/dt=(1/(c1))*((-1.0 * re11) + ( 1.0 * re12) + ( 1.0 * re13) + (-1.0 * re36) + (-1.0 * re39) + ( 1.0 * re43) + ( 1.0 * re46) + ( 15.0 * re56))

# Species:   id = s31, name = ADP, affected by kineticLaw

init s31=1.0E-12
ds31/dt=(1/(c1))*(( 1.0 * re11) + (-1.0 * re12) + (-2.0 * re13) + ( 1.0 * re36) + ( 1.0 * re39) + (-1.0 * re43) + (-1.0 * re46) + (-15.0 * re56))

# Species:   id = s32, name = P_sub_i_endsub_, affected by kineticLaw

init s32=7.0
ds32/dt=(1/(c1))*(( 1.0 * re11) + (-1.0 * re42) + ( 2.0 * re48) + (-1.0 * re50) + ( 1.0 * re52) + ( 1.0 * re55) + (-15.0 * re56) + ( 2.0 * re59))

# Species:   id = s33, name = CrP, affected by kineticLaw

init s33=25.0
ds33/dt=(1/(c1))*((-1.0 * re12))

# Species:   id = s34, name = Cr, affected by kineticLaw

init s34=1.0E-12
ds34/dt=(1/(c1))*(( 1.0 * re12))

# Species:   id = s35, name = AMP, affected by kineticLaw

init s35=1.0E-5
ds35/dt=(1/(c1))*(( 1.0 * re13))

# Species:   id = s36, name = Glycogen, affected by kineticLaw

init s36=21.4
ds36/dt=(1/(c1))*(( 1.0 * re49) + (-1.0 * re50) + ( 1.0 * re53))

# Species:   id = s38, name = L_super__minus__endsuper__sub_i_endsub_, affected by kineticLaw

init s38=0.683
ds38/dt=(1/(c1))*(( 1.0 * re15) + (-1.0 * re20) + (-1.0 * re22) + ( 1.0 * re51))

# Species:   id = s52, name = Lactic Acid, affected by kineticLaw

init s52=155.84
ds52/dt=(1/(c1))*(( 1.0 * re22))

# Species:   id = s57, name = G6P, affected by kineticLaw

init s57=0.169
ds57/dt=(1/(c1))*(( 1.0 * re36) + (-1.0 * re37) + ( 1.0 * re47) + (-1.0 * re52))

# Species:   id = s58, name = F6P, affected by kineticLaw

init s58=0.041
ds58/dt=(1/(c1))*(( 1.0 * re37) + (-1.0 * re39))

# Species:   id = s59, name = GAP, affected by kineticLaw

init s59=0.00162
ds59/dt=(1/(c1))*(( 1.0 * re40) + ( 1.0 * re41) + (-1.0 * re42))

# Species:   id = s60, name = PEP, affected by kineticLaw

init s60=0.013
ds60/dt=(1/(c1))*(( 1.0 * re45) + (-1.0 * re46))

# Species:   id = s64, name = CO_sub_2_endsub_, affected by kineticLaw

init s64=1.0E-12
ds64/dt=(1/(c1))*(( 3.0 * re56))

# Species:   id = s66, name = F16BP, affected by kineticLaw

init s66=6.78E-4
ds66/dt=(1/(c1))*(( 1.0 * re39) + (-1.0 * re40))

# Species:   id = s67, name = DHAP, affected by kineticLaw

init s67=0.036
ds67/dt=(1/(c1))*(( 1.0 * re40) + (-1.0 * re41) + (-1.0 * re54))

# Species:   id = s68, name = 13BPG, affected by kineticLaw

init s68=8.69E-4
ds68/dt=(1/(c1))*(( 1.0 * re42) + (-1.0 * re43) + (-1.0 * re58))

# Species:   id = s69, name = 3PG, affected by kineticLaw

init s69=0.071
ds69/dt=(1/(c1))*(( 1.0 * re43) + (-1.0 * re44) + ( 1.0 * re58))

# Species:   id = s70, name = 2PG, affected by kineticLaw

init s70=0.009
ds70/dt=(1/(c1))*(( 1.0 * re44) + (-1.0 * re45))

# Species:   id = s71, name = H_sub_2_endsub_O, affected by kineticLaw

init s71=1.0E-12
ds71/dt=(1/(c1))*(( 1.0 * re45))

# Species:   id = s72, name = G1P, affected by kineticLaw

init s72=0.02
ds72/dt=(1/(c1))*((-1.0 * re47) + (-1.0 * re48) + ( 1.0 * re50) + (-1.0 * re58))

# Species:   id = s73, name = UDPG, affected by kineticLaw

init s73=0.099
ds73/dt=(1/(c1))*(( 1.0 * re48) + (-1.0 * re49) + (-1.0 * re53))

# Species:   id = s74, name = UTP, affected by kineticLaw

init s74=0.194
ds74/dt=(1/(c1))*((-1.0 * re48))

# Species:   id = s75, name = UDP, affected by kineticLaw

init s75=0.034
ds75/dt=(1/(c1))*(( 1.0 * re49) + ( 1.0 * re53))

# Species:   id = s76, name = 6PGN, affected by kineticLaw

init s76=1.0E-12
ds76/dt=(1/(c1))*(( 1.0 * re52))

# Species:   id = s77, name = Glycerol-3-P, affected by kineticLaw

init s77=0.158
ds77/dt=(1/(c1))*(( 1.0 * re54) + (-1.0 * re55))

# Species:   id = s78, name = s78, constant
par s78=1.0E-12


# Species:   id = s61, name = PYR, affected by kineticLaw

init s61=0.055
ds61/dt=(1/(c1))*(( 1.0 * re46) + (-1.0 * re51) + (-1.0 * re56))

# Species:   id = s79, name = G16BP, affected by kineticLaw

init s79=0.007
ds79/dt=(1/(c1))*(( 1.0 * re58) + (-1.0 * re59))

# Species:   id = s82, name = O_sub_2,e_endsub, affected by kineticLaw

init s82=0.128856
ds82/dt=(1/(c2))*((-1.0 * re60) + ( 1.0 * re61))

# Species:   id = s83, name = Mb, affected by kineticLaw

init s83=0.00543
ds83/dt=(1/(c1))*((-1.0 * re62))

# Species:   id = s84, name = MbO_sub_2_endsub_, affected by kineticLaw

init s84=0.185
ds84/dt=(1/(c1))*(( 1.0 * re62))

# Species:   id = s65, name = O_sub_2_endsub, affected by kineticLaw

init s65=0.110169
ds65/dt=(1/(c1))*((-3.0 * re56) + ( 1.0 * re60) + (-1.0 * re62))

# Species:   id = s81, name = O_sub_2,v_endsub# Species is changed by 1 event(s)
par s81=0.132593
aux s81=s81

# Species:   id = s62, name = NAD, constant
par s62=2.2565


# Species:   id = s63, name = NADH, constant
par s63=0.7135


# Species:   id = s39, name = L_super__minus__endsuper__sub_o_endsub_, constant
par s39=1.13


# Species:   id = s56, name = Glucose, constant
par s56=1.91


# event : Hypoxia
# unable to handle events with delays currently.
# event ignored.


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

