
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Wodarz2018/1 - simple model
#
# isDescribedBy http://identifiers.org/pubmed/29605227
# is http://identifiers.org/biomodels.db/MODEL1908010003
# is http://identifiers.org/biomodels.db/BIOMD0000000774
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = s, name = s
s(r,S,p)=(r*S*(2*p-1))


# FunctionDefinition id = d, name = d
d(r,S,p)=(2*r*S*(1-p))


# Compartment: id = tme, name = tme, constant
par tme=1.0

# Parameter:   id =  a, name = a, constant
par a=0.0025

# Parameter:   id =  r, name = r, defined by a Rule

# Parameter:   id =  p, name = p, defined by a Rule

# Parameter:   id =  g, name = g, defined by a Rule

# Parameter:   id =  r_0, name = r', constant
par r_0=0.01

# Parameter:   id =  p_0, name = p', constant
par p_0=0.7

# Parameter:   id =  h1, name = h1, constant
par h1=1.0E-4

# Parameter:   id =  h2, name = h2, constant
par h2=1.0E-4

# Parameter:   id =  k1, name = k1, constant
par k1=1.0

# Parameter:   id =  k2, name = k2, constant
par k2=1.0

# Parameter:   id =  g_0, name = g', constant
par g_0=0.0035

# Parameter:   id =  h3, name = h3, constant
par h3=0.01

# Parameter:   id =  k3, name = k3, constant
par k3=1.0

# assignmentRule: variable = p
p=p_0/(1+h2*D_1^k2)
aux p=p

# assignmentRule: variable = g
g=g_0/(1+h3*S_1^k3)
aux g=g

# assignmentRule: variable = r
r=r_0/(1+h1*D_1^k1)
aux r=r

# Reaction: id = stem_cell_division, name = stem cell division

stem_cell=tme*s(r, S_1, p)

# Reaction: id = de_differentiation, name = de-differentiation

de_differ=tme*g*D_1

# Reaction: id = differentiation_of_cell, name = differentiation of cell

different=tme*d(r, S_1, p)

# Reaction: id = differentiated_cell_death, name = differentiated cell death

differe_1=tme*a*D_1

# Species:   id = S, name = S, affected by kineticLaw

par S_1=1.0
aux S_1=S_1
dS_1/dt=(1/(tme))*(( 1.0 * stem_cell) + ( 1.0 * de_differ))

# Species:   id = D, name = D, affected by kineticLaw

par D_1=0.0
aux D_1=D_1
dD_1/dt=(1/(tme))*((-1.0 * de_differ) + ( 1.0 * different) + (-1.0 * differe_1))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

