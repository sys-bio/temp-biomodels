
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Golomb2006_SomaticBursting
#
# is http://identifiers.org/biomodels.db/MODEL1243247625
# is http://identifiers.org/biomodels.db/BIOMD0000000118
# isDescribedBy http://identifiers.org/pubmed/16807352
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# FunctionDefinition id = GAMMAF
GAMMAF(VV,theta,sigma)=(1/(1+exp((-(VV-theta))/sigma)))


# Compartment: id = compartment_0000001, name = compartment_0000001, constant
par compartme=1.0

# Parameter:   id =  Cm, name = Cm, constant
par Cm=1.0

# Parameter:   id =  pms, name = pms, constant
par pms=3.0

# Parameter:   id =  pns, name = pns, constant
par pns=4.0

# Parameter:   id =  VNa, name = VNa, constant
par VNa=55.0

# Parameter:   id =  t_tauh, name = t_tauh, constant
par t_tauh=-40.5

# Parameter:   id =  t_taun, name = t_taun, constant
par t_taun=-27.0

# Parameter:   id =  thetaa, name = thetaa, constant
par thetaa=-50.0

# Parameter:   id =  sigmaa, name = sigmaa, constant
par sigmaa=20.0

# Parameter:   id =  thetab, name = thetab, constant
par thetab=-80.0

# Parameter:   id =  sigmab, name = sigmab, constant
par sigmab=-6.0

# Parameter:   id =  tauBs, name = tauBs, constant
par tauBs=15.0

# Parameter:   id =  sigmam, name = sigmam, constant
par sigmam=9.5

# Parameter:   id =  sigmah, name = sigmah, constant
par sigmah=-7.0

# Parameter:   id =  sigman, name = sigman, constant
par sigman=10.0

# Parameter:   id =  sigmaz, name = sigmaz, constant
par sigmaz=5.0

# Parameter:   id =  gNa, name = gNa, constant
par gNa=35.0

# Parameter:   id =  gKdr, name = gKdr, constant
par gKdr=6.0

# Parameter:   id =  gL, name = gL, constant
par gL=0.05

# Parameter:   id =  Iapp, name = Iapp, constant
par Iapp=0.661914

# Parameter:   id =  gA, name = gA, constant
par gA=1.4

# Parameter:   id =  gNaP, name = gNaP, constant
par gNaP=0.3

# Parameter:   id =  gZ, name = gZ, constant
par gZ=1.0

# Parameter:   id =  thetaz, name = thetaz, constant
par thetaz=-39.0

# Parameter:   id =  tauZs, name = tauZs, constant
par tauZs=75.0

# Parameter:   id =  phi, name = phi, constant
par phi=10.0

# Parameter:   id =  thetah, name = thetah, constant
par thetah=-45.0

# Parameter:   id =  thetam, name = thetam, constant
par thetam=-30.0

# Parameter:   id =  thetan, name = thetan, constant
par thetan=-35.0

# Parameter:   id =  thetap, name = thetap, constant
par thetap=-47.0

# Parameter:   id =  sigmap, name = sigmap, constant
par sigmap=3.0

# Parameter:   id =  VK, name = VK, constant
par VK=-90.0

# Parameter:   id =  VL, name = VL, constant
par VL=-70.0

# Parameter:   id =  INa, name = INa, defined by a Rule

# Parameter:   id =  INaP, name = INaP, defined by a Rule

# Parameter:   id =  IKdr, name = IKdr, defined by a Rule

# Parameter:   id =  IA, name = IA, defined by a Rule

# Parameter:   id =  Iz, name = Iz, defined by a Rule

# Parameter:   id =  Minfs, name = Minfs, defined by a Rule

# Parameter:   id =  Pinfs, name = Pinfs, defined by a Rule

# Parameter:   id =  Ainfs, name = Ainfs, defined by a Rule

# Parameter:   id =  zzs, name = zzs, defined by a Rule

# Parameter:   id =  bbs, name = bbs, defined by a Rule

# Parameter:   id =  nns, name = nns, defined by a Rule

# Parameter:   id =  hhs, name = hhs, defined by a Rule

# Parameter:   id =  V, name = VVs, defined by a Rule

# assignmentRule: variable = Minfs
Minfs=GAMMAF(V, thetam, sigmam)
aux Minfs=Minfs

# assignmentRule: variable = Pinfs
Pinfs=GAMMAF(V, thetap, sigmap)
aux Pinfs=Pinfs

# assignmentRule: variable = Ainfs
Ainfs=GAMMAF(V, thetaa, sigmaa)
aux Ainfs=Ainfs

# assignmentRule: variable = IA
IA=gA*Ainfs^3*bbs*(V-VK)
aux IA=IA

# assignmentRule: variable = Iz
Iz=gZ*zzs*(V-VK)
aux Iz=Iz

# assignmentRule: variable = INa
INa=gNa*Minfs^pms*hhs*(V-VNa)
aux INa=INa

# assignmentRule: variable = INaP
INaP=gNaP*Pinfs*(V-VNa)
aux INaP=INaP

# assignmentRule: variable = IKdr
IKdr=gKdr*nns^pns*(V-VK)
aux IKdr=IKdr

# rateRule: variable = zzs
init zzs=0.00141
dzzs/dt=(GAMMAF(V, thetaz, sigmaz)-zzs)/tauZs

# rateRule: variable = bbs
init bbs=0.203517
dbbs/dt=(GAMMAF(V, thetab, sigmab)-bbs)/tauBs

# rateRule: variable = hhs
init hhs=0.98786
dhhs/dt=phi*(GAMMAF(V, thetah, sigmah)-hhs)/(1+7.5*GAMMAF(V, t_tauh, -6))

# rateRule: variable = V
init V=-71.81327
dV/dt=((-gL)*(V-VL)-INa-INaP-IKdr-IA-Iz+Iapp)/Cm

# rateRule: variable = nns
init nns=0.02457
dnns/dt=phi*(GAMMAF(V, thetan, sigman)-nns)/(1+5*GAMMAF(V, t_taun, -15))

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

