
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Wu2006_K+Channel
#
# is http://identifiers.org/biomodels.db/MODEL2981976537
# is http://identifiers.org/biomodels.db/BIOMD0000000124
# isDescribedBy http://identifiers.org/pubmed/16375866
# isDerivedFrom http://identifiers.org/pubmed/6305437
# isDerivedFrom http://identifiers.org/pubmed/15294427
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = cell, name = GH3 cell, constant
par cell=1.0

# Parameter:   id =  gca, name = ca current conductance, constant
par gca=1000.0

# Parameter:   id =  gkca, name = ca activated k conductance, constant
par gkca=900.0

# Parameter:   id =  gk, name = k current conductance, constant
par gk=1400.0

# Parameter:   id =  gir, name = erg k current conductance, constant
par gir=5.0

# Parameter:   id =  vca, name = ca reversal potential, constant
par vca=50.0

# Parameter:   id =  vk, name = k reversal potential, constant
par vk=-75.0

# Parameter:   id =  vir, name = vir, constant
par vir=-75.0

# Parameter:   id =  cm, name = membrane capacitance, constant
par cm=5300.0

# Parameter:   id =  taun, name = taun, constant
par taun=16.0

# Parameter:   id =  alpha, name = alpha, constant
par alpha=4.5E-6

# Parameter:   id =  fcyt, name = fcyt, constant
par fcyt=0.01

# Parameter:   id =  kpmca, name = kpmca, constant
par kpmca=0.2

# Parameter:   id =  kd, name = kd, constant
par kd=0.3

# Parameter:   id =  vn, name = vn, constant
par vn=-16.0

# Parameter:   id =  vm, name = vm, constant
par vm=-20.0

# Parameter:   id =  sn, name = sn, constant
par sn=5.0

# Parameter:   id =  sm, name = sm, constant
par sm=12.0

# Parameter:   id =  kserca, name = kserca, constant
par kserca=0.4

# Parameter:   id =  dact, name = dact, constant
par dact=0.35

# Parameter:   id =  dinact, name = dinact, constant
par dinact=0.4

# Parameter:   id =  fer, name = fer, constant
par fer=0.01

# Parameter:   id =  pleak, name = pleak, constant
par pleak=5.0E-4

# Parameter:   id =  dip3, name = dip3, constant
par dip3=0.5

# Parameter:   id =  vcytver, name = vcytver, constant
par vcytver=5.0

# Parameter:   id =  ip3, name = ip3, constant
par ip3=0.0

# Parameter:   id =  sa, name = sa, constant
par sa=0.1

# Parameter:   id =  r, name = r, constant
par r=0.14

# Parameter:   id =  taua, name = taua, constant
par taua=300000.0

# Parameter:   id =  gkatp, name = gkatp
par gkatp=500.0

# Parameter:   id =  alphaIRn, name = alphaIRn, defined by a Rule

# Parameter:   id =  betaIRn, name = betaIRn, defined by a Rule

# Parameter:   id =  nIRinf, name = nIRinf, defined by a Rule

# Parameter:   id =  tauIRn, name = tauIRn, defined by a Rule

# Parameter:   id =  alphaIRr, name = alphaIRr, defined by a Rule

# Parameter:   id =  betaIRr, name = betaIRr, defined by a Rule

# Parameter:   id =  rIRinf, name = rIRinf, defined by a Rule

# Parameter:   id =  tauIRr, name = tauIRr, defined by a Rule

# Parameter:   id =  ica, name = calcium current, defined by a Rule

# Parameter:   id =  ik, name = delayed rectifier k current, defined by a Rule

# Parameter:   id =  ikca, name = ca dependent k current, defined by a Rule

# Parameter:   id =  ikatp, name = nucleotide sensitive k current, defined by a Rule

# Parameter:   id =  iir, name = erg like k current, defined by a Rule

# Parameter:   id =  minf, name = minf, defined by a Rule

# Parameter:   id =  ninf, name = ninf, defined by a Rule

# Parameter:   id =  ainf, name = ainf, defined by a Rule

# Parameter:   id =  w, name = w, defined by a Rule

# Parameter:   id =  jmem, name = jmem, defined by a Rule

# Parameter:   id =  jserca, name = jserca, defined by a Rule

# Parameter:   id =  jleak, name = jleak, defined by a Rule

# Parameter:   id =  jip3, name = jip3, defined by a Rule

# Parameter:   id =  oinf, name = oinf, defined by a Rule

# Parameter:   id =  jer, name = jer, defined by a Rule

# Parameter:   id =  V, name = V, defined by a Rule

# Parameter:   id =  n, name = n, defined by a Rule

# Parameter:   id =  a, name = a, defined by a Rule

# Parameter:   id =  nIR, name = nIR, defined by a Rule

# Parameter:   id =  rIR, name = rIR, defined by a Rule

# assignmentRule: variable = alphaIRn
alphaIRn=0.09/(1+exp(0.11*(V+100)))
aux alphaIRn=alphaIRn

# assignmentRule: variable = betaIRn
betaIRn=0.00035*exp(0.07*(V+25))
aux betaIRn=betaIRn

# assignmentRule: variable = nIRinf
nIRinf=1/(1+betaIRn/alphaIRn)
aux nIRinf=nIRinf

# assignmentRule: variable = tauIRn
tauIRn=1/(alphaIRn+betaIRn)
aux tauIRn=tauIRn

# assignmentRule: variable = alphaIRr
alphaIRr=30/(1+exp(0.04*(V+230)))
aux alphaIRr=alphaIRr

# assignmentRule: variable = betaIRr
betaIRr=0.15/(1+exp((-0.05)*(V+120)))
aux betaIRr=betaIRr

# assignmentRule: variable = rIRinf
rIRinf=1/(1+betaIRr/alphaIRr)
aux rIRinf=rIRinf

# assignmentRule: variable = tauIRr
tauIRr=1/(alphaIRr+betaIRr)
aux tauIRr=tauIRr

# assignmentRule: variable = minf
minf=1/(1+exp((vm-V)/sm))
aux minf=minf

# assignmentRule: variable = ik
ik=gk*n*(V-vk)
aux ik=ik

# assignmentRule: variable = w
w=c^5/(c^5+kd^5)
aux w=w

# assignmentRule: variable = ikatp
ikatp=gkatp*a*(V-vk)
aux ikatp=ikatp

# assignmentRule: variable = ica
ica=gca*minf*(V-vca)
aux ica=ica

# assignmentRule: variable = ninf
ninf=1/(1+exp((vn-V)/sn))
aux ninf=ninf

# assignmentRule: variable = ainf
ainf=1/(1+exp((r-c)/sa))
aux ainf=ainf

# assignmentRule: variable = ikca
ikca=gkca*w*(V-vk)
aux ikca=ikca

# assignmentRule: variable = jmem
jmem=-(alpha*ica+kpmca*c)
aux jmem=jmem

# assignmentRule: variable = jserca
jserca=kserca*c
aux jserca=jserca

# assignmentRule: variable = jleak
jleak=pleak*(cer-c)
aux jleak=jleak

# assignmentRule: variable = oinf
oinf=c/(dact+c)*ip3/(dip3+ip3)*dinact/(dinact+c)
aux oinf=oinf

# assignmentRule: variable = jip3
jip3=oinf*(cer-c)
aux jip3=jip3

# assignmentRule: variable = jer
jer=jleak+jip3-jserca
aux jer=jer

# rateRule: variable = nIR
init nIR=0.008
dnIR/dt=(nIRinf-nIR)/tauIRn

# rateRule: variable = rIR
init rIR=0.282
drIR/dt=(rIRinf-rIR)/tauIRr

# assignmentRule: variable = iir
iir=gir*nIR*rIR*(V-vir)
aux iir=iir

# rateRule: variable = n
init n=0.01
dn/dt=(ninf-n)/taun

# rateRule: variable = a
init a=0.46
da/dt=(ainf-a)/taua

# rateRule: variable = V
init V=-60.0
dV/dt=(-(ica+ik+ikca+ikatp+iir))/cm

# Reaction: id = reaction_0000005, name = cytosolic free Ca2+ concentration

reaction_=cell*fcyt*(jmem+jer)

# Reaction: id = reaction_0000006, name = ER Ca2+ concentration

reactio_1=(-fer)*vcytver*jer*cell

# Species:   id = c, name = cytosolic free ca concentration, affected by kineticLaw

init c=0.1
dc/dt=(1/(cell))*(( 1.0 * reaction_))

# Species:   id = cer, name = ER ca concentration, affected by kineticLaw

init cer=100.0
dcer/dt=(1/(cell))*(( 1.0 * reactio_1))

# event : event_0000001
event_000=if (t > 3E4) then (1.5) else (0.2)
global 1 {event_000 - 1.1} {gkatp=530}

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

